{"version":3,"sources":["../../src/IHubProtocol.ts","../../../../../../src/material/table/table.ts","../../../../../../src/material/table/cell.ts","../../../../../../src/material/table/row.ts","../../../../../../src/material/table/text-column.ts","../../../../../../src/material/table/table-module.ts","../../../../../../src/material/table/table-data-source.ts","../../../../../../src/material/table/public-api.ts","../../../../../../src/material/table/index.ts","./src/app/core/components/admin/user/models/user.ts","./src/app/core/components/screens/personel-visit/personel-visit.component.ts","./src/app/core/components/screens/security-transactions/reject-dialog/reject-dialog.component.css","../../../../../../src/material/dialog/dialog-config.ts","../../../../../../src/material/dialog/dialog-animations.ts","../../../../../../src/material/dialog/dialog-container.ts","../../../../../../src/material/dialog/dialog-ref.ts","../../../../../../src/material/dialog/dialog.ts","../../../../../../src/material/dialog/dialog-content-directives.ts","../../../../../../src/material/dialog/dialog-module.ts","../../../../../../src/material/dialog/public-api.ts","../../../../../../src/material/dialog/index.ts","../../src/FetchHttpClient.ts","./src/app/core/components/app/dashboard/dashboard.component.ts","./src/app/core/services/lookUp.service.ts","../../src/HttpConnection.ts","../../src/JsonHubProtocol.ts","./src/app/core/tables/spark-table/spark-table.component.css","./src/app/core/components/admin/operationclaim/operationClaim.component.scss","./src/app/core/components/admin/user/user.component.ts","./src/app/core/components/admin/group/group.component.scss","../../src/AbortController.ts","../../src/index.ts","../../src/WebSocketTransport.ts","./src/app/core/components/admin/group/Models/group.ts","./src/app/core/guards/claim.guard.ts","./src/app/core/components/screens/visit-add/visit-add.component.html","../../src/Errors.ts","./src/app/core/components/admin/multiVisiters/models/multivisiters.ts","./src/app/core/components/admin/translate/services/Translate.service.ts","../../../../../../src/material/chips/chip.ts","../../../../../../src/material/chips/chip-default-options.ts","../../../../../../src/material/chips/chip-list.ts","../../../../../../src/material/chips/chip-input.ts","../../../../../../src/material/chips/chips-module.ts","../../../../../../src/material/chips/public-api.ts","../../../../../../src/material/chips/index.ts","./src/app/core/components/screens/personel-visit/personel-visit.component.css","../../src/LongPollingTransport.ts","./src/app/core/components/screens/security-transactions/security-transactions.component.css","./src/app/core/components/screens/security-transactions/all-visitors-dialog/all-visitors-dialog.component.ts","./src/app/core/components/app/layouts/admin-layout/admin-layout.routing.ts","./src/app/core/modules/admin-layout.module.ts","../../src/AccessTokenHttpClient.ts","../../../../../../src/material/sort/sort-errors.ts","../../../../../../src/material/sort/sort.ts","../../../../../../src/material/sort/sort-animations.ts","../../../../../../src/material/sort/sort-header-intl.ts","../../../../../../src/material/sort/sort-header.ts","../../../../../../src/material/sort/sort-module.ts","../../../../../../src/material/sort/sort-direction.ts","../../../../../../src/material/sort/public-api.ts","../../../../../../src/material/sort/index.ts","../../src/HeaderNames.ts","./src/app/core/components/admin/operationclaim/services/OperationClaim.service.ts","./src/app/core/components/admin/language/language.component.scss","./src/app/core/components/app/dashboard/dashboard.component.html","./src/app/core/guards/login-routing.ts","./src/app/core/components/admin/user/user.component.scss","./src/app/core/components/app/dashboard/dashboard.component.css","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","./src/app/core/components/admin/visit/visit.component.html","../../src/XhrHttpClient.ts","./src/app/core/components/screens/security-transactions/security-transactions.component.ts","./src/app/core/tables/spark-table/spark-table.component.html","../../src/ILogger.ts","./src/app/core/components/admin/group/group.component.html","./src/app/core/components/admin/multiVisiters/multiVisiters.component.ts","./src/app/core/components/admin/language/language.component.html","./src/app/core/components/admin/log/logDto.component.ts","./src/app/core/components/admin/operationclaim/operationClaim.component.ts","../../../../../../src/material/icon/icon-registry.ts","../../../../../../src/material/icon/icon.ts","../../../../../../src/material/icon/icon-module.ts","../../../../../../src/material/icon/public-api.ts","../../../../../../src/material/icon/index.ts","./src/app/core/components/admin/log/logDto.component.scss","./src/app/core/components/screens/visit-add/visit-add.component.css","../../src/TextMessageFormat.ts","./src/app/core/components/admin/group/Services/group.service.ts","../../src/HttpClient.ts","./src/app/core/components/admin/banuLog/models/BanuLog.ts","./src/app/core/components/screens/security-transactions/security-transactions.component.html","./src/app/core/components/admin/user/user.component.html","./src/app/core/components/admin/login/login.component.html","./src/app/core/components/admin/banuLog/banuLog.component.ts","./node_modules/@babel/runtime/helpers/esm/objectSpread2.js","./src/app/core/tables/spark-table/spark-table.component.ts","./src/app/core/components/screens/visit-add/visit-add.component.ts","./src/app/core/components/admin/multiVisiters/multiVisiters.component.scss","./src/app/core/components/admin/multiVisiters/multivisiters.component.html","../../../../../../src/material/card/card.ts","../../../../../../src/material/card/card-module.ts","../../../../../../src/material/card/public-api.ts","../../../../../../src/material/card/index.ts","./src/app/core/components/admin/translate/translate.component.html","./src/app/core/components/admin/visit/models/Visit.ts","./src/app/core/components/screens/banu-logs/banu-logs.component.ts","./src/app/core/components/admin/user/models/passwordDto.ts","../../src/MessageBuffer.ts","./src/app/core/components/admin/visit/visit.component.ts","./src/app/core/components/admin/translate/models/Translate.ts","./src/app/core/components/admin/language/models/language.ts","../../src/DefaultHttpClient.ts","../../src/HandshakeProtocol.ts","./src/app/core/components/admin/log/logdto.component.html","./src/app/core/components/admin/language/language.component.ts","../../../../../../src/material/checkbox/checkbox-config.ts","../../../../../../src/material/checkbox/checkbox.ts","../../../../../../src/material/checkbox/checkbox-required-validator.ts","../../../../../../src/material/checkbox/checkbox-module.ts","../../../../../../src/material/checkbox/public-api.ts","../../../../../../src/material/checkbox/index.ts","./src/app/core/components/admin/group/group.component.ts","../../../../../../src/material/snack-bar/snack-bar-config.ts","../../../../../../src/material/snack-bar/snack-bar-ref.ts","../../../../../../src/material/snack-bar/simple-snack-bar.ts","../../../../../../src/material/snack-bar/snack-bar-animations.ts","../../../../../../src/material/snack-bar/snack-bar-container.ts","../../../../../../src/material/snack-bar/snack-bar-module.ts","../../../../../../src/material/snack-bar/snack-bar.ts","../../../../../../src/material/snack-bar/public-api.ts","../../../../../../src/material/snack-bar/index.ts","./src/app/core/components/screens/personel-visit/personel-visit.component.html","./src/app/core/components/admin/login/login.component.ts","../../../../../../src/material/divider/divider.ts","../../../../../../src/material/divider/divider-module.ts","../../../../../../src/material/divider/public-api.ts","../../../../../../src/material/divider/index.ts","../../../../../../src/cdk/table/can-stick.ts","../../../../../../src/cdk/table/tokens.ts","../../../../../../src/cdk/table/cell.ts","../../../../../../src/cdk/table/coalesced-style-scheduler.ts","../../../../../../src/cdk/table/row.ts","../../../../../../src/cdk/table/sticky-styler.ts","../../../../../../src/cdk/table/table-errors.ts","../../../../../../src/cdk/table/table.ts","../../../../../../src/cdk/table/text-column.ts","../../../../../../src/cdk/table/table-module.ts","../../../../../../src/cdk/table/public-api.ts","../../../../../../src/cdk/table/index.ts","./src/app/core/components/admin/log/models/LogDto.ts","../../src/Utils.ts","./src/app/core/components/screens/security-transactions/reject-dialog/reject-dialog.component.ts","./src/app/core/components/screens/security-transactions/reject-dialog/reject-dialog.component.html","./src/app/core/components/admin/operationclaim/models/operationclaim.ts","./src/app/core/services/language.service.ts","./src/app/core/components/screens/banu-logs/banu-logs.component.css","../../../../../../src/material/datepicker/datepicker-errors.ts","../../../../../../src/material/datepicker/datepicker-intl.ts","../../../../../../src/material/datepicker/calendar-body.ts","../../../../../../src/material/datepicker/date-selection-model.ts","../../../../../../src/material/datepicker/date-range-selection-strategy.ts","../../../../../../src/material/datepicker/month-view.ts","../../../../../../src/material/datepicker/multi-year-view.ts","../../../../../../src/material/datepicker/year-view.ts","../../../../../../src/material/datepicker/calendar.ts","../../../../../../src/material/datepicker/datepicker-animations.ts","../../../../../../src/material/datepicker/datepicker-base.ts","../../../../../../src/material/datepicker/datepicker.ts","../../../../../../src/material/datepicker/datepicker-input-base.ts","../../../../../../src/material/datepicker/datepicker-input.ts","../../../../../../src/material/datepicker/datepicker-toggle.ts","../../../../../../src/material/datepicker/date-range-input-parts.ts","../../../../../../src/material/datepicker/date-range-picker.ts","../../../../../../src/material/datepicker/date-range-input.ts","../../../../../../src/material/datepicker/datepicker-module.ts","../../../../../../src/material/datepicker/public-api.ts","../../../../../../src/material/datepicker/index.ts","./src/app/core/components/admin/translate/translate.component.scss","./src/app/core/components/admin/translate/translate.component.ts","./src/app/core/components/admin/login/login.component.scss","../../src/DefaultReconnectPolicy.ts","./src/app/core/components/admin/multiVisiters/services/multivisiters.service.ts","./src/app/core/components/admin/visit/visit.component.scss","../../src/HubConnection.ts","./src/app/core/components/admin/banuLog/banulog.component.html","./src/app/core/components/admin/banuLog/banuLog.component.scss","./src/app/core/components/admin/operationclaim/operationclaim.component.html","./src/app/core/components/admin/banuLog/services/BanuLog.service.ts","../../src/ITransport.ts","../../src/ServerSentEventsTransport.ts","./src/app/core/components/admin/log/services/LogDto.service.ts","./src/app/core/components/admin/user/Services/user.service.ts","./src/app/core/components/screens/banu-logs/banu-logs.component.html","./src/app/core/components/admin/login/model/login-user.ts","./node_modules/chartist/dist/chartist.js","./src/app/core/directives/must-match.ts","../../src/HubConnectionBuilder.ts","../../src/Loggers.ts","./src/app/core/components/admin/visit/services/visit.service.ts","./src/app/core/components/admin/user/Services/signalr.service.ts","../../../../../../src/material/tabs/ink-bar.ts","../../../../../../src/material/tabs/tab-content.ts","../../../../../../src/material/tabs/tab-label.ts","../../../../../../src/material/tabs/tab.ts","../../../../../../src/material/tabs/tabs-animations.ts","../../../../../../src/material/tabs/tab-body.ts","../../../../../../src/material/tabs/tab-config.ts","../../../../../../src/material/tabs/tab-group.ts","../../../../../../src/material/tabs/tab-label-wrapper.ts","../../../../../../src/material/tabs/paginated-tab-header.ts","../../../../../../src/material/tabs/tab-header.ts","../../../../../../src/material/tabs/tab-nav-bar/tab-nav-bar.ts","../../../../../../src/material/tabs/tabs-module.ts","../../../../../../src/material/tabs/tab-nav-bar/index.ts","../../../../../../src/material/tabs/public-api.ts","../../../../../../src/material/tabs/index.ts","./src/app/core/components/admin/language/services/Language.service.ts","../../src/Subject.ts"],"names":["observableOf","nextUniqueId","observableThrow","root","factory","define","Chartist","version","globalRoot","window","document","namespaces","svg","xmlns","xhtml","xlink","ct","noop","n","alphaNumerate","String","fromCharCode","extend","target","i","source","sourceProp","arguments","length","prop","Array","replaceAll","str","subStr","newSubStr","replace","RegExp","ensureUnit","value","unit","quantity","input","match","exec","undefined","querySelector","query","Node","times","apply","sum","previous","current","mapMultiply","factor","num","mapAdd","addend","serialMap","arr","cb","result","Math","max","map","e","forEach","index","args","roundWithPrecision","digits","precision","pow","round","escapingMap","serialize","data","JSON","stringify","Object","keys","reduce","key","deserialize","parse","createSvg","container","width","height","className","prototype","slice","call","querySelectorAll","filter","filterChartistSvgObjects","getAttributeNS","removePreviousElement","removeChild","Svg","attr","addClass","_node","style","appendChild","normalizeData","reverse","multi","labelCount","output","raw","normalized","series","getDataArray","every","labels","push","reverseData","safeHasProperty","object","property","hasOwnProperty","isDataHoleValue","isNaN","recursiveConvert","multiValue","getNumberOrUndefined","y","x","normalizePadding","padding","fallback","top","right","bottom","left","getMetaData","meta","orderOfMagnitude","floor","log","abs","LN10","projectLength","axisLength","bounds","range","getAvailableHeight","options","chartPadding","axisX","offset","getHighLow","dimension","toUpperCase","highLow","high","Number","MAX_VALUE","low","findHigh","findLow","recursiveHighLow","referenceValue","min","isNumeric","isFinite","isFalseyButZero","isMultiValue","getMultiValue","rho","gcd","p","q","f","x1","x2","divisor","getBounds","scaleMinSpace","onlyInteger","optimizationCounter","newMin","newMax","valueRange","oom","step","ceil","numberOfSteps","scaleUp","smallestFactor","Error","EPSILON","safeIncrement","increment","values","polarToCartesian","centerX","centerY","radius","angleInDegrees","angleInRadians","PI","cos","sin","createChartRect","fallbackPadding","hasAxis","axisY","yAxisOffset","xAxisOffset","normalizedPadding","chartRect","y1","y2","position","createGrid","axis","group","classes","eventEmitter","positionalData","units","pos","counterUnits","gridElement","elem","join","emit","type","element","createGridBackground","gridGroup","gridBackground","createLabel","axisOffset","labelOffset","useForeignObject","labelElement","len","content","createElement","setAttribute","innerText","foreignObject","text","getSeriesOption","name","seriesOptions","optionsProvider","responsiveOptions","baseOptions","currentOptions","mediaQueryListeners","updateCurrentOptions","mediaEvent","previousOptions","mql","matchMedia","matches","removeMediaQueryListeners","removeListener","addListener","getCurrentOptions","splitIntoSegments","pathCoordinates","valueData","defaultOptions","increasingX","fillHoles","segments","hole","global","Interpolation","none","path","Path","currX","currY","currData","move","line","simple","d","prevX","prevY","prevData","curve","cardinal","tension","t","c","paths","segment","z","iLen","monotoneCubic","xs","ys","ms","ds","dys","dxs","postpone","EventEmitter","handlers","addEventHandler","event","handler","removeEventHandler","splice","indexOf","starHandler","listToArray","list","properties","superProtoOverride","superProto","Class","proto","create","cloneDefinitions","constr","fn","constructor","instance","super","getOwnPropertyNames","propName","defineProperty","getOwnPropertyDescriptor","update","override","initializeTimeoutId","createChart","detach","removeEventListener","resizeListener","clearTimeout","on","off","initialize","addEventListener","bind","plugins","plugin","Base","supportsForeignObject","isSupported","supportsAnimations","__chartist__","setTimeout","attributes","parent","insertFirst","Element","createElementNS","firstChild","insertBefore","ns","getAttribute","namespacedAttribute","split","setAttributeNS","parentNode","SVGElement","node","nodeName","selector","foundNode","foundNodes","List","getNode","innerHTML","fnObj","createTextNode","empty","remove","newElement","replaceChild","append","trim","names","concat","self","removeClass","removedClasses","removeAllClasses","getBoundingClientRect","animate","animations","guided","createAnimateForAttributes","attribute","createAnimate","animationDefinition","attributeProperties","timeout","easing","Easing","begin","dur","calcMode","keySplines","keyTimes","fill","from","attributeName","beginElement","err","to","handleBeginEvent","params","handleEndEvent","feature","implementation","hasFeature","easingCubicBeziers","easeInSine","easeOutSine","easeInOutSine","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInBack","easeOutBack","easeInOutBack","SvgList","nodeList","svgElements","prototypeProperty","elementDescriptions","m","l","a","accuracy","command","pathElements","relative","pathElement","toLowerCase","forEachParam","pathElementIndex","paramName","paramIndex","SvgPath","close","count","arc","rx","ry","xAr","lAf","sf","chunks","pop","elements","chunk","shift","description","spliceArgs","accuracyMultiplier","scale","translate","transform","transformFnc","transformed","clone","cloneElements","splitByCommand","joinedPath","j","axisUnits","dir","rectStart","rectEnd","rectOffset","Axis","ticks","gridOffset","createGridAndLabels","labelGroup","chartOptions","axisOptions","projectedValues","projectValue","labelValues","labelInterpolationFnc","projectedValue","labelLength","showGrid","classNames","grid","showLabel","label","AutoScaleAxis","axisUnit","FixedScaleAxis","sort","b","stepLength","StepAxis","calc","stretch","showLine","showPoint","showArea","areaBase","lineSmooth","showGridBackground","fullWidth","chart","point","area","vertical","horizontal","start","end","seriesGroup","seriesIndex","seriesElement","pathData","valueIndex","smoothing","seriesMeta","areaBaseProjected","onlySolidSegments","pathSegment","convertToArea","solidPathSegments","firstElement","lastElement","createArea","areaPath","Line","seriesBarDistance","stackBars","stackMode","horizontalBars","distributeSeries","bar","serialSums","prev","curr","valueAxis","labelAxisTicks","labelAxis","zeroPoint","stackedBarValues","biPol","periodHalfLength","projected","previousStack","labelAxisValueIndex","positions","metaData","Bar","chartPie","chartDonut","slicePie","sliceDonut","sliceDonutSolid","startAngle","total","donut","donutSolid","donutWidth","labelPosition","labelDirection","ignoreEmptyValues","determineAnchorPosition","center","direction","toTheRight","seriesGroups","labelsGroup","labelRadius","totalDataSum","previousValue","currentValue","hasSingleValInSeries","val","endAngle","overlappigStartAngle","innerStart","innerEnd","donutSolidRadius","pathClassName","strokeWidth","rawValue","interpolatedValue","dx","dy","Pie"],"mappings":"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","file":"core-modules-admin-layout-module.js","sourcesContent":["// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\n\r\n/** Defines the type of a Hub Message. */\r\nexport enum MessageType {\r\n    /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */\r\n    Invocation = 1,\r\n    /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */\r\n    StreamItem = 2,\r\n    /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */\r\n    Completion = 3,\r\n    /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */\r\n    StreamInvocation = 4,\r\n    /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */\r\n    CancelInvocation = 5,\r\n    /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */\r\n    Ping = 6,\r\n    /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */\r\n    Close = 7,\r\n    Ack = 8,\r\n    Sequence = 9\r\n}\r\n\r\n/** Defines a dictionary of string keys and string values representing headers attached to a Hub message. */\r\nexport interface MessageHeaders {\r\n    /** Gets or sets the header with the specified key. */\r\n    [key: string]: string;\r\n}\r\n\r\n/** Union type of all known Hub messages. */\r\nexport type HubMessage =\r\n    InvocationMessage |\r\n    StreamInvocationMessage |\r\n    StreamItemMessage |\r\n    CompletionMessage |\r\n    CancelInvocationMessage |\r\n    PingMessage |\r\n    CloseMessage |\r\n    AckMessage |\r\n    SequenceMessage;\r\n\r\n/** Defines properties common to all Hub messages. */\r\nexport interface HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageType} value indicating the type of this message. */\r\n    readonly type: MessageType;\r\n}\r\n\r\n/** Defines properties common to all Hub messages relating to a specific invocation. */\r\nexport interface HubInvocationMessage extends HubMessageBase {\r\n    /** A {@link @microsoft/signalr.MessageHeaders} dictionary containing headers attached to the message. */\r\n    readonly headers?: MessageHeaders;\r\n    /** The ID of the invocation relating to this message.\r\n     *\r\n     * This is expected to be present for {@link @microsoft/signalr.StreamInvocationMessage} and {@link @microsoft/signalr.CompletionMessage}. It may\r\n     * be 'undefined' for an {@link @microsoft/signalr.InvocationMessage} if the sender does not expect a response.\r\n     */\r\n    readonly invocationId?: string;\r\n}\r\n\r\n/** A hub message representing a non-streaming invocation. */\r\nexport interface InvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Invocation;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a streaming invocation. */\r\nexport interface StreamInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamInvocation;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The target method name. */\r\n    readonly target: string;\r\n    /** The target method arguments. */\r\n    readonly arguments: any[];\r\n    /** The target methods stream IDs. */\r\n    readonly streamIds?: string[];\r\n}\r\n\r\n/** A hub message representing a single item produced as part of a result stream. */\r\nexport interface StreamItemMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.StreamItem;\r\n\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n\r\n    /** The item produced by the server. */\r\n    readonly item?: any;\r\n}\r\n\r\n/** A hub message representing the result of an invocation. */\r\nexport interface CompletionMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Completion;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n    /** The error produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly error?: string;\r\n    /** The result produced by the invocation, if any.\r\n     *\r\n     * Either {@link @microsoft/signalr.CompletionMessage.error} or {@link @microsoft/signalr.CompletionMessage.result} must be defined, but not both.\r\n     */\r\n    readonly result?: any;\r\n}\r\n\r\n/** A hub message indicating that the sender is still active. */\r\nexport interface PingMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Ping;\r\n}\r\n\r\n/** A hub message indicating that the sender is closing the connection.\r\n *\r\n * If {@link @microsoft/signalr.CloseMessage.error} is defined, the sender is closing the connection due to an error.\r\n */\r\nexport interface CloseMessage extends HubMessageBase {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.Close;\r\n    /** The error that triggered the close, if any.\r\n     *\r\n     * If this property is undefined, the connection was closed normally and without error.\r\n     */\r\n    readonly error?: string;\r\n\r\n    /** If true, clients with automatic reconnects enabled should attempt to reconnect after receiving the CloseMessage. Otherwise, they should not. */\r\n    readonly allowReconnect?: boolean;\r\n}\r\n\r\n/** A hub message sent to request that a streaming invocation be canceled. */\r\nexport interface CancelInvocationMessage extends HubInvocationMessage {\r\n    /** @inheritDoc */\r\n    readonly type: MessageType.CancelInvocation;\r\n    /** The invocation ID. */\r\n    readonly invocationId: string;\r\n}\r\n\r\nexport interface AckMessage extends HubMessageBase\r\n{\r\n    readonly type: MessageType.Ack;\r\n\r\n    readonly sequenceId: number;\r\n}\r\n\r\nexport interface SequenceMessage extends HubMessageBase\r\n{\r\n    readonly type: MessageType.Sequence;\r\n\r\n    readonly sequenceId: number;\r\n}\r\n\r\n/** A protocol abstraction for communicating with SignalR Hubs.  */\r\nexport interface IHubProtocol {\r\n    /** The name of the protocol. This is used by SignalR to resolve the protocol between the client and server. */\r\n    readonly name: string;\r\n    /** The version of the protocol. */\r\n    readonly version: number;\r\n    /** The {@link @microsoft/signalr.TransferFormat} of the protocol. */\r\n    readonly transferFormat: TransferFormat;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the `input` parameter must be a string, otherwise it must be an ArrayBuffer.\r\n     *\r\n     * @param {string | ArrayBuffer} input A string or ArrayBuffer containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    parseMessages(input: string | ArrayBuffer, logger: ILogger): HubMessage[];\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string or ArrayBuffer and returns it.\r\n     *\r\n     * If {@link @microsoft/signalr.IHubProtocol.transferFormat} is 'Text', the result of this method will be a string, otherwise it will be an ArrayBuffer.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string | ArrayBuffer} A string or ArrayBuffer containing the serialized representation of the message.\r\n     */\r\n    writeMessage(message: HubMessage): string | ArrayBuffer;\r\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  CDK_TABLE_TEMPLATE,\n  CdkTable,\n  CDK_TABLE,\n  _CoalescedStyleScheduler, _COALESCED_STYLE_SCHEDULER\n} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {_DisposeViewRepeaterStrategy, _VIEW_REPEATER_STRATEGY} from '@angular/cdk/collections';\n\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\n@Component({\n  selector: 'mat-table, table[mat-table]',\n  exportAs: 'matTable',\n  template: CDK_TABLE_TEMPLATE,\n  styleUrls: ['table.css'],\n  host: {\n    'class': 'mat-table',\n  },\n  providers: [\n    // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n    //  is only included in the build if used.\n    {provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy},\n    {provide: CdkTable, useExisting: MatTable},\n    {provide: CDK_TABLE, useExisting: MatTable},\n    {provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler},\n  ],\n  encapsulation: ViewEncapsulation.None,\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTable<T> extends CdkTable<T> {\n  /** Overrides the sticky CSS class set by the `CdkTable`. */\n  protected stickyCssClass = 'mat-table-sticky';\n\n  /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n  protected needsPositionStickyOnElement = false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {Directive, Input} from '@angular/core';\nimport {\n  CdkCell,\n  CdkCellDef,\n  CdkColumnDef, CdkFooterCell, CdkFooterCellDef,\n  CdkHeaderCell,\n  CdkHeaderCellDef,\n} from '@angular/cdk/table';\n\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matCellDef]',\n  providers: [{provide: CdkCellDef, useExisting: MatCellDef}]\n})\nexport class MatCellDef extends CdkCellDef {}\n\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matHeaderCellDef]',\n  providers: [{provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef}]\n})\nexport class MatHeaderCellDef extends CdkHeaderCellDef {}\n\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({\n  selector: '[matFooterCellDef]',\n  providers: [{provide: CdkFooterCellDef, useExisting: MatFooterCellDef}]\n})\nexport class MatFooterCellDef extends CdkFooterCellDef {}\n\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[matColumnDef]',\n  inputs: ['sticky'],\n  providers: [\n    {provide: CdkColumnDef, useExisting: MatColumnDef},\n    {provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef}\n  ],\n})\nexport class MatColumnDef extends CdkColumnDef {\n  /** Unique name for this column. */\n  @Input('matColumnDef')\n  get name(): string { return this._name; }\n  set name(name: string) { this._setNameInput(name); }\n\n  /**\n   * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n   * In the future, this will only add \"mat-column-\" and columnCssClassName\n   * will change from type string[] to string.\n   * @docs-private\n   */\n  protected _updateColumnCssClassName() {\n    super._updateColumnCssClassName();\n    this._columnCssClassName!.push(`mat-column-${this.cssClassFriendlyName}`);\n  }\n\n  static ngAcceptInputType_sticky: BooleanInput;\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-header-cell, th[mat-header-cell]',\n  host: {\n    'class': 'mat-header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class MatHeaderCell extends CdkHeaderCell {}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-footer-cell, td[mat-footer-cell]',\n  host: {\n    'class': 'mat-footer-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatFooterCell extends CdkFooterCell {}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'mat-cell, td[mat-cell]',\n  host: {\n    'class': 'mat-cell',\n    'role': 'gridcell',\n  },\n})\nexport class MatCell extends CdkCell {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  CDK_ROW_TEMPLATE,\n  CdkFooterRow,\n  CdkFooterRowDef,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkRow,\n  CdkRowDef,\n  CdkNoDataRow\n} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, Directive, ViewEncapsulation} from '@angular/core';\n\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[matHeaderRowDef]',\n  providers: [{provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef}],\n  inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n})\nexport class MatHeaderRowDef extends CdkHeaderRowDef {\n  static ngAcceptInputType_sticky: BooleanInput;\n}\n\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n@Directive({\n  selector: '[matFooterRowDef]',\n  providers: [{provide: CdkFooterRowDef, useExisting: MatFooterRowDef}],\n  inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n})\nexport class MatFooterRowDef extends CdkFooterRowDef {\n  static ngAcceptInputType_sticky: BooleanInput;\n}\n\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[matRowDef]',\n  providers: [{provide: CdkRowDef, useExisting: MatRowDef}],\n  inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n})\nexport class MatRowDef<T> extends CdkRowDef<T> {\n}\n\n/** Header template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'mat-header-row, tr[mat-header-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-header-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matHeaderRow',\n  providers: [{provide: CdkHeaderRow, useExisting: MatHeaderRow}],\n})\nexport class MatHeaderRow extends CdkHeaderRow {\n}\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'mat-footer-row, tr[mat-footer-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-footer-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matFooterRow',\n  providers: [{provide: CdkFooterRow, useExisting: MatFooterRow}],\n})\nexport class MatFooterRow extends CdkFooterRow {\n}\n\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'mat-row, tr[mat-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'mat-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matRow',\n  providers: [{provide: CdkRow, useExisting: MatRow}],\n})\nexport class MatRow extends CdkRow {\n}\n\n/** Row that can be used to display a message when no data is shown in the table. */\n@Directive({\n  selector: 'ng-template[matNoDataRow]',\n  providers: [{provide: CdkNoDataRow, useExisting: MatNoDataRow}],\n})\nexport class MatNoDataRow extends CdkNoDataRow {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {CdkTextColumn} from '@angular/cdk/table';\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\n@Component({\n  selector: 'mat-text-column',\n  template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  // Change detection is intentionally not set to OnPush. This component's template will be provided\n  // to the table to be inserted into its view. This is problematic when change detection runs since\n  // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n  // mean's the template in the table's view will not have the updated value (and in fact will cause\n  // an ExpressionChangedAfterItHasBeenCheckedError).\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTextColumn<T> extends CdkTextColumn<T> {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatTable} from './table';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {\n  MatCell,\n  MatCellDef,\n  MatColumnDef,\n  MatFooterCell,\n  MatFooterCellDef,\n  MatHeaderCell,\n  MatHeaderCellDef\n} from './cell';\nimport {\n  MatFooterRow,\n  MatFooterRowDef,\n  MatHeaderRow,\n  MatHeaderRowDef,\n  MatRow,\n  MatRowDef,\n  MatNoDataRow\n} from './row';\nimport {MatTextColumn} from './text-column';\nimport {MatCommonModule} from '@angular/material/core';\n\nconst EXPORTED_DECLARATIONS = [\n  // Table\n  MatTable,\n\n  // Template defs\n  MatHeaderCellDef,\n  MatHeaderRowDef,\n  MatColumnDef,\n  MatCellDef,\n  MatRowDef,\n  MatFooterCellDef,\n  MatFooterRowDef,\n\n  // Cell directives\n  MatHeaderCell,\n  MatCell,\n  MatFooterCell,\n\n  // Row directives\n  MatHeaderRow,\n  MatRow,\n  MatFooterRow,\n  MatNoDataRow,\n\n  MatTextColumn,\n];\n\n@NgModule({\n  imports: [\n    CdkTableModule,\n    MatCommonModule,\n  ],\n  exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n  declarations: EXPORTED_DECLARATIONS,\n})\nexport class MatTableModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {_isNumberValue} from '@angular/cdk/coercion';\nimport {DataSource} from '@angular/cdk/table';\nimport {\n  BehaviorSubject,\n  combineLatest,\n  merge,\n  Observable,\n  of as observableOf,\n  Subscription,\n  Subject,\n} from 'rxjs';\nimport {MatPaginator, PageEvent} from '@angular/material/paginator';\nimport {MatSort, Sort} from '@angular/material/sort';\nimport {map} from 'rxjs/operators';\n\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nexport class MatTableDataSource<T> extends DataSource<T> {\n  /** Stream that emits when a new data array is set on the data source. */\n  private readonly _data: BehaviorSubject<T[]>;\n\n  /** Stream emitting render data to the table (depends on ordered data changes). */\n  private readonly _renderData = new BehaviorSubject<T[]>([]);\n\n  /** Stream that emits when a new filter string is set on the data source. */\n  private readonly _filter = new BehaviorSubject<string>('');\n\n  /** Used to react to internal changes of the paginator that are made by the data source itself. */\n  private readonly _internalPageChanges = new Subject<void>();\n\n  /**\n   * Subscription to the changes that should trigger an update to the table's rendered rows, such\n   * as filtering, sorting, pagination, or base data changes.\n   */\n  _renderChangesSubscription = Subscription.EMPTY;\n\n  /**\n   * The filtered set of data that has been matched by the filter string, or all the data if there\n   * is no filter. Useful for knowing the set of data the table represents.\n   * For example, a 'selectAll()' function would likely want to select the set of filtered data\n   * shown to the user rather than all the data.\n   */\n  filteredData: T[];\n\n  /** Array of data that should be rendered by the table, where each object represents one row. */\n  get data() { return this._data.value; }\n  set data(data: T[]) { this._data.next(data); }\n\n  /**\n   * Filter term that should be used to filter out objects from the data array. To override how\n   * data objects match to this filter string, provide a custom function for filterPredicate.\n   */\n  get filter(): string { return this._filter.value; }\n  set filter(filter: string) { this._filter.next(filter); }\n\n  /**\n   * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n   * emitted by the MatSort will trigger an update to the table's rendered data.\n   */\n  get sort(): MatSort | null { return this._sort; }\n  set sort(sort: MatSort|null) {\n    this._sort = sort;\n    this._updateChangeSubscription();\n  }\n  private _sort: MatSort|null;\n\n  /**\n   * Instance of the MatPaginator component used by the table to control what page of the data is\n   * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n   * table's rendered data.\n   *\n   * Note that the data source uses the paginator's properties to calculate which page of data\n   * should be displayed. If the paginator receives its properties as template inputs,\n   * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n   * initialized before assigning it to this data source.\n   */\n  get paginator(): MatPaginator | null { return this._paginator; }\n  set paginator(paginator: MatPaginator|null) {\n    this._paginator = paginator;\n    this._updateChangeSubscription();\n  }\n  private _paginator: MatPaginator|null;\n\n  /**\n   * Data accessor function that is used for accessing data properties for sorting through\n   * the default sortData function.\n   * This default function assumes that the sort header IDs (which defaults to the column name)\n   * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n   * May be set to a custom function for different behavior.\n   * @param data Data object that is being accessed.\n   * @param sortHeaderId The name of the column that represents the data.\n   */\n  sortingDataAccessor: ((data: T, sortHeaderId: string) => string|number) =\n      (data: T, sortHeaderId: string): string|number => {\n    const value = (data as {[key: string]: any})[sortHeaderId];\n\n    if (_isNumberValue(value)) {\n      const numberValue = Number(value);\n\n      // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n      // leave them as strings. For more info: https://goo.gl/y5vbSg\n      return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n    }\n\n    return value;\n  }\n\n  /**\n   * Gets a sorted copy of the data array based on the state of the MatSort. Called\n   * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n   * By default, the function retrieves the active sort and its direction and compares data\n   * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n   * of data ordering.\n   * @param data The array of data that should be sorted.\n   * @param sort The connected MatSort that holds the current sort state.\n   */\n  sortData: ((data: T[], sort: MatSort) => T[]) = (data: T[], sort: MatSort): T[] => {\n    const active = sort.active;\n    const direction = sort.direction;\n    if (!active || direction == '') { return data; }\n\n    return data.sort((a, b) => {\n      let valueA = this.sortingDataAccessor(a, active);\n      let valueB = this.sortingDataAccessor(b, active);\n\n      // If there are data in the column that can be converted to a number,\n      // it must be ensured that the rest of the data\n      // is of the same type so as not to order incorrectly.\n      const valueAType = typeof valueA;\n      const valueBType = typeof valueB;\n\n      if (valueAType !== valueBType) {\n        if (valueAType === 'number') { valueA += ''; }\n        if (valueBType === 'number') { valueB += ''; }\n      }\n\n      // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n      // one value exists while the other doesn't. In this case, existing value should come last.\n      // This avoids inconsistent results when comparing values to undefined/null.\n      // If neither value exists, return 0 (equal).\n      let comparatorResult = 0;\n      if (valueA != null && valueB != null) {\n        // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n        if (valueA > valueB) {\n          comparatorResult = 1;\n        } else if (valueA < valueB) {\n          comparatorResult = -1;\n        }\n      } else if (valueA != null) {\n        comparatorResult = 1;\n      } else if (valueB != null) {\n        comparatorResult = -1;\n      }\n\n      return comparatorResult * (direction == 'asc' ? 1 : -1);\n    });\n  }\n\n  /**\n   * Checks if a data object matches the data source's filter string. By default, each data object\n   * is converted to a string of its properties and returns true if the filter has\n   * at least one occurrence in that string. By default, the filter string has its whitespace\n   * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n   * filter matching.\n   * @param data Data object used to check against the filter.\n   * @param filter Filter string that has been set on the data source.\n   * @returns Whether the filter matches against the data\n   */\n  filterPredicate: ((data: T, filter: string) => boolean) = (data: T, filter: string): boolean => {\n    // Transform the data into a lowercase string of all property values.\n    const dataStr = Object.keys(data).reduce((currentTerm: string, key: string) => {\n      // Use an obscure Unicode character to delimit the words in the concatenated string.\n      // This avoids matches where the values of two columns combined will match the user's query\n      // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n      // that has a very low chance of being typed in by somebody in a text field. This one in\n      // particular is \"White up-pointing triangle with dot\" from\n      // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n      return currentTerm + (data as {[key: string]: any})[key] + 'â¬';\n    }, '').toLowerCase();\n\n    // Transform the filter by converting it to lowercase and removing whitespace.\n    const transformedFilter = filter.trim().toLowerCase();\n\n    return dataStr.indexOf(transformedFilter) != -1;\n  }\n\n  constructor(initialData: T[] = []) {\n    super();\n    this._data = new BehaviorSubject<T[]>(initialData);\n    this._updateChangeSubscription();\n  }\n\n  /**\n   * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n   * changes occur, process the current state of the filter, sort, and pagination along with\n   * the provided base data and send it to the table for rendering.\n   */\n  _updateChangeSubscription() {\n    // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n    // The events should emit whenever the component emits a change or initializes, or if no\n    // component is provided, a stream with just a null event should be provided.\n    // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n    // pipeline can progress to the next step. Note that the value from these streams are not used,\n    // they purely act as a signal to progress in the pipeline.\n    const sortChange: Observable<Sort|null|void> = this._sort ?\n        merge(this._sort.sortChange, this._sort.initialized) as Observable<Sort|void> :\n        observableOf(null);\n    const pageChange: Observable<PageEvent|null|void> = this._paginator ?\n        merge(\n          this._paginator.page,\n          this._internalPageChanges,\n          this._paginator.initialized\n        ) as Observable<PageEvent|void> :\n        observableOf(null);\n    const dataStream = this._data;\n    // Watch for base data or filter changes to provide a filtered set of data.\n    const filteredData = combineLatest([dataStream, this._filter])\n      .pipe(map(([data]) => this._filterData(data)));\n    // Watch for filtered data or sort changes to provide an ordered set of data.\n    const orderedData = combineLatest([filteredData, sortChange])\n      .pipe(map(([data]) => this._orderData(data)));\n    // Watch for ordered data or page changes to provide a paged set of data.\n    const paginatedData = combineLatest([orderedData, pageChange])\n      .pipe(map(([data]) => this._pageData(data)));\n    // Watched for paged data changes and send the result to the table to render.\n    this._renderChangesSubscription.unsubscribe();\n    this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n  }\n\n  /**\n   * Returns a filtered data array where each filter object contains the filter string within\n   * the result of the filterTermAccessor function. If no filter is set, returns the data array\n   * as provided.\n   */\n  _filterData(data: T[]) {\n    // If there is a filter string, filter out data that does not contain it.\n    // Each data object is converted to a string using the function defined by filterTermAccessor.\n    // May be overridden for customization.\n    this.filteredData =\n        !this.filter ? data : data.filter(obj => this.filterPredicate(obj, this.filter));\n\n    if (this.paginator) { this._updatePaginator(this.filteredData.length); }\n\n    return this.filteredData;\n  }\n\n  /**\n   * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n   * data array as provided. Uses the default data accessor for data lookup, unless a\n   * sortDataAccessor function is defined.\n   */\n  _orderData(data: T[]): T[] {\n    // If there is no active sort or direction, return the data without trying to sort.\n    if (!this.sort) { return data; }\n\n    return this.sortData(data.slice(), this.sort);\n  }\n\n  /**\n   * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n   * index and length. If there is no paginator provided, returns the data array as provided.\n   */\n  _pageData(data: T[]): T[] {\n    if (!this.paginator) { return data; }\n\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.slice(startIndex, startIndex + this.paginator.pageSize);\n  }\n\n  /**\n   * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n   * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n   * guard against making property changes within a round of change detection.\n   */\n  _updatePaginator(filteredDataLength: number) {\n    Promise.resolve().then(() => {\n      const paginator = this.paginator;\n\n      if (!paginator) { return; }\n\n      paginator.length = filteredDataLength;\n\n      // If the page index is set beyond the page, reduce it to the last page.\n      if (paginator.pageIndex > 0) {\n        const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n        const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n\n        if (newPageIndex !== paginator.pageIndex) {\n          paginator.pageIndex = newPageIndex;\n\n          // Since the paginator only emits after user-generated changes,\n          // we need our own stream so we know to should re-render the data.\n          this._internalPageChanges.next();\n        }\n      }\n    });\n  }\n\n  /**\n   * Used by the MatTable. Called when it connects to the data source.\n   * @docs-private\n   */\n  connect() { return this._renderData; }\n\n  /**\n   * Used by the MatTable. Called when it is destroyed. No-op.\n   * @docs-private\n   */\n  disconnect() { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './table-module';\nexport * from './cell';\nexport * from './table';\nexport * from './row';\nexport * from './table-data-source';\nexport * from './text-column';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export class User {\r\n\tuserId: number;\r\n\tfullName: string;\r\n\temail: string;\r\n\taddress: string;\r\n\tnotes: string;\r\n\tstatus: boolean;\r\n\treqLimit: number;\r\n\tmobilePhones: string;\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Visit } from 'app/core/components/admin/visit/models/Visit';\r\nimport { VisitService } from 'app/core/components/admin/visit/services/visit.service';\r\n\r\n@Component({\r\n  selector: 'app-personel-visit',\r\n  templateUrl: './personel-visit.component.html',\r\n  styleUrls: ['./personel-visit.component.css']\r\n})\r\nexport class PersonelVisitComponent implements OnInit {\r\n\r\n  constructor(private visitService: VisitService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getPersonnelVisitList();\r\n  }\r\n\r\n  visits: Visit[] = [];\r\n  filteredVisits: Visit[] = [];\r\n\r\n  getPersonnelVisitList() {\r\n    this.visitService.getPersonnelVisitList().subscribe(data => {\r\n      if (Array.isArray(data)) {\r\n        this.visits = data;\r\n        this.filteredVisits = data;\r\n      } else {\r\n        console.error('Expected an array of visits');\r\n      }\r\n    });\r\n  }\r\n\r\n  filterVisits(status: string) {\r\n    if (status === 'approved') {\r\n      this.filteredVisits = this.visits.filter(visit => visit.isConfirm);\r\n    } else if (status === 'rejected') {\r\n      this.filteredVisits = this.visits.filter(visit => visit.isReject);\r\n    } else if (status === 'pending') {\r\n      this.filteredVisits = this.visits.filter(visit => !visit.isConfirm && !visit.isReject);\r\n    } else {\r\n      this.filteredVisits = this.visits;\r\n    }\r\n  }\r\n}\r\n","export default \"/* Dialog Container */\\r\\n.dialog-container {\\r\\n  padding: 0;\\r\\n  max-height: 90vh;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n}\\r\\n/* Header Styles */\\r\\n.dialog-header {\\r\\n  background: #f44336;\\r\\n  color: white;\\r\\n  padding: 16px;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 12px;\\r\\n  border-radius: 4px 4px 0 0;\\r\\n}\\r\\n.dialog-header h2 {\\r\\n  margin: 0;\\r\\n  font-size: 20px;\\r\\n  font-weight: 500;\\r\\n}\\r\\n.warning-icon {\\r\\n  font-size: 24px;\\r\\n  width: 24px;\\r\\n  height: 24px;\\r\\n}\\r\\n/* Content Styles */\\r\\n.visit-info {\\r\\n  padding: 16px;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  gap: 24px;\\r\\n}\\r\\n/* Section Styles */\\r\\n.info-section {\\r\\n  background: #f5f5f5;\\r\\n  border-radius: 8px;\\r\\n  padding: 16px;\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n.info-section:hover {\\r\\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\\r\\n  transform: translateY(-1px);\\r\\n}\\r\\n.section-header {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 8px;\\r\\n  margin-bottom: 16px;\\r\\n}\\r\\n.section-header h3 {\\r\\n  margin: 0;\\r\\n  font-size: 16px;\\r\\n  font-weight: 500;\\r\\n  color: #333;\\r\\n}\\r\\n.section-icon {\\r\\n  color: #666;\\r\\n}\\r\\n.visitor-count {\\r\\n  color: #666;\\r\\n  font-size: 14px;\\r\\n  font-weight: normal;\\r\\n}\\r\\n/* Chip Styles */\\r\\n.visitor-chips-container {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 8px;\\r\\n}\\r\\n.visitor-chip {\\r\\n  transition: all 0.2s ease;\\r\\n}\\r\\n.visitor-chip:hover {\\r\\n  transform: translateY(-1px);\\r\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\r\\n}\\r\\n.primary-visitor-chip {\\r\\n  background: #e3f2fd !important;\\r\\n  color: #1976d2 !important;\\r\\n  font-weight: 500;\\r\\n}\\r\\n.secondary-visitor-chip {\\r\\n  background: #f5f5f5 !important;\\r\\n  color: #616161 !important;\\r\\n}\\r\\n.vehicle-chip {\\r\\n  background: #e8f5e9 !important;\\r\\n  color: #2e7d32 !important;\\r\\n}\\r\\n.pedestrian-chip {\\r\\n  background: #fff3e0 !important;\\r\\n  color: #e65100 !important;\\r\\n}\\r\\n.plate-chip {\\r\\n  background: #e8eaf6 !important;\\r\\n  color: #3f51b5 !important;\\r\\n}\\r\\n.chip-icon {\\r\\n  margin-right: 4px;\\r\\n}\\r\\n/* Form Field Styles */\\r\\n.reason-field {\\r\\n  width: 100%;\\r\\n}\\r\\n/* Actions Styles */\\r\\n.dialog-actions {\\r\\n  padding: 16px;\\r\\n  display: flex;\\r\\n  justify-content: flex-end;\\r\\n  gap: 12px;\\r\\n  background: #fafafa;\\r\\n  border-top: 1px solid #eee;\\r\\n  margin: 0;\\r\\n}\\r\\n.cancel-button, .reject-button {\\r\\n  min-width: 120px;\\r\\n}\\r\\n/* Responsive Design */\\r\\n@media (max-width: 600px) {\\r\\n  .dialog-container {\\r\\n    max-height: 100vh;\\r\\n  }\\r\\n\\r\\n  .visit-info {\\r\\n    padding: 12px;\\r\\n    gap: 16px;\\r\\n  }\\r\\n\\r\\n  .info-section {\\r\\n    padding: 12px;\\r\\n  }\\r\\n\\r\\n  .dialog-actions {\\r\\n    flex-direction: column;\\r\\n    padding: 12px;\\r\\n  }\\r\\n\\r\\n  .cancel-button, .reject-button {\\r\\n    width: 100%;\\r\\n  }\\r\\n}\\r\\n/* Animation */\\r\\n@-webkit-keyframes slideIn {\\r\\n  from {\\r\\n    transform: translateY(-20px);\\r\\n    opacity: 0;\\r\\n  }\\r\\n  to {\\r\\n    transform: translateY(0);\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n@keyframes slideIn {\\r\\n  from {\\r\\n    transform: translateY(-20px);\\r\\n    opacity: 0;\\r\\n  }\\r\\n  to {\\r\\n    transform: translateY(0);\\r\\n    opacity: 1;\\r\\n  }\\r\\n}\\r\\n.info-section {\\r\\n  -webkit-animation: slideIn 0.3s ease-out;\\r\\n          animation: slideIn 0.3s ease-out;\\r\\n}\\r\\n/* Scrollbar Styles */\\r\\n::-webkit-scrollbar {\\r\\n  width: 8px;\\r\\n}\\r\\n::-webkit-scrollbar-track {\\r\\n  background: #f1f1f1;\\r\\n}\\r\\n::-webkit-scrollbar-thumb {\\r\\n  background: #888;\\r\\n  border-radius: 4px;\\r\\n}\\r\\n::-webkit-scrollbar-thumb:hover {\\r\\n  background: #666;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlamVjdC1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUI7QUFDckI7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7QUFFQSxrQkFBa0I7QUFDbEI7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGFBQWE7RUFDYixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCwwQkFBMEI7QUFDNUI7QUFFQTtFQUNFLFNBQVM7RUFDVCxlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLFlBQVk7QUFDZDtBQUVBLG1CQUFtQjtBQUNuQjtFQUNFLGFBQWE7RUFDYixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDtBQUVBLG1CQUFtQjtBQUNuQjtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UscUNBQXFDO0VBQ3JDLDJCQUEyQjtBQUM3QjtBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixRQUFRO0VBQ1IsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxTQUFTO0VBQ1QsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7QUFFQTtFQUNFLFdBQVc7QUFDYjtBQUVBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixtQkFBbUI7QUFDckI7QUFFQSxnQkFBZ0I7QUFDaEI7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmLFFBQVE7QUFDVjtBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IscUNBQXFDO0FBQ3ZDO0FBRUE7RUFDRSw4QkFBOEI7RUFDOUIseUJBQXlCO0VBQ3pCLGdCQUFnQjtBQUNsQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBRUEsc0JBQXNCO0FBQ3RCO0VBQ0UsV0FBVztBQUNiO0FBRUEsbUJBQW1CO0FBQ25CO0VBQ0UsYUFBYTtFQUNiLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsU0FBUztFQUNULG1CQUFtQjtFQUNuQiwwQkFBMEI7RUFDMUIsU0FBUztBQUNYO0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFFQSxzQkFBc0I7QUFDdEI7RUFDRTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsYUFBYTtFQUNmOztFQUVBO0lBQ0UsV0FBVztFQUNiO0FBQ0Y7QUFFQSxjQUFjO0FBQ2Q7RUFDRTtJQUNFLDRCQUE0QjtJQUM1QixVQUFVO0VBQ1o7RUFDQTtJQUNFLHdCQUF3QjtJQUN4QixVQUFVO0VBQ1o7QUFDRjtBQVRBO0VBQ0U7SUFDRSw0QkFBNEI7SUFDNUIsVUFBVTtFQUNaO0VBQ0E7SUFDRSx3QkFBd0I7SUFDeEIsVUFBVTtFQUNaO0FBQ0Y7QUFFQTtFQUNFLHdDQUFnQztVQUFoQyxnQ0FBZ0M7QUFDbEM7QUFFQSxxQkFBcUI7QUFDckI7RUFDRSxVQUFVO0FBQ1o7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InJlamVjdC1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIERpYWxvZyBDb250YWluZXIgKi9cclxuLmRpYWxvZy1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWF4LWhlaWdodDogOTB2aDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi8qIEhlYWRlciBTdHlsZXMgKi9cclxuLmRpYWxvZy1oZWFkZXIge1xyXG4gIGJhY2tncm91bmQ6ICNmNDQzMzY7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogMTJweDtcclxuICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDtcclxufVxyXG5cclxuLmRpYWxvZy1oZWFkZXIgaDIge1xyXG4gIG1hcmdpbjogMDtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLndhcm5pbmctaWNvbiB7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG4gIHdpZHRoOiAyNHB4O1xyXG4gIGhlaWdodDogMjRweDtcclxufVxyXG5cclxuLyogQ29udGVudCBTdHlsZXMgKi9cclxuLnZpc2l0LWluZm8ge1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdhcDogMjRweDtcclxufVxyXG5cclxuLyogU2VjdGlvbiBTdHlsZXMgKi9cclxuLmluZm8tc2VjdGlvbiB7XHJcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgcGFkZGluZzogMTZweDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xyXG59XHJcblxyXG4uaW5mby1zZWN0aW9uOmhvdmVyIHtcclxuICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcclxufVxyXG5cclxuLnNlY3Rpb24taGVhZGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiA4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxufVxyXG5cclxuLnNlY3Rpb24taGVhZGVyIGgzIHtcclxuICBtYXJnaW46IDA7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6ICMzMzM7XHJcbn1cclxuXHJcbi5zZWN0aW9uLWljb24ge1xyXG4gIGNvbG9yOiAjNjY2O1xyXG59XHJcblxyXG4udmlzaXRvci1jb3VudCB7XHJcbiAgY29sb3I6ICM2NjY7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbi8qIENoaXAgU3R5bGVzICovXHJcbi52aXNpdG9yLWNoaXBzLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgZ2FwOiA4cHg7XHJcbn1cclxuXHJcbi52aXNpdG9yLWNoaXAge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XHJcbn1cclxuXHJcbi52aXNpdG9yLWNoaXA6aG92ZXIge1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcclxuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjEpO1xyXG59XHJcblxyXG4ucHJpbWFyeS12aXNpdG9yLWNoaXAge1xyXG4gIGJhY2tncm91bmQ6ICNlM2YyZmQgIWltcG9ydGFudDtcclxuICBjb2xvcjogIzE5NzZkMiAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5zZWNvbmRhcnktdmlzaXRvci1jaGlwIHtcclxuICBiYWNrZ3JvdW5kOiAjZjVmNWY1ICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6ICM2MTYxNjEgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnZlaGljbGUtY2hpcCB7XHJcbiAgYmFja2dyb3VuZDogI2U4ZjVlOSAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiAjMmU3ZDMyICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5wZWRlc3RyaWFuLWNoaXAge1xyXG4gIGJhY2tncm91bmQ6ICNmZmYzZTAgIWltcG9ydGFudDtcclxuICBjb2xvcjogI2U2NTEwMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucGxhdGUtY2hpcCB7XHJcbiAgYmFja2dyb3VuZDogI2U4ZWFmNiAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiAjM2Y1MWI1ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jaGlwLWljb24ge1xyXG4gIG1hcmdpbi1yaWdodDogNHB4O1xyXG59XHJcblxyXG4vKiBGb3JtIEZpZWxkIFN0eWxlcyAqL1xyXG4ucmVhc29uLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLyogQWN0aW9ucyBTdHlsZXMgKi9cclxuLmRpYWxvZy1hY3Rpb25zIHtcclxuICBwYWRkaW5nOiAxNnB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBnYXA6IDEycHg7XHJcbiAgYmFja2dyb3VuZDogI2ZhZmFmYTtcclxuICBib3JkZXItdG9wOiAxcHggc29saWQgI2VlZTtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi5jYW5jZWwtYnV0dG9uLCAucmVqZWN0LWJ1dHRvbiB7XHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxufVxyXG5cclxuLyogUmVzcG9uc2l2ZSBEZXNpZ24gKi9cclxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgLmRpYWxvZy1jb250YWluZXIge1xyXG4gICAgbWF4LWhlaWdodDogMTAwdmg7XHJcbiAgfVxyXG5cclxuICAudmlzaXQtaW5mbyB7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gICAgZ2FwOiAxNnB4O1xyXG4gIH1cclxuXHJcbiAgLmluZm8tc2VjdGlvbiB7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gIH1cclxuXHJcbiAgLmRpYWxvZy1hY3Rpb25zIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gIH1cclxuXHJcbiAgLmNhbmNlbC1idXR0b24sIC5yZWplY3QtYnV0dG9uIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuLyogQW5pbWF0aW9uICovXHJcbkBrZXlmcmFtZXMgc2xpZGVJbiB7XHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvLXNlY3Rpb24ge1xyXG4gIGFuaW1hdGlvbjogc2xpZGVJbiAwLjNzIGVhc2Utb3V0O1xyXG59XHJcblxyXG4vKiBTY3JvbGxiYXIgU3R5bGVzICovXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiA4cHg7XHJcbn1cclxuXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xyXG4gIGJhY2tncm91bmQ6ICNmMWYxZjE7XHJcbn1cclxuXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gIGJhY2tncm91bmQ6ICM4ODg7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG59XHJcblxyXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiAjNjY2O1xyXG59Il19 */\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, ComponentFactoryResolver} from '@angular/core';\nimport {Direction} from '@angular/cdk/bidi';\nimport {ScrollStrategy} from '@angular/cdk/overlay';\n\n/** Valid ARIA roles for a dialog element. */\nexport type DialogRole = 'dialog' | 'alertdialog';\n\n/** Possible overrides for a dialog's position. */\nexport interface DialogPosition {\n  /** Override for the dialog's top position. */\n  top?: string;\n\n  /** Override for the dialog's bottom position. */\n  bottom?: string;\n\n  /** Override for the dialog's left position. */\n  left?: string;\n\n  /** Override for the dialog's right position. */\n  right?: string;\n}\n\n/**\n * Configuration for opening a modal dialog with the MatDialog service.\n */\nexport class MatDialogConfig<D = any> {\n\n  /**\n   * Where the attached component should live in Angular's *logical* component tree.\n   * This affects what is available for injection and the change detection order for the\n   * component instantiated inside of the dialog. This does not affect where the dialog\n   * content will be rendered.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** ID for the dialog. If omitted, a unique one will be generated. */\n  id?: string;\n\n  /** The ARIA role of the dialog element. */\n  role?: DialogRole = 'dialog';\n\n  /** Custom class for the overlay pane. */\n  panelClass?: string | string[] = '';\n\n  /** Whether the dialog has a backdrop. */\n  hasBackdrop?: boolean = true;\n\n  /** Custom class for the backdrop. */\n  backdropClass?: string | string[] = '';\n\n  /** Whether the user can use escape or clicking on the backdrop to close the modal. */\n  disableClose?: boolean = false;\n\n  /** Width of the dialog. */\n  width?: string = '';\n\n  /** Height of the dialog. */\n  height?: string = '';\n\n  /** Min-width of the dialog. If a number is provided, assumes pixel units. */\n  minWidth?: number | string;\n\n  /** Min-height of the dialog. If a number is provided, assumes pixel units. */\n  minHeight?: number | string;\n\n  /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */\n  maxWidth?: number | string = '80vw';\n\n  /** Max-height of the dialog. If a number is provided, assumes pixel units. */\n  maxHeight?: number | string;\n\n  /** Position overrides. */\n  position?: DialogPosition;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** Layout direction for the dialog's content. */\n  direction?: Direction;\n\n  /** ID of the element that describes the dialog. */\n  ariaDescribedBy?: string | null = null;\n\n  /** ID of the element that labels the dialog. */\n  ariaLabelledBy?: string | null = null;\n\n  /** Aria label to assign to the dialog element. */\n  ariaLabel?: string | null = null;\n\n  /** Whether the dialog should focus the first focusable element on open. */\n  autoFocus?: boolean = true;\n\n  /**\n   * Whether the dialog should restore focus to the\n   * previously-focused element, after it's closed.\n   */\n  restoreFocus?: boolean = true;\n\n  /** Scroll strategy to be used for the dialog. */\n  scrollStrategy?: ScrollStrategy;\n\n  /**\n   * Whether the dialog should close when the user goes backwards/forwards in history.\n   * Note that this usually doesn't include clicking on links (unless the user is using\n   * the `HashLocationStrategy`).\n   */\n  closeOnNavigation?: boolean = true;\n\n  /** Alternate `ComponentFactoryResolver` to use when resolving the associated component. */\n  componentFactoryResolver?: ComponentFactoryResolver;\n\n  // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by MatDialog.\n * @docs-private\n */\nexport const matDialogAnimations: {\n  readonly dialogContainer: AnimationTriggerMetadata;\n} = {\n  /** Animation that is applied on the dialog container by defalt. */\n  dialogContainer: trigger('dialogContainer', [\n    // Note: The `enter` animation transitions to `transform: none`, because for some reason\n    // specifying the transform explicitly, causes IE both to blur the dialog content and\n    // decimate the animation performance. Leaving it as `none` solves both issues.\n    state('void, exit', style({opacity: 0, transform: 'scale(0.7)'})),\n    state('enter', style({transform: 'none'})),\n    transition('* => enter', animate('150ms cubic-bezier(0, 0, 0.2, 1)',\n        style({transform: 'none', opacity: 1}))),\n    transition('* => void, * => exit',\n        animate('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', style({opacity: 0}))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent} from '@angular/animations';\nimport {FocusMonitor, FocusOrigin, FocusTrap, FocusTrapFactory} from '@angular/cdk/a11y';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  DomPortal,\n  TemplatePortal\n} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  EventEmitter,\n  Inject,\n  Optional,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {matDialogAnimations} from './dialog-animations';\nimport {MatDialogConfig} from './dialog-config';\n\n/** Event that captures the state of dialog container animations. */\ninterface DialogAnimationEvent {\n  state: 'opened' | 'opening' | 'closing' | 'closed';\n  totalTime: number;\n}\n\n/**\n * Throws an exception for the case when a ComponentPortal is\n * attached to a DomPortalOutlet without an origin.\n * @docs-private\n */\nexport function throwMatDialogContentAlreadyAttachedError() {\n  throw Error('Attempting to attach dialog content after content is already attached');\n}\n\n/**\n * Base class for the `MatDialogContainer`. The base class does not implement\n * animations as these are left to implementers of the dialog container.\n */\n@Directive()\nexport abstract class _MatDialogContainerBase extends BasePortalOutlet {\n  protected _document: Document;\n\n  /** The portal outlet inside of this container into which the dialog content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** The class that traps and manages focus within the dialog. */\n  private _focusTrap: FocusTrap;\n\n  /** Emits when an animation state changes. */\n  _animationStateChanged = new EventEmitter<DialogAnimationEvent>();\n\n  /** Element that was focused before the dialog was opened. Save this to restore upon close. */\n  private _elementFocusedBeforeDialogWasOpened: HTMLElement | null = null;\n\n  /**\n   * Type of interaction that led to the dialog being closed. This is used to determine\n   * whether the focus style will be applied when returning focus to its original location\n   * after the dialog is closed.\n   */\n  _closeInteractionType: FocusOrigin|null = null;\n\n  /** ID of the element that should be considered as the dialog's label. */\n  _ariaLabelledBy: string | null;\n\n  /** ID for the container DOM element. */\n  _id: string;\n\n  constructor(\n    protected _elementRef: ElementRef,\n    protected _focusTrapFactory: FocusTrapFactory,\n    protected _changeDetectorRef: ChangeDetectorRef,\n    @Optional() @Inject(DOCUMENT) _document: any,\n    /** The dialog configuration. */\n    public _config: MatDialogConfig,\n    private _focusMonitor?: FocusMonitor) {\n\n    super();\n    this._ariaLabelledBy = _config.ariaLabelledBy || null;\n    this._document = _document;\n  }\n\n  /** Starts the dialog exit animation. */\n  abstract _startExitAnimation(): void;\n\n  /** Initializes the dialog container with the attached content. */\n  _initializeWithAttachedContent() {\n    this._setupFocusTrap();\n    // Save the previously focused element. This element will be re-focused\n    // when the dialog closes.\n    this._capturePreviouslyFocusedElement();\n    // Move focus onto the dialog immediately in order to prevent the user\n    // from accidentally opening multiple dialogs at the same time.\n    this._focusDialogContainer();\n  }\n\n  /**\n   * Attach a ComponentPortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /**\n   * Attach a TemplatePortal as content to this dialog container.\n   * @param portal Portal to be attached as the dialog content.\n   */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /**\n   * Attaches a DOM portal to the dialog container.\n   * @param portal Portal to be attached.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throwMatDialogContentAlreadyAttachedError();\n    }\n\n    return this._portalOutlet.attachDomPortal(portal);\n  }\n\n  /** Moves focus back into the dialog if it was moved out. */\n  _recaptureFocus() {\n    if (!this._containsFocus()) {\n      const focusContainer = !this._config.autoFocus || !this._focusTrap.focusInitialElement();\n\n      if (focusContainer) {\n        this._elementRef.nativeElement.focus();\n      }\n    }\n  }\n\n  /** Moves the focus inside the focus trap. */\n  protected _trapFocus() {\n    // If we were to attempt to focus immediately, then the content of the dialog would not yet be\n    // ready in instances where change detection has to run first. To deal with this, we simply\n    // wait for the microtask queue to be empty.\n    if (this._config.autoFocus) {\n      this._focusTrap.focusInitialElementWhenReady();\n    } else if (!this._containsFocus()) {\n      // Otherwise ensure that focus is on the dialog container. It's possible that a different\n      // component tried to move focus while the open animation was running. See:\n      // https://github.com/angular/components/issues/16215. Note that we only want to do this\n      // if the focus isn't inside the dialog already, because it's possible that the consumer\n      // turned off `autoFocus` in order to move focus themselves.\n      this._elementRef.nativeElement.focus();\n    }\n  }\n\n  /** Restores focus to the element that was focused before the dialog opened. */\n  protected _restoreFocus() {\n    const previousElement = this._elementFocusedBeforeDialogWasOpened;\n\n    // We need the extra check, because IE can set the `activeElement` to null in some cases.\n    if (this._config.restoreFocus && previousElement &&\n        typeof previousElement.focus === 'function') {\n      const activeElement = this._document.activeElement;\n      const element = this._elementRef.nativeElement;\n\n      // Make sure that focus is still inside the dialog or is on the body (usually because a\n      // non-focusable element like the backdrop was clicked) before moving it. It's possible that\n      // the consumer moved it themselves before the animation was done, in which case we shouldn't\n      // do anything.\n      if (!activeElement || activeElement === this._document.body || activeElement === element ||\n          element.contains(activeElement)) {\n        if (this._focusMonitor) {\n          this._focusMonitor.focusVia(previousElement, this._closeInteractionType);\n          this._closeInteractionType = null;\n        } else {\n          previousElement.focus();\n        }\n      }\n    }\n\n    if (this._focusTrap) {\n      this._focusTrap.destroy();\n    }\n  }\n\n  /** Sets up the focus trap. */\n  private _setupFocusTrap() {\n    this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);\n  }\n\n  /** Captures the element that was focused before the dialog was opened. */\n  private _capturePreviouslyFocusedElement() {\n    if (this._document) {\n      this._elementFocusedBeforeDialogWasOpened = this._document.activeElement as HTMLElement;\n    }\n  }\n\n  /** Focuses the dialog container. */\n  private _focusDialogContainer() {\n    // Note that there is no focus method when rendering on the server.\n    if (this._elementRef.nativeElement.focus) {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n\n  /** Returns whether focus is inside the dialog. */\n  private _containsFocus() {\n    const element = this._elementRef.nativeElement;\n    const activeElement = this._document.activeElement;\n    return element === activeElement || element.contains(activeElement);\n  }\n}\n\n/**\n * Internal component that wraps user-provided dialog content.\n * Animation is based on https://material.io/guidelines/motion/choreography.html.\n * @docs-private\n */\n@Component({\n  selector: 'mat-dialog-container',\n  templateUrl: 'dialog-container.html',\n  styleUrls: ['dialog.css'],\n  encapsulation: ViewEncapsulation.None,\n  // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matDialogAnimations.dialogContainer],\n  host: {\n    'class': 'mat-dialog-container',\n    'tabindex': '-1',\n    'aria-modal': 'true',\n    '[id]': '_id',\n    '[attr.role]': '_config.role',\n    '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',\n    '[attr.aria-label]': '_config.ariaLabel',\n    '[attr.aria-describedby]': '_config.ariaDescribedBy || null',\n    '[@dialogContainer]': '_state',\n    '(@dialogContainer.start)': '_onAnimationStart($event)',\n    '(@dialogContainer.done)': '_onAnimationDone($event)',\n  },\n})\nexport class MatDialogContainer extends _MatDialogContainerBase {\n  /** State of the dialog animation. */\n  _state: 'void' | 'enter' | 'exit' = 'enter';\n\n  /** Callback, invoked whenever an animation on the host completes. */\n  _onAnimationDone({toState, totalTime}: AnimationEvent) {\n    if (toState === 'enter') {\n      this._trapFocus();\n      this._animationStateChanged.next({state: 'opened', totalTime});\n    } else if (toState === 'exit') {\n      this._restoreFocus();\n      this._animationStateChanged.next({state: 'closed', totalTime});\n    }\n  }\n\n  /** Callback, invoked when an animation on the host starts. */\n  _onAnimationStart({toState, totalTime}: AnimationEvent) {\n    if (toState === 'enter') {\n      this._animationStateChanged.next({state: 'opening', totalTime});\n    } else if (toState === 'exit' || toState === 'void') {\n      this._animationStateChanged.next({state: 'closing', totalTime});\n    }\n  }\n\n  /** Starts the dialog exit animation. */\n  _startExitAnimation(): void {\n    this._state = 'exit';\n\n    // Mark the container for check so it can react if the\n    // view container is using OnPush change detection.\n    this._changeDetectorRef.markForCheck();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusOrigin} from '@angular/cdk/a11y';\nimport {ESCAPE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {GlobalPositionStrategy, OverlayRef} from '@angular/cdk/overlay';\nimport {Observable, Subject} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {DialogPosition} from './dialog-config';\nimport {_MatDialogContainerBase} from './dialog-container';\n\n\n// TODO(jelbourn): resizing\n\n// Counter for unique dialog ids.\nlet uniqueId = 0;\n\n/** Possible states of the lifecycle of a dialog. */\nexport const enum MatDialogState {OPEN, CLOSING, CLOSED}\n\n/**\n * Reference to a dialog opened via the MatDialog service.\n */\nexport class MatDialogRef<T, R = any> {\n  /** The instance of component opened into the dialog. */\n  componentInstance: T;\n\n  /** Whether the user is allowed to close the dialog. */\n  disableClose: boolean | undefined = this._containerInstance._config.disableClose;\n\n  /** Subject for notifying the user that the dialog has finished opening. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the dialog has finished closing. */\n  private readonly _afterClosed = new Subject<R | undefined>();\n\n  /** Subject for notifying the user that the dialog has started closing. */\n  private readonly _beforeClosed = new Subject<R | undefined>();\n\n  /** Result to be passed to afterClosed. */\n  private _result: R | undefined;\n\n  /** Handle to the timeout that's running as a fallback in case the exit animation doesn't fire. */\n  private _closeFallbackTimeout: number;\n\n  /** Current state of the dialog. */\n  private _state = MatDialogState.OPEN;\n\n  constructor(\n    private _overlayRef: OverlayRef,\n    public _containerInstance: _MatDialogContainerBase,\n    readonly id: string = `mat-dialog-${uniqueId++}`) {\n\n    // Pass the id along to the container.\n    _containerInstance._id = id;\n\n    // Emit when opening animation completes\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.state === 'opened'),\n      take(1)\n    )\n    .subscribe(() => {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    });\n\n    // Dispose overlay when closing animation is complete\n    _containerInstance._animationStateChanged.pipe(\n      filter(event => event.state === 'closed'),\n      take(1)\n    ).subscribe(() => {\n      clearTimeout(this._closeFallbackTimeout);\n      this._finishDialogClose();\n    });\n\n    _overlayRef.detachments().subscribe(() => {\n      this._beforeClosed.next(this._result);\n      this._beforeClosed.complete();\n      this._afterClosed.next(this._result);\n      this._afterClosed.complete();\n      this.componentInstance = null!;\n      this._overlayRef.dispose();\n    });\n\n    _overlayRef.keydownEvents()\n      .pipe(filter(event => {\n        return event.keyCode === ESCAPE && !this.disableClose && !hasModifierKey(event);\n      }))\n      .subscribe(event => {\n        event.preventDefault();\n        _closeDialogVia(this, 'keyboard');\n      });\n\n    _overlayRef.backdropClick().subscribe(() => {\n      if (this.disableClose) {\n        this._containerInstance._recaptureFocus();\n      } else {\n        _closeDialogVia(this, 'mouse');\n      }\n    });\n  }\n\n  /**\n   * Close the dialog.\n   * @param dialogResult Optional result to return to the dialog opener.\n   */\n  close(dialogResult?: R): void {\n    this._result = dialogResult;\n\n    // Transition the backdrop in parallel to the dialog.\n    this._containerInstance._animationStateChanged.pipe(\n      filter(event => event.state === 'closing'),\n      take(1)\n    )\n    .subscribe(event => {\n      this._beforeClosed.next(dialogResult);\n      this._beforeClosed.complete();\n      this._overlayRef.detachBackdrop();\n\n      // The logic that disposes of the overlay depends on the exit animation completing, however\n      // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback\n      // timeout which will clean everything up if the animation hasn't fired within the specified\n      // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the\n      // vast majority of cases the timeout will have been cleared before it has the chance to fire.\n      this._closeFallbackTimeout = setTimeout(() => this._finishDialogClose(),\n          event.totalTime + 100);\n    });\n\n    this._state = MatDialogState.CLOSING;\n    this._containerInstance._startExitAnimation();\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished opening.\n   */\n  afterOpened(): Observable<void> {\n    return this._afterOpened;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog is finished closing.\n   */\n  afterClosed(): Observable<R | undefined> {\n    return this._afterClosed;\n  }\n\n  /**\n   * Gets an observable that is notified when the dialog has started closing.\n   */\n  beforeClosed(): Observable<R | undefined> {\n    return this._beforeClosed;\n  }\n\n  /**\n   * Gets an observable that emits when the overlay's backdrop has been clicked.\n   */\n  backdropClick(): Observable<MouseEvent> {\n    return this._overlayRef.backdropClick();\n  }\n\n  /**\n   * Gets an observable that emits when keydown events are targeted on the overlay.\n   */\n  keydownEvents(): Observable<KeyboardEvent> {\n    return this._overlayRef.keydownEvents();\n  }\n\n  /**\n   * Updates the dialog's position.\n   * @param position New dialog position.\n   */\n  updatePosition(position?: DialogPosition): this {\n    let strategy = this._getPositionStrategy();\n\n    if (position && (position.left || position.right)) {\n      position.left ? strategy.left(position.left) : strategy.right(position.right);\n    } else {\n      strategy.centerHorizontally();\n    }\n\n    if (position && (position.top || position.bottom)) {\n      position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\n    } else {\n      strategy.centerVertically();\n    }\n\n    this._overlayRef.updatePosition();\n\n    return this;\n  }\n\n  /**\n   * Updates the dialog's width and height.\n   * @param width New width of the dialog.\n   * @param height New height of the dialog.\n   */\n  updateSize(width: string = '', height: string = ''): this {\n    this._getPositionStrategy().width(width).height(height);\n    this._overlayRef.updatePosition();\n    return this;\n  }\n\n  /** Add a CSS class or an array of classes to the overlay pane. */\n  addPanelClass(classes: string | string[]): this {\n    this._overlayRef.addPanelClass(classes);\n    return this;\n  }\n\n  /** Remove a CSS class or an array of classes from the overlay pane. */\n  removePanelClass(classes: string | string[]): this {\n    this._overlayRef.removePanelClass(classes);\n    return this;\n  }\n\n  /** Gets the current state of the dialog's lifecycle. */\n  getState(): MatDialogState {\n    return this._state;\n  }\n\n  /**\n   * Finishes the dialog close by updating the state of the dialog\n   * and disposing the overlay.\n   */\n  private _finishDialogClose() {\n    this._state = MatDialogState.CLOSED;\n    this._overlayRef.dispose();\n  }\n\n  /** Fetches the position strategy object from the overlay ref. */\n  private _getPositionStrategy(): GlobalPositionStrategy {\n    return this._overlayRef.getConfig().positionStrategy as GlobalPositionStrategy;\n  }\n}\n\n/**\n * Closes the dialog with the specified interaction type. This is currently not part of\n * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.\n * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.\n */\n// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.\nexport function _closeDialogVia<R>(ref: MatDialogRef<R>, interactionType: FocusOrigin, result?: R) {\n  // Some mock dialog ref instances in tests do not have the `_containerInstance` property.\n  // For those, we keep the behavior as is and do not deal with the interaction type.\n  if (ref._containerInstance !== undefined) {\n    ref._containerInstance._closeInteractionType = interactionType;\n  }\n  return ref.close(result);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayContainer,\n  OverlayRef,\n  ScrollStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, TemplatePortal} from '@angular/cdk/portal';\nimport {Location} from '@angular/common';\nimport {\n  Directive,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  OnDestroy,\n  Optional,\n  SkipSelf,\n  StaticProvider,\n  TemplateRef,\n  Type,\n} from '@angular/core';\nimport {defer, Observable, of as observableOf, Subject} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MatDialogConfig} from './dialog-config';\nimport {MatDialogContainer, _MatDialogContainerBase} from './dialog-container';\nimport {MatDialogRef} from './dialog-ref';\n\n\n/** Injection token that can be used to access the data that was passed in to a dialog. */\nexport const MAT_DIALOG_DATA = new InjectionToken<any>('MatDialogData');\n\n/** Injection token that can be used to specify default dialog options. */\nexport const MAT_DIALOG_DEFAULT_OPTIONS =\n    new InjectionToken<MatDialogConfig>('mat-dialog-default-options');\n\n/** Injection token that determines the scroll handling while the dialog is open. */\nexport const MAT_DIALOG_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-dialog-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay: Overlay):\n  () => ScrollStrategy {\n  return () => overlay.scrollStrategies.block();\n}\n\n/** @docs-private */\nexport const MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {\n  provide: MAT_DIALOG_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n\n/**\n * Base class for dialog services. The base dialog service allows\n * for arbitrary dialog refs and dialog container components.\n */\n@Directive()\nexport abstract class _MatDialogBase<C extends _MatDialogContainerBase> implements OnDestroy {\n  private _openDialogsAtThisLevel: MatDialogRef<any>[] = [];\n  private readonly _afterAllClosedAtThisLevel = new Subject<void>();\n  private readonly _afterOpenedAtThisLevel = new Subject<MatDialogRef<any>>();\n  private _ariaHiddenElements = new Map<Element, string|null>();\n  private _scrollStrategy: () => ScrollStrategy;\n\n  /** Keeps track of the currently-open dialogs. */\n  get openDialogs(): MatDialogRef<any>[] {\n    return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;\n  }\n\n  /** Stream that emits when a dialog has been opened. */\n  get afterOpened(): Subject<MatDialogRef<any>> {\n    return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;\n  }\n\n  _getAfterAllClosed(): Subject<void> {\n    const parent = this._parentDialog;\n    return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;\n  }\n\n  // TODO (jelbourn): tighten the typing right-hand side of this expression.\n  /**\n   * Stream that emits when all open dialog have finished closing.\n   * Will emit on subscribe if there are no open dialogs to begin with.\n   */\n  readonly afterAllClosed: Observable<void> = defer(() => this.openDialogs.length ?\n      this._getAfterAllClosed() :\n      this._getAfterAllClosed().pipe(startWith(undefined))) as Observable<any>;\n\n  constructor(\n      private _overlay: Overlay,\n      private _injector: Injector,\n      private _defaultOptions: MatDialogConfig|undefined,\n      private _parentDialog: _MatDialogBase<C>|undefined,\n      private _overlayContainer: OverlayContainer,\n      scrollStrategy: any,\n      private _dialogRefConstructor: Type<MatDialogRef<any>>,\n      private _dialogContainerType: Type<C>,\n      private _dialogDataToken: InjectionToken<any>) {\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  /**\n   * Opens a modal dialog containing the given component.\n   * @param componentOrTemplateRef Type of the component to load into the dialog,\n   *     or a TemplateRef to instantiate as the dialog content.\n   * @param config Extra configuration options.\n   * @returns Reference to the newly-opened dialog.\n   */\n  open<T, D = any, R = any>(componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n          config?: MatDialogConfig<D>): MatDialogRef<T, R> {\n\n    config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());\n\n    if (config.id && this.getDialogById(config.id) &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Dialog with id \"${config.id}\" exists already. The dialog id must be unique.`);\n    }\n\n    const overlayRef = this._createOverlay(config);\n    const dialogContainer = this._attachDialogContainer(overlayRef, config);\n    const dialogRef = this._attachDialogContent<T, R>(componentOrTemplateRef,\n                                                      dialogContainer,\n                                                      overlayRef,\n                                                      config);\n\n    // If this is the first dialog that we're opening, hide all the non-overlay content.\n    if (!this.openDialogs.length) {\n      this._hideNonDialogContentFromAssistiveTechnology();\n    }\n\n    this.openDialogs.push(dialogRef);\n    dialogRef.afterClosed().subscribe(() => this._removeOpenDialog(dialogRef));\n    this.afterOpened.next(dialogRef);\n\n    // Notify the dialog container that the content has been attached.\n    dialogContainer._initializeWithAttachedContent();\n\n    return dialogRef;\n  }\n\n  /**\n   * Closes all of the currently-open dialogs.\n   */\n  closeAll(): void {\n    this._closeDialogs(this.openDialogs);\n  }\n\n  /**\n   * Finds an open dialog by its id.\n   * @param id ID to use when looking up the dialog.\n   */\n  getDialogById(id: string): MatDialogRef<any> | undefined {\n    return this.openDialogs.find(dialog => dialog.id === id);\n  }\n\n  ngOnDestroy() {\n    // Only close the dialogs at this level on destroy\n    // since the parent service may still be active.\n    this._closeDialogs(this._openDialogsAtThisLevel);\n    this._afterAllClosedAtThisLevel.complete();\n    this._afterOpenedAtThisLevel.complete();\n  }\n\n  /**\n   * Creates the overlay into which the dialog will be loaded.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the OverlayRef for the created overlay.\n   */\n  private _createOverlay(config: MatDialogConfig): OverlayRef {\n    const overlayConfig = this._getOverlayConfig(config);\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an overlay config from a dialog config.\n   * @param dialogConfig The dialog configuration.\n   * @returns The overlay configuration.\n   */\n  private _getOverlayConfig(dialogConfig: MatDialogConfig): OverlayConfig {\n    const state = new OverlayConfig({\n      positionStrategy: this._overlay.position().global(),\n      scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),\n      panelClass: dialogConfig.panelClass,\n      hasBackdrop: dialogConfig.hasBackdrop,\n      direction: dialogConfig.direction,\n      minWidth: dialogConfig.minWidth,\n      minHeight: dialogConfig.minHeight,\n      maxWidth: dialogConfig.maxWidth,\n      maxHeight: dialogConfig.maxHeight,\n      disposeOnNavigation: dialogConfig.closeOnNavigation\n    });\n\n    if (dialogConfig.backdropClass) {\n      state.backdropClass = dialogConfig.backdropClass;\n    }\n\n    return state;\n  }\n\n  /**\n   * Attaches a dialog container to a dialog's already-created overlay.\n   * @param overlay Reference to the dialog's underlying overlay.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to a ComponentRef for the attached container.\n   */\n  private _attachDialogContainer(overlay: OverlayRef, config: MatDialogConfig): C {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{provide: MatDialogConfig, useValue: config}]\n    });\n\n    const containerPortal = new ComponentPortal(this._dialogContainerType,\n        config.viewContainerRef, injector, config.componentFactoryResolver);\n    const containerRef = overlay.attach<C>(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  /**\n   * Attaches the user-provided component to the already-created dialog container.\n   * @param componentOrTemplateRef The type of component being loaded into the dialog,\n   *     or a TemplateRef to instantiate as the content.\n   * @param dialogContainer Reference to the wrapping dialog container.\n   * @param overlayRef Reference to the overlay in which the dialog resides.\n   * @param config The dialog configuration.\n   * @returns A promise resolving to the MatDialogRef that should be returned to the user.\n   */\n  private _attachDialogContent<T, R>(\n      componentOrTemplateRef: ComponentType<T> | TemplateRef<T>,\n      dialogContainer: C,\n      overlayRef: OverlayRef,\n      config: MatDialogConfig): MatDialogRef<T, R> {\n\n    // Create a reference to the dialog we're creating in order to give the user a handle\n    // to modify and close it.\n    const dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);\n\n    if (componentOrTemplateRef instanceof TemplateRef) {\n      dialogContainer.attachTemplatePortal(\n        new TemplatePortal<T>(componentOrTemplateRef, null!,\n          <any>{$implicit: config.data, dialogRef}));\n    } else {\n      const injector = this._createInjector<T>(config, dialogRef, dialogContainer);\n      const contentRef = dialogContainer.attachComponentPortal<T>(\n          new ComponentPortal(componentOrTemplateRef, config.viewContainerRef, injector));\n      dialogRef.componentInstance = contentRef.instance;\n    }\n\n    dialogRef\n      .updateSize(config.width, config.height)\n      .updatePosition(config.position);\n\n    return dialogRef;\n  }\n\n  /**\n   * Creates a custom injector to be used inside the dialog. This allows a component loaded inside\n   * of a dialog to close itself and, optionally, to return a value.\n   * @param config Config object that is used to construct the dialog.\n   * @param dialogRef Reference to the dialog.\n   * @param dialogContainer Dialog container element that wraps all of the contents.\n   * @returns The custom injector that can be used inside the dialog.\n   */\n  private _createInjector<T>(\n      config: MatDialogConfig,\n      dialogRef: MatDialogRef<T>,\n      dialogContainer: C): Injector {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    // The dialog container should be provided as the dialog container and the dialog's\n    // content are created out of the same `ViewContainerRef` and as such, are siblings\n    // for injector purposes. To allow the hierarchy that is expected, the dialog\n    // container is explicitly provided in the injector.\n    const providers: StaticProvider[] = [\n      {provide: this._dialogContainerType, useValue: dialogContainer},\n      {provide: this._dialogDataToken, useValue: config.data},\n      {provide: this._dialogRefConstructor, useValue: dialogRef}\n    ];\n\n    if (config.direction &&\n        (!userInjector || !userInjector.get<Directionality | null>(Directionality, null))) {\n      providers.push({\n        provide: Directionality,\n        useValue: {value: config.direction, change: observableOf()}\n      });\n    }\n\n    return Injector.create({parent: userInjector || this._injector, providers});\n  }\n\n  /**\n   * Removes a dialog from the array of open dialogs.\n   * @param dialogRef Dialog to be removed.\n   */\n  private _removeOpenDialog(dialogRef: MatDialogRef<any>) {\n    const index = this.openDialogs.indexOf(dialogRef);\n\n    if (index > -1) {\n      this.openDialogs.splice(index, 1);\n\n      // If all the dialogs were closed, remove/restore the `aria-hidden`\n      // to a the siblings and emit to the `afterAllClosed` stream.\n      if (!this.openDialogs.length) {\n        this._ariaHiddenElements.forEach((previousValue, element) => {\n          if (previousValue) {\n            element.setAttribute('aria-hidden', previousValue);\n          } else {\n            element.removeAttribute('aria-hidden');\n          }\n        });\n\n        this._ariaHiddenElements.clear();\n        this._getAfterAllClosed().next();\n      }\n    }\n  }\n\n  /**\n   * Hides all of the content that isn't an overlay from assistive technology.\n   */\n  private _hideNonDialogContentFromAssistiveTechnology() {\n    const overlayContainer = this._overlayContainer.getContainerElement();\n\n    // Ensure that the overlay container is attached to the DOM.\n    if (overlayContainer.parentElement) {\n      const siblings = overlayContainer.parentElement.children;\n\n      for (let i = siblings.length - 1; i > -1; i--) {\n        let sibling = siblings[i];\n\n        if (sibling !== overlayContainer &&\n          sibling.nodeName !== 'SCRIPT' &&\n          sibling.nodeName !== 'STYLE' &&\n          !sibling.hasAttribute('aria-live')) {\n\n          this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));\n          sibling.setAttribute('aria-hidden', 'true');\n        }\n      }\n    }\n  }\n\n  /** Closes all of the dialogs in an array. */\n  private _closeDialogs(dialogs: MatDialogRef<any>[]) {\n    let i = dialogs.length;\n\n    while (i--) {\n      // The `_openDialogs` property isn't updated after close until the rxjs subscription\n      // runs on the next microtask, in addition to modifying the array as we're going\n      // through it. We loop through all of them and call close without assuming that\n      // they'll be removed from the list instantaneously.\n      dialogs[i].close();\n    }\n  }\n\n}\n\n/**\n * Service to open Material Design modal dialogs.\n */\n@Injectable()\nexport class MatDialog extends _MatDialogBase<MatDialogContainer> {\n  constructor(\n      overlay: Overlay,\n      injector: Injector,\n      /**\n       * @deprecated `_location` parameter to be removed.\n       * @breaking-change 10.0.0\n       */\n      @Optional() location: Location,\n      @Optional() @Inject(MAT_DIALOG_DEFAULT_OPTIONS) defaultOptions: MatDialogConfig,\n      @Inject(MAT_DIALOG_SCROLL_STRATEGY) scrollStrategy: any,\n      @Optional() @SkipSelf() parentDialog: MatDialog,\n      overlayContainer: OverlayContainer) {\n    super(overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy,\n        MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA);\n  }\n}\n\n/**\n * Applies default options to the dialog config.\n * @param config Config to be modified.\n * @param defaultOptions Default options provided.\n * @returns The new configuration object.\n */\nfunction _applyConfigDefaults(\n    config?: MatDialogConfig, defaultOptions?: MatDialogConfig): MatDialogConfig {\n  return {...defaultOptions, ...config};\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  Input,\n  OnChanges,\n  OnInit,\n  Optional,\n  SimpleChanges,\n  ElementRef,\n} from '@angular/core';\nimport {MatDialog} from './dialog';\nimport {_closeDialogVia, MatDialogRef} from './dialog-ref';\n\n/** Counter used to generate unique IDs for dialog elements. */\nlet dialogElementUid = 0;\n\n/**\n * Button that will close the current dialog.\n */\n@Directive({\n  selector: '[mat-dialog-close], [matDialogClose]',\n  exportAs: 'matDialogClose',\n  host: {\n    '(click)': '_onButtonClick($event)',\n    '[attr.aria-label]': 'ariaLabel || null',\n    '[attr.type]': 'type',\n  }\n})\nexport class MatDialogClose implements OnInit, OnChanges {\n  /** Screenreader label for the button. */\n  @Input('aria-label') ariaLabel: string;\n\n  /** Default to \"button\" to prevents accidental form submits. */\n  @Input() type: 'submit' | 'button' | 'reset' = 'button';\n\n  /** Dialog close input. */\n  @Input('mat-dialog-close') dialogResult: any;\n\n  @Input('matDialogClose') _matDialogClose: any;\n\n  constructor(\n    // The dialog title directive is always used in combination with a `MatDialogRef`.\n    // tslint:disable-next-line: lightweight-tokens\n    @Optional() public dialogRef: MatDialogRef<any>,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this.dialogRef) {\n      // When this directive is included in a dialog via TemplateRef (rather than being\n      // in a Component), the DialogRef isn't available via injection because embedded\n      // views cannot be given a custom injector. Instead, we look up the DialogRef by\n      // ID. This must occur in `onInit`, as the ID binding for the dialog container won't\n      // be resolved at constructor time.\n      this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];\n\n    if (proxiedChange) {\n      this.dialogResult = proxiedChange.currentValue;\n    }\n  }\n\n  _onButtonClick(event: MouseEvent) {\n    // Determinate the focus origin using the click event, because using the FocusMonitor will\n    // result in incorrect origins. Most of the time, close buttons will be auto focused in the\n    // dialog, and therefore clicking the button won't result in a focus change. This means that\n    // the FocusMonitor won't detect any origin change, and will always output `program`.\n    _closeDialogVia(this.dialogRef,\n        event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);\n  }\n}\n\n/**\n * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.\n */\n@Directive({\n  selector: '[mat-dialog-title], [matDialogTitle]',\n  exportAs: 'matDialogTitle',\n  host: {\n    'class': 'mat-dialog-title',\n    '[id]': 'id',\n  },\n})\nexport class MatDialogTitle implements OnInit {\n  @Input() id: string = `mat-dialog-title-${dialogElementUid++}`;\n\n  constructor(\n      // The dialog title directive is always used in combination with a `MatDialogRef`.\n      // tslint:disable-next-line: lightweight-tokens\n      @Optional() private _dialogRef: MatDialogRef<any>,\n      private _elementRef: ElementRef<HTMLElement>,\n      private _dialog: MatDialog) {}\n\n  ngOnInit() {\n    if (!this._dialogRef) {\n      this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs)!;\n    }\n\n    if (this._dialogRef) {\n      Promise.resolve().then(() => {\n        const container = this._dialogRef._containerInstance;\n\n        if (container && !container._ariaLabelledBy) {\n          container._ariaLabelledBy = this.id;\n        }\n      });\n    }\n  }\n}\n\n\n/**\n * Scrollable content container of a dialog.\n */\n@Directive({\n  selector: `[mat-dialog-content], mat-dialog-content, [matDialogContent]`,\n  host: {'class': 'mat-dialog-content'}\n})\nexport class MatDialogContent {}\n\n\n/**\n * Container for the bottom action buttons in a dialog.\n * Stays fixed to the bottom when scrolling.\n */\n@Directive({\n  selector: `[mat-dialog-actions], mat-dialog-actions, [matDialogActions]`,\n  host: {'class': 'mat-dialog-actions'}\n})\nexport class MatDialogActions {}\n\n\n/**\n * Finds the closest MatDialogRef to an element by looking at the DOM.\n * @param element Element relative to which to look for a dialog.\n * @param openDialogs References to the currently-open dialogs.\n */\nfunction getClosestDialog(element: ElementRef<HTMLElement>, openDialogs: MatDialogRef<any>[]) {\n  let parent: HTMLElement | null = element.nativeElement.parentElement;\n\n  while (parent && !parent.classList.contains('mat-dialog-container')) {\n    parent = parent.parentElement;\n  }\n\n  return parent ? openDialogs.find(dialog => dialog.id === parent!.id) : null;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MatDialog} from './dialog';\nimport {MatDialogContainer} from './dialog-container';\nimport {\n  MatDialogActions,\n  MatDialogClose,\n  MatDialogContent,\n  MatDialogTitle,\n} from './dialog-content-directives';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    MatCommonModule,\n  ],\n  exports: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogContent,\n    MatDialogActions,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatDialogContainer,\n    MatDialogClose,\n    MatDialogTitle,\n    MatDialogActions,\n    MatDialogContent,\n  ],\n  providers: [\n    MatDialog,\n    MAT_DIALOG_SCROLL_STRATEGY_PROVIDER,\n  ],\n  entryComponents: [MatDialogContainer],\n})\nexport class MatDialogModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './dialog-module';\nexport * from './dialog';\nexport * from './dialog-container';\nexport * from './dialog-content-directives';\nexport * from './dialog-config';\nexport * from './dialog-ref';\nexport * from './dialog-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// @ts-ignore: This will be removed from built files and is here to make the types available during dev work\r\nimport { CookieJar } from \"@types/tough-cookie\";\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { Platform, getGlobalThis, isArrayBuffer } from \"./Utils\";\r\n\r\nexport class FetchHttpClient extends HttpClient {\r\n    private readonly _abortControllerType: { prototype: AbortController, new(): AbortController };\r\n    private readonly _fetchType: (input: RequestInfo, init?: RequestInit) => Promise<Response>;\r\n    private readonly _jar?: CookieJar;\r\n\r\n    private readonly _logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this._logger = logger;\r\n\r\n        // Node added a fetch implementation to the global scope starting in v18.\r\n        // We need to add a cookie jar in node to be able to share cookies with WebSocket\r\n        if (typeof fetch === \"undefined\" || Platform.isNode) {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests\r\n            this._jar = new (requireFunc(\"tough-cookie\")).CookieJar();\r\n\r\n            if (typeof fetch === \"undefined\") {\r\n                this._fetchType = requireFunc(\"node-fetch\");\r\n            } else {\r\n                // Use fetch from Node if available\r\n                this._fetchType = fetch;\r\n            }\r\n\r\n            // node-fetch doesn't have a nice API for getting and setting cookies\r\n            // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one\r\n            this._fetchType = requireFunc(\"fetch-cookie\")(this._fetchType, this._jar);\r\n        } else {\r\n            this._fetchType = fetch.bind(getGlobalThis());\r\n        }\r\n        if (typeof AbortController === \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n\r\n            // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide\r\n            this._abortControllerType = requireFunc(\"abort-controller\");\r\n        } else {\r\n            this._abortControllerType = AbortController;\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            throw new AbortError();\r\n        }\r\n\r\n        if (!request.method) {\r\n            throw new Error(\"No method defined.\");\r\n        }\r\n        if (!request.url) {\r\n            throw new Error(\"No url defined.\");\r\n        }\r\n\r\n        const abortController = new this._abortControllerType();\r\n\r\n        let error: any;\r\n        // Hook our abortSignal into the abort controller\r\n        if (request.abortSignal) {\r\n            request.abortSignal.onabort = () => {\r\n                abortController.abort();\r\n                error = new AbortError();\r\n            };\r\n        }\r\n\r\n        // If a timeout has been passed in, setup a timeout to call abort\r\n        // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout\r\n        let timeoutId: any = null;\r\n        if (request.timeout) {\r\n            const msTimeout = request.timeout!;\r\n            timeoutId = setTimeout(() => {\r\n                abortController.abort();\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                error = new TimeoutError();\r\n            }, msTimeout);\r\n        }\r\n\r\n        if (request.content === \"\") {\r\n            request.content = undefined;\r\n        }\r\n        if (request.content) {\r\n            // Explicitly setting the Content-Type header for React Native on Android platform.\r\n            request.headers = request.headers || {};\r\n            if (isArrayBuffer(request.content)) {\r\n                request.headers[\"Content-Type\"] = \"application/octet-stream\";\r\n            } else {\r\n                request.headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\r\n            }\r\n        }\r\n\r\n        let response: Response;\r\n        try {\r\n            response = await this._fetchType(request.url!, {\r\n                body: request.content,\r\n                cache: \"no-cache\",\r\n                credentials: request.withCredentials === true ? \"include\" : \"same-origin\",\r\n                headers: {\r\n                    \"X-Requested-With\": \"XMLHttpRequest\",\r\n                    ...request.headers,\r\n                },\r\n                method: request.method!,\r\n                mode: \"cors\",\r\n                redirect: \"follow\",\r\n                signal: abortController.signal,\r\n            });\r\n        } catch (e) {\r\n            if (error) {\r\n                throw error;\r\n            }\r\n            this._logger.log(\r\n                LogLevel.Warning,\r\n                `Error from HTTP request. ${e}.`,\r\n            );\r\n            throw e;\r\n        } finally {\r\n            if (timeoutId) {\r\n                clearTimeout(timeoutId);\r\n            }\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = null;\r\n            }\r\n        }\r\n\r\n        if (!response.ok) {\r\n            const errorMessage = await deserializeContent(response, \"text\") as string;\r\n            throw new HttpError(errorMessage || response.statusText, response.status);\r\n        }\r\n\r\n        const content = deserializeContent(response, request.responseType);\r\n        const payload = await content;\r\n\r\n        return new HttpResponse(\r\n            response.status,\r\n            response.statusText,\r\n            payload,\r\n        );\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        let cookies: string = \"\";\r\n        if (Platform.isNode && this._jar) {\r\n            // @ts-ignore: unused variable\r\n            this._jar.getCookies(url, (e, c) => cookies = c.join(\"; \"));\r\n        }\r\n        return cookies;\r\n    }\r\n}\r\n\r\nfunction deserializeContent(response: Response, responseType?: XMLHttpRequestResponseType): Promise<string | ArrayBuffer> {\r\n    let content;\r\n    switch (responseType) {\r\n        case \"arraybuffer\":\r\n            content = response.arrayBuffer();\r\n            break;\r\n        case \"text\":\r\n            content = response.text();\r\n            break;\r\n        case \"blob\":\r\n        case \"document\":\r\n        case \"json\":\r\n            throw new Error(`${responseType} is not supported.`);\r\n        default:\r\n            content = response.text();\r\n            break;\r\n    }\r\n\r\n    return content;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as Chartist from 'chartist';\r\nimport { AuthService } from '../../admin/login/Services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private authService: AuthService) { }\r\n\r\n  startAnimationForLineChart(chart){\r\n      let seq: any, delays: any, durations: any;\r\n      seq = 0;\r\n      delays = 80;\r\n      durations = 500;\r\n\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'line' || data.type === 'area') {\r\n          data.element.animate({\r\n            d: {\r\n              begin: 600,\r\n              dur: 700,\r\n              from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),\r\n              to: data.path.clone().stringify(),\r\n              easing: Chartist.Svg.Easing.easeOutQuint\r\n            }\r\n          });\r\n        } else if(data.type === 'point') {\r\n              seq++;\r\n              data.element.animate({\r\n                opacity: {\r\n                  begin: seq * delays,\r\n                  dur: durations,\r\n                  from: 0,\r\n                  to: 1,\r\n                  easing: 'ease'\r\n                }\r\n              });\r\n          }\r\n      });\r\n\r\n      seq = 0;\r\n  };\r\n  startAnimationForBarChart(chart){\r\n      let seq2: any, delays2: any, durations2: any;\r\n\r\n      seq2 = 0;\r\n      delays2 = 80;\r\n      durations2 = 500;\r\n      chart.on('draw', function(data) {\r\n        if(data.type === 'bar'){\r\n            seq2++;\r\n            data.element.animate({\r\n              opacity: {\r\n                begin: seq2 * delays2,\r\n                dur: durations2,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'ease'\r\n              }\r\n            });\r\n        }\r\n      });\r\n\r\n      seq2 = 0;\r\n  };\r\n  ngOnInit() {\r\n      /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */\r\n\r\n      const dataDailySalesChart: any = {\r\n          labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],\r\n          series: [\r\n              [12, 17, 7, 17, 23, 18, 38]\r\n          ]\r\n      };\r\n\r\n     const optionsDailySalesChart: any = {\r\n          lineSmooth: Chartist.Interpolation.cardinal({\r\n              tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 50, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0},\r\n      }\r\n\r\n      var dailySalesChart = new Chartist.Line('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);\r\n\r\n      this.startAnimationForLineChart(dailySalesChart);\r\n\r\n\r\n      /* ----------==========     Completed Tasks Chart initialization    ==========---------- */\r\n\r\n      const dataCompletedTasksChart: any = {\r\n          labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],\r\n          series: [\r\n              [230, 750, 450, 300, 280, 240, 200, 190]\r\n          ]\r\n      };\r\n\r\n     const optionsCompletedTasksChart: any = {\r\n          lineSmooth: Chartist.Interpolation.cardinal({\r\n              tension: 0\r\n          }),\r\n          low: 0,\r\n          high: 1000, // creative tim: we recommend you to set the high sa the biggest value + something for a better look\r\n          chartPadding: { top: 0, right: 0, bottom: 0, left: 0}\r\n      }\r\n\r\n      var completedTasksChart = new Chartist.Line('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);\r\n\r\n      // start animation for the Completed Tasks Chart - Line Chart\r\n      this.startAnimationForLineChart(completedTasksChart);\r\n\r\n\r\n\r\n      /* ----------==========     Emails Subscription Chart initialization    ==========---------- */\r\n\r\n      var datawebsiteViewsChart = {\r\n        labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\r\n        series: [\r\n          [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]\r\n\r\n        ]\r\n      };\r\n      var optionswebsiteViewsChart = {\r\n          axisX: {\r\n              showGrid: false\r\n          },\r\n          low: 0,\r\n          high: 1000,\r\n          chartPadding: { top: 0, right: 5, bottom: 0, left: 0}\r\n      };\r\n      var responsiveOptions: any[] = [\r\n        ['screen and (max-width: 640px)', {\r\n          seriesBarDistance: 5,\r\n          axisX: {\r\n            labelInterpolationFnc: function (value) {\r\n              return value[0];\r\n            }\r\n          }\r\n        }]\r\n      ];\r\n      var websiteViewsChart = new Chartist.Bar('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);\r\n\r\n      //start animation for the Emails Subscription Chart\r\n      this.startAnimationForBarChart(websiteViewsChart);\r\n  }\r\n\r\n  checkClaim(claim: string): boolean {\r\n    return this.authService.claimGuard(claim);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { LookUp } from '../models/LookUp';\r\nimport { LookUpEmail } from '../models/LookUpEmail';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LookUpService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getGroupLookUp(): Observable<LookUp[]> {\r\n\r\n    return this.httpClient.get<LookUp[]>(environment.getApiUrl + \"/groups/lookups\")\r\n  }\r\n\r\n  getOperationClaimLookUp(): Observable<LookUp[]> {\r\n\r\n    return this.httpClient.get<LookUp[]>(environment.getApiUrl + \"/operation-claims/lookups\")\r\n  }\r\n\r\n  getUserLookUp():Observable<LookUpEmail[]>{\r\n    return this.httpClient.get<LookUpEmail[]>(environment.getApiUrl + \"/users/lookups\")\r\n  }\r\n\r\n  getLanguageLookup():Observable<LookUp[]>{\r\n    return this.httpClient.get<LookUp[]>(environment.getApiUrl + \"/languages/lookups\")\r\n  }\r\n\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AccessTokenHttpClient } from \"./AccessTokenHttpClient\";\r\nimport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nimport { AggregateErrors, DisabledTransportError, FailedToNegotiateWithServerError, FailedToStartTransportError, HttpError, UnsupportedTransportError, AbortError } from \"./Errors\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { HttpTransportType, ITransport, TransferFormat } from \"./ITransport\";\r\nimport { LongPollingTransport } from \"./LongPollingTransport\";\r\nimport { ServerSentEventsTransport } from \"./ServerSentEventsTransport\";\r\nimport { Arg, createLogger, getUserAgentHeader, Platform } from \"./Utils\";\r\nimport { WebSocketTransport } from \"./WebSocketTransport\";\r\n\r\n/** @private */\r\nconst enum ConnectionState {\r\n    Connecting = \"Connecting\",\r\n    Connected = \"Connected\",\r\n    Disconnected = \"Disconnected\",\r\n    Disconnecting = \"Disconnecting\",\r\n}\r\n\r\n/** @private */\r\nexport interface INegotiateResponse {\r\n    connectionId?: string;\r\n    connectionToken?: string;\r\n    negotiateVersion?: number;\r\n    availableTransports?: IAvailableTransport[];\r\n    url?: string;\r\n    accessToken?: string;\r\n    error?: string;\r\n    useStatefulReconnect?: boolean;\r\n}\r\n\r\n/** @private */\r\nexport interface IAvailableTransport {\r\n    transport: keyof typeof HttpTransportType;\r\n    transferFormats: (keyof typeof TransferFormat)[];\r\n}\r\n\r\nconst MAX_REDIRECTS = 100;\r\n\r\n/** @private */\r\nexport class HttpConnection implements IConnection {\r\n    private _connectionState: ConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private _connectionStarted: boolean;\r\n    private readonly _httpClient: AccessTokenHttpClient;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    // Needs to not start with _ to be available for tests\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private transport?: ITransport;\r\n    private _startInternalPromise?: Promise<void>;\r\n    private _stopPromise?: Promise<void>;\r\n    private _stopPromiseResolver: (value?: PromiseLike<void>) => void = () => {};\r\n    private _stopError?: Error;\r\n    private _accessTokenFactory?: () => string | Promise<string>;\r\n    private _sendQueue?: TransportSendQueue;\r\n\r\n    public readonly features: any = {};\r\n    public baseUrl: string;\r\n    public connectionId?: string;\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((e?: Error) => void) | null;\r\n\r\n    private readonly _negotiateVersion: number = 1;\r\n\r\n    constructor(url: string, options: IHttpConnectionOptions = {}) {\r\n        Arg.isRequired(url, \"url\");\r\n\r\n        this._logger = createLogger(options.logger);\r\n        this.baseUrl = this._resolveUrl(url);\r\n\r\n        options = options || {};\r\n        options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;\r\n        if (typeof options.withCredentials === \"boolean\" || options.withCredentials === undefined) {\r\n            options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;\r\n        } else {\r\n            throw new Error(\"withCredentials option was not a 'boolean' or 'undefined' value\");\r\n        }\r\n        options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;\r\n\r\n        let webSocketModule: any = null;\r\n        let eventSourceModule: any = null;\r\n\r\n        if (Platform.isNode && typeof require !== \"undefined\") {\r\n            // In order to ignore the dynamic require in webpack builds we need to do this magic\r\n            // @ts-ignore: TS doesn't know about these names\r\n            const requireFunc = typeof __webpack_require__ === \"function\" ? __non_webpack_require__ : require;\r\n            webSocketModule = requireFunc(\"ws\");\r\n            eventSourceModule = requireFunc(\"eventsource\");\r\n        }\r\n\r\n        if (!Platform.isNode && typeof WebSocket !== \"undefined\" && !options.WebSocket) {\r\n            options.WebSocket = WebSocket;\r\n        } else if (Platform.isNode && !options.WebSocket) {\r\n            if (webSocketModule) {\r\n                options.WebSocket = webSocketModule;\r\n            }\r\n        }\r\n\r\n        if (!Platform.isNode && typeof EventSource !== \"undefined\" && !options.EventSource) {\r\n            options.EventSource = EventSource;\r\n        } else if (Platform.isNode && !options.EventSource) {\r\n            if (typeof eventSourceModule !== \"undefined\") {\r\n                options.EventSource = eventSourceModule;\r\n            }\r\n        }\r\n\r\n        this._httpClient = new AccessTokenHttpClient(options.httpClient || new DefaultHttpClient(this._logger), options.accessTokenFactory);\r\n        this._connectionState = ConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n        this._options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public start(): Promise<void>;\r\n    public start(transferFormat: TransferFormat): Promise<void>;\r\n    public async start(transferFormat?: TransferFormat): Promise<void> {\r\n        transferFormat = transferFormat || TransferFormat.Binary;\r\n\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._logger.log(LogLevel.Debug, `Starting connection with transfer format '${TransferFormat[transferFormat]}'.`);\r\n\r\n        if (this._connectionState !== ConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start an HttpConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this._connectionState = ConnectionState.Connecting;\r\n\r\n        this._startInternalPromise = this._startInternal(transferFormat);\r\n        await this._startInternalPromise;\r\n\r\n        // The TypeScript compiler thinks that connectionState must be Connecting here. The TypeScript compiler is wrong.\r\n        if (this._connectionState as any === ConnectionState.Disconnecting) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"Failed to start the HttpConnection before stop() was called.\";\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.\r\n            await this._stopPromise;\r\n\r\n            return Promise.reject(new AbortError(message));\r\n        } else if (this._connectionState as any !== ConnectionState.Connected) {\r\n            // stop() was called and transitioned the client into the Disconnecting state.\r\n            const message = \"HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!\";\r\n            this._logger.log(LogLevel.Error, message);\r\n            return Promise.reject(new AbortError(message));\r\n        }\r\n\r\n        this._connectionStarted = true;\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        if (this._connectionState !== ConnectionState.Connected) {\r\n            return Promise.reject(new Error(\"Cannot send data if the connection is not in the 'Connected' State.\"));\r\n        }\r\n\r\n        if (!this._sendQueue) {\r\n            this._sendQueue = new TransportSendQueue(this.transport!);\r\n        }\r\n\r\n        // Transport will not be null if state is connected\r\n        return this._sendQueue.send(data);\r\n    }\r\n\r\n    public async stop(error?: Error): Promise<void> {\r\n        if (this._connectionState === ConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise;\r\n        }\r\n\r\n        this._connectionState = ConnectionState.Disconnecting;\r\n\r\n        this._stopPromise = new Promise((resolve) => {\r\n            // Don't complete stop() until stopConnection() completes.\r\n            this._stopPromiseResolver = resolve;\r\n        });\r\n\r\n        // stopInternal should never throw so just observe it.\r\n        await this._stopInternal(error);\r\n        await this._stopPromise;\r\n    }\r\n\r\n    private async _stopInternal(error?: Error): Promise<void> {\r\n        // Set error as soon as possible otherwise there is a race between\r\n        // the transport closing and providing an error and the error from a close message\r\n        // We would prefer the close message error.\r\n        this._stopError = error;\r\n\r\n        try {\r\n            await this._startInternalPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n\r\n        // The transport's onclose will trigger stopConnection which will run our onclose event.\r\n        // The transport should always be set if currently connected. If it wasn't set, it's likely because\r\n        // stop was called during start() and start() failed.\r\n        if (this.transport) {\r\n            try {\r\n                await this.transport.stop();\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.transport.stop() threw error '${e}'.`);\r\n                this._stopConnection();\r\n            }\r\n\r\n            this.transport = undefined;\r\n        } else {\r\n            this._logger.log(LogLevel.Debug, \"HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.\");\r\n        }\r\n    }\r\n\r\n    private async _startInternal(transferFormat: TransferFormat): Promise<void> {\r\n        // Store the original base url and the access token factory since they may change\r\n        // as part of negotiating\r\n        let url = this.baseUrl;\r\n        this._accessTokenFactory = this._options.accessTokenFactory;\r\n        this._httpClient._accessTokenFactory = this._accessTokenFactory;\r\n\r\n        try {\r\n            if (this._options.skipNegotiation) {\r\n                if (this._options.transport === HttpTransportType.WebSockets) {\r\n                    // No need to add a connection ID in this case\r\n                    this.transport = this._constructTransport(HttpTransportType.WebSockets);\r\n                    // We should just call connect directly in this case.\r\n                    // No fallback or negotiate in this case.\r\n                    await this._startTransport(url, transferFormat);\r\n                } else {\r\n                    throw new Error(\"Negotiation can only be skipped when using the WebSocket transport directly.\");\r\n                }\r\n            } else {\r\n                let negotiateResponse: INegotiateResponse | null = null;\r\n                let redirects = 0;\r\n\r\n                do {\r\n                    negotiateResponse = await this._getNegotiationResponse(url);\r\n                    // the user tries to stop the connection when it is being started\r\n                    if (this._connectionState === ConnectionState.Disconnecting || this._connectionState === ConnectionState.Disconnected) {\r\n                        throw new AbortError(\"The connection was stopped during negotiation.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.error) {\r\n                        throw new Error(negotiateResponse.error);\r\n                    }\r\n\r\n                    if ((negotiateResponse as any).ProtocolVersion) {\r\n                        throw new Error(\"Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.\");\r\n                    }\r\n\r\n                    if (negotiateResponse.url) {\r\n                        url = negotiateResponse.url;\r\n                    }\r\n\r\n                    if (negotiateResponse.accessToken) {\r\n                        // Replace the current access token factory with one that uses\r\n                        // the returned access token\r\n                        const accessToken = negotiateResponse.accessToken;\r\n                        this._accessTokenFactory = () => accessToken;\r\n                        // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart\r\n                        this._httpClient._accessToken = accessToken;\r\n                        this._httpClient._accessTokenFactory = undefined;\r\n                    }\r\n\r\n                    redirects++;\r\n                }\r\n                while (negotiateResponse.url && redirects < MAX_REDIRECTS);\r\n\r\n                if (redirects === MAX_REDIRECTS && negotiateResponse.url) {\r\n                    throw new Error(\"Negotiate redirection limit exceeded.\");\r\n                }\r\n\r\n                await this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);\r\n            }\r\n\r\n            if (this.transport instanceof LongPollingTransport) {\r\n                this.features.inherentKeepAlive = true;\r\n            }\r\n\r\n            if (this._connectionState === ConnectionState.Connecting) {\r\n                // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.\r\n                // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.\r\n                this._logger.log(LogLevel.Debug, \"The HttpConnection connected successfully.\");\r\n                this._connectionState = ConnectionState.Connected;\r\n            }\r\n\r\n            // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.\r\n            // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()\r\n            // will transition to the disconnected state. start() will wait for the transition using the stopPromise.\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Error, \"Failed to start the connection: \" + e);\r\n            this._connectionState = ConnectionState.Disconnected;\r\n            this.transport = undefined;\r\n\r\n            // if start fails, any active calls to stop assume that start will complete the stop promise\r\n            this._stopPromiseResolver();\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async _getNegotiationResponse(url: string): Promise<INegotiateResponse> {\r\n        const headers: {[k: string]: string} = {};\r\n        const [name, value] = getUserAgentHeader();\r\n        headers[name] = value;\r\n\r\n        const negotiateUrl = this._resolveNegotiateUrl(url);\r\n        this._logger.log(LogLevel.Debug, `Sending negotiation request: ${negotiateUrl}.`);\r\n        try {\r\n            const response = await this._httpClient.post(negotiateUrl, {\r\n                content: \"\",\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            });\r\n\r\n            if (response.statusCode !== 200) {\r\n                return Promise.reject(new Error(`Unexpected status code returned from negotiate '${response.statusCode}'`));\r\n            }\r\n\r\n            const negotiateResponse = JSON.parse(response.content as string) as INegotiateResponse;\r\n            if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {\r\n                // Negotiate version 0 doesn't use connectionToken\r\n                // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version\r\n                negotiateResponse.connectionToken = negotiateResponse.connectionId;\r\n            }\r\n\r\n            if (negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true) {\r\n                return Promise.reject(new FailedToNegotiateWithServerError(\"Client didn't negotiate Stateful Reconnect but the server did.\"));\r\n            }\r\n\r\n            return negotiateResponse;\r\n        } catch (e) {\r\n            let errorMessage = \"Failed to complete negotiation with the server: \" + e;\r\n            if (e instanceof HttpError) {\r\n                if (e.statusCode === 404) {\r\n                    errorMessage = errorMessage + \" Either this is not a SignalR endpoint or there is a proxy blocking the connection.\";\r\n                }\r\n            }\r\n            this._logger.log(LogLevel.Error, errorMessage);\r\n\r\n            return Promise.reject(new FailedToNegotiateWithServerError(errorMessage));\r\n        }\r\n    }\r\n\r\n    private _createConnectUrl(url: string, connectionToken: string | null | undefined) {\r\n        if (!connectionToken) {\r\n            return url;\r\n        }\r\n\r\n        return url + (url.indexOf(\"?\") === -1 ? \"?\" : \"&\") + `id=${connectionToken}`;\r\n    }\r\n\r\n    private async _createTransport(url: string, requestedTransport: HttpTransportType | ITransport | undefined, negotiateResponse: INegotiateResponse, requestedTransferFormat: TransferFormat): Promise<void> {\r\n        let connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);\r\n        if (this._isITransport(requestedTransport)) {\r\n            this._logger.log(LogLevel.Debug, \"Connection was provided an instance of ITransport, using that directly.\");\r\n            this.transport = requestedTransport;\r\n            await this._startTransport(connectUrl, requestedTransferFormat);\r\n\r\n            this.connectionId = negotiateResponse.connectionId;\r\n            return;\r\n        }\r\n\r\n        const transportExceptions: any[] = [];\r\n        const transports = negotiateResponse.availableTransports || [];\r\n        let negotiate: INegotiateResponse | undefined = negotiateResponse;\r\n        for (const endpoint of transports) {\r\n            const transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat,\r\n                negotiate?.useStatefulReconnect === true);\r\n            if (transportOrError instanceof Error) {\r\n                // Store the error and continue, we don't want to cause a re-negotiate in these cases\r\n                transportExceptions.push(`${endpoint.transport} failed:`);\r\n                transportExceptions.push(transportOrError);\r\n            } else if (this._isITransport(transportOrError)) {\r\n                this.transport = transportOrError;\r\n                if (!negotiate) {\r\n                    try {\r\n                        negotiate = await this._getNegotiationResponse(url);\r\n                    } catch (ex) {\r\n                        return Promise.reject(ex);\r\n                    }\r\n                    connectUrl = this._createConnectUrl(url, negotiate.connectionToken);\r\n                }\r\n                try {\r\n                    await this._startTransport(connectUrl, requestedTransferFormat);\r\n                    this.connectionId = negotiate.connectionId;\r\n                    return;\r\n                } catch (ex) {\r\n                    this._logger.log(LogLevel.Error, `Failed to start the transport '${endpoint.transport}': ${ex}`);\r\n                    negotiate = undefined;\r\n                    transportExceptions.push(new FailedToStartTransportError(`${endpoint.transport} failed: ${ex}`, HttpTransportType[endpoint.transport]));\r\n\r\n                    if (this._connectionState !== ConnectionState.Connecting) {\r\n                        const message = \"Failed to select transport before stop() was called.\";\r\n                        this._logger.log(LogLevel.Debug, message);\r\n                        return Promise.reject(new AbortError(message));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        if (transportExceptions.length > 0) {\r\n            return Promise.reject(new AggregateErrors(`Unable to connect to the server with any of the available transports. ${transportExceptions.join(\" \")}`, transportExceptions));\r\n        }\r\n        return Promise.reject(new Error(\"None of the transports supported by the client are supported by the server.\"));\r\n    }\r\n\r\n    private _constructTransport(transport: HttpTransportType): ITransport {\r\n        switch (transport) {\r\n            case HttpTransportType.WebSockets:\r\n                if (!this._options.WebSocket) {\r\n                    throw new Error(\"'WebSocket' is not supported in your environment.\");\r\n                }\r\n                return new WebSocketTransport(this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent!,\r\n                    this._options.WebSocket, this._options.headers || {});\r\n            case HttpTransportType.ServerSentEvents:\r\n                if (!this._options.EventSource) {\r\n                    throw new Error(\"'EventSource' is not supported in your environment.\");\r\n                }\r\n                return new ServerSentEventsTransport(this._httpClient, this._httpClient._accessToken, this._logger, this._options);\r\n            case HttpTransportType.LongPolling:\r\n                return new LongPollingTransport(this._httpClient, this._logger, this._options);\r\n            default:\r\n                throw new Error(`Unknown transport: ${transport}.`);\r\n        }\r\n    }\r\n\r\n    private _startTransport(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        this.transport!.onreceive = this.onreceive;\r\n        if (this.features.reconnect) {\r\n            this.transport!.onclose = async (e) => {\r\n                let callStop = false;\r\n                if (this.features.reconnect) {\r\n                    try {\r\n                        this.features.disconnected();\r\n                        await this.transport!.connect(url, transferFormat);\r\n                        await this.features.resend();\r\n                    } catch {\r\n                        callStop = true;\r\n                    }\r\n                } else {\r\n                    this._stopConnection(e);\r\n                    return;\r\n                }\r\n\r\n                if (callStop) {\r\n                    this._stopConnection(e);\r\n                }\r\n            };\r\n        } else {\r\n            this.transport!.onclose = (e) => this._stopConnection(e);\r\n        }\r\n        return this.transport!.connect(url, transferFormat);\r\n    }\r\n\r\n    private _resolveTransportOrError(endpoint: IAvailableTransport, requestedTransport: HttpTransportType | undefined,\r\n        requestedTransferFormat: TransferFormat, useStatefulReconnect: boolean): ITransport | Error | unknown {\r\n        const transport = HttpTransportType[endpoint.transport];\r\n        if (transport === null || transport === undefined) {\r\n            this._logger.log(LogLevel.Debug, `Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n            return new Error(`Skipping transport '${endpoint.transport}' because it is not supported by this client.`);\r\n        } else {\r\n            if (transportMatches(requestedTransport, transport)) {\r\n                const transferFormats = endpoint.transferFormats.map((s) => TransferFormat[s]);\r\n                if (transferFormats.indexOf(requestedTransferFormat) >= 0) {\r\n                    if ((transport === HttpTransportType.WebSockets && !this._options.WebSocket) ||\r\n                        (transport === HttpTransportType.ServerSentEvents && !this._options.EventSource)) {\r\n                        this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it is not supported in your environment.'`);\r\n                        return new UnsupportedTransportError(`'${HttpTransportType[transport]}' is not supported in your environment.`, transport);\r\n                    } else {\r\n                        this._logger.log(LogLevel.Debug, `Selecting transport '${HttpTransportType[transport]}'.`);\r\n                        try {\r\n                            this.features.reconnect = transport === HttpTransportType.WebSockets ? useStatefulReconnect : undefined;\r\n                            return this._constructTransport(transport);\r\n                        } catch (ex) {\r\n                            return ex;\r\n                        }\r\n                    }\r\n                } else {\r\n                    this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it does not support the requested transfer format '${TransferFormat[requestedTransferFormat]}'.`);\r\n                    return new Error(`'${HttpTransportType[transport]}' does not support ${TransferFormat[requestedTransferFormat]}.`);\r\n                }\r\n            } else {\r\n                this._logger.log(LogLevel.Debug, `Skipping transport '${HttpTransportType[transport]}' because it was disabled by the client.`);\r\n                return new DisabledTransportError(`'${HttpTransportType[transport]}' is disabled by the client.`, transport);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _isITransport(transport: any): transport is ITransport {\r\n        return transport && typeof (transport) === \"object\" && \"connect\" in transport;\r\n    }\r\n\r\n    private _stopConnection(error?: Error): void {\r\n        this._logger.log(LogLevel.Debug, `HttpConnection.stopConnection(${error}) called while in state ${this._connectionState}.`);\r\n\r\n        this.transport = undefined;\r\n\r\n        // If we have a stopError, it takes precedence over the error from the transport\r\n        error = this._stopError || error;\r\n        this._stopError = undefined;\r\n\r\n        if (this._connectionState === ConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is already in the disconnected state.`);\r\n            return;\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Connecting) {\r\n            this._logger.log(LogLevel.Warning, `Call to HttpConnection.stopConnection(${error}) was ignored because the connection is still in the connecting state.`);\r\n            throw new Error(`HttpConnection.stopConnection(${error}) was called while the connection is still in the connecting state.`);\r\n        }\r\n\r\n        if (this._connectionState === ConnectionState.Disconnecting) {\r\n            // A call to stop() induced this call to stopConnection and needs to be completed.\r\n            // Any stop() awaiters will be scheduled to continue after the onclose callback fires.\r\n            this._stopPromiseResolver();\r\n        }\r\n\r\n        if (error) {\r\n            this._logger.log(LogLevel.Error, `Connection disconnected with error '${error}'.`);\r\n        } else {\r\n            this._logger.log(LogLevel.Information, \"Connection disconnected.\");\r\n        }\r\n\r\n        if (this._sendQueue) {\r\n            this._sendQueue.stop().catch((e) => {\r\n                this._logger.log(LogLevel.Error, `TransportSendQueue.stop() threw error '${e}'.`);\r\n            });\r\n            this._sendQueue = undefined;\r\n        }\r\n\r\n        this.connectionId = undefined;\r\n        this._connectionState = ConnectionState.Disconnected;\r\n\r\n        if (this._connectionStarted) {\r\n            this._connectionStarted = false;\r\n            try {\r\n                if (this.onclose) {\r\n                    this.onclose(error);\r\n                }\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `HttpConnection.onclose(${error}) threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _resolveUrl(url: string): string {\r\n        // startsWith is not supported in IE\r\n        if (url.lastIndexOf(\"https://\", 0) === 0 || url.lastIndexOf(\"http://\", 0) === 0) {\r\n            return url;\r\n        }\r\n\r\n        if (!Platform.isBrowser) {\r\n            throw new Error(`Cannot resolve '${url}'.`);\r\n        }\r\n\r\n        // Setting the url to the href propery of an anchor tag handles normalization\r\n        // for us. There are 3 main cases.\r\n        // 1. Relative path normalization e.g \"b\" -> \"http://localhost:5000/a/b\"\r\n        // 2. Absolute path normalization e.g \"/a/b\" -> \"http://localhost:5000/a/b\"\r\n        // 3. Networkpath reference normalization e.g \"//localhost:5000/a/b\" -> \"http://localhost:5000/a/b\"\r\n        const aTag = window.document.createElement(\"a\");\r\n        aTag.href = url;\r\n\r\n        this._logger.log(LogLevel.Information, `Normalizing '${url}' to '${aTag.href}'.`);\r\n        return aTag.href;\r\n    }\r\n\r\n    private _resolveNegotiateUrl(url: string): string {\r\n        const negotiateUrl = new URL(url);\r\n\r\n        if (negotiateUrl.pathname.endsWith('/')) {\r\n            negotiateUrl.pathname += \"negotiate\";\r\n        } else {\r\n            negotiateUrl.pathname += \"/negotiate\";\r\n        }\r\n        const searchParams = new URLSearchParams(negotiateUrl.searchParams);\r\n\r\n        if (!searchParams.has(\"negotiateVersion\")) {\r\n            searchParams.append(\"negotiateVersion\", this._negotiateVersion.toString());\r\n        }\r\n\r\n        if (searchParams.has(\"useStatefulReconnect\")) {\r\n            if (searchParams.get(\"useStatefulReconnect\") === \"true\") {\r\n                this._options._useStatefulReconnect = true;\r\n            }\r\n        } else if (this._options._useStatefulReconnect === true) {\r\n            searchParams.append(\"useStatefulReconnect\", \"true\");\r\n        }\r\n\r\n        negotiateUrl.search = searchParams.toString();\r\n\r\n        return negotiateUrl.toString();\r\n    }\r\n}\r\n\r\nfunction transportMatches(requestedTransport: HttpTransportType | undefined, actualTransport: HttpTransportType) {\r\n    return !requestedTransport || ((actualTransport & requestedTransport) !== 0);\r\n}\r\n\r\n/** @private */\r\nexport class TransportSendQueue {\r\n    private _buffer: any[] = [];\r\n    private _sendBufferedData: PromiseSource;\r\n    private _executing: boolean = true;\r\n    private _transportResult?: PromiseSource;\r\n    private _sendLoopPromise: Promise<void>;\r\n\r\n    constructor(private readonly _transport: ITransport) {\r\n        this._sendBufferedData = new PromiseSource();\r\n        this._transportResult = new PromiseSource();\r\n\r\n        this._sendLoopPromise = this._sendLoop();\r\n    }\r\n\r\n    public send(data: string | ArrayBuffer): Promise<void> {\r\n        this._bufferData(data);\r\n        if (!this._transportResult) {\r\n            this._transportResult = new PromiseSource();\r\n        }\r\n        return this._transportResult.promise;\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._executing = false;\r\n        this._sendBufferedData.resolve();\r\n        return this._sendLoopPromise;\r\n    }\r\n\r\n    private _bufferData(data: string | ArrayBuffer): void {\r\n        if (this._buffer.length && typeof(this._buffer[0]) !== typeof(data)) {\r\n            throw new Error(`Expected data to be of type ${typeof(this._buffer)} but was of type ${typeof(data)}`);\r\n        }\r\n\r\n        this._buffer.push(data);\r\n        this._sendBufferedData.resolve();\r\n    }\r\n\r\n    private async _sendLoop(): Promise<void> {\r\n        while (true) {\r\n            await this._sendBufferedData.promise;\r\n\r\n            if (!this._executing) {\r\n                if (this._transportResult) {\r\n                    this._transportResult.reject(\"Connection stopped.\");\r\n                }\r\n\r\n                break;\r\n            }\r\n\r\n            this._sendBufferedData = new PromiseSource();\r\n\r\n            const transportResult = this._transportResult!;\r\n            this._transportResult = undefined;\r\n\r\n            const data = typeof(this._buffer[0]) === \"string\" ?\r\n                this._buffer.join(\"\") :\r\n                TransportSendQueue._concatBuffers(this._buffer);\r\n\r\n            this._buffer.length = 0;\r\n\r\n            try {\r\n                await this._transport.send(data);\r\n                transportResult.resolve();\r\n            } catch (error) {\r\n                transportResult.reject(error);\r\n            }\r\n        }\r\n    }\r\n\r\n    private static _concatBuffers(arrayBuffers: ArrayBuffer[]): ArrayBuffer {\r\n        const totalLength = arrayBuffers.map((b) => b.byteLength).reduce((a, b) => a + b);\r\n        const result = new Uint8Array(totalLength);\r\n        let offset = 0;\r\n        for (const item of arrayBuffers) {\r\n            result.set(new Uint8Array(item), offset);\r\n            offset += item.byteLength;\r\n        }\r\n\r\n        return result.buffer;\r\n    }\r\n}\r\n\r\nclass PromiseSource {\r\n    private _resolver?: () => void;\r\n    private _rejecter!: (reason?: any) => void;\r\n    public promise: Promise<void>;\r\n\r\n    constructor() {\r\n        this.promise = new Promise((resolve, reject) => [this._resolver, this._rejecter] = [resolve, reject]);\r\n    }\r\n\r\n    public resolve(): void {\r\n        this._resolver!();\r\n    }\r\n\r\n    public reject(reason?: any): void {\r\n        this._rejecter!(reason);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AckMessage, CompletionMessage, HubMessage, IHubProtocol, InvocationMessage, MessageType, SequenceMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { TransferFormat } from \"./ITransport\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\n\r\nconst JSON_HUB_PROTOCOL_NAME: string = \"json\";\r\n\r\n/** Implements the JSON Hub Protocol. */\r\nexport class JsonHubProtocol implements IHubProtocol {\r\n\r\n    /** @inheritDoc */\r\n    public readonly name: string = JSON_HUB_PROTOCOL_NAME;\r\n    /** @inheritDoc */\r\n    public readonly version: number = 2;\r\n\r\n    /** @inheritDoc */\r\n    public readonly transferFormat: TransferFormat = TransferFormat.Text;\r\n\r\n    /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.\r\n     *\r\n     * @param {string} input A string containing the serialized representation.\r\n     * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.\r\n     */\r\n    public parseMessages(input: string, logger: ILogger): HubMessage[] {\r\n        // The interface does allow \"ArrayBuffer\" to be passed in, but this implementation does not. So let's throw a useful error.\r\n        if (typeof input !== \"string\") {\r\n            throw new Error(\"Invalid input for JSON hub protocol. Expected a string.\");\r\n        }\r\n\r\n        if (!input) {\r\n            return [];\r\n        }\r\n\r\n        if (logger === null) {\r\n            logger = NullLogger.instance;\r\n        }\r\n\r\n        // Parse the messages\r\n        const messages = TextMessageFormat.parse(input);\r\n\r\n        const hubMessages = [];\r\n        for (const message of messages) {\r\n            const parsedMessage = JSON.parse(message) as HubMessage;\r\n            if (typeof parsedMessage.type !== \"number\") {\r\n                throw new Error(\"Invalid payload.\");\r\n            }\r\n            switch (parsedMessage.type) {\r\n                case MessageType.Invocation:\r\n                    this._isInvocationMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.StreamItem:\r\n                    this._isStreamItemMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Completion:\r\n                    this._isCompletionMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Ping:\r\n                    // Single value, no need to validate\r\n                    break;\r\n                case MessageType.Close:\r\n                    // All optional values, no need to validate\r\n                    break;\r\n                case MessageType.Ack:\r\n                    this._isAckMessage(parsedMessage);\r\n                    break;\r\n                case MessageType.Sequence:\r\n                    this._isSequenceMessage(parsedMessage);\r\n                    break;\r\n                default:\r\n                    // Future protocol changes can add message types, old clients can ignore them\r\n                    logger.log(LogLevel.Information, \"Unknown message type '\" + parsedMessage.type + \"' ignored.\");\r\n                    continue;\r\n            }\r\n            hubMessages.push(parsedMessage);\r\n        }\r\n\r\n        return hubMessages;\r\n    }\r\n\r\n    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.\r\n     *\r\n     * @param {HubMessage} message The message to write.\r\n     * @returns {string} A string containing the serialized representation of the message.\r\n     */\r\n    public writeMessage(message: HubMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(message));\r\n    }\r\n\r\n    private _isInvocationMessage(message: InvocationMessage): void {\r\n        this._assertNotEmptyString(message.target, \"Invalid payload for Invocation message.\");\r\n\r\n        if (message.invocationId !== undefined) {\r\n            this._assertNotEmptyString(message.invocationId, \"Invalid payload for Invocation message.\");\r\n        }\r\n    }\r\n\r\n    private _isStreamItemMessage(message: StreamItemMessage): void {\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for StreamItem message.\");\r\n\r\n        if (message.item === undefined) {\r\n            throw new Error(\"Invalid payload for StreamItem message.\");\r\n        }\r\n    }\r\n\r\n    private _isCompletionMessage(message: CompletionMessage): void {\r\n        if (message.result && message.error) {\r\n            throw new Error(\"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        if (!message.result && message.error) {\r\n            this._assertNotEmptyString(message.error, \"Invalid payload for Completion message.\");\r\n        }\r\n\r\n        this._assertNotEmptyString(message.invocationId, \"Invalid payload for Completion message.\");\r\n    }\r\n\r\n    private _isAckMessage(message: AckMessage): void {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Ack message.\");\r\n        }\r\n    }\r\n\r\n    private _isSequenceMessage(message: SequenceMessage): void {\r\n        if (typeof message.sequenceId !== 'number') {\r\n            throw new Error(\"Invalid SequenceId for Sequence message.\");\r\n        }\r\n    }\r\n\r\n    private _assertNotEmptyString(value: any, errorMessage: string): void {\r\n        if (typeof value !== \"string\" || value === \"\") {\r\n            throw new Error(errorMessage);\r\n        }\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcGFyay10YWJsZS5jb21wb25lbnQuY3NzIn0= */\";","export default \".no-sort::after {\\n  display: none !important;\\n  background-image: url() !important;\\n}\\n\\n.card [class*=card-header-]:not(.card-header-icon):not(.card-header-text):not(.card-header-image) {\\n  border-radius: 3px;\\n  margin-top: -20px;\\n  padding: 15px 15px 44px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXG9wZXJhdGlvbkNsYWltLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Msd0JBQUE7RUFDQSxrQ0FBQTtBQUNEOztBQUlBO0VBQ0Msa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtDQUFBO0FBREQiLCJmaWxlIjoib3BlcmF0aW9uQ2xhaW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm8tc29ydDo6YWZ0ZXIge1xyXG5cdGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuXHJcbi5jYXJkIFtjbGFzcyo9Y2FyZC1oZWFkZXItXTpub3QoLmNhcmQtaGVhZGVyLWljb24pOm5vdCguY2FyZC1oZWFkZXItdGV4dCk6bm90KC5jYXJkLWhlYWRlci1pbWFnZSkge1xyXG5cdGJvcmRlci1yYWRpdXM6IDNweDtcclxuXHRtYXJnaW4tdG9wOiAtMjBweDtcclxuXHRwYWRkaW5nOiAxNXB4IDE1cHggIDQ0cHggIWltcG9ydGFudDtcclxufSJdfQ== */\";","import {\r\n  AfterViewInit,\r\n  Component,\r\n  OnDestroy,\r\n  OnInit,\r\n  ViewChild\r\n} from \"@angular/core\";\r\nimport { FormBuilder, FormGroup, Validators } from \"@angular/forms\";\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport * as signalR from '@microsoft/signalr';\r\nimport { MustMatch } from \"app/core/directives/must-match\";\r\nimport { LookUp } from \"app/core/models/LookUp\";\r\nimport { AlertifyService } from \"app/core/services/alertify.service\";\r\nimport { LookUpService } from \"app/core/services/lookUp.service\";\r\nimport { environment } from \"environments/environment\";\r\nimport { IDropdownSettings } from \"ng-multiselect-dropdown\";\r\nimport { GroupService } from '../group/Services/group.service';\r\nimport { AuthService } from \"../login/Services/auth.service\";\r\nimport { PasswordDto } from \"./models/passwordDto\";\r\nimport { User } from \"./models/user\";\r\nimport { SignalRService } from \"./Services/signalr.service\";\r\nimport { UserService } from \"./Services/user.service\";\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: \"app-user\",\r\n  templateUrl: \"./user.component.html\",\r\n  styleUrls: [\"./user.component.scss\"],\r\n})\r\nexport class UserComponent implements AfterViewInit, OnInit ,OnDestroy{\r\n  dataSource: MatTableDataSource<any>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  displayedColumns: string[] = [\r\n    \"email\",\r\n    \"fullName\",\r\n    \"reqLimit\",\r\n    \"status\",\r\n    \"mobilePhones\",\r\n    \"address\",\r\n    \"notes\",\r\n    \"updateReqLimit\",\r\n    \"passwordChange\",\r\n    \"updateGroupClaim\",\r\n    \"update\",\r\n  ];\r\n  visits: string[] = [\"jhnuıohıuj\"];\r\n  user: User;\r\n  userList: User[];\r\n  userEmail: string;\r\n  groupDropdownList: LookUp[];\r\n  groupSelectedItems: LookUp[];\r\n  dropdownSettings: IDropdownSettings;\r\n  notValidEmail: boolean = true;\r\n  claimDropdownList: LookUp[];\r\n  claimSelectedItems: LookUp[];\r\n  private hubConnection!: signalR.HubConnection;\r\n  isGroupChange: boolean = false;\r\n  isClaimChange: boolean = false;\r\n\r\n  userId: number;\r\n  reqLimitForm: FormGroup;\r\n  selectedUserId: number;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private formBuilder: FormBuilder,\r\n    private alertifyService: AlertifyService,\r\n    private lookUpService: LookUpService,\r\n    private authService: AuthService,\r\n    private signalRService: SignalRService,\r\n    private groupService: GroupService\r\n  ) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    this.getUserList();\r\n  }\r\n\r\n  userAddForm: FormGroup;\r\n  passwordForm: FormGroup;\r\n\r\n  ngOnInit() {\r\n    this.createUserAddForm();\r\n    this.createPasswordForm();\r\n    this.createReqLimitForm();\r\n    this.getGroupList();\r\n\r\n    this.dropdownSettings = environment.getDropDownSetting;\r\n\r\n    this.lookUpService.getGroupLookUp().subscribe((data) => {\r\n      this.groupDropdownList = data;\r\n    });\r\n\r\n    this.lookUpService.getOperationClaimLookUp().subscribe((data) => {\r\n      this.claimDropdownList = data;\r\n    });\r\n\r\n    // Real-time validation for email field\r\n    this.userAddForm.get('email')?.valueChanges.subscribe(() => {\r\n        this.validateEmail();\r\n    });\r\n  }\r\n\r\n  validateEmail() {\r\n    \r\n    if (this.userEmail.length < 10 || this.userEmail.length > 50) {\r\n      this.notValidEmail = false;\r\n    } else {\r\n      this.notValidEmail = true;\r\n    }\r\n  }\r\n\r\n  getUserGroupPermissions(userId: number) {\r\n    this.userId = userId;\r\n\r\n    this.userService.getUserGroupPermissions(userId).subscribe((data) => {\r\n      this.groupSelectedItems = data;\r\n    });\r\n  }\r\n  ngOnDestroy(): void {\r\n    if (this.hubConnection) {\r\n      this.hubConnection.stop()\r\n        .then(() => console.log('Hub connection stopped'))\r\n        .catch(err => console.error('Error while stopping connection:', err));\r\n    } else {\r\n      console.warn('Hub connection is undefined, cannot stop.');\r\n    }\r\n  }\r\n  \r\n  getUserClaimsPermissions(userId: number) {\r\n    this.userId = userId;\r\n\r\n    this.userService.getUserClaims(userId).subscribe((data) => {\r\n      this.claimSelectedItems = data;\r\n    });\r\n  }\r\n\r\n  saveUserGroupsPermissions() {\r\n    if (this.isGroupChange) {\r\n      var ids = this.groupSelectedItems.map(function (x) {\r\n        return x.id as number;\r\n      });\r\n      this.userService.saveUserGroupPermissions(this.userId, ids).subscribe(\r\n        (x) => {\r\n          jQuery(\"#groupPermissions\").modal(\"hide\");\r\n          this.isGroupChange = false;\r\n          this.alertifyService.success(x);\r\n        },\r\n        (error) => {\r\n          this.alertifyService.error(error.error);\r\n          jQuery(\"#groupPermissions\").modal(\"hide\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  saveUserClaimsPermission() {\r\n    if (this.isClaimChange) {\r\n      var ids = this.claimSelectedItems.map(function (x) {\r\n        return x.id as number;\r\n      });\r\n      this.userService.saveUserClaims(this.userId, ids).subscribe(\r\n        (x) => {\r\n          jQuery(\"#claimsPermissions\").modal(\"hide\");\r\n          this.isClaimChange = false;\r\n          this.alertifyService.success(x);\r\n        },\r\n        (error) => {\r\n          this.alertifyService.error(error.error);\r\n          jQuery(\"#claimsPermissions\").modal(\"hide\");\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  onItemSelect(comboType: string) {\r\n    this.setComboStatus(comboType);\r\n  }\r\n\r\n  onSelectAll(comboType: string) {\r\n    this.setComboStatus(comboType);\r\n  }\r\n  onItemDeSelect(comboType: string) {\r\n    this.setComboStatus(comboType);\r\n  }\r\n\r\n  setComboStatus(comboType: string) {\r\n    if (comboType == \"Group\") this.isGroupChange = true;\r\n    else if (comboType == \"Claim\") this.isClaimChange = true;\r\n  }\r\n\r\n  createUserAddForm() {\r\n    this.userAddForm = this.formBuilder.group({\r\n      userId: [0],\r\n      fullName: [\"\", Validators.required],\r\n      email: [\"\", Validators.required],\r\n      address: [\"\"],\r\n      notes: [\"\"],\r\n      mobilePhones: [\"\"],\r\n      status: [true],\r\n    });\r\n  }\r\n\r\n  createPasswordForm() {\r\n    this.passwordForm = this.formBuilder.group(\r\n      {\r\n        password: [\"\", Validators.required],\r\n        confirmPassword: [\"\", Validators.required],\r\n      },\r\n      {\r\n        validator: MustMatch(\"password\", \"confirmPassword\"),\r\n      }\r\n    );\r\n  }\r\n\r\n  createReqLimitForm() {\r\n    this.reqLimitForm = this.formBuilder.group({\r\n      reqLimit: ['', [Validators.required, Validators.min(1)]]\r\n    });\r\n  }\r\n\r\n  getUserList() {\r\n    this.userService.getUserList().subscribe((data) => {\r\n      this.userList = data;\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.configDataTable();\r\n    });\r\n  }\r\n\r\n  clearFormGroup(group: FormGroup) {\r\n    group.markAsUntouched();\r\n    group.reset();\r\n\r\n    Object.keys(group.controls).forEach((key) => {\r\n      group.get(key).setErrors(null);\r\n      if (key == \"userId\") group.get(key).setValue(0);\r\n      else if (key == \"status\") group.get(key).setValue(true);\r\n    });\r\n  }\r\n\r\n  setUserId(id: number) {\r\n    this.userId = id;\r\n  }\r\n\r\n  save() {\r\n    if (this.userAddForm.valid) {\r\n      this.user = Object.assign({}, this.userAddForm.value);\r\n\r\n      if (this.user.userId == 0) this.addUser();\r\n      else this.updateUser();\r\n    }\r\n  }\r\n\r\n  savePassword() {\r\n    if (this.passwordForm.valid) {\r\n      var passwordDto: PasswordDto = new PasswordDto();\r\n      passwordDto.userId = this.userId;\r\n      passwordDto.password = this.passwordForm.value.password;\r\n\r\n      this.userService.saveUserPassword(passwordDto).subscribe((data) => {\r\n        this.userId = 0;\r\n        jQuery(\"#passwordChange\").modal(\"hide\");\r\n        this.alertifyService.success(data);\r\n        this.clearFormGroup(this.passwordForm);\r\n      });\r\n    }\r\n  }\r\n\r\n  addUser() {\r\n    this.userService.addUser(this.user).subscribe((data) => {\r\n      this.getUserList();\r\n      this.user = new User();\r\n      jQuery(\"#user\").modal(\"hide\");\r\n      this.alertifyService.success(data);\r\n      this.clearFormGroup(this.userAddForm);\r\n    });\r\n  }\r\n\r\n  getUserById(id: number) {\r\n    this.clearFormGroup(this.userAddForm);\r\n    this.userService.getUserById(id).subscribe((data) => {\r\n      this.user = data;\r\n      this.userAddForm.patchValue(data);\r\n    });\r\n  }\r\n\r\n  updateUser() {\r\n    this.userService.updateUser(this.user).subscribe((data) => {\r\n      var index = this.userList.findIndex((x) => x.userId == this.user.userId);\r\n      this.userList[index] = this.user;\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.configDataTable();\r\n      this.user = new User();\r\n      jQuery(\"#user\").modal(\"hide\");\r\n      this.alertifyService.success(data);\r\n      this.clearFormGroup(this.userAddForm);\r\n    });\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    this.userService.deleteUser(id).subscribe((data) => {\r\n      this.alertifyService.success(data.toString());\r\n      var index = this.userList.findIndex((x) => x.userId == id);\r\n      this.userList[index].status = false;\r\n      this.dataSource = new MatTableDataSource(this.userList);\r\n      this.configDataTable();\r\n    });\r\n  }\r\n\r\n  checkClaim(claim: string): boolean {\r\n    return this.authService.claimGuard(claim);\r\n  }\r\n\r\n  configDataTable(): void {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  requestLimitIncrease(userId: number) {\r\n    const newLimit = prompt('Enter new request limit:');\r\n    if (newLimit !== null) {\r\n      const limit = parseInt(newLimit);\r\n      if (!isNaN(limit)) {\r\n        this.userService.requestLimitIncrease(userId, limit).subscribe(\r\n          (response) => {\r\n            this.alertifyService.success(response);\r\n            this.getUserList();\r\n          },\r\n          (error) => {\r\n            this.alertifyService.error(error.error);\r\n          }\r\n        );\r\n      } else {\r\n        this.alertifyService.error('Please enter a valid number');\r\n      }\r\n    }\r\n  }\r\n\r\n  setSelectedUserId(userId: number) {\r\n    this.selectedUserId = userId;\r\n    // Get current req limit and set it in form\r\n    const user = this.userList.find(u => u.userId === userId);\r\n    if (user) {\r\n      this.reqLimitForm.patchValue({\r\n        reqLimit: user.reqLimit\r\n      });\r\n    }\r\n  }\r\n\r\n  saveRequestLimit() {\r\n    if (this.reqLimitForm.valid) {\r\n      const newLimit = this.reqLimitForm.get('reqLimit')?.value;\r\n      this.userService.requestLimitIncrease(this.selectedUserId, newLimit).subscribe({\r\n        next: (response) => {\r\n          jQuery('#reqLimitModal').modal('hide');\r\n          this.alertifyService.success(response);\r\n          this.getUserList();\r\n          this.clearFormGroup(this.reqLimitForm);\r\n        },\r\n        error: (error) => {\r\n          const errorMessage = error.error || error.message || 'An error occurred while updating request limit';\r\n          this.alertifyService.error(errorMessage);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  getGroupList() {\r\n    this.groupService.getGroupList().subscribe(data => {\r\n        this.groupDropdownList = data.map(group => ({ id: group.id, label: group.groupName }));\r\n    });\r\n  }\r\n}\r\n","export default \":host ::ng-deep .multiselect-dropdown .dropdown-btn {\\n  display: inline-block;\\n  border: 1px solid #adadad;\\n  width: 100%;\\n  padding: 6px 12px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n  line-height: 1.1;\\n  text-align: left;\\n  vertical-align: middle;\\n  cursor: pointer;\\n  background-image: none;\\n  border-radius: 4px;\\n}\\n\\n:host ::ng-deep .multiselect-dropdown .dropdown-btn .selected-item {\\n  background: #9c27b0 !important;\\n}\\n\\n:host ::ng-deep .multiselect-item-checkbox > input[type=checkbox]:checked + div:before {\\n  background: #9c27b0 !important;\\n}\\n\\n.no-sort::after {\\n  display: none !important;\\n  background-image: url() !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGdyb3VwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUkscUJBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFBSjs7QUFLQTtFQUVJLDhCQUFBO0FBSEo7O0FBTUE7RUFDSSw4QkFBQTtBQUhKOztBQU1BO0VBQ0Usd0JBQUE7RUFDQSxrQ0FBQTtBQUhGIiwiZmlsZSI6Imdyb3VwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5tdWx0aXNlbGVjdC1kcm9wZG93biAuZHJvcGRvd24tYnRuIFxyXG57XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYWRhZGFkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA2cHggMTJweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgXHJcbiAgICBcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5tdWx0aXNlbGVjdC1kcm9wZG93biAuZHJvcGRvd24tYnRuIC5zZWxlY3RlZC1pdGVtXHJcbntcclxuICAgIGJhY2tncm91bmQ6ICM5YzI3YjAgIWltcG9ydGFudDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5tdWx0aXNlbGVjdC1pdGVtLWNoZWNrYm94ID5pbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2VkICsgZGl2OmJlZm9yZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjOWMyN2IwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5uby1zb3J0OjphZnRlciB7XHJcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiJdfQ== */\";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController\r\n// We don't actually ever use the API being polyfilled, we always use the polyfill because\r\n// it's a very new API right now.\r\n\r\n// Not exported from index.\r\n/** @private */\r\nexport class AbortController implements AbortSignal {\r\n    private _isAborted: boolean = false;\r\n    public onabort: (() => void) | null = null;\r\n\r\n    public abort(): void {\r\n        if (!this._isAborted) {\r\n            this._isAborted = true;\r\n            if (this.onabort) {\r\n                this.onabort();\r\n            }\r\n        }\r\n    }\r\n\r\n    get signal(): AbortSignal {\r\n        return this;\r\n    }\r\n\r\n    get aborted(): boolean {\r\n        return this._isAborted;\r\n    }\r\n}\r\n\r\n/** Represents a signal that can be monitored to determine if a request has been aborted. */\r\nexport interface AbortSignal {\r\n    /** Indicates if the request has been aborted. */\r\n    aborted: boolean;\r\n    /** Set this to a handler that will be invoked when the request is aborted. */\r\n    onabort: (() => void) | null;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Everything that users need to access must be exported here. Including interfaces.\r\nexport { AbortSignal } from \"./AbortController\";\r\nexport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nexport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nexport { DefaultHttpClient } from \"./DefaultHttpClient\";\r\nexport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nexport { IStatefulReconnectOptions } from \"./IStatefulReconnectOptions\";\r\nexport { HubConnection, HubConnectionState } from \"./HubConnection\";\r\nexport { HubConnectionBuilder } from \"./HubConnectionBuilder\";\r\nexport { AckMessage, SequenceMessage, MessageType, MessageHeaders, HubMessage, HubMessageBase,\r\n    HubInvocationMessage, InvocationMessage, StreamInvocationMessage, StreamItemMessage, CompletionMessage,\r\n    PingMessage, CloseMessage, CancelInvocationMessage, IHubProtocol } from \"./IHubProtocol\";\r\nexport { ILogger, LogLevel } from \"./ILogger\";\r\nexport { HttpTransportType, TransferFormat, ITransport } from \"./ITransport\";\r\nexport { IStreamSubscriber, IStreamResult, ISubscription } from \"./Stream\";\r\nexport { NullLogger } from \"./Loggers\";\r\nexport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nexport { Subject } from \"./Subject\";\r\nexport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\nexport { VERSION } from \"./Utils\";\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { WebSocketConstructor } from \"./Polyfills\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class WebSocketTransport implements ITransport {\r\n    private readonly _logger: ILogger;\r\n    private readonly _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n    private readonly _logMessageContent: boolean;\r\n    private readonly _webSocketConstructor: WebSocketConstructor;\r\n    private readonly _httpClient: HttpClient;\r\n    private _webSocket?: WebSocket;\r\n    private _headers: MessageHeaders;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined, logger: ILogger,\r\n                logMessageContent: boolean, webSocketConstructor: WebSocketConstructor, headers: MessageHeaders) {\r\n        this._logger = logger;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n        this._logMessageContent = logMessageContent;\r\n        this._webSocketConstructor = webSocketConstructor;\r\n        this._httpClient = httpClient;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n        this._headers = headers;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) Connecting.\");\r\n\r\n        let token: string;\r\n        if (this._accessTokenFactory) {\r\n            token = await this._accessTokenFactory();\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            url = url.replace(/^http/, \"ws\");\r\n            let webSocket: WebSocket | undefined;\r\n            const cookies = this._httpClient.getCookieString(url);\r\n            let opened = false;\r\n\r\n            if (Platform.isNode || Platform.isReactNative) {\r\n                const headers: {[k: string]: string} = {};\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n                if (token) {\r\n                    headers[HeaderNames.Authorization] = `Bearer ${token}`;\r\n                }\r\n\r\n                if (cookies) {\r\n                    headers[HeaderNames.Cookie] = cookies;\r\n                }\r\n\r\n                // Only pass headers when in non-browser environments\r\n                webSocket = new this._webSocketConstructor(url, undefined, {\r\n                    headers: { ...headers, ...this._headers },\r\n                });\r\n            }\r\n            else\r\n            {\r\n                if (token) {\r\n                    url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(token)}`;\r\n                }\r\n            }\r\n\r\n            if (!webSocket) {\r\n                // Chrome is not happy with passing 'undefined' as protocol\r\n                webSocket = new this._webSocketConstructor(url);\r\n            }\r\n\r\n            if (transferFormat === TransferFormat.Binary) {\r\n                webSocket.binaryType = \"arraybuffer\";\r\n            }\r\n\r\n            webSocket.onopen = (_event: Event) => {\r\n                this._logger.log(LogLevel.Information, `WebSocket connected to ${url}.`);\r\n                this._webSocket = webSocket;\r\n                opened = true;\r\n                resolve();\r\n            };\r\n\r\n            webSocket.onerror = (event: Event) => {\r\n                let error: any = null;\r\n                // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                    error = event.error;\r\n                } else {\r\n                    error = \"There was an error with the transport\";\r\n                }\r\n\r\n                this._logger.log(LogLevel.Information, `(WebSockets transport) ${error}.`);\r\n            };\r\n\r\n            webSocket.onmessage = (message: MessageEvent) => {\r\n                this._logger.log(LogLevel.Trace, `(WebSockets transport) data received. ${getDataDetail(message.data, this._logMessageContent)}.`);\r\n                if (this.onreceive) {\r\n                    try {\r\n                        this.onreceive(message.data);\r\n                    } catch (error) {\r\n                        this._close(error);\r\n                        return;\r\n                    }\r\n                }\r\n            };\r\n\r\n            webSocket.onclose = (event: CloseEvent) => {\r\n                // Don't call close handler if connection was never established\r\n                // We'll reject the connect call instead\r\n                if (opened) {\r\n                    this._close(event);\r\n                } else {\r\n                    let error: any = null;\r\n                    // ErrorEvent is a browser only type we need to check if the type exists before using it\r\n                    if (typeof ErrorEvent !== \"undefined\" && event instanceof ErrorEvent) {\r\n                        error = event.error;\r\n                    } else {\r\n                        error = \"WebSocket failed to connect. The connection could not be found on the server,\"\r\n                        + \" either the endpoint may not be a SignalR endpoint,\"\r\n                        + \" the connection ID is not present on the server, or there is a proxy blocking WebSockets.\"\r\n                        + \" If you have multiple servers check that sticky sessions are enabled.\";\r\n                    }\r\n\r\n                    reject(new Error(error));\r\n                }\r\n            };\r\n        });\r\n    }\r\n\r\n    public send(data: any): Promise<void> {\r\n        if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {\r\n            this._logger.log(LogLevel.Trace, `(WebSockets transport) sending data. ${getDataDetail(data, this._logMessageContent)}.`);\r\n            this._webSocket.send(data);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        return Promise.reject(\"WebSocket is not in the OPEN state\");\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        if (this._webSocket) {\r\n            // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning\r\n            // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects\r\n            this._close(undefined);\r\n        }\r\n\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _close(event: CloseEvent | Error | unknown): void {\r\n        // webSocket will be null if the transport did not start successfully\r\n        if (this._webSocket) {\r\n            // Clear websocket handlers because we are considering the socket closed now\r\n            this._webSocket.onclose = () => {};\r\n            this._webSocket.onmessage = () => {};\r\n            this._webSocket.onerror = () => {};\r\n            this._webSocket.close();\r\n            this._webSocket = undefined;\r\n        }\r\n\r\n        this._logger.log(LogLevel.Trace, \"(WebSockets transport) socket closed.\");\r\n\r\n        if (this.onclose) {\r\n            if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {\r\n                this.onclose(new Error(`WebSocket closed with status code: ${event.code} (${event.reason || \"no reason given\"}).`));\r\n            } else if (event instanceof Error) {\r\n                this.onclose(event);\r\n            } else {\r\n                this.onclose();\r\n            }\r\n        }\r\n    }\r\n\r\n    private _isCloseEvent(event?: any): event is CloseEvent {\r\n        return event && typeof event.wasClean === \"boolean\" && typeof event.code === \"number\";\r\n    }\r\n}\r\n","export class Group{\r\n    id:number;\r\n    groupName:string;\r\n}","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router } from \"@angular/router\";\r\nimport { AuthService } from \"../components/admin/login/Services/auth.service\";\r\nimport { AlertifyService } from \"../services/alertify.service\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ClaimGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router,\r\n    private alertifyService: AlertifyService\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot): boolean {\r\n    const expectedClaim = route.data['claim'] as string;\r\n    \r\n    if (!expectedClaim) {\r\n      return true; // If no claim is specified, allow access\r\n    }\r\n\r\n    if (this.authService.claimGuard(expectedClaim)) {\r\n    \r\n      return true;\r\n    }\r\n\r\n \r\n    this.router.navigate(['/dashboard']);       \r\n    return false;\r\n  }\r\n}","export default \"<div class=\\\"container-fluid\\\" style=\\\"padding-top: 35px;\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <div class=\\\"card-header card-header-primary\\\">\\r\\n        <h4 class=\\\"card-title\\\">Ziyaret Talebi</h4>\\r\\n        <p class=\\\"card-category\\\">Ziyaret Talebi</p>\\r\\n      </div>\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <!-- Tab Butonları -->\\r\\n        <div class=\\\"date-tabs\\\">\\r\\n          <button mat-button \\r\\n                  [class.active]=\\\"selectedTab === 'vehicle'\\\"\\r\\n                  (click)=\\\"switchTab('vehicle')\\\">\\r\\n            <mat-icon>directions_car</mat-icon>\\r\\n            <span>Araç</span>\\r\\n          </button>\\r\\n          <button mat-button \\r\\n                  [class.active]=\\\"selectedTab === 'pedestrian'\\\"\\r\\n                  (click)=\\\"switchTab('pedestrian')\\\">\\r\\n            <mat-icon>directions_walk</mat-icon>\\r\\n            <span>Yaya</span>\\r\\n          </button>\\r\\n        </div>\\r\\n\\r\\n        <!-- Ziyaretçi Formu -->\\r\\n        <div class=\\\"visitor-form\\\" [ngSwitch]=\\\"selectedTab\\\">\\r\\n          \\r\\n          <!-- Araçlı Ziyaretçi Formu -->\\r\\n          <div *ngSwitchCase=\\\"'vehicle'\\\" class=\\\"mt-4\\\">\\r\\n            <form #vehicleForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveVisit(true)\\\">\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                  <mat-label>Araç Plakası</mat-label>\\r\\n                  <input matInput [(ngModel)]=\\\"vehicleData.plate\\\" name=\\\"plate\\\" required>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <!-- Tarih Alanları -->\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label>Giriş Tarihi</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"startDatePicker\\\" \\r\\n                           [(ngModel)]=\\\"vehicleData.visitStartDate\\\" \\r\\n                           name=\\\"visitStartDate\\\"\\r\\n                           (dateChange)=\\\"onStartDateChange()\\\" \\r\\n                           [matDatepickerFilter]=\\\"dateFilter\\\"\\r\\n                           required>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label>Çıkış Tarihi</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"endDatePicker\\\" \\r\\n                           [(ngModel)]=\\\"vehicleData.visitEndDate\\\" \\r\\n                           name=\\\"visitEndDate\\\"\\r\\n                           (dateChange)=\\\"onEndDateChange()\\\" \\r\\n                           [min]=\\\"vehicleData.visitStartDate\\\"\\r\\n                           required>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- Ziyaretçi Listesi -->\\r\\n              <div class=\\\"visitors-list\\\">\\r\\n                <div *ngFor=\\\"let visitor of vehicleVisitors; let i = index\\\" class=\\\"visitor-item mb-3\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label>{{ i === 0 ? 'Ana Ziyaretçi' : 'Ek Ziyaretçi ' + i }}</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"visitor.name\\\" [name]=\\\"'visitor' + i\\\" required>\\r\\n                    <button mat-icon-button matSuffix color=\\\"warn\\\" \\r\\n                            (click)=\\\"removeVisitor(i)\\\" \\r\\n                            *ngIf=\\\"i !== 0\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- Ziyaretçi Ekle Butonu -->\\r\\n              <div class=\\\"text-right mb-3\\\">\\r\\n                <button mat-mini-fab color=\\\"primary\\\" \\r\\n                        type=\\\"button\\\"\\r\\n                        (click)=\\\"addVisitor()\\\"\\r\\n                        matTooltip=\\\"Ek Ziyaretçi Ekle\\\">\\r\\n                  <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n\\r\\n              <!-- Kaydet Butonu -->\\r\\n              <button mat-raised-button color=\\\"primary\\\" \\r\\n                      class=\\\"w-100\\\" \\r\\n                      [disabled]=\\\"!vehicleForm.valid\\\"\\r\\n                      type=\\\"submit\\\">\\r\\n                Kaydet\\r\\n              </button>\\r\\n            </form>\\r\\n          </div>\\r\\n\\r\\n          <!-- Yaya Ziyaretçi Formu -->\\r\\n          <div *ngSwitchCase=\\\"'pedestrian'\\\" class=\\\"mt-4\\\">\\r\\n            <form #pedestrianForm=\\\"ngForm\\\" (ngSubmit)=\\\"saveVisit(false)\\\">\\r\\n              <!-- Tarih Alanları -->\\r\\n              <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label>Giriş Tarihi</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"pedStartDatePicker\\\" \\r\\n                           [(ngModel)]=\\\"vehicleData.visitStartDate\\\" \\r\\n                           name=\\\"visitStartDate\\\"\\r\\n                           (dateChange)=\\\"onStartDateChange()\\\" \\r\\n                           [matDatepickerFilter]=\\\"dateFilter\\\"\\r\\n                           required>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"pedStartDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #pedStartDatePicker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-6\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label>Çıkış Tarihi</mat-label>\\r\\n                    <input matInput [matDatepicker]=\\\"pedEndDatePicker\\\" \\r\\n                           [(ngModel)]=\\\"vehicleData.visitEndDate\\\" \\r\\n                           name=\\\"visitEndDate\\\"\\r\\n                           (dateChange)=\\\"onEndDateChange()\\\" \\r\\n                           [min]=\\\"vehicleData.visitStartDate\\\"\\r\\n                           required>\\r\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"pedEndDatePicker\\\"></mat-datepicker-toggle>\\r\\n                    <mat-datepicker #pedEndDatePicker></mat-datepicker>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- Yaya Ziyaretçi Listesi -->\\r\\n              <div class=\\\"visitors-list\\\">\\r\\n                <div *ngFor=\\\"let visitor of pedestrianVisitors; let i = index\\\" class=\\\"visitor-item mb-3\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n                    <mat-label>{{ i === 0 ? 'Ana Ziyaretçi' : 'Ek Ziyaretçi ' + i }}</mat-label>\\r\\n                    <input matInput [(ngModel)]=\\\"visitor.name\\\" [name]=\\\"'visitor' + i\\\" required>\\r\\n                    <button mat-icon-button matSuffix color=\\\"warn\\\" \\r\\n                            (click)=\\\"removePedestrianVisitor(i)\\\" \\r\\n                            *ngIf=\\\"i !== 0\\\">\\r\\n                      <mat-icon>delete</mat-icon>\\r\\n                    </button>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\r\\n              <!-- Ziyaretçi Ekle Butonu -->\\r\\n              <div class=\\\"text-right mb-3\\\">\\r\\n                <button mat-mini-fab color=\\\"primary\\\" \\r\\n                        type=\\\"button\\\"\\r\\n                        (click)=\\\"addPedestrianVisitor()\\\"\\r\\n                        matTooltip=\\\"Ek Ziyaretçi Ekle\\\">\\r\\n                  <mat-icon>add</mat-icon>\\r\\n                </button>\\r\\n              </div>\\r\\n\\r\\n              <!-- Kaydet Butonu -->\\r\\n              <button mat-raised-button color=\\\"primary\\\" \\r\\n                      class=\\\"w-100\\\" \\r\\n                      [disabled]=\\\"!pedestrianForm.valid\\\"\\r\\n                      type=\\\"submit\\\">\\r\\n                Kaydet\\r\\n              </button>\\r\\n            </form>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n</div>\";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpTransportType } from \"./ITransport\";\r\n\r\n/** Error thrown when an HTTP request fails. */\r\nexport class HttpError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The HTTP status code represented by this error. */\r\n    public statusCode: number;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     * @param {number} statusCode The HTTP status code represented by this error.\r\n     */\r\n    constructor(errorMessage: string, statusCode: number) {\r\n        const trueProto = new.target.prototype;\r\n        super(`${errorMessage}: Status code '${statusCode}'`);\r\n        this.statusCode = statusCode;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when a timeout elapses. */\r\nexport class TimeoutError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"A timeout occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when an action is aborted. */\r\nexport class AbortError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** Constructs a new instance of {@link AbortError}.\r\n     *\r\n     * @param {string} errorMessage A descriptive error message.\r\n     */\r\n    constructor(errorMessage: string = \"An abort occurred.\") {\r\n        const trueProto = new.target.prototype;\r\n        super(errorMessage);\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport is unsupported by the browser. */\r\n/** @private */\r\nexport class UnsupportedTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occurred on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'UnsupportedTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport is disabled by the browser. */\r\n/** @private */\r\nexport class DisabledTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occurred on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'DisabledTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the selected transport cannot be started. */\r\n/** @private */\r\nexport class FailedToStartTransportError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The {@link @microsoft/signalr.HttpTransportType} this error occurred on. */\r\n    public transport: HttpTransportType;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.\r\n     */\r\n    constructor(message: string, transport: HttpTransportType) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.transport = transport;\r\n        this.errorType = 'FailedToStartTransportError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when the negotiation with the server failed to complete. */\r\n/** @private */\r\nexport class FailedToNegotiateWithServerError extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The type name of this error. */\r\n    public errorType: string;\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     */\r\n    constructor(message: string) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n        this.errorType = 'FailedToNegotiateWithServerError';\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n\r\n/** Error thrown when multiple errors have occurred. */\r\n/** @private */\r\nexport class AggregateErrors extends Error {\r\n    // @ts-ignore: Intentionally unused.\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private __proto__: Error;\r\n\r\n    /** The collection of errors this error is aggregating. */\r\n    public innerErrors: Error[];\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.\r\n     *\r\n     * @param {string} message A descriptive error message.\r\n     * @param {Error[]} innerErrors The collection of errors this error is aggregating.\r\n     */\r\n    constructor(message: string, innerErrors: Error[]) {\r\n        const trueProto = new.target.prototype;\r\n        super(message);\r\n\r\n        this.innerErrors = innerErrors;\r\n\r\n        // Workaround issue in Typescript compiler\r\n        // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200\r\n        this.__proto__ = trueProto;\r\n    }\r\n}\r\n","\r\nexport class MultiVisiters{\r\n    id?:string; \r\ncreatedDate?:(Date | any); \r\nvisitId?:string; \r\nvisitorFullName?:string; \r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Translate } from '../models/Translate';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TranslateService {\r\n\r\n  constructor(private readonly _httpClient: HttpClient) { }\r\n\r\n\r\n  getTranslateList(): Observable<Translate[]> {\r\n\r\n    return this._httpClient.get<Translate[]>(environment.getApiUrl + '/translates/dtos')\r\n  }\r\n\r\n  getTranslate(id: number): Observable<Translate> {\r\n    return this._httpClient.get<Translate>(environment.getApiUrl + `/translates/${id}`)\r\n  }\r\n\r\n  addTranslate(translate: Translate): Observable<any> {\r\n\r\n    return this._httpClient.post(environment.getApiUrl + '/translates/', translate, { responseType: 'text' });\r\n  }\r\n\r\n  updateTranslate(translate: Translate): Observable<any> {\r\n    return this._httpClient.put(environment.getApiUrl + '/translates/', translate, { responseType: 'text' });\r\n\r\n  }\r\n\r\n  deleteTranslate(id: number) {\r\n    return this._httpClient.request('delete', environment.getApiUrl + `/translates/${id}`);\r\n  }\r\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption} from '@angular/cdk/a11y';\nimport {BooleanInput, coerceBooleanProperty, NumberInput} from '@angular/cdk/coercion';\nimport {BACKSPACE, DELETE, SPACE} from '@angular/cdk/keycodes';\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  Attribute,\n  ChangeDetectorRef,\n  ContentChild,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinColor,\n  mixinDisableRipple,\n  mixinTabIndex,\n  RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\n\n/** Represents an event fired on an individual `mat-chip`. */\nexport interface MatChipEvent {\n  /** The chip the event was fired on. */\n  chip: MatChip;\n}\n\n/** Event object emitted by MatChip when selected or deselected. */\nexport class MatChipSelectionChange {\n  constructor(\n    /** Reference to the chip that emitted the event. */\n    public source: MatChip,\n    /** Whether the chip that emitted the event is selected. */\n    public selected: boolean,\n    /** Whether the selection change was a result of a user interaction. */\n    public isUserInput = false) { }\n}\n\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_CHIP_REMOVE = new InjectionToken<MatChipRemove>('MatChipRemove');\n\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_CHIP_AVATAR = new InjectionToken<MatChipAvatar>('MatChipAvatar');\n\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_CHIP_TRAILING_ICON =\n    new InjectionToken<MatChipTrailingIcon>('MatChipTrailingIcon');\n\n// Boilerplate for applying mixins to MatChip.\n/** @docs-private */\nabstract class MatChipBase {\n  abstract disabled: boolean;\n  constructor(public _elementRef: ElementRef) {}\n}\n\nconst _MatChipMixinBase: CanColorCtor & CanDisableRippleCtor &\n    HasTabIndexCtor & typeof MatChipBase =\n      mixinTabIndex(mixinColor(mixinDisableRipple(MatChipBase), 'primary'), -1);\n\n/**\n * Dummy directive to add CSS class to chip avatar.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-avatar, [matChipAvatar]',\n  host: {'class': 'mat-chip-avatar'},\n  providers: [{provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar}]\n})\nexport class MatChipAvatar {}\n\n/**\n * Dummy directive to add CSS class to chip trailing icon.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n  host: {'class': 'mat-chip-trailing-icon'},\n  providers: [{provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon}],\n})\nexport class MatChipTrailingIcon {}\n\n\n/**\n * Material design styled Chip component. Used inside the MatChipList component.\n */\n@Directive({\n  selector: `mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]`,\n  inputs: ['color', 'disableRipple', 'tabIndex'],\n  exportAs: 'matChip',\n  host: {\n    'class': 'mat-chip mat-focus-indicator',\n    '[attr.tabindex]': 'disabled ? null : tabIndex',\n    'role': 'option',\n    '[class.mat-chip-selected]': 'selected',\n    '[class.mat-chip-with-avatar]': 'avatar',\n    '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',\n    '[class.mat-chip-disabled]': 'disabled',\n    '[class._mat-animation-noopable]': '_animationsDisabled',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-selected]': 'ariaSelected',\n    '(click)': '_handleClick($event)',\n    '(keydown)': '_handleKeydown($event)',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n  },\n})\nexport class MatChip extends _MatChipMixinBase implements FocusableOption, OnDestroy, CanColor,\n  CanDisableRipple, RippleTarget, HasTabIndex {\n\n  /** Reference to the RippleRenderer for the chip. */\n  private _chipRipple: RippleRenderer;\n\n  /**\n   * Reference to the element that acts as the chip's ripple target. This element is\n   * dynamically added as a child node of the chip. The chip itself cannot be used as the\n   * ripple target because it must be the host of the focus indicator.\n   */\n  private _chipRippleTarget: HTMLElement;\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the chip ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;\n  }\n\n  /** Whether the chip has focus. */\n  _hasFocus: boolean = false;\n\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled: boolean;\n\n  /** Whether the chip list is selectable */\n  chipListSelectable: boolean = true;\n\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple: boolean = false;\n\n  /** Whether the chip list as a whole is disabled. */\n  _chipListDisabled: boolean = false;\n\n  /** The chip avatar */\n  @ContentChild(MAT_CHIP_AVATAR) avatar: MatChipAvatar;\n\n  /** The chip's trailing icon. */\n  @ContentChild(MAT_CHIP_TRAILING_ICON) trailingIcon: MatChipTrailingIcon;\n\n  /** The chip's remove toggler. */\n  @ContentChild(MAT_CHIP_REMOVE) removeIcon: MatChipRemove;\n\n  /** Whether the chip is selected. */\n  @Input()\n  get selected(): boolean { return this._selected; }\n  set selected(value: boolean) {\n    const coercedValue = coerceBooleanProperty(value);\n\n    if (coercedValue !== this._selected) {\n      this._selected = coercedValue;\n      this._dispatchSelectionChange();\n    }\n  }\n  protected _selected: boolean = false;\n\n  /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */\n  @Input()\n  get value(): any {\n    return this._value !== undefined\n      ? this._value\n      : this._elementRef.nativeElement.textContent;\n  }\n  set value(value: any) { this._value = value; }\n  protected _value: any;\n\n  /**\n   * Whether or not the chip is selectable. When a chip is not selectable,\n   * changes to its selected state are always ignored. By default a chip is\n   * selectable, and it becomes non-selectable if its parent chip list is\n   * not selectable.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable && this.chipListSelectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n  }\n  protected _selectable: boolean = true;\n\n  /** Whether the chip is disabled. */\n  @Input()\n  get disabled(): boolean { return this._chipListDisabled || this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  protected _disabled: boolean = false;\n\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  @Input()\n  get removable(): boolean { return this._removable; }\n  set removable(value: boolean) {\n    this._removable = coerceBooleanProperty(value);\n  }\n  protected _removable: boolean = true;\n\n  /** Emits when the chip is focused. */\n  readonly _onFocus = new Subject<MatChipEvent>();\n\n  /** Emits when the chip is blured. */\n  readonly _onBlur = new Subject<MatChipEvent>();\n\n  /** Emitted when the chip is selected or deselected. */\n  @Output() readonly selectionChange: EventEmitter<MatChipSelectionChange> =\n      new EventEmitter<MatChipSelectionChange>();\n\n  /** Emitted when the chip is destroyed. */\n  @Output() readonly destroyed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** Emitted when a chip is to be removed. */\n  @Output() readonly removed: EventEmitter<MatChipEvent> = new EventEmitter<MatChipEvent>();\n\n  /** The ARIA selected applied to the chip. */\n  get ariaSelected(): string | null {\n    // Remove the `aria-selected` when the chip is deselected in single-selection mode, because\n    // it adds noise to NVDA users where \"not selected\" will be read out for each chip.\n    return this.selectable && (this._chipListMultiple || this.selected) ?\n        this.selected.toString() : null;\n  }\n\n  constructor(public _elementRef: ElementRef<HTMLElement>,\n              private _ngZone: NgZone,\n              platform: Platform,\n              @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS)\n              globalRippleOptions: RippleGlobalOptions | null,\n              // @breaking-change 8.0.0 `animationMode` parameter to become required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string,\n              // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.\n              private _changeDetectorRef?: ChangeDetectorRef,\n              @Attribute('tabindex') tabIndex?: string,\n              // @breaking-change 11.0.0 `_document` parameter to become required.\n              @Optional() @Inject(DOCUMENT) _document?: any) {\n    super(_elementRef);\n\n    this._addHostClassName();\n\n    // Dynamically create the ripple target, append it within the chip, and use it as the\n    // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have\n    // the proper styles.\n    this._chipRippleTarget = (_document || document).createElement('div');\n    this._chipRippleTarget.classList.add('mat-chip-ripple');\n    this._elementRef.nativeElement.appendChild(this._chipRippleTarget);\n    this._chipRipple = new RippleRenderer(this, _ngZone, this._chipRippleTarget, platform);\n    this._chipRipple.setupTriggerEvents(_elementRef);\n\n    this.rippleConfig = globalRippleOptions || {};\n    this._animationsDisabled = animationMode === 'NoopAnimations';\n    this.tabIndex = tabIndex != null ? (parseInt(tabIndex) || -1) : -1;\n  }\n\n  _addHostClassName() {\n    const basicChipAttrName = 'mat-basic-chip';\n    const element = this._elementRef.nativeElement as HTMLElement;\n\n    if (element.hasAttribute(basicChipAttrName) ||\n        element.tagName.toLowerCase() === basicChipAttrName) {\n      element.classList.add(basicChipAttrName);\n      return;\n    } else {\n      element.classList.add('mat-standard-chip');\n    }\n  }\n\n  ngOnDestroy() {\n    this.destroyed.emit({chip: this});\n    this._chipRipple._removeTriggerEvents();\n  }\n\n  /** Selects the chip. */\n  select(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange();\n      this._markForCheck();\n    }\n  }\n\n  /** Deselects the chip. */\n  deselect(): void {\n    if (this._selected) {\n      this._selected = false;\n      this._dispatchSelectionChange();\n      this._markForCheck();\n    }\n  }\n\n  /** Select this chip and emit selected event */\n  selectViaInteraction(): void {\n    if (!this._selected) {\n      this._selected = true;\n      this._dispatchSelectionChange(true);\n      this._markForCheck();\n    }\n  }\n\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput: boolean = false): boolean {\n    this._selected = !this.selected;\n    this._dispatchSelectionChange(isUserInput);\n    this._markForCheck();\n    return this.selected;\n  }\n\n  /** Allows for programmatic focusing of the chip. */\n  focus(): void {\n    if (!this._hasFocus) {\n      this._elementRef.nativeElement.focus();\n      this._onFocus.next({chip: this});\n    }\n    this._hasFocus = true;\n  }\n\n  /**\n   * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or\n   * BACKSPACE keys are pressed.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove(): void {\n    if (this.removable) {\n      this.removed.emit({chip: this});\n    }\n  }\n\n  /** Handles click events on the chip. */\n  _handleClick(event: Event) {\n    if (this.disabled) {\n      event.preventDefault();\n    } else {\n      event.stopPropagation();\n    }\n  }\n\n  /** Handle custom key presses. */\n  _handleKeydown(event: KeyboardEvent): void {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case DELETE:\n      case BACKSPACE:\n        // If we are removable, remove the focused chip\n        this.remove();\n        // Always prevent so page navigation does not occur\n        event.preventDefault();\n        break;\n      case SPACE:\n        // If we are selectable, toggle the focused chip\n        if (this.selectable) {\n          this.toggleSelected(true);\n        }\n\n        // Always prevent space from scrolling the page since the list has focus\n        event.preventDefault();\n        break;\n    }\n  }\n\n  _blur(): void {\n    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n    // that moves focus not the next item. To work around the issue, we defer marking the chip\n    // as not focused until the next time the zone stabilizes.\n    this._ngZone.onStable\n      .pipe(take(1))\n      .subscribe(() => {\n        this._ngZone.run(() => {\n          this._hasFocus = false;\n          this._onBlur.next({chip: this});\n        });\n      });\n  }\n\n  private _dispatchSelectionChange(isUserInput = false) {\n    this.selectionChange.emit({\n      source: this,\n      isUserInput,\n      selected: this._selected\n    });\n  }\n\n  private _markForCheck() {\n    // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  static ngAcceptInputType_selected: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n  static ngAcceptInputType_removable: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n\n/**\n * Applies proper (click) support and adds styling for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n *     `<mat-chip>\n *       <mat-icon matChipRemove>cancel</mat-icon>\n *     </mat-chip>`\n *\n * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning\n * styles to properly center the icon within the chip.\n */\n@Directive({\n  selector: '[matChipRemove]',\n  host: {\n    'class': 'mat-chip-remove mat-chip-trailing-icon',\n    '(click)': '_handleClick($event)',\n  },\n  providers: [{provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove}],\n})\nexport class MatChipRemove {\n  constructor(\n    protected _parentChip: MatChip,\n    // @breaking-change 11.0.0 `elementRef` parameter to be made required.\n    elementRef?: ElementRef<HTMLElement>) {\n\n      // @breaking-change 11.0.0 Remove null check for `elementRef`.\n    if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {\n      elementRef.nativeElement.setAttribute('type', 'button');\n    }\n   }\n\n  /** Calls the parent chip's public `remove()` method if applicable. */\n  _handleClick(event: Event): void {\n    const parentChip = this._parentChip;\n\n    if (parentChip.removable && !parentChip.disabled) {\n      parentChip.remove();\n    }\n\n    // We need to stop event propagation because otherwise the event will bubble up to the\n    // form field and cause the `onContainerClick` method to be invoked. This method would then\n    // reset the focused chip that has been focused after chip removal. Usually the parent\n    // the parent click listener of the `MatChip` would prevent propagation, but it can happen\n    // that the chip is being removed before the event bubbles up.\n    event.stopPropagation();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/** Default options, for the chips module, that can be overridden. */\nexport interface MatChipsDefaultOptions {\n  /** The list of key codes that will trigger a chipEnd event. */\n  separatorKeyCodes: readonly number[] | ReadonlySet<number>;\n}\n\n/** Injection token to be used to override the default options for the chips module. */\nexport const MAT_CHIPS_DEFAULT_OPTIONS =\n    new InjectionToken<MatChipsDefaultOptions>('mat-chips-default-options');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusKeyManager} from '@angular/cdk/a11y';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {BACKSPACE} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  Output,\n  QueryList,\n  Self,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {ControlValueAccessor, FormGroupDirective, NgControl, NgForm} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  ErrorStateMatcher,\n  mixinErrorState,\n} from '@angular/material/core';\nimport {MatFormFieldControl} from '@angular/material/form-field';\nimport {merge, Observable, Subject, Subscription} from 'rxjs';\nimport {startWith, takeUntil} from 'rxjs/operators';\nimport {MatChip, MatChipEvent, MatChipSelectionChange} from './chip';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n// Boilerplate for applying mixins to MatChipList.\n/** @docs-private */\nclass MatChipListBase {\n  constructor(public _defaultErrorStateMatcher: ErrorStateMatcher,\n              public _parentForm: NgForm,\n              public _parentFormGroup: FormGroupDirective,\n              /** @docs-private */\n              public ngControl: NgControl) {}\n}\nconst _MatChipListMixinBase: CanUpdateErrorStateCtor & typeof MatChipListBase =\n    mixinErrorState(MatChipListBase);\n\n\n// Increasing integer for generating unique ids for chip-list components.\nlet nextUniqueId = 0;\n\n/** Change event object that is emitted when the chip list value has changed. */\nexport class MatChipListChange {\n  constructor(\n    /** Chip list that emitted the event. */\n    public source: MatChipList,\n    /** Value of the chip list when the event was emitted. */\n    public value: any) { }\n}\n\n\n/**\n * A material design chips component (named ChipList for its similarity to the List component).\n */\n@Component({\n  selector: 'mat-chip-list',\n  template: `<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>`,\n  exportAs: 'matChipList',\n  host: {\n    '[attr.tabindex]': 'disabled ? null : _tabIndex',\n    '[attr.aria-describedby]': '_ariaDescribedby || null',\n    '[attr.aria-required]': 'role ? required : null',\n    '[attr.aria-disabled]': 'disabled.toString()',\n    '[attr.aria-invalid]': 'errorState',\n    '[attr.aria-multiselectable]': 'multiple',\n    '[attr.role]': 'role',\n    '[class.mat-chip-list-disabled]': 'disabled',\n    '[class.mat-chip-list-invalid]': 'errorState',\n    '[class.mat-chip-list-required]': 'required',\n    '[attr.aria-orientation]': 'ariaOrientation',\n    'class': 'mat-chip-list',\n    '(focus)': 'focus()',\n    '(blur)': '_blur()',\n    '(keydown)': '_keydown($event)',\n    '[id]': '_uid',\n  },\n  providers: [{provide: MatFormFieldControl, useExisting: MatChipList}],\n  styleUrls: ['chips.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatChipList extends _MatChipListMixinBase implements MatFormFieldControl<any>,\n  ControlValueAccessor, AfterContentInit, DoCheck, OnInit, OnDestroy, CanUpdateErrorState {\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  readonly controlType: string = 'mat-chip-list';\n\n  /**\n   * When a chip is destroyed, we store the index of the destroyed chip until the chips\n   * query list notifies about the update. This is necessary because we cannot determine an\n   * appropriate chip that should receive focus until the array of chips updated completely.\n   */\n  private _lastDestroyedChipIndex: number | null = null;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _destroyed = new Subject<void>();\n\n  /** Subscription to focus changes in the chips. */\n  private _chipFocusSubscription: Subscription | null;\n\n  /** Subscription to blur changes in the chips. */\n  private _chipBlurSubscription: Subscription | null;\n\n  /** Subscription to selection changes in chips. */\n  private _chipSelectionSubscription: Subscription | null;\n\n  /** Subscription to remove changes in chips. */\n  private _chipRemoveSubscription: Subscription | null;\n\n  /** The chip input to add more chips */\n  protected _chipInput: MatChipTextControl;\n\n  /** Uid of the chip list */\n  _uid: string = `mat-chip-list-${nextUniqueId++}`;\n\n  /** The aria-describedby attribute on the chip list for improved a11y. */\n  _ariaDescribedby: string;\n\n  /** Tab index for the chip list. */\n  _tabIndex = 0;\n\n  /**\n   * User defined tab index.\n   * When it is not null, use user defined tab index. Otherwise use _tabIndex\n   */\n  _userTabIndex: number | null = null;\n\n  /** The FocusKeyManager which handles focus. */\n  _keyManager: FocusKeyManager<MatChip>;\n\n  /** Function when touched */\n  _onTouched = () => {};\n\n  /** Function when changed */\n  _onChange: (value: any) => void = () => {};\n\n  _selectionModel: SelectionModel<MatChip>;\n\n  /** The array of selected chips inside chip list. */\n  get selected(): MatChip[] | MatChip {\n    return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];\n  }\n\n  /** The ARIA role applied to the chip list. */\n  get role(): string | null { return this.empty ? null : 'listbox'; }\n\n  /** An object used to control when error messages are shown. */\n  @Input() errorStateMatcher: ErrorStateMatcher;\n\n  /** Whether the user should be allowed to select multiple chips. */\n  @Input()\n  get multiple(): boolean { return this._multiple; }\n  set multiple(value: boolean) {\n    this._multiple = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  private _multiple: boolean = false;\n\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  @Input()\n  get compareWith(): (o1: any, o2: any) => boolean { return this._compareWith; }\n  set compareWith(fn: (o1: any, o2: any) => boolean) {\n    this._compareWith = fn;\n    if (this._selectionModel) {\n      // A different comparator means the selection could change.\n      this._initializeSelection();\n    }\n  }\n  private _compareWith = (o1: any, o2: any) => o1 === o2;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get value(): any { return this._value; }\n  set value(value: any) {\n    this.writeValue(value);\n    this._value = value;\n  }\n  protected _value: any;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id(): string {\n    return this._chipInput ? this._chipInput.id : this._uid;\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n    this.stateChanges.next();\n  }\n  protected _required: boolean = false;\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get placeholder(): string {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value: string) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  protected _placeholder: string;\n\n  /** Whether any chips or the matChipInput inside of this chip-list has focus. */\n  get focused(): boolean {\n    return (this._chipInput && this._chipInput.focused) || this._hasFocusedChip();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty(): boolean {\n    return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat(): boolean { return !this.empty || this.focused; }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  @Input()\n  get disabled(): boolean { return this.ngControl ? !!this.ngControl.disabled : this._disabled; }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n    this._syncChipsState();\n  }\n  protected _disabled: boolean = false;\n\n  /** Orientation of the chip list. */\n  @Input('aria-orientation') ariaOrientation: 'horizontal' | 'vertical' = 'horizontal';\n\n  /**\n   * Whether or not this chip list is selectable. When a chip list is not selectable,\n   * the selected states for all the chips inside the chip list are always ignored.\n   */\n  @Input()\n  get selectable(): boolean { return this._selectable; }\n  set selectable(value: boolean) {\n    this._selectable = coerceBooleanProperty(value);\n\n    if (this.chips) {\n      this.chips.forEach(chip => chip.chipListSelectable = this._selectable);\n    }\n  }\n  protected _selectable: boolean = true;\n\n  @Input()\n  set tabIndex(value: number) {\n    this._userTabIndex = value;\n    this._tabIndex = value;\n  }\n\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges(): Observable<MatChipSelectionChange> {\n    return merge(...this.chips.map(chip => chip.selectionChange));\n  }\n\n  /** Combined stream of all of the child chips' focus change events. */\n  get chipFocusChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onFocus));\n  }\n\n  /** Combined stream of all of the child chips' blur change events. */\n  get chipBlurChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip._onBlur));\n  }\n\n  /** Combined stream of all of the child chips' remove change events. */\n  get chipRemoveChanges(): Observable<MatChipEvent> {\n    return merge(...this.chips.map(chip => chip.destroyed));\n  }\n\n  /** Event emitted when the selected chip list value has been changed by the user. */\n  @Output() readonly change: EventEmitter<MatChipListChange> =\n      new EventEmitter<MatChipListChange>();\n\n  /**\n   * Event that emits whenever the raw value of the chip-list changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  @Output() readonly valueChange: EventEmitter<any> = new EventEmitter<any>();\n\n  /** The chip components contained within this chip list. */\n  @ContentChildren(MatChip, {\n    // We need to use `descendants: true`, because Ivy will no longer match\n    // indirect descendants if it's left as false.\n    descendants: true\n  }) chips: QueryList<MatChip>;\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() private _dir: Directionality,\n              @Optional() _parentForm: NgForm,\n              @Optional() _parentFormGroup: FormGroupDirective,\n              _defaultErrorStateMatcher: ErrorStateMatcher,\n              /** @docs-private */\n              @Optional() @Self() public ngControl: NgControl) {\n    super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n  }\n\n  ngAfterContentInit() {\n    this._keyManager = new FocusKeyManager<MatChip>(this.chips)\n      .withWrap()\n      .withVerticalOrientation()\n      .withHomeAndEnd()\n      .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');\n\n    if (this._dir) {\n      this._dir.change\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(dir => this._keyManager.withHorizontalOrientation(dir));\n    }\n\n    this._keyManager.tabOut.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._allowFocusEscape();\n    });\n\n    // When the list changes, re-subscribe\n    this.chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => {\n          this._syncChipsState();\n        });\n      }\n\n      this._resetChips();\n\n      // Reset chips selected/deselected status\n      this._initializeSelection();\n\n      // Check to see if we need to update our tab index\n      this._updateTabIndex();\n\n      // Check to see if we have a destroyed chip and need to refocus\n      this._updateFocusForDestroyedChips();\n\n      this.stateChanges.next();\n    });\n  }\n\n  ngOnInit() {\n    this._selectionModel = new SelectionModel<MatChip>(this.multiple, undefined, false);\n    this.stateChanges.next();\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n\n      if (this.ngControl.disabled !== this._disabled) {\n        this.disabled = !!this.ngControl.disabled;\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this.stateChanges.complete();\n\n    this._dropSubscriptions();\n  }\n\n\n  /** Associates an HTML input element with this chip list. */\n  registerInput(inputElement: MatChipTextControl): void {\n    this._chipInput = inputElement;\n\n    // We use this attribute to match the chip list to its input in test harnesses.\n    // Set the attribute directly here to avoid \"changed after checked\" errors.\n    this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]) { this._ariaDescribedby = ids.join(' '); }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any): void {\n    if (this.chips) {\n      this._setSelectionByValue(value, false);\n    }\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._onChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event: MouseEvent) {\n    if (!this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n\n  /**\n   * Focuses the first non-disabled chip in this chip list, or the associated input when there\n   * are no eligible chips.\n   */\n  focus(options?: FocusOptions): void {\n    if (this.disabled) {\n      return;\n    }\n\n    // TODO: ARIA says this should focus the first `selected` chip if any are selected.\n    // Focus on first element if there's no chipInput inside chip-list\n    if (this._chipInput && this._chipInput.focused) {\n      // do nothing\n    } else if (this.chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n      this.stateChanges.next();\n    } else {\n      this._focusInput(options);\n      this.stateChanges.next();\n    }\n  }\n\n  /** Attempt to focus an input if we have one. */\n  _focusInput(options?: FocusOptions) {\n    if (this._chipInput) {\n      this._chipInput.focus(options);\n    }\n  }\n\n  /**\n   * Pass events to the keyboard manager. Available here for tests.\n   */\n  _keydown(event: KeyboardEvent) {\n    const target = event.target as HTMLElement;\n\n    // If they are on an empty input and hit backspace, focus the last chip\n    if (event.keyCode === BACKSPACE && this._isInputEmpty(target)) {\n      this._keyManager.setLastItemActive();\n      event.preventDefault();\n    } else if (target && target.classList.contains('mat-chip')) {\n      this._keyManager.onKeydown(event);\n      this.stateChanges.next();\n    }\n  }\n\n\n  /**\n   * Check the tab index as you should not be allowed to focus an empty list.\n   */\n  protected _updateTabIndex(): void {\n    // If we have 0 chips, we should not allow keyboard focus\n    this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);\n  }\n\n  /**\n   * If the amount of chips changed, we need to update the\n   * key manager state and focus the next closest chip.\n   */\n  protected _updateFocusForDestroyedChips() {\n    // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.\n    if (this._lastDestroyedChipIndex != null) {\n      if (this.chips.length) {\n        const newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);\n        this._keyManager.setActiveItem(newChipIndex);\n      } else {\n        this.focus();\n      }\n    }\n\n    this._lastDestroyedChipIndex = null;\n  }\n\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  private _isValidIndex(index: number): boolean {\n    return index >= 0 && index < this.chips.length;\n  }\n\n  private _isInputEmpty(element: HTMLElement): boolean {\n    if (element && element.nodeName.toLowerCase() === 'input') {\n      let input = element as HTMLInputElement;\n      return !input.value;\n    }\n\n    return false;\n  }\n\n  _setSelectionByValue(value: any, isUserInput: boolean = true) {\n    this._clearSelection();\n    this.chips.forEach(chip => chip.deselect());\n\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n      this._sortValues();\n    } else {\n      const correspondingChip = this._selectValue(value, isUserInput);\n\n      // Shift focus to the active item. Note that we shouldn't do this in multiple\n      // mode, because we don't know what chip the user interacted with last.\n      if (correspondingChip) {\n        if (isUserInput) {\n          this._keyManager.setActiveItem(correspondingChip);\n        }\n      }\n    }\n  }\n\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  private _selectValue(value: any, isUserInput: boolean = true): MatChip | undefined {\n\n    const correspondingChip = this.chips.find(chip => {\n      return chip.value != null && this._compareWith(chip.value,  value);\n    });\n\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n      this._selectionModel.select(correspondingChip);\n    }\n\n    return correspondingChip;\n  }\n\n  private _initializeSelection(): void {\n    // Defer setting the value in order to avoid the \"Expression\n    // has changed after it was checked\" errors from Angular.\n    Promise.resolve().then(() => {\n      if (this.ngControl || this._value) {\n        this._setSelectionByValue(this.ngControl ? this.ngControl.value : this._value, false);\n        this.stateChanges.next();\n      }\n    });\n  }\n\n  /**\n   * Deselects every chip in the list.\n   * @param skip Chip that should not be deselected.\n   */\n  private _clearSelection(skip?: MatChip): void {\n    this._selectionModel.clear();\n    this.chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n    this.stateChanges.next();\n  }\n\n  /**\n   * Sorts the model values, ensuring that they keep the same\n   * order that they have in the panel.\n   */\n  private _sortValues(): void {\n    if (this._multiple) {\n      this._selectionModel.clear();\n\n      this.chips.forEach(chip => {\n        if (chip.selected) {\n          this._selectionModel.select(chip);\n        }\n      });\n      this.stateChanges.next();\n    }\n  }\n\n  /** Emits change event to set the model value. */\n  private _propagateChanges(fallbackValue?: any): void {\n    let valueToEmit: any = null;\n\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : fallbackValue;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** When blurred, mark the field as touched when focus moved outside the chip list. */\n  _blur() {\n    if (!this._hasFocusedChip()) {\n      this._keyManager.setActiveItem(-1);\n    }\n\n    if (!this.disabled) {\n      if (this._chipInput) {\n        // If there's a chip input, we should check whether the focus moved to chip input.\n        // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n        // to chip input, do nothing.\n        // Timeout is needed to wait for the focus() event trigger on chip input.\n        setTimeout(() => {\n          if (!this.focused) {\n            this._markAsTouched();\n          }\n        });\n      } else {\n        // If there's no chip input, then mark the field as touched.\n        this._markAsTouched();\n      }\n    }\n  }\n\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n\n  /**\n   * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the list from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (this._tabIndex !== -1) {\n      this._tabIndex = -1;\n\n      setTimeout(() => {\n        this._tabIndex = this._userTabIndex || 0;\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  private _resetChips() {\n    this._dropSubscriptions();\n    this._listenToChipsFocus();\n    this._listenToChipsSelection();\n    this._listenToChipsRemoved();\n  }\n\n  private _dropSubscriptions() {\n    if (this._chipFocusSubscription) {\n      this._chipFocusSubscription.unsubscribe();\n      this._chipFocusSubscription = null;\n    }\n\n    if (this._chipBlurSubscription) {\n      this._chipBlurSubscription.unsubscribe();\n      this._chipBlurSubscription = null;\n    }\n\n    if (this._chipSelectionSubscription) {\n      this._chipSelectionSubscription.unsubscribe();\n      this._chipSelectionSubscription = null;\n    }\n\n    if (this._chipRemoveSubscription) {\n      this._chipRemoveSubscription.unsubscribe();\n      this._chipRemoveSubscription = null;\n    }\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsSelection(): void {\n    this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(event => {\n      event.source.selected\n        ? this._selectionModel.select(event.source)\n        : this._selectionModel.deselect(event.source);\n\n      // For single selection chip list, make sure the deselected value is unselected.\n      if (!this.multiple) {\n        this.chips.forEach(chip => {\n          if (!this._selectionModel.isSelected(chip) && chip.selected) {\n            chip.deselect();\n          }\n        });\n      }\n\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n\n  /** Listens to user-generated selection events on each chip. */\n  private _listenToChipsFocus(): void {\n    this._chipFocusSubscription = this.chipFocusChanges.subscribe(event => {\n      let chipIndex: number = this.chips.toArray().indexOf(event.chip);\n\n      if (this._isValidIndex(chipIndex)) {\n        this._keyManager.updateActiveItem(chipIndex);\n      }\n      this.stateChanges.next();\n    });\n\n    this._chipBlurSubscription = this.chipBlurChanges.subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n  }\n\n  private _listenToChipsRemoved(): void {\n    this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(event => {\n      const chip = event.chip;\n      const chipIndex = this.chips.toArray().indexOf(event.chip);\n\n      // In case the chip that will be removed is currently focused, we temporarily store\n      // the index in order to be able to determine an appropriate sibling chip that will\n      // receive focus.\n      if (this._isValidIndex(chipIndex) && chip._hasFocus) {\n        this._lastDestroyedChipIndex = chipIndex;\n      }\n    });\n  }\n\n  /** Checks whether an event comes from inside a chip element. */\n  private _originatesFromChip(event: Event): boolean {\n    let currentElement = event.target as HTMLElement | null;\n\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-chip')) {\n        return true;\n      }\n\n      currentElement = currentElement.parentElement;\n    }\n\n    return false;\n  }\n\n  /** Checks whether any of the chips is focused. */\n  private _hasFocusedChip() {\n    return this.chips && this.chips.some(chip => chip._hasFocus);\n  }\n\n  /** Syncs the list's state with the individual chips. */\n  private _syncChipsState() {\n    if (this.chips) {\n      this.chips.forEach(chip => {\n        chip._chipListDisabled = this._disabled;\n        chip._chipListMultiple = this.multiple;\n      });\n    }\n  }\n\n  static ngAcceptInputType_multiple: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_selectable: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {hasModifierKey, TAB} from '@angular/cdk/keycodes';\nimport {Directive, ElementRef, EventEmitter, Inject, Input, OnChanges, Output} from '@angular/core';\nimport {MatChipsDefaultOptions, MAT_CHIPS_DEFAULT_OPTIONS} from './chip-default-options';\nimport {MatChipList} from './chip-list';\nimport {MatChipTextControl} from './chip-text-control';\n\n\n/** Represents an input event on a `matChipInput`. */\nexport interface MatChipInputEvent {\n  /** The native `<input>` element that the event is being fired for. */\n  input: HTMLInputElement;\n\n  /** The value of the input. */\n  value: string;\n}\n\n// Increasing integer for generating unique ids.\nlet nextUniqueId = 0;\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of an `<mat-chip-list>`.\n */\n@Directive({\n  selector: 'input[matChipInputFor]',\n  exportAs: 'matChipInput, matChipInputFor',\n  host: {\n    'class': 'mat-chip-input mat-input-element',\n    '(keydown)': '_keydown($event)',\n    '(blur)': '_blur()',\n    '(focus)': '_focus()',\n    '(input)': '_onInput()',\n    '[id]': 'id',\n    '[attr.disabled]': 'disabled || null',\n    '[attr.placeholder]': 'placeholder || null',\n    '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',\n    '[attr.aria-required]': '_chipList && _chipList.required || null',\n  }\n})\nexport class MatChipInput implements MatChipTextControl, OnChanges {\n  /** Whether the control is focused. */\n  focused: boolean = false;\n  _chipList: MatChipList;\n\n  /** Register input for chip list */\n  @Input('matChipInputFor')\n  set chipList(value: MatChipList) {\n    if (value) {\n      this._chipList = value;\n      this._chipList.registerInput(this);\n    }\n  }\n\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  @Input('matChipInputAddOnBlur')\n  get addOnBlur(): boolean { return this._addOnBlur; }\n  set addOnBlur(value: boolean) { this._addOnBlur = coerceBooleanProperty(value); }\n  _addOnBlur: boolean = false;\n\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  @Input('matChipInputSeparatorKeyCodes')\n  separatorKeyCodes: readonly number[] | ReadonlySet<number> =\n      this._defaultOptions.separatorKeyCodes;\n\n  /** Emitted when a chip is to be added. */\n  @Output('matChipInputTokenEnd')\n  chipEnd: EventEmitter<MatChipInputEvent> = new EventEmitter<MatChipInputEvent>();\n\n  /** The input's placeholder text. */\n  @Input() placeholder: string = '';\n\n  /** Unique id for the input. */\n  @Input() id: string = `mat-chip-list-input-${nextUniqueId++}`;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean { return this._disabled || (this._chipList && this._chipList.disabled); }\n  set disabled(value: boolean) { this._disabled = coerceBooleanProperty(value); }\n  private _disabled: boolean = false;\n\n  /** Whether the input is empty. */\n  get empty(): boolean { return !this._inputElement.value; }\n\n  /** The native input element to which this directive is attached. */\n  protected _inputElement: HTMLInputElement;\n\n  constructor(\n    protected _elementRef: ElementRef<HTMLInputElement>,\n    @Inject(MAT_CHIPS_DEFAULT_OPTIONS) private _defaultOptions: MatChipsDefaultOptions) {\n    this._inputElement = this._elementRef.nativeElement as HTMLInputElement;\n  }\n\n  ngOnChanges() {\n    this._chipList.stateChanges.next();\n  }\n\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event?: KeyboardEvent) {\n    // Allow the user's focus to escape when they're tabbing forward. Note that we don't\n    // want to do this when going backwards, because focus should go back to the first chip.\n    if (event && event.keyCode === TAB && !hasModifierKey(event, 'shiftKey')) {\n      this._chipList._allowFocusEscape();\n    }\n\n    this._emitChipEnd(event);\n  }\n\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipList.focused) {\n      this._chipList._blur();\n    }\n    this._chipList.stateChanges.next();\n  }\n\n  _focus() {\n    this.focused = true;\n    this._chipList.stateChanges.next();\n  }\n\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event?: KeyboardEvent) {\n    if (!this._inputElement.value && !!event) {\n      this._chipList._keydown(event);\n    }\n    if (!event || this._isSeparatorKey(event)) {\n      this.chipEnd.emit({ input: this._inputElement, value: this._inputElement.value });\n\n      if (event) {\n        event.preventDefault();\n      }\n    }\n  }\n\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipList.stateChanges.next();\n  }\n\n  /** Focuses the input. */\n  focus(options?: FocusOptions): void {\n    this._inputElement.focus(options);\n  }\n\n  /** Checks whether a keycode is one of the configured separators. */\n  private _isSeparatorKey(event: KeyboardEvent) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n\n  static ngAcceptInputType_addOnBlur: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ENTER} from '@angular/cdk/keycodes';\nimport {NgModule} from '@angular/core';\nimport {ErrorStateMatcher} from '@angular/material/core';\nimport {MatChip, MatChipAvatar, MatChipRemove, MatChipTrailingIcon} from './chip';\nimport {MAT_CHIPS_DEFAULT_OPTIONS, MatChipsDefaultOptions} from './chip-default-options';\nimport {MatChipInput} from './chip-input';\nimport {MatChipList} from './chip-list';\n\nconst CHIP_DECLARATIONS = [\n  MatChipList,\n  MatChip,\n  MatChipInput,\n  MatChipRemove,\n  MatChipAvatar,\n  MatChipTrailingIcon,\n];\n\n@NgModule({\n  exports: CHIP_DECLARATIONS,\n  declarations: CHIP_DECLARATIONS,\n  providers: [\n    ErrorStateMatcher,\n    {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      } as MatChipsDefaultOptions\n    }\n  ]\n})\nexport class MatChipsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './chips-module';\nexport * from './chip-list';\nexport * from './chip';\nexport * from './chip-input';\nexport * from './chip-default-options';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \".visit-card {\\r\\n    margin-bottom: 20px;\\r\\n    border-radius: 8px;\\r\\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\\r\\n    transition: transform 0.2s, box-shadow 0.2s;\\r\\n    padding: 20px; /* Increased padding */\\r\\n  }\\r\\n  \\r\\n  .visit-card:hover {\\r\\n    transform: translateY(-2px);\\r\\n    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);\\r\\n  }\\r\\n  \\r\\n  .approved {\\r\\n    background-color: #e8f5e9; /* Light green */\\r\\n    border-left: 5px solid #4caf50;\\r\\n  }\\r\\n  \\r\\n  .rejected {\\r\\n    background-color: #ffebee; /* Light red */\\r\\n    border-left: 5px solid #f44336;\\r\\n  }\\r\\n  \\r\\n  .pending {\\r\\n    background-color: #fff3cd; /* Light yellow */\\r\\n    border-left: 5px solid #ffc107;\\r\\n  }\\r\\n  \\r\\n  .status {\\r\\n    font-weight: bold;\\r\\n    text-transform: uppercase;\\r\\n    font-size: 1.1em; /* Increased font size */\\r\\n  }\\r\\n  \\r\\n  .mat-icon {\\r\\n    vertical-align: middle;\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n  \\r\\n  button.mat-button {\\r\\n    background-color: #007bff; /* Primary color */\\r\\n    color: white; /* Text color */\\r\\n    border-radius: 5px; /* Rounded corners */\\r\\n    padding: 10px 15px; /* Padding for better size */\\r\\n    margin-right: 10px; /* Spacing between buttons */\\r\\n    transition: background-color 0.3s, transform 0.2s; /* Smooth transition */\\r\\n}\\r\\n  \\r\\n  button.mat-button:hover {\\r\\n    background-color: #0056b3; /* Darker shade on hover */\\r\\n    transform: scale(1.05); /* Slightly enlarge on hover */\\r\\n}\\r\\n  \\r\\n  button.mat-button:focus {\\r\\n    outline: none; /* Remove default outline */\\r\\n}\\r\\n  \\r\\n  .card {\\r\\n    margin-bottom: 20px; /* Space between cards */\\r\\n}\\r\\n  \\r\\n  .card-header {\\r\\n    background-color: #673ab7; /* Primary color */\\r\\n    color: white; /* Text color */\\r\\n}\\r\\n  \\r\\n  .date-tabs button {\\r\\n    background-color: #007bff; /* Primary color */\\r\\n    color: white; /* Text color */\\r\\n    border-radius: 5px; /* Rounded corners */\\r\\n    padding: 10px 15px; /* Padding for better size */\\r\\n    margin-right: 10px; /* Spacing between buttons */\\r\\n    transition: background-color 0.3s, transform 0.2s; /* Smooth transition */\\r\\n}\\r\\n  \\r\\n  div.date-tabs button:hover {\\r\\n    background-color: #0056b3; /* Darker shade on hover */\\r\\n    transform: scale(1.05); /* Slightly enlarge on hover */\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmVsLXZpc2l0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLHlDQUF5QztJQUN6QywyQ0FBMkM7SUFDM0MsYUFBYSxFQUFFLHNCQUFzQjtFQUN2Qzs7RUFFQTtJQUNFLDJCQUEyQjtJQUMzQix5Q0FBeUM7RUFDM0M7O0VBRUE7SUFDRSx5QkFBeUIsRUFBRSxnQkFBZ0I7SUFDM0MsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsY0FBYztJQUN6Qyw4QkFBOEI7RUFDaEM7O0VBRUE7SUFDRSx5QkFBeUIsRUFBRSxpQkFBaUI7SUFDNUMsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixnQkFBZ0IsRUFBRSx3QkFBd0I7RUFDNUM7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsaUJBQWlCO0VBQ25COztFQUVGO0lBQ0kseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVksRUFBRSxlQUFlO0lBQzdCLGtCQUFrQixFQUFFLG9CQUFvQjtJQUN4QyxrQkFBa0IsRUFBRSw0QkFBNEI7SUFDaEQsa0JBQWtCLEVBQUUsNEJBQTRCO0lBQ2hELGlEQUFpRCxFQUFFLHNCQUFzQjtBQUM3RTs7RUFFQTtJQUNJLHlCQUF5QixFQUFFLDBCQUEwQjtJQUNyRCxzQkFBc0IsRUFBRSw4QkFBOEI7QUFDMUQ7O0VBRUE7SUFDSSxhQUFhLEVBQUUsMkJBQTJCO0FBQzlDOztFQUVBO0lBQ0ksbUJBQW1CLEVBQUUsd0JBQXdCO0FBQ2pEOztFQUVBO0lBQ0kseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVksRUFBRSxlQUFlO0FBQ2pDOztFQUVBO0lBQ0kseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVksRUFBRSxlQUFlO0lBQzdCLGtCQUFrQixFQUFFLG9CQUFvQjtJQUN4QyxrQkFBa0IsRUFBRSw0QkFBNEI7SUFDaEQsa0JBQWtCLEVBQUUsNEJBQTRCO0lBQ2hELGlEQUFpRCxFQUFFLHNCQUFzQjtBQUM3RTs7RUFFQTtJQUNJLHlCQUF5QixFQUFFLDBCQUEwQjtJQUNyRCxzQkFBc0IsRUFBRSw4QkFBOEI7QUFDMUQiLCJmaWxlIjoicGVyc29uZWwtdmlzaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi52aXNpdC1jYXJkIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzLCBib3gtc2hhZG93IDAuMnM7XHJcbiAgICBwYWRkaW5nOiAyMHB4OyAvKiBJbmNyZWFzZWQgcGFkZGluZyAqL1xyXG4gIH1cclxuICBcclxuICAudmlzaXQtY2FyZDpob3ZlciB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDZweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICB9XHJcbiAgXHJcbiAgLmFwcHJvdmVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGY1ZTk7IC8qIExpZ2h0IGdyZWVuICovXHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0Y2FmNTA7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWplY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlYmVlOyAvKiBMaWdodCByZWQgKi9cclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2Y0NDMzNjtcclxuICB9XHJcbiAgXHJcbiAgLnBlbmRpbmcge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjNjZDsgLyogTGlnaHQgeWVsbG93ICovXHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNmZmMxMDc7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdGF0dXMge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1zaXplOiAxLjFlbTsgLyogSW5jcmVhc2VkIGZvbnQgc2l6ZSAqL1xyXG4gIH1cclxuICBcclxuICAubWF0LWljb24ge1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gIH1cclxuXHJcbmJ1dHRvbi5tYXQtYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7IC8qIFByaW1hcnkgY29sb3IgKi9cclxuICAgIGNvbG9yOiB3aGl0ZTsgLyogVGV4dCBjb2xvciAqL1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBSb3VuZGVkIGNvcm5lcnMgKi9cclxuICAgIHBhZGRpbmc6IDEwcHggMTVweDsgLyogUGFkZGluZyBmb3IgYmV0dGVyIHNpemUgKi9cclxuICAgIG1hcmdpbi1yaWdodDogMTBweDsgLyogU3BhY2luZyBiZXR3ZWVuIGJ1dHRvbnMgKi9cclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgdHJhbnNmb3JtIDAuMnM7IC8qIFNtb290aCB0cmFuc2l0aW9uICovXHJcbn1cclxuXHJcbmJ1dHRvbi5tYXQtYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7IC8qIERhcmtlciBzaGFkZSBvbiBob3ZlciAqL1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTsgLyogU2xpZ2h0bHkgZW5sYXJnZSBvbiBob3ZlciAqL1xyXG59XHJcblxyXG5idXR0b24ubWF0LWJ1dHRvbjpmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiBub25lOyAvKiBSZW1vdmUgZGVmYXVsdCBvdXRsaW5lICovXHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IC8qIFNwYWNlIGJldHdlZW4gY2FyZHMgKi9cclxufVxyXG5cclxuLmNhcmQtaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2NzNhYjc7IC8qIFByaW1hcnkgY29sb3IgKi9cclxuICAgIGNvbG9yOiB3aGl0ZTsgLyogVGV4dCBjb2xvciAqL1xyXG59XHJcblxyXG4uZGF0ZS10YWJzIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmOyAvKiBQcmltYXJ5IGNvbG9yICovXHJcbiAgICBjb2xvcjogd2hpdGU7IC8qIFRleHQgY29sb3IgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogUm91bmRlZCBjb3JuZXJzICovXHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7IC8qIFBhZGRpbmcgZm9yIGJldHRlciBzaXplICovXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7IC8qIFNwYWNpbmcgYmV0d2VlbiBidXR0b25zICovXHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIHRyYW5zZm9ybSAwLjJzOyAvKiBTbW9vdGggdHJhbnNpdGlvbiAqL1xyXG59XHJcblxyXG5kaXYuZGF0ZS10YWJzIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzOyAvKiBEYXJrZXIgc2hhZGUgb24gaG92ZXIgKi9cclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7IC8qIFNsaWdodGx5IGVubGFyZ2Ugb24gaG92ZXIgKi9cclxufSJdfQ== */\";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortController } from \"./AbortController\";\r\nimport { HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, sendMessage } from \"./Utils\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n// Not exported from 'index', this type is internal.\r\n/** @private */\r\nexport class LongPollingTransport implements ITransport {\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    private readonly _pollAbort: AbortController;\r\n\r\n    private _url?: string;\r\n    private _running: boolean;\r\n    private _receiving?: Promise<void>;\r\n    private _closeError?: Error | unknown;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error | unknown) => void) | null;\r\n\r\n    // This is an internal type, not exported from 'index' so this is really just internal.\r\n    public get pollAborted(): boolean {\r\n        return this._pollAbort.aborted;\r\n    }\r\n\r\n    constructor(httpClient: HttpClient, logger: ILogger, options: IHttpConnectionOptions) {\r\n        this._httpClient = httpClient;\r\n        this._logger = logger;\r\n        this._pollAbort = new AbortController();\r\n        this._options = options;\r\n\r\n        this._running = false;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._url = url;\r\n\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Connecting.\");\r\n\r\n        // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)\r\n        if (transferFormat === TransferFormat.Binary &&\r\n            (typeof XMLHttpRequest !== \"undefined\" && typeof new XMLHttpRequest().responseType !== \"string\")) {\r\n            throw new Error(\"Binary protocols over XmlHttpRequest not implementing advanced features are not supported.\");\r\n        }\r\n\r\n        const [name, value] = getUserAgentHeader();\r\n        const headers = { [name]: value, ...this._options.headers };\r\n\r\n        const pollOptions: HttpRequest = {\r\n            abortSignal: this._pollAbort.signal,\r\n            headers,\r\n            timeout: 100000,\r\n            withCredentials: this._options.withCredentials,\r\n        };\r\n\r\n        if (transferFormat === TransferFormat.Binary) {\r\n            pollOptions.responseType = \"arraybuffer\";\r\n        }\r\n\r\n        // Make initial long polling request\r\n        // Server uses first long polling request to finish initializing connection and it returns without data\r\n        const pollUrl = `${url}&_=${Date.now()}`;\r\n        this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n        const response = await this._httpClient.get(pollUrl, pollOptions);\r\n        if (response.statusCode !== 200) {\r\n            this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n            // Mark running as false so that the poll immediately ends and runs the close logic\r\n            this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n            this._running = false;\r\n        } else {\r\n            this._running = true;\r\n        }\r\n\r\n        this._receiving = this._poll(this._url, pollOptions);\r\n    }\r\n\r\n    private async _poll(url: string, pollOptions: HttpRequest): Promise<void> {\r\n        try {\r\n            while (this._running) {\r\n                try {\r\n                    const pollUrl = `${url}&_=${Date.now()}`;\r\n                    this._logger.log(LogLevel.Trace, `(LongPolling transport) polling: ${pollUrl}.`);\r\n                    const response = await this._httpClient.get(pollUrl, pollOptions);\r\n\r\n                    if (response.statusCode === 204) {\r\n                        this._logger.log(LogLevel.Information, \"(LongPolling transport) Poll terminated by server.\");\r\n\r\n                        this._running = false;\r\n                    } else if (response.statusCode !== 200) {\r\n                        this._logger.log(LogLevel.Error, `(LongPolling transport) Unexpected response code: ${response.statusCode}.`);\r\n\r\n                        // Unexpected status code\r\n                        this._closeError = new HttpError(response.statusText || \"\", response.statusCode);\r\n                        this._running = false;\r\n                    } else {\r\n                        // Process the response\r\n                        if (response.content) {\r\n                            this._logger.log(LogLevel.Trace, `(LongPolling transport) data received. ${getDataDetail(response.content, this._options.logMessageContent!)}.`);\r\n                            if (this.onreceive) {\r\n                                this.onreceive(response.content);\r\n                            }\r\n                        } else {\r\n                            // This is another way timeout manifest.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        }\r\n                    }\r\n                } catch (e) {\r\n                    if (!this._running) {\r\n                        // Log but disregard errors that occur after stopping\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Poll errored after shutdown: ${(e as any).message}`);\r\n                    } else {\r\n                        if (e instanceof TimeoutError) {\r\n                            // Ignore timeouts and reissue the poll.\r\n                            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Poll timed out, reissuing.\");\r\n                        } else {\r\n                            // Close the connection with the error as the result.\r\n                            this._closeError = e;\r\n                            this._running = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Polling complete.\");\r\n\r\n            // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.\r\n            // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.\r\n            if (!this.pollAborted) {\r\n                this._raiseOnClose();\r\n            }\r\n        }\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this._running) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"LongPolling\", this._httpClient, this._url!, data, this._options);\r\n    }\r\n\r\n    public async stop(): Promise<void> {\r\n        this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stopping polling.\");\r\n\r\n        // Tell receiving loop to stop, abort any current request, and then wait for it to finish\r\n        this._running = false;\r\n        this._pollAbort.abort();\r\n\r\n        try {\r\n            await this._receiving;\r\n\r\n            // Send DELETE to clean up long polling on the server\r\n            this._logger.log(LogLevel.Trace, `(LongPolling transport) sending DELETE request to ${this._url}.`);\r\n\r\n            const headers: {[k: string]: string} = {};\r\n            const [name, value] = getUserAgentHeader();\r\n            headers[name] = value;\r\n\r\n            const deleteOptions: HttpRequest = {\r\n                headers: { ...headers, ...this._options.headers },\r\n                timeout: this._options.timeout,\r\n                withCredentials: this._options.withCredentials,\r\n            };\r\n\r\n            let error;\r\n            try {\r\n                await this._httpClient.delete(this._url!, deleteOptions);\r\n            } catch (err) {\r\n                error = err;\r\n            }\r\n\r\n            if (error) {\r\n                if (error instanceof HttpError) {\r\n                    if (error.statusCode === 404) {\r\n                        this._logger.log(LogLevel.Trace, \"(LongPolling transport) A 404 response was returned from sending a DELETE request.\");\r\n                    } else {\r\n                        this._logger.log(LogLevel.Trace, `(LongPolling transport) Error sending a DELETE request: ${error}`);\r\n                    }\r\n                }\r\n            } else {\r\n                this._logger.log(LogLevel.Trace, \"(LongPolling transport) DELETE request accepted.\");\r\n            }\r\n\r\n        } finally {\r\n            this._logger.log(LogLevel.Trace, \"(LongPolling transport) Stop finished.\");\r\n\r\n            // Raise close event here instead of in polling\r\n            // It needs to happen after the DELETE request is sent\r\n            this._raiseOnClose();\r\n        }\r\n    }\r\n\r\n    private _raiseOnClose() {\r\n        if (this.onclose) {\r\n            let logMessage = \"(LongPolling transport) Firing onclose event.\";\r\n            if (this._closeError) {\r\n                logMessage += \" Error: \" + this._closeError;\r\n            }\r\n            this._logger.log(LogLevel.Trace, logMessage);\r\n            this.onclose(this._closeError);\r\n        }\r\n    }\r\n}\r\n","export default \".status-tables {\\r\\n  margin-top: 32px;\\r\\n  display: grid;\\r\\n  grid-template-columns: 1fr 1fr;\\r\\n  gap: 24px;\\r\\n}\\r\\n\\r\\n.status-table {\\r\\n  margin-bottom: 24px;\\r\\n}\\r\\n\\r\\n.mr-2 {\\r\\n  margin-right: 8px;\\r\\n}\\r\\n\\r\\n@-webkit-keyframes highlight {\\r\\n  0% {\\r\\n    background-color: #72c579; \\r\\n  }\\r\\n  100% {\\r\\n    background-color: white;\\r\\n  }\\r\\n  50% {\\r\\n    background-color: #72c579;\\r\\n  }\\r\\n  75% {\\r\\n    background-color: #72c579;\\r\\n  }\\r\\n  100% {\\r\\n    background-color: white;\\r\\n  }\\r\\n}\\r\\n\\r\\n@keyframes highlight {\\r\\n  0% {\\r\\n    background-color: #72c579; \\r\\n  }\\r\\n  100% {\\r\\n    background-color: white;\\r\\n  }\\r\\n  50% {\\r\\n    background-color: #72c579;\\r\\n  }\\r\\n  75% {\\r\\n    background-color: #72c579;\\r\\n  }\\r\\n  100% {\\r\\n    background-color: white;\\r\\n  }\\r\\n}\\r\\n\\r\\n.highlight {\\r\\n  -webkit-animation: highlight 2s infinite;\\r\\n          animation: highlight 2s infinite;\\r\\n}\\r\\n\\r\\n.card-category {\\r\\n  font-size: 14px;\\r\\n  margin-top: 15px !important;\\r\\n  padding: 10px 15px !important;\\r\\n}\\r\\n\\r\\nmat-chip {\\r\\n  min-height: 24px;\\r\\n  padding: 4px 12px;\\r\\n  pointer-events: none !important;\\r\\n}\\r\\n\\r\\n.visitors-container {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 12px;\\r\\n}\\r\\n\\r\\n.visitors-list {\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.total-visitors mat-chip {\\r\\n  font-size: 12px !important;\\r\\n  pointer-events: none !important;\\r\\n}\\r\\n\\r\\n.no-data-message {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  padding: 32px;\\r\\n  text-align: center;\\r\\n  background: #f5f5f5;\\r\\n  border-radius: 8px;\\r\\n  margin: 16px 0;\\r\\n}\\r\\n\\r\\n.no-data-message mat-icon {\\r\\n  font-size: 48px;\\r\\n  width: 48px;\\r\\n  height: 48px;\\r\\n  color: #9e9e9e;\\r\\n  margin-bottom: 16px;\\r\\n}\\r\\n\\r\\n.no-data-message p {\\r\\n  color: #666;\\r\\n  font-size: 16px;\\r\\n  margin: 0;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .no-data-message {\\r\\n    padding: 24px;\\r\\n  }\\r\\n\\r\\n  .no-data-message mat-icon {\\r\\n    font-size: 36px;\\r\\n    width: 36px;\\r\\n    height: 36px;\\r\\n    margin-bottom: 12px;\\r\\n  }\\r\\n\\r\\n  .no-data-message p {\\r\\n    font-size: 14px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Snackbar stilleri */\\r\\n\\r\\n::ng-deep .success-snackbar {\\r\\n  background: #4caf50;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n::ng-deep .error-snackbar {\\r\\n  background: #f44336;\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n::ng-deep .success-snackbar .mat-simple-snackbar-action,\\r\\n::ng-deep .error-snackbar .mat-simple-snackbar-action {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n/* Ziyaretçi bilgileri için stiller */\\r\\n\\r\\n.visitor-info {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: space-between;\\r\\n  gap: 12px;\\r\\n  padding: 8px 0;\\r\\n}\\r\\n\\r\\n.visitor-names {\\r\\n  flex: 1;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.visitor-count {\\r\\n  min-height: 24px;\\r\\n  padding: 4px 12px;\\r\\n  font-size: 12px !important;\\r\\n}\\r\\n\\r\\n/* Araç/Yaya chip'leri için stiller */\\r\\n\\r\\n.vehicle-chip {\\r\\n  background: #e8f5e9 !important;\\r\\n  color: #2e7d32 !important;\\r\\n  min-height: 24px;\\r\\n  padding: 4px 12px;\\r\\n}\\r\\n\\r\\n.pedestrian-chip {\\r\\n  background: #f5f5f5 !important;\\r\\n  color: #616161 !important;\\r\\n  min-height: 24px;\\r\\n  padding: 4px 12px;\\r\\n}\\r\\n\\r\\n.vehicle-chip mat-icon,\\r\\n.pedestrian-chip mat-icon {\\r\\n  font-size: 18px;\\r\\n  height: 18px;\\r\\n  width: 18px;\\r\\n  margin-right: 4px;\\r\\n}\\r\\n\\r\\n/* Tablo hücresi düzenlemeleri */\\r\\n\\r\\n.mat-cell {\\r\\n  padding: 12px 16px;\\r\\n}\\r\\n\\r\\n.mat-header-cell {\\r\\n  padding: 0 16px;\\r\\n  font-weight: 500;\\r\\n  color: rgba(0, 0, 0, 0.87);\\r\\n}\\r\\n\\r\\n/* Chip listesi düzenlemeleri */\\r\\n\\r\\nmat-chip-list {\\r\\n  pointer-events: none;\\r\\n}\\r\\n\\r\\nmat-chip {\\r\\n  pointer-events: none !important;\\r\\n}\\r\\n\\r\\n/* Tablo genel stilleri */\\r\\n\\r\\n.mat-elevation-z8 {\\r\\n  border-radius: 8px;\\r\\n  overflow: hidden;\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/* Responsive düzenlemeler */\\r\\n\\r\\n@media (max-width: 1024px) {\\r\\n  .status-tables {\\r\\n    grid-template-columns: 1fr;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin-bottom: 24px;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .container-fluid {\\r\\n    padding: 16px !important;\\r\\n  }\\r\\n\\r\\n  .card-header {\\r\\n    margin: -15px 10px 0;\\r\\n    padding: 12px !important;\\r\\n  }\\r\\n\\r\\n  .card-title {\\r\\n    font-size: 18px;\\r\\n  }\\r\\n\\r\\n  .card-category {\\r\\n    font-size: 14px;\\r\\n    margin-top: 15px !important;\\r\\n    padding: 10px 15px !important;\\r\\n  }\\r\\n\\r\\n  .mat-table {\\r\\n    display: block;\\r\\n    overflow-x: auto;\\r\\n    white-space: nowrap;\\r\\n  }\\r\\n\\r\\n  .mat-cell,\\r\\n  .mat-header-cell {\\r\\n    padding: 8px !important;\\r\\n  }\\r\\n\\r\\n  .visitor-info {\\r\\n    flex-direction: column;\\r\\n    align-items: flex-start;\\r\\n    gap: 8px;\\r\\n  }\\r\\n\\r\\n  .visitor-chips {\\r\\n    width: 100%;\\r\\n    margin-bottom: 8px;\\r\\n  }\\r\\n\\r\\n  .total-visitor-chip {\\r\\n    width: auto;\\r\\n  }\\r\\n\\r\\n  .mat-chip {\\r\\n    font-size: 12px !important;\\r\\n    height: 24px !important;\\r\\n  }\\r\\n\\r\\n  .mat-chip mat-icon {\\r\\n    font-size: 14px;\\r\\n    height: 14px;\\r\\n    width: 14px;\\r\\n  }\\r\\n\\r\\n  .date-tabs {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 8px;\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n\\r\\n  .date-tabs button {\\r\\n    flex: 1;\\r\\n    min-width: 0;\\r\\n    padding: 4px 8px;\\r\\n    font-size: 13px;\\r\\n  }\\r\\n\\r\\n  .mat-form-field {\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n\\r\\n  .mat-paginator {\\r\\n    font-size: 12px;\\r\\n  }\\r\\n\\r\\n  .mat-paginator-page-size {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-width: 480px) {\\r\\n  .container-fluid {\\r\\n    padding: 8px !important;\\r\\n  }\\r\\n\\r\\n  .card {\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n\\r\\n  .card-header {\\r\\n    margin: -10px 5px 0;\\r\\n    padding: 10px !important;\\r\\n  }\\r\\n\\r\\n  .mat-cell,\\r\\n  .mat-header-cell {\\r\\n    padding: 6px !important;\\r\\n    font-size: 12px;\\r\\n  }\\r\\n\\r\\n  .mat-chip {\\r\\n    font-size: 11px !important;\\r\\n    height: 22px !important;\\r\\n    padding: 2px 8px !important;\\r\\n  }\\r\\n\\r\\n  .mat-chip mat-icon {\\r\\n    font-size: 12px;\\r\\n    height: 12px;\\r\\n    width: 12px;\\r\\n    margin-right: 2px;\\r\\n  }\\r\\n\\r\\n  .date-tabs button {\\r\\n    font-size: 12px;\\r\\n    padding: 2px 6px;\\r\\n  }\\r\\n\\r\\n  .mat-form-field {\\r\\n    font-size: 14px;\\r\\n  }\\r\\n\\r\\n  .mat-paginator-page-size-select {\\r\\n    margin: 0 4px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Tablo stilleri */\\r\\n\\r\\n.mat-table {\\r\\n  width: 100%;\\r\\n  background: white;\\r\\n}\\r\\n\\r\\n.mat-row:hover {\\r\\n  background: #f5f5f5;\\r\\n}\\r\\n\\r\\n/* Chip stilleri */\\r\\n\\r\\n.mat-chip-list {\\r\\n  display: inline-flex;\\r\\n}\\r\\n\\r\\n.mat-chip {\\r\\n  font-size: 13px !important;\\r\\n  height: 24px !important;\\r\\n  line-height: 24px !important;\\r\\n}\\r\\n\\r\\n.visitor-count {\\r\\n  background: #e3f2fd !important;\\r\\n  color: #1976d2 !important;\\r\\n}\\r\\n\\r\\n.vehicle-chip mat-icon,\\r\\n.pedestrian-chip mat-icon {\\r\\n  margin-right: 4px;\\r\\n  font-size: 16px;\\r\\n  width: 16px;\\r\\n  height: 16px;\\r\\n  vertical-align: text-bottom;\\r\\n}\\r\\n\\r\\n/* Card stilleri */\\r\\n\\r\\n.card-header {\\r\\n  padding: 15px !important;\\r\\n  margin: -20px 15px 0;\\r\\n}\\r\\n\\r\\n.card-header-success {\\r\\n  background: linear-gradient(60deg, #66bb6a, #43a047);\\r\\n}\\r\\n\\r\\n.card-header-danger {\\r\\n  background: linear-gradient(60deg, #ef5350, #e53935);\\r\\n}\\r\\n\\r\\n/* Tablo container stilleri */\\r\\n\\r\\n.mat-elevation-z8 {\\r\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;\\r\\n}\\r\\n\\r\\n.visitor-chips {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 8px;\\r\\n  flex: 1;\\r\\n}\\r\\n\\r\\n.visitor-icon {\\r\\n  font-size: 16px;\\r\\n  height: 16px;\\r\\n  width: 16px;\\r\\n  margin-right: 4px;\\r\\n}\\r\\n\\r\\n.primary-visitor-chip {\\r\\n  background: #e3f2fd !important;\\r\\n  color: #1976d2 !important;\\r\\n  font-weight: 500;\\r\\n  min-height: 28px;\\r\\n}\\r\\n\\r\\n.secondary-visitor-chip {\\r\\n  background: #f5f5f5 !important;\\r\\n  color: #616161 !important;\\r\\n  min-height: 28px;\\r\\n}\\r\\n\\r\\n.total-visitor-chip {\\r\\n  background: #e8f5e9 !important;\\r\\n  color: #2e7d32 !important;\\r\\n  font-size: 12px !important;\\r\\n  min-height: 24px;\\r\\n  padding: 0 8px;\\r\\n}\\r\\n\\r\\n.total-visitor-chip mat-icon {\\r\\n  font-size: 16px;\\r\\n  height: 16px;\\r\\n  width: 16px;\\r\\n  margin-right: 4px;\\r\\n}\\r\\n\\r\\n/* Responsive tasarım için */\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .visitor-info {\\r\\n    flex-direction: column;\\r\\n    align-items: flex-start;\\r\\n  }\\r\\n\\r\\n  .visitor-chips {\\r\\n    margin-bottom: 8px;\\r\\n  }\\r\\n\\r\\n  .total-visitor-chip {\\r\\n    align-self: flex-end;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Hover efekti */\\r\\n\\r\\n.mat-chip {\\r\\n  transition: transform 0.2s ease;\\r\\n}\\r\\n\\r\\n.mat-chip:hover {\\r\\n  transform: translateY(-1px);\\r\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\r\\n}\\r\\n\\r\\n/* Chip içindeki ikonların hizalaması */\\r\\n\\r\\n.mat-chip mat-icon {\\r\\n  vertical-align: middle;\\r\\n}\\r\\n\\r\\n/* Chip listesi container'ı */\\r\\n\\r\\n.mat-chip-list {\\r\\n  display: flex;\\r\\n  flex-wrap: wrap;\\r\\n  gap: 6px;\\r\\n}\\r\\n\\r\\n.visitor-actions {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 8px;\\r\\n}\\r\\n\\r\\n.visitor-actions button {\\r\\n  min-width: 36px;\\r\\n  width: 36px;\\r\\n  height: 36px;\\r\\n  padding: 0;\\r\\n  margin-left: 4px;\\r\\n}\\r\\n\\r\\n.visitor-actions button mat-icon {\\r\\n  font-size: 20px;\\r\\n  width: 20px;\\r\\n  height: 20px;\\r\\n  line-height: 20px;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .visitor-actions {\\r\\n    width: 100%;\\r\\n    justify-content: space-between;\\r\\n  }\\r\\n  \\r\\n  .visitor-actions button {\\r\\n    min-width: 32px;\\r\\n    width: 32px;\\r\\n    height: 32px;\\r\\n  }\\r\\n\\r\\n  .visitor-actions button mat-icon {\\r\\n    font-size: 18px;\\r\\n    width: 18px;\\r\\n    height: 18px;\\r\\n    line-height: 18px;\\r\\n  }\\r\\n}\\r\\n\\r\\n.show-all-btn {\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  gap: 8px;\\r\\n  padding: 4px 12px;\\r\\n  height: 32px;\\r\\n  font-size: 13px;\\r\\n  border-radius: 16px;\\r\\n  background: white;\\r\\n  transition: all 0.2s ease;\\r\\n  color: #1976d2;\\r\\n}\\r\\n\\r\\n.show-all-btn:hover {\\r\\n  background: #1976d2;\\r\\n  color: black;\\r\\n  transform: translateY(-1px);\\r\\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\r\\n}\\r\\n\\r\\n.show-all-btn:hover mat-icon {\\r\\n  color: white;\\r\\n}\\r\\n\\r\\n.show-all-btn mat-icon {\\r\\n  font-size: 18px;\\r\\n  width: 18px;\\r\\n  height: 18px;\\r\\n  margin: 0;\\r\\n  color: #1976d2;\\r\\n  transition: color 0.2s ease;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .show-all-btn {\\r\\n    padding: 4px 8px;\\r\\n    height: 28px;\\r\\n    font-size: 12px;\\r\\n  }\\r\\n\\r\\n  .show-all-btn mat-icon {\\r\\n    font-size: 16px;\\r\\n    width: 16px;\\r\\n    height: 16px;\\r\\n  }\\r\\n}\\r\\n\\r\\n/* Tarih seçim butonları */\\r\\n\\r\\n.date-tabs {\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  gap: 16px;\\r\\n  margin: 24px auto;\\r\\n  max-width: 600px;\\r\\n  background: #f5f5f5;\\r\\n  padding: 8px;\\r\\n  border-radius: 12px;\\r\\n}\\r\\n\\r\\n.date-tabs button {\\r\\n  flex: 1;\\r\\n  min-width: 140px;\\r\\n  padding: 12px 24px;\\r\\n  border-radius: 8px;\\r\\n  border: none;\\r\\n  background: transparent;\\r\\n  color: #666;\\r\\n  font-weight: 500;\\r\\n  transition: all 0.3s ease;\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  gap: 8px;\\r\\n  position: relative;\\r\\n  overflow: hidden;\\r\\n  cursor: pointer;\\r\\n}\\r\\n\\r\\n.date-tabs button.active {\\r\\n  background: #ab47bc !important;\\r\\n  color: white !important;\\r\\n  box-shadow: 0 4px 12px rgba(171, 71, 188, 0.2);\\r\\n  transform: translateY(-1px);\\r\\n}\\r\\n\\r\\n.date-tabs button.active mat-icon {\\r\\n  color: white !important;\\r\\n  transform: scale(1.1);\\r\\n}\\r\\n\\r\\n.date-tabs button.active span {\\r\\n  color: white !important;\\r\\n  transform: scale(1.05);\\r\\n}\\r\\n\\r\\n.date-tabs button:not(.active):hover {\\r\\n  background: rgba(171, 71, 188, 0.1);\\r\\n  color: #ab47bc;\\r\\n  transform: translateY(-1px);\\r\\n}\\r\\n\\r\\n.date-tabs button mat-icon {\\r\\n  font-size: 20px;\\r\\n  width: 20px;\\r\\n  height: 20px;\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n.date-tabs button:hover mat-icon {\\r\\n  transform: translateY(-2px);\\r\\n}\\r\\n\\r\\n.date-tabs button span {\\r\\n  font-size: 14px;\\r\\n  font-weight: 500;\\r\\n  transition: all 0.3s ease;\\r\\n}\\r\\n\\r\\n@media (max-width: 768px) {\\r\\n  .date-tabs {\\r\\n    flex-direction: row;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 8px;\\r\\n    padding: 8px;\\r\\n    margin: 16px auto;\\r\\n  }\\r\\n\\r\\n  .date-tabs button {\\r\\n    min-width: 0;\\r\\n    padding: 8px 16px;\\r\\n    font-size: 13px;\\r\\n  }\\r\\n\\r\\n  .date-tabs button mat-icon {\\r\\n    font-size: 18px;\\r\\n    width: 18px;\\r\\n    height: 18px;\\r\\n  }\\r\\n}\\r\\n\\r\\n@media (max-width: 480px) {\\r\\n  .date-tabs {\\r\\n    flex-direction: column;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .date-tabs button {\\r\\n    width: 100%;\\r\\n    padding: 10px;\\r\\n  }\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64, */\";","import { Component, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MergeMultiVisit } from '../../../admin/visit/models/mergeMultiVisit';\r\n\r\n@Component({\r\n  selector: 'app-all-visitors-dialog',\r\n  template: `\r\n    <div class=\"dialog-header\">\r\n      <h2 mat-dialog-title>\r\n        <mat-icon class=\"header-icon\">groups</mat-icon>\r\n        Tüm Ziyaretçiler ({{data.multiVisiters?.length + 1}} Kişi)\r\n      </h2>\r\n    </div>\r\n    <mat-dialog-content>\r\n      <div class=\"visitor-list\">\r\n        <!-- Ana Ziyaretçi -->\r\n        <div class=\"visitor-item primary\">\r\n          <div class=\"visitor-icon\">\r\n            <mat-icon>person</mat-icon>\r\n          </div>\r\n          <div class=\"visitor-info\">\r\n            <span class=\"visitor-name\">{{data.visit.visitorFullName}}</span>\r\n            <div class=\"visitor-details\">\r\n              <span class=\"visitor-type\">Ana Ziyaretçi</span>\r\n              <span class=\"visitor-entry\">\r\n                <mat-icon>event</mat-icon>\r\n                {{data.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <!-- Diğer Ziyaretçiler -->\r\n        <div *ngFor=\"let visitor of data.multiVisiters; let i = index\" class=\"visitor-item\">\r\n          <div class=\"visitor-icon\">\r\n            <mat-icon>person_outline</mat-icon>\r\n          </div>\r\n          <div class=\"visitor-info\">\r\n            <span class=\"visitor-name\">{{visitor.visitorFullName}}</span>\r\n            <div class=\"visitor-details\">\r\n              <span class=\"visitor-type\">Beraberindeki Ziyaretçi {{i + 1}}</span>\r\n              <span class=\"visitor-entry\">\r\n                <mat-icon>event</mat-icon>\r\n                {{data.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}}\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </mat-dialog-content>\r\n    <mat-dialog-actions align=\"end\">\r\n      <button mat-stroked-button color=\"primary\" [mat-dialog-close]>\r\n        <mat-icon>close</mat-icon>\r\n        Kapat\r\n      </button>\r\n    </mat-dialog-actions>\r\n  `,\r\n  styles: [`\r\n    .dialog-header {\r\n      background: #1976d2;\r\n      color: white;\r\n      margin: -24px -24px 24px -24px;\r\n      padding: 16px 24px;\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n\r\n    .header-icon {\r\n      margin-right: 8px;\r\n      vertical-align: text-bottom;\r\n    }\r\n\r\n    .visitor-list {\r\n      display: flex;\r\n      flex-direction: column;\r\n      gap: 16px;\r\n    }\r\n\r\n    .visitor-item {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 16px;\r\n      padding: 16px;\r\n      border-radius: 8px;\r\n      background: #f5f5f5;\r\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\r\n    }\r\n\r\n    .visitor-item:hover {\r\n      transform: translateY(-2px);\r\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .visitor-item.primary {\r\n      background: #e3f2fd;\r\n      border-left: 4px solid #1976d2;\r\n    }\r\n\r\n    .visitor-icon {\r\n      background: white;\r\n      border-radius: 50%;\r\n      width: 40px;\r\n      height: 40px;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n    }\r\n\r\n    .visitor-info {\r\n      flex: 1;\r\n    }\r\n\r\n    .visitor-name {\r\n      font-size: 16px;\r\n      font-weight: 500;\r\n      color: rgba(0, 0, 0, 0.87);\r\n      display: block;\r\n      margin-bottom: 4px;\r\n    }\r\n\r\n    .visitor-details {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 16px;\r\n    }\r\n\r\n    .visitor-type {\r\n      font-size: 13px;\r\n      color: rgba(0, 0, 0, 0.6);\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n\r\n    .visitor-entry {\r\n      font-size: 13px;\r\n      color: rgba(0, 0, 0, 0.6);\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 4px;\r\n    }\r\n\r\n    .visitor-entry mat-icon {\r\n      font-size: 16px;\r\n      width: 16px;\r\n      height: 16px;\r\n      color: #1976d2;\r\n    }\r\n\r\n    mat-icon {\r\n      color: #1976d2;\r\n    }\r\n\r\n    .primary .visitor-icon {\r\n      background: #1976d2;\r\n    }\r\n\r\n    .primary .visitor-icon mat-icon {\r\n      color: white;\r\n    }\r\n\r\n    mat-dialog-actions {\r\n      padding: 16px 0 0;\r\n      margin-bottom: -8px;\r\n    }\r\n\r\n    button {\r\n      display: flex;\r\n      align-items: center;\r\n      gap: 8px;\r\n    }\r\n  `]\r\n})\r\nexport class AllVisitorsDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AllVisitorsDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: MergeMultiVisit\r\n  ) {}\r\n} ","import { Routes } from '@angular/router';\r\nimport { BanuLogComponent } from 'app/core/components/admin/banuLog/banuLog.component';\r\nimport { GroupComponent } from 'app/core/components/admin/group/group.component';\r\nimport { LanguageComponent } from 'app/core/components/admin/language/language.component';\r\nimport { LogDtoComponent } from 'app/core/components/admin/log/logDto.component';\r\nimport { LoginComponent } from 'app/core/components/admin/login/login.component';\r\nimport { OperationClaimComponent } from 'app/core/components/admin/operationclaim/operationClaim.component';\r\nimport { TranslateComponent } from 'app/core/components/admin/translate/translate.component';\r\nimport { UserComponent } from 'app/core/components/admin/user/user.component';\r\nimport { VisitComponent } from 'app/core/components/admin/visit/visit.component';\r\nimport { BanuLogsComponent } from 'app/core/components/screens/banu-logs/banu-logs.component';\r\nimport { PersonelVisitComponent } from 'app/core/components/screens/personel-visit/personel-visit.component';\r\nimport { SecurityTransactionsComponent } from 'app/core/components/screens/security-transactions/security-transactions.component';\r\nimport { VisitAddComponent } from 'app/core/components/screens/visit-add/visit-add.component';\r\nimport { ClaimGuard } from 'app/core/guards/claim.guard';\r\nimport { LoginGuard } from 'app/core/guards/login-guard';\r\nimport { LoginRouting } from 'app/core/guards/login-routing';\r\nimport { DashboardComponent } from '../../dashboard/dashboard.component';\r\n\r\nexport const AdminLayoutRoutes: Routes = [\r\n    { path: 'dashboard', component: DashboardComponent, canActivate: [LoginGuard] },\r\n    { \r\n        path: 'user', \r\n        component: UserComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetUsersQuery' }\r\n    },\r\n    { \r\n        path: 'group', \r\n        component: GroupComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetGroupsQuery' }\r\n    },\r\n    { path: 'login', component: LoginComponent, canActivate: [LoginRouting] },\r\n    { \r\n        path: 'language', \r\n        component: LanguageComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetLanguagesQuery' }\r\n    },\r\n    { \r\n        path: 'translate', \r\n        component: TranslateComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetTranslatesQuery' }\r\n    },\r\n    { \r\n        path: 'operationclaim', \r\n        component: OperationClaimComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetOperationClaimsQuery' }\r\n    },\r\n    { \r\n        path: 'log', \r\n        component: LogDtoComponent, \r\n        canActivate: [LoginGuard]\r\n    },\r\n    { \r\n        path: 'banu-log', \r\n        component: BanuLogComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetUsersQuery' }\r\n    },\r\n    { \r\n        path: 'banu-logs', \r\n        component: BanuLogsComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetBanuLogsForSecurityQuery' }\r\n    },\r\n    { \r\n        path: 'security-transactions', \r\n        component: SecurityTransactionsComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetVisitsMultiVisitsQuery' }\r\n    },\r\n    { \r\n        path: 'personel-visit', \r\n        component: PersonelVisitComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetPersonnelVisitsQuery' }\r\n    },\r\n    { \r\n        path: 'visit', \r\n        component: VisitComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'GetUsersQuery' }\r\n    },\r\n    { \r\n        path: 'visit-add', \r\n        component: VisitAddComponent, \r\n        canActivate: [LoginGuard, ClaimGuard],\r\n        data: { claim: 'VehicleEntranceCommand' }\r\n    }\r\n];\r\n","import { CommonModule } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { TranslateLoader, TranslateModule } from '@ngx-translate/core';\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { GroupComponent } from 'app/core/components/admin/group/group.component';\r\nimport { LoginComponent } from 'app/core/components/admin/login/login.component';\r\nimport { UserComponent } from 'app/core/components/admin/user/user.component';\r\nimport { LoginRouting } from 'app/core/guards/login-routing';\r\nimport { TranslationService } from 'app/core/services/Translation.service';\r\nimport { SparkTableComponent } from 'app/core/tables/spark-table/spark-table.component';\r\nimport { NgMultiSelectDropDownModule } from 'ng-multiselect-dropdown';\r\nimport { BanuLogComponent } from '../components/admin/banuLog/banuLog.component';\r\nimport { LanguageComponent } from '../components/admin/language/language.component';\r\nimport { LogDtoComponent } from '../components/admin/log/logDto.component';\r\nimport { MultiVisitersComponent } from '../components/admin/multiVisiters/multiVisiters.component';\r\nimport { OperationClaimComponent } from '../components/admin/operationclaim/operationClaim.component';\r\nimport { TranslateComponent } from '../components/admin/translate/translate.component';\r\nimport { VisitComponent } from '../components/admin/visit/visit.component';\r\nimport { DashboardComponent } from '../components/app/dashboard/dashboard.component';\r\nimport { AdminLayoutRoutes } from '../components/app/layouts/admin-layout/admin-layout.routing';\r\nimport { BanuLogsComponent } from '../components/screens/banu-logs/banu-logs.component';\r\nimport { PersonelVisitComponent } from '../components/screens/personel-visit/personel-visit.component';\r\nimport { AllVisitorsDialogComponent } from '../components/screens/security-transactions/all-visitors-dialog/all-visitors-dialog.component';\r\nimport { RejectDialogComponent } from '../components/screens/security-transactions/reject-dialog/reject-dialog.component';\r\nimport { SecurityTransactionsComponent } from '../components/screens/security-transactions/security-transactions.component';\r\nimport { VisitAddComponent } from '../components/screens/visit-add/visit-add.component';\r\n// export function layoutHttpLoaderFactory(http: HttpClient) {\r\n// \r\n//   return new TranslateHttpLoader(http,'../../../../../../assets/i18n/','.json');\r\n// }\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        RouterModule.forChild(AdminLayoutRoutes),\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        MatButtonModule,\r\n        MatRippleModule,\r\n        MatFormFieldModule,\r\n        MatDatepickerModule,    \r\n        MatNativeDateModule,  \r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatTooltipModule,\r\n        MatTableModule,\r\n        MatPaginatorModule,\r\n        MatSortModule,\r\n        MatCheckboxModule,\r\n        MatSnackBarModule,\r\n        MatIconModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatChipsModule,\r\n        MatCardModule,\r\n        MatTabsModule,\r\n        NgbModule,\r\n        NgMultiSelectDropDownModule,\r\n        SweetAlert2Module,\r\n        TranslateModule.forChild({\r\n            loader: {\r\n                provide: TranslateLoader,\r\n                //useFactory:layoutHttpLoaderFactory,\r\n                useClass: TranslationService,\r\n                deps: [HttpClient]\r\n            }\r\n        })\r\n    ],\r\n    declarations: [\r\n        DashboardComponent,\r\n        UserComponent,\r\n        LoginComponent,\r\n        GroupComponent,\r\n        LanguageComponent,\r\n        TranslateComponent,\r\n        OperationClaimComponent,\r\n        LogDtoComponent,\r\n        BanuLogComponent,\r\n        BanuLogsComponent,\r\n        SecurityTransactionsComponent,\r\n        RejectDialogComponent,\r\n        VisitComponent,\r\n        SparkTableComponent,\r\n        AllVisitorsDialogComponent,\r\n        VisitAddComponent,MultiVisitersComponent\r\n        ,PersonelVisitComponent\r\n    ],\r\n    providers: [\r\n        LoginRouting\r\n    ]\r\n})\r\n\r\nexport class AdminLayoutModule { }\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HeaderNames } from \"./HeaderNames\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\n\r\n/** @private */\r\nexport class AccessTokenHttpClient extends HttpClient {\r\n    private _innerClient: HttpClient;\r\n    _accessToken: string | undefined;\r\n    _accessTokenFactory: (() => string | Promise<string>) | undefined;\r\n\r\n    constructor(innerClient: HttpClient, accessTokenFactory: (() => string | Promise<string>) | undefined) {\r\n        super();\r\n\r\n        this._innerClient = innerClient;\r\n        this._accessTokenFactory = accessTokenFactory;\r\n    }\r\n\r\n    public async send(request: HttpRequest): Promise<HttpResponse> {\r\n        let allowRetry = true;\r\n        if (this._accessTokenFactory && (!this._accessToken || (request.url && request.url.indexOf(\"/negotiate?\") > 0))) {\r\n            // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory\r\n            allowRetry = false;\r\n            this._accessToken = await this._accessTokenFactory();\r\n        }\r\n        this._setAuthorizationHeader(request);\r\n        const response = await this._innerClient.send(request);\r\n\r\n        if (allowRetry && response.statusCode === 401 && this._accessTokenFactory) {\r\n            this._accessToken = await this._accessTokenFactory();\r\n            this._setAuthorizationHeader(request);\r\n            return await this._innerClient.send(request);\r\n        }\r\n        return response;\r\n    }\r\n\r\n    private _setAuthorizationHeader(request: HttpRequest) {\r\n        if (!request.headers) {\r\n            request.headers = {};\r\n        }\r\n        if (this._accessToken) {\r\n            request.headers[HeaderNames.Authorization] = `Bearer ${this._accessToken}`\r\n        }\r\n        // don't remove the header if there isn't an access token factory, the user manually added the header in this case\r\n        else if (this._accessTokenFactory) {\r\n            if (request.headers[HeaderNames.Authorization]) {\r\n                delete request.headers[HeaderNames.Authorization];\r\n            }\r\n        }\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this._innerClient.getCookieString(url);\r\n    }\r\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function getSortDuplicateSortableIdError(id: string): Error {\n  return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n\n/** @docs-private */\nexport function getSortHeaderNotContainedWithinSortError(): Error {\n  return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n\n/** @docs-private */\nexport function getSortHeaderMissingIdError(): Error {\n  return Error(`MatSortHeader must be provided with a unique id.`);\n}\n\n/** @docs-private */\nexport function getSortInvalidDirectionError(direction: string): Error {\n  return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  Directive,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n} from '@angular/core';\nimport {\n  CanDisable,\n  CanDisableCtor,\n  HasInitialized,\n  HasInitializedCtor,\n  mixinDisabled,\n  mixinInitialized,\n} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {SortDirection} from './sort-direction';\nimport {\n  getSortDuplicateSortableIdError,\n  getSortHeaderMissingIdError,\n  getSortInvalidDirectionError,\n} from './sort-errors';\n\n/** Interface for a directive that holds sorting state consumed by `MatSortHeader`. */\nexport interface MatSortable {\n  /** The id of the column being sorted. */\n  id: string;\n\n  /** Starting sort direction. */\n  start: 'asc' | 'desc';\n\n  /** Whether to disable clearing the sorting state. */\n  disableClear: boolean;\n}\n\n/** The current sort state. */\nexport interface Sort {\n  /** The id of the column being sorted. */\n  active: string;\n\n  /** The sort direction. */\n  direction: SortDirection;\n}\n\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nclass MatSortBase {}\nconst _MatSortMixinBase: HasInitializedCtor & CanDisableCtor & typeof MatSortBase =\n    mixinInitialized(mixinDisabled(MatSortBase));\n\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\n@Directive({\n  selector: '[matSort]',\n  exportAs: 'matSort',\n  host: {'class': 'mat-sort'},\n  inputs: ['disabled: matSortDisabled']\n})\nexport class MatSort extends _MatSortMixinBase\n    implements CanDisable, HasInitialized, OnChanges, OnDestroy, OnInit {\n  /** Collection of all registered sortables that this directive manages. */\n  sortables = new Map<string, MatSortable>();\n\n  /** Used to notify any child components listening to state changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /** The id of the most recently sorted MatSortable. */\n  @Input('matSortActive') active: string;\n\n  /**\n   * The direction to set when an MatSortable is initially sorted.\n   * May be overriden by the MatSortable's sort start.\n   */\n  @Input('matSortStart') start: 'asc' | 'desc' = 'asc';\n\n  /** The sort direction of the currently active MatSortable. */\n  @Input('matSortDirection')\n  get direction(): SortDirection { return this._direction; }\n  set direction(direction: SortDirection) {\n    if (direction && direction !== 'asc' && direction !== 'desc' &&\n      (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortInvalidDirectionError(direction);\n    }\n    this._direction = direction;\n  }\n  private _direction: SortDirection = '';\n\n  /**\n   * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n   * May be overriden by the MatSortable's disable clear input.\n   */\n  @Input('matSortDisableClear')\n  get disableClear(): boolean { return this._disableClear; }\n  set disableClear(v: boolean) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  /** Event emitted when the user changes either the active sort or sort direction. */\n  @Output('matSortChange') readonly sortChange: EventEmitter<Sort> = new EventEmitter<Sort>();\n\n  /**\n   * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n   * collection of MatSortables.\n   */\n  register(sortable: MatSortable): void {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!sortable.id) {\n        throw getSortHeaderMissingIdError();\n      }\n\n      if (this.sortables.has(sortable.id)) {\n        throw getSortDuplicateSortableIdError(sortable.id);\n      }\n    }\n\n    this.sortables.set(sortable.id, sortable);\n  }\n\n  /**\n   * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n   * collection of contained MatSortables.\n   */\n  deregister(sortable: MatSortable): void {\n    this.sortables.delete(sortable.id);\n  }\n\n  /** Sets the active sort id and determines the new sort direction. */\n  sort(sortable: MatSortable): void {\n    if (this.active != sortable.id) {\n      this.active = sortable.id;\n      this.direction = sortable.start ? sortable.start : this.start;\n    } else {\n      this.direction = this.getNextSortDirection(sortable);\n    }\n\n    this.sortChange.emit({active: this.active, direction: this.direction});\n  }\n\n  /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n  getNextSortDirection(sortable: MatSortable): SortDirection {\n    if (!sortable) { return ''; }\n\n    // Get the sort direction cycle with the potential sortable overrides.\n    const disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;\n    let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n\n    // Get and return the next direction in the cycle\n    let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n    if (nextDirectionIndex >= sortDirectionCycle.length) { nextDirectionIndex = 0; }\n    return sortDirectionCycle[nextDirectionIndex];\n  }\n\n  ngOnInit() {\n    this._markInitialized();\n  }\n\n  ngOnChanges() {\n    this._stateChanges.next();\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.complete();\n  }\n\n  static ngAcceptInputType_disableClear: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start: 'asc' | 'desc',\n                               disableClear: boolean): SortDirection[] {\n  let sortOrder: SortDirection[] = ['asc', 'desc'];\n  if (start == 'desc') { sortOrder.reverse(); }\n  if (!disableClear) { sortOrder.push(''); }\n\n  return sortOrder;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  keyframes,\n  AnimationTriggerMetadata, query, animateChild,\n} from '@angular/animations';\nimport {AnimationCurves, AnimationDurations} from '@angular/material/core';\n\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' +\n                                  AnimationCurves.STANDARD_CURVE;\n\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nexport const matSortAnimations: {\n  readonly indicator: AnimationTriggerMetadata;\n  readonly leftPointer: AnimationTriggerMetadata;\n  readonly rightPointer: AnimationTriggerMetadata;\n  readonly arrowOpacity: AnimationTriggerMetadata;\n  readonly arrowPosition: AnimationTriggerMetadata;\n  readonly allowChildren: AnimationTriggerMetadata;\n} = {\n  /** Animation that moves the sort indicator. */\n  indicator: trigger('indicator', [\n    state('active-asc, asc', style({transform: 'translateY(0px)'})),\n    // 10px is the height of the sort indicator, minus the width of the pointers\n    state('active-desc, desc', style({transform: 'translateY(10px)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n  leftPointer: trigger('leftPointer', [\n    state('active-asc, asc', style({transform: 'rotate(-45deg)'})),\n    state('active-desc, desc', style({transform: 'rotate(45deg)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n  rightPointer: trigger('rightPointer', [\n    state('active-asc, asc', style({transform: 'rotate(45deg)'})),\n    state('active-desc, desc', style({transform: 'rotate(-45deg)'})),\n    transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION))\n  ]),\n\n  /** Animation that controls the arrow opacity. */\n  arrowOpacity: trigger('arrowOpacity', [\n    state('desc-to-active, asc-to-active, active', style({opacity: 1})),\n    state('desc-to-hint, asc-to-hint, hint', style({opacity: .54})),\n    state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void',\n        style({opacity: 0})),\n    // Transition between all states except for immediate transitions\n    transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n    transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n  ]),\n\n  /**\n   * Animation for the translation of the arrow as a whole. States are separated into two\n   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n   * peek, and active. The other states define a specific animation (source-to-destination)\n   * and are determined as a function of their prev user-perceived state and what the next state\n   * should be.\n   */\n  arrowPosition: trigger('arrowPosition', [\n    // Hidden Above => Hint Center\n    transition('* => desc-to-hint, * => desc-to-active',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(-25%)'}),\n          style({transform: 'translateY(0)'})\n        ]))),\n    // Hint Center => Hidden Below\n    transition('* => hint-to-desc, * => active-to-desc',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(0)'}),\n          style({transform: 'translateY(25%)'})\n        ]))),\n    // Hidden Below => Hint Center\n    transition('* => asc-to-hint, * => asc-to-active',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(25%)'}),\n          style({transform: 'translateY(0)'})\n        ]))),\n    // Hint Center => Hidden Above\n    transition('* => hint-to-asc, * => active-to-asc',\n        animate(SORT_ANIMATION_TRANSITION, keyframes([\n          style({transform: 'translateY(0)'}),\n          style({transform: 'translateY(-25%)'})\n        ]))),\n    state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active',\n        style({transform: 'translateY(0)'})),\n    state('hint-to-desc, active-to-desc, desc',\n        style({transform: 'translateY(-25%)'})),\n    state('hint-to-asc, active-to-asc, asc',\n        style({transform: 'translateY(25%)'})),\n  ]),\n\n  /** Necessary trigger that calls animate on children animations. */\n  allowChildren: trigger('allowChildren', [\n    transition('* <=> *', [\n      query('@*', animateChild(), {optional: true})\n    ])\n  ]),\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, SkipSelf, Optional} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\n@Injectable({providedIn: 'root'})\nexport class MatSortHeaderIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /**\n   * ARIA label for the sorting button.\n   * @deprecated Not used anymore. To be removed.\n   * @breaking-change 8.0.0\n   */\n  sortButtonLabel = (id: string) => {\n    return `Change sorting for ${id}`;\n  }\n}\n/** @docs-private */\nexport function MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl: MatSortHeaderIntl) {\n  return parentIntl || new MatSortHeaderIntl();\n}\n\n/** @docs-private */\nexport const MAT_SORT_HEADER_INTL_PROVIDER = {\n  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n  provide: MatSortHeaderIntl,\n  deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewEncapsulation,\n  Inject,\n  ElementRef,\n  AfterViewInit,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {ENTER, SPACE} from '@angular/cdk/keycodes';\nimport {merge, Subscription} from 'rxjs';\nimport {MatSort, MatSortable} from './sort';\nimport {matSortAnimations} from './sort-animations';\nimport {SortDirection} from './sort-direction';\nimport {getSortHeaderNotContainedWithinSortError} from './sort-errors';\nimport {MatSortHeaderIntl} from './sort-header-intl';\n\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nclass MatSortHeaderBase {}\nconst _MatSortHeaderMixinBase: CanDisableCtor & typeof MatSortHeaderBase =\n    mixinDisabled(MatSortHeaderBase);\n\n/**\n * Valid positions for the arrow to be in for its opacity and translation. If the state is a\n * sort direction, the position of the arrow will be above/below and opacity 0. If the state is\n * hint, the arrow will be in the center with a slight opacity. Active state means the arrow will\n * be fully opaque in the center.\n *\n * @docs-private\n */\nexport type ArrowViewState = SortDirection | 'hint' | 'active';\n\n/**\n * States describing the arrow's animated position (animating fromState to toState).\n * If the fromState is not defined, there will be no animated transition to the toState.\n * @docs-private\n */\nexport interface ArrowViewStateTransition {\n  fromState?: ArrowViewState;\n  toState: ArrowViewState;\n}\n\n/** Column definition associated with a `MatSortHeader`. */\ninterface MatSortHeaderColumnDef {\n  name: string;\n}\n\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\n@Component({\n  selector: '[mat-sort-header]',\n  exportAs: 'matSortHeader',\n  templateUrl: 'sort-header.html',\n  styleUrls: ['sort-header.css'],\n  host: {\n    'class': 'mat-sort-header',\n    '(click)': '_handleClick()',\n    '(keydown)': '_handleKeydown($event)',\n    '(mouseenter)': '_setIndicatorHintVisible(true)',\n    '(mouseleave)': '_setIndicatorHintVisible(false)',\n    '[attr.aria-sort]': '_getAriaSortAttribute()',\n    '[class.mat-sort-header-disabled]': '_isDisabled()',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['disabled'],\n  animations: [\n    matSortAnimations.indicator,\n    matSortAnimations.leftPointer,\n    matSortAnimations.rightPointer,\n    matSortAnimations.arrowOpacity,\n    matSortAnimations.arrowPosition,\n    matSortAnimations.allowChildren,\n  ]\n})\nexport class MatSortHeader extends _MatSortHeaderMixinBase\n    implements CanDisable, MatSortable, OnDestroy, OnInit, AfterViewInit {\n  private _rerenderSubscription: Subscription;\n\n  /**\n   * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n   * provide an affordance that the header is sortable by showing on focus and hover.\n   */\n  _showIndicatorHint: boolean = false;\n\n  /**\n   * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n   * position through the animation. If animations are currently disabled, the fromState is removed\n   * so that there is no animation displayed.\n   */\n  _viewState: ArrowViewStateTransition;\n\n  /** The direction the arrow should be facing according to the current state. */\n  _arrowDirection: SortDirection = '';\n\n  /**\n   * Whether the view state animation should show the transition between the `from` and `to` states.\n   */\n  _disableViewStateAnimation = false;\n\n  /**\n   * ID of this sort header. If used within the context of a CdkColumnDef, this will default to\n   * the column's name.\n   */\n  @Input('mat-sort-header') id: string;\n\n  /** Sets the position of the arrow that displays when sorted. */\n  @Input() arrowPosition: 'before' | 'after' = 'after';\n\n  /** Overrides the sort start value of the containing MatSort for this MatSortable. */\n  @Input() start: 'asc' | 'desc';\n\n  /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n  @Input()\n  get disableClear(): boolean { return this._disableClear; }\n  set disableClear(v) { this._disableClear = coerceBooleanProperty(v); }\n  private _disableClear: boolean;\n\n  constructor(public _intl: MatSortHeaderIntl,\n              changeDetectorRef: ChangeDetectorRef,\n              // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n              // tslint:disable-next-line: lightweight-tokens\n              @Optional() public _sort: MatSort,\n              @Inject('MAT_SORT_HEADER_COLUMN_DEF') @Optional()\n                  public _columnDef: MatSortHeaderColumnDef,\n              private _focusMonitor: FocusMonitor,\n              private _elementRef: ElementRef<HTMLElement>) {\n    // Note that we use a string token for the `_columnDef`, because the value is provided both by\n    // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n    // and we want to avoid having the sort header depending on the CDK table because\n    // of this single reference.\n    super();\n\n    if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getSortHeaderNotContainedWithinSortError();\n    }\n\n    this._rerenderSubscription = merge(_sort.sortChange, _sort._stateChanges, _intl.changes)\n        .subscribe(() => {\n          if (this._isSorted()) {\n            this._updateArrowDirection();\n          }\n\n          // If this header was recently active and now no longer sorted, animate away the arrow.\n          if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = false;\n            this._setAnimationTransitionState({fromState: 'active', toState: this._arrowDirection});\n          }\n\n          changeDetectorRef.markForCheck();\n        });\n  }\n\n  ngOnInit() {\n    if (!this.id && this._columnDef) {\n      this.id = this._columnDef.name;\n    }\n\n    // Initialize the direction of the arrow and set the view state to be immediately that state.\n    this._updateArrowDirection();\n    this._setAnimationTransitionState(\n        {toState: this._isSorted() ? 'active' : this._arrowDirection});\n\n    this._sort.register(this);\n  }\n\n  ngAfterViewInit() {\n    // We use the focus monitor because we also want to style\n    // things differently based on the focus origin.\n    this._focusMonitor.monitor(this._elementRef, true)\n        .subscribe(origin => this._setIndicatorHintVisible(!!origin));\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._sort.deregister(this);\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /**\n   * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n   * user showing what the active sort will become. If set to false, the arrow will fade away.\n   */\n  _setIndicatorHintVisible(visible: boolean) {\n    // No-op if the sort header is disabled - should not make the hint visible.\n    if (this._isDisabled() && visible) { return; }\n\n    this._showIndicatorHint = visible;\n\n    if (!this._isSorted()) {\n      this._updateArrowDirection();\n      if (this._showIndicatorHint) {\n        this._setAnimationTransitionState({fromState: this._arrowDirection, toState: 'hint'});\n      } else {\n        this._setAnimationTransitionState({fromState: 'hint', toState: this._arrowDirection});\n      }\n    }\n  }\n\n  /**\n   * Sets the animation transition view state for the arrow's position and opacity. If the\n   * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n   * no animation appears.\n   */\n  _setAnimationTransitionState(viewState: ArrowViewStateTransition) {\n    this._viewState = viewState;\n\n    // If the animation for arrow position state (opacity/translation) should be disabled,\n    // remove the fromState so that it jumps right to the toState.\n    if (this._disableViewStateAnimation) {\n      this._viewState = {toState: viewState.toState};\n    }\n  }\n\n  /** Triggers the sort on this sort header and removes the indicator hint. */\n  _toggleOnInteraction() {\n\n    this._sort.sort(this);\n\n    // Do not show the animation if the header was already shown in the right position.\n    if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n      this._disableViewStateAnimation = true;\n    }\n\n    // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into\n    // the direction it is facing.\n    const viewState: ArrowViewStateTransition = this._isSorted() ?\n        {fromState: this._arrowDirection, toState: 'active'} :\n        {fromState: 'active', toState: this._arrowDirection};\n    this._setAnimationTransitionState(viewState);\n\n    this._showIndicatorHint = false;\n  }\n\n  _handleClick() {\n    if (!this._isDisabled()) {\n      this._toggleOnInteraction();\n    }\n  }\n\n  _handleKeydown(event: KeyboardEvent) {\n    if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n      event.preventDefault();\n      this._toggleOnInteraction();\n    }\n  }\n\n  /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n  _isSorted() {\n    return this._sort.active == this.id &&\n        (this._sort.direction === 'asc' || this._sort.direction === 'desc');\n  }\n\n  /** Returns the animation state for the arrow direction (indicator and pointers). */\n  _getArrowDirectionState() {\n    return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n  }\n\n  /** Returns the arrow position state (opacity, translation). */\n  _getArrowViewState() {\n    const fromState = this._viewState.fromState;\n    return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n  }\n\n  /**\n   * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n   * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n   * active sorted direction. The reason this is updated through a function is because the direction\n   * should only be changed at specific times - when deactivated but the hint is displayed and when\n   * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n   * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n   * preserving its direction, even though the next sort direction is actually different and should\n   * only be changed once the arrow displays again (hint or activation).\n   */\n  _updateArrowDirection() {\n    this._arrowDirection = this._isSorted() ?\n        this._sort.direction :\n        (this.start || this._sort.start);\n  }\n\n  _isDisabled() {\n    return this._sort.disabled || this.disabled;\n  }\n\n  /**\n   * Gets the aria-sort attribute that should be applied to this sort header. If this header\n   * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n   * says that the aria-sort property should only be present on one header at a time, so removing\n   * ensures this is true.\n   */\n  _getAriaSortAttribute() {\n    if (!this._isSorted()) {\n      return 'none';\n    }\n\n    return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n  }\n\n  /** Whether the arrow inside the sort header should be rendered. */\n  _renderArrow() {\n    return !this._isDisabled() || this._isSorted();\n  }\n\n  static ngAcceptInputType_disableClear: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatSortHeader} from './sort-header';\nimport {MatSort} from './sort';\nimport {MAT_SORT_HEADER_INTL_PROVIDER} from './sort-header-intl';\nimport {CommonModule} from '@angular/common';\n\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MatSort, MatSortHeader],\n  declarations: [MatSort, MatSortHeader],\n  providers: [MAT_SORT_HEADER_INTL_PROVIDER]\n})\nexport class MatSortModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport type SortDirection = 'asc' | 'desc' | '';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './sort-module';\nexport * from './sort-direction';\nexport * from './sort-header';\nexport * from './sort-header-intl';\nexport * from './sort';\nexport * from './sort-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nexport abstract class HeaderNames {\r\n    static readonly Authorization = \"Authorization\";\r\n    static readonly Cookie = \"Cookie\";\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport {environment} from \"environments/environment\"\r\nimport { Observable } from 'rxjs';\r\nimport { OperationClaim } from '../Models/OperationClaim';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class OperationClaimService {\r\n\r\n  constructor(private readonly _httpClient: HttpClient) { }\r\n\r\n\r\n  getOperationClaimList(): Observable<OperationClaim[]> {\r\n\r\n    return this._httpClient.get<OperationClaim[]>(environment.getApiUrl + '/operation-claims/')\r\n  }\r\n\r\n  getOperationClaim(id: number): Observable<OperationClaim> {\r\n    return this._httpClient.get<OperationClaim>(environment.getApiUrl  + `/operation-claims/${id}`)\r\n  }\r\n\r\n  updateOperationClaim(operationClaim: OperationClaim): Observable<any> {\r\n    return this._httpClient.put(environment.getApiUrl  + \"/operation-claims/\", operationClaim, { responseType: 'text' });\r\n\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsYW5ndWFnZS5jb21wb25lbnQuc2NzcyJ9 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"welcome-container\\\">\\r\\n      <div class=\\\"welcome-content text-center\\\">\\r\\n        <img src=\\\"../../../../../assets/img/analogo.jpg\\\" alt=\\\"Logo\\\" class=\\\"welcome-logo\\\">\\r\\n        <h1 class=\\\"mt-4\\\">Misafir Takip Sistemine Hoş Geldiniz</h1>\\r\\n        <p class=\\\"welcome-text\\\">\\r\\n          Bu platform üzerinden Misafir Takip Sistemi işlemleri gerçekleştirebilirsiniz.\\r\\n        </p>\\r\\n        <div class=\\\"quick-links mt-5\\\">\\r\\n          <div class=\\\"row justify-content-center\\\">\\r\\n            <!-- Admin Kullanıcıları İçin -->\\r\\n            <div class=\\\"col-md-4 mb-4\\\" *ngIf=\\\"checkClaim('GetUsersQuery')\\\">\\r\\n              <div class=\\\"quick-link-card\\\">\\r\\n                <mat-icon class=\\\"quick-link-icon\\\">people</mat-icon>\\r\\n                <h3>Ziyaretçi Yönetimi</h3>\\r\\n                <p>Ziyaretçi kayıtlarını görüntüleyin ve yönetin</p>\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mt-3\\\" routerLink=\\\"/visit\\\">\\r\\n                  <mat-icon>arrow_forward</mat-icon> Ziyaretçileri Görüntüle\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Güvenlik Personeli İçin -->\\r\\n            <div class=\\\"col-md-4 mb-4\\\" *ngIf=\\\"checkClaim('GetUsersQuery')\\\">\\r\\n              <div class=\\\"quick-link-card\\\">\\r\\n                <mat-icon class=\\\"quick-link-icon\\\">security</mat-icon>\\r\\n                <h3>Güvenlik İşlemleri</h3>\\r\\n                <p>Güvenlik raporlarını ve işlemlerini takip edin</p>\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mt-3\\\" routerLink=\\\"/security-transactions\\\">\\r\\n                  <mat-icon>arrow_forward</mat-icon> Güvenlik İşlemleri\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Raporlama Yetkisi Olanlar İçin -->\\r\\n            <div class=\\\"col-md-4 mb-4\\\" *ngIf=\\\"checkClaim('GetUsersQuery')\\\">\\r\\n              <div class=\\\"quick-link-card\\\">\\r\\n                <mat-icon class=\\\"quick-link-icon\\\">assessment</mat-icon>\\r\\n                <h3>Raporlama</h3>\\r\\n                <p>Detaylı raporları görüntüleyin ve analiz edin</p>\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mt-3\\\" routerLink=\\\"/banu-logs\\\">\\r\\n                  <mat-icon>arrow_forward</mat-icon> Raporları Görüntüle\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n\\r\\n            <!-- Ziyaretçi Talebi Oluşturma -->\\r\\n            <div class=\\\"col-md-4 mb-4\\\" *ngIf=\\\"checkClaim('GetUsersQuery')\\\">\\r\\n              <div class=\\\"quick-link-card\\\">\\r\\n                <mat-icon class=\\\"quick-link-icon\\\">add_circle</mat-icon>\\r\\n                <h3>Ziyaret Talebi</h3>\\r\\n                <p>Yeni bir ziyaret talebi oluşturun</p>\\r\\n                <button mat-raised-button color=\\\"primary\\\" class=\\\"mt-3\\\" routerLink=\\\"/visit-add\\\">\\r\\n                  <mat-icon>arrow_forward</mat-icon> Talep Oluştur\\r\\n                </button>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AuthService } from \"../components/admin/login/Services/auth.service\";\r\n\r\n\r\n@Injectable()\r\nexport class LoginRouting implements CanActivate {\r\n\r\n    constructor(private router: Router, private authService: AuthService) { }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | UrlTree | Observable<boolean | UrlTree> | Promise<boolean | UrlTree> {\r\n        return this.checkClaimForRoute(state.url);\r\n\r\n    }\r\n\r\n    async checkClaimForRoute(routePath: string): Promise<boolean> {\r\n       \r\n        if (this.authService.loggedIn()) {\r\n            this.router.navigate([\"dashboard\"]);\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n}","export default \":host ::ng-deep .multiselect-dropdown .dropdown-btn {\\n  display: inline-block;\\n  border: 1px solid #adadad;\\n  width: 100%;\\n  padding: 6px 12px;\\n  margin-bottom: 0;\\n  font-size: 12px;\\n  font-weight: 400;\\n  line-height: 1.1;\\n  text-align: left;\\n  vertical-align: middle;\\n  cursor: pointer;\\n  background-image: none;\\n  border-radius: 4px;\\n}\\n\\n:host ::ng-deep .multiselect-dropdown .dropdown-btn .selected-item {\\n  background: #9c27b0 !important;\\n}\\n\\n:host ::ng-deep .multiselect-item-checkbox > input[type=checkbox]:checked + div:before {\\n  background: #9c27b0 !important;\\n}\\n\\n.no-sort::after {\\n  display: none !important;\\n  background-image: url() !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQUFKOztBQUtBO0VBRUksOEJBQUE7QUFISjs7QUFNQTtFQUNJLDhCQUFBO0FBSEo7O0FBTUE7RUFDRSx3QkFBQTtFQUNBLGtDQUFBO0FBSEYiLCJmaWxlIjoidXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAubXVsdGlzZWxlY3QtZHJvcGRvd24gLmRyb3Bkb3duLWJ0biBcclxue1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2FkYWRhZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogNnB4IDEycHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgIFxyXG4gICAgXHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAubXVsdGlzZWxlY3QtZHJvcGRvd24gLmRyb3Bkb3duLWJ0biAuc2VsZWN0ZWQtaXRlbVxyXG57XHJcbiAgICBiYWNrZ3JvdW5kOiAjOWMyN2IwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAubXVsdGlzZWxlY3QtaXRlbS1jaGVja2JveCA+aW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZCArIGRpdjpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogIzljMjdiMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubm8tc29ydDo6YWZ0ZXIge1xyXG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuIl19 */\";","export default \".welcome-container {\\r\\n  padding: 40px 20px;\\r\\n  min-height: calc(100vh - 200px);\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n}\\r\\n\\r\\n.welcome-content {\\r\\n  max-width: 1200px;\\r\\n  margin: 0 auto;\\r\\n}\\r\\n\\r\\n.welcome-logo {\\r\\n  width: 180px;\\r\\n  height: 180px;\\r\\n  -o-object-fit: contain;\\r\\n     object-fit: contain;\\r\\n  border-radius: 50%;\\r\\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\\r\\n  background: white;\\r\\n  padding: 20px;\\r\\n}\\r\\n\\r\\nh1 {\\r\\n  color: #333;\\r\\n  font-size: 2.5rem;\\r\\n  margin-bottom: 1.5rem;\\r\\n  font-weight: 600;\\r\\n}\\r\\n\\r\\n.welcome-text {\\r\\n  color: #666;\\r\\n  font-size: 1.2rem;\\r\\n  max-width: 800px;\\r\\n  margin: 0 auto 2rem;\\r\\n  line-height: 1.6;\\r\\n}\\r\\n\\r\\n.quick-links {\\r\\n  margin-top: 3rem;\\r\\n}\\r\\n\\r\\n.quick-link-card {\\r\\n  background: white;\\r\\n  border-radius: 12px;\\r\\n  padding: 30px 20px;\\r\\n  margin: 15px;\\r\\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\\r\\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\\r\\n  height: 100%;\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  align-items: center;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.quick-link-card:hover {\\r\\n  transform: translateY(-5px);\\r\\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.1);\\r\\n}\\r\\n\\r\\n.quick-link-icon {\\r\\n  font-size: 40px;\\r\\n  width: 40px;\\r\\n  height: 40px;\\r\\n  color: #e91e63;\\r\\n  margin-bottom: 15px;\\r\\n}\\r\\n\\r\\n.quick-link-card h3 {\\r\\n  color: #333;\\r\\n  font-size: 1.4rem;\\r\\n  margin-bottom: 15px;\\r\\n  font-weight: 500;\\r\\n}\\r\\n\\r\\n.quick-link-card p {\\r\\n  color: #666;\\r\\n  font-size: 1rem;\\r\\n  line-height: 1.5;\\r\\n  margin-bottom: 20px;\\r\\n  flex-grow: 1;\\r\\n}\\r\\n\\r\\nbutton {\\r\\n  width: 100%;\\r\\n  max-width: 250px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLCtCQUErQjtFQUMvQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBbUI7S0FBbkIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQix5Q0FBeUM7RUFDekMsaUJBQWlCO0VBQ2pCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIscUJBQXFCO0VBQ3JCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osMENBQTBDO0VBQzFDLHFEQUFxRDtFQUNyRCxZQUFZO0VBQ1osYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLHlDQUF5QztBQUMzQzs7QUFFQTtFQUNFLGVBQWU7RUFDZixXQUFXO0VBQ1gsWUFBWTtFQUNaLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNvbnRhaW5lciB7XHJcbiAgcGFkZGluZzogNDBweCAyMHB4O1xyXG4gIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAyMDBweCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ud2VsY29tZS1jb250ZW50IHtcclxuICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLndlbGNvbWUtbG9nbyB7XHJcbiAgd2lkdGg6IDE4MHB4O1xyXG4gIGhlaWdodDogMTgwcHg7XHJcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuaDEge1xyXG4gIGNvbG9yOiAjMzMzO1xyXG4gIGZvbnQtc2l6ZTogMi41cmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4ud2VsY29tZS10ZXh0IHtcclxuICBjb2xvcjogIzY2NjtcclxuICBmb250LXNpemU6IDEuMnJlbTtcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvIDJyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjtcclxufVxyXG5cclxuLnF1aWNrLWxpbmtzIHtcclxuICBtYXJnaW4tdG9wOiAzcmVtO1xyXG59XHJcblxyXG4ucXVpY2stbGluay1jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gIHBhZGRpbmc6IDMwcHggMjBweDtcclxuICBtYXJnaW46IDE1cHg7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5xdWljay1saW5rLWNhcmQ6aG92ZXIge1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcclxuICBib3gtc2hhZG93OiAwIDZweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufVxyXG5cclxuLnF1aWNrLWxpbmstaWNvbiB7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBjb2xvcjogI2U5MWU2MztcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4ucXVpY2stbGluay1jYXJkIGgzIHtcclxuICBjb2xvcjogIzMzMztcclxuICBmb250LXNpemU6IDEuNHJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5xdWljay1saW5rLWNhcmQgcCB7XHJcbiAgY29sb3I6ICM2NjY7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBmbGV4LWdyb3c6IDE7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiAyNTBweDtcclxufVxyXG4iXX0= */\";","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 style=\\\"padding-bottom: 30px;\\\" class=\\\"card-title\\\">{{'VisitList'| translate}}</h4>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"visitList\\\">\\r\\n                <div style=\\\"font-weight: bold;\\\" class=\\\"col-md-4\\\">\\r\\n                  {{ totalItemCount }} kayıt arasından {{ visitList.length }} kayıt listeleniyor\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <div class=\\\"pagination-container\\\" *ngIf=\\\"totalPages > 0\\\">\\r\\n                    <nav aria-label=\\\"Page navigation\\\">\\r\\n                      <ul class=\\\"pagination\\\">\\r\\n                        <!-- Önceki Sayfa Butonu -->\\r\\n                        <li class=\\\"page-item\\\" [class.disabled]=\\\"page === 1\\\">\\r\\n                          <a class=\\\"page-link\\\" (click)=\\\"onPageChange(page - 1)\\\" aria-label=\\\"Previous\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                          </a>\\r\\n                        </li>\\r\\n                \\r\\n                        <!-- Sayfa Numaraları ve \\\"...\\\" İşaretleri -->\\r\\n                        <li class=\\\"page-item\\\" *ngFor=\\\"let p of getPagination()\\\" [class.active]=\\\"p === page\\\">\\r\\n                          <a class=\\\"page-link\\\" *ngIf=\\\"p !== -1\\\" (click)=\\\"onPageChange(p)\\\">{{ p }}</a>\\r\\n                          <span class=\\\"page-link dots\\\" *ngIf=\\\"p === -1\\\">...</span>\\r\\n                        </li>\\r\\n                \\r\\n                        <!-- Sonraki Sayfa Butonu -->\\r\\n                        <li class=\\\"page-item\\\" [class.disabled]=\\\"page === totalPages\\\">\\r\\n                          <a class=\\\"page-link\\\" (click)=\\\"onPageChange(page + 1)\\\" aria-label=\\\"Next\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                          </a>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                    </nav>\\r\\n                  </div>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <mat-form-field class=\\\"float-right\\\">\\r\\n                    <mat-label>Filter</mat-label>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"w-100\\\">\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                 \\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"createdDate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.createdDate | date:'dd.MM.yyyy HH:mm'}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"personnelId\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PersonnelId'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.personnelId}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"visitorFullName\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'VisitorFullName'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"font-weight-bold\\\">{{element.visitorFullName}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"visitorLicensePlate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'VisitorLicensePlate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <span *ngIf=\\\"element.vehicleEntry\\\" class=\\\"badge badge-info\\\">\\r\\n                         {{element.visitorLicensePlate}}\\r\\n                       </span>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"vehicleEntry\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VehicleEntry'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\"> \\r\\n                        <mat-checkbox [checked]=\\\"element.vehicleEntry\\\" [disabled]=\\\"true\\\"></mat-checkbox>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"multiPersonVisit\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'MultiPersonVisit'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <mat-icon *ngIf=\\\"element.multiPersonVisit\\\" class=\\\"text-info\\\">group</mat-icon>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"isConfirm\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'IsConfirm'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <mat-icon [class.text-success]=\\\"element.isConfirm\\\" [class.text-danger]=\\\"!element.isConfirm\\\">\\r\\n                         {{element.isConfirm ? 'check_circle' : 'cancel'}}\\r\\n                       </mat-icon>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"isExit\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'IsExit'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <mat-icon [class.text-success]=\\\"element.isExit\\\" [class.text-warning]=\\\"!element.isExit\\\">\\r\\n                         {{element.isExit ? 'exit_to_app' : 'schedule'}}\\r\\n                       </mat-icon>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"status\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'Status'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <mat-chip-list>\\r\\n                         <mat-chip [color]=\\\"element.status ? 'primary' : 'warn'\\\" selected>\\r\\n                           {{element.status ? 'Aktif' : 'Pasif' | translate}}\\r\\n                         </mat-chip>\\r\\n                       </mat-chip-list>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                  \\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"isReject\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'IsReject'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <span *ngIf=\\\"element.isReject\\\" class=\\\"badge badge-danger\\\">\\r\\n                         {{element.reasonForRejection}}\\r\\n                       </span>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"approvalDate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'ApprovalDate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.approvalDate}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"exitDate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'ExitDate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <span *ngIf=\\\"element.exitDate\\\" class=\\\"text-danger\\\">\\r\\n                         {{element.exitDate | date:'dd.MM.yyyy HH:mm'}}\\r\\n                       </span>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"visitStartDate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'VisitStartDate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <span class=\\\"text-primary\\\">\\r\\n                         {{element.visitStartDate | date:'dd.MM.yyyy HH:mm'}}\\r\\n                       </span>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"visitEndDate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"bg-light\\\">{{'VisitEndDate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                       <span class=\\\"text-primary\\\">\\r\\n                         {{element.visitEndDate | date:'dd.MM.yyyy HH:mm'}}\\r\\n                       </span>\\r\\n                     </td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\" class=\\\"bg-light\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" \\r\\n                    [class.bg-warning-light]=\\\"row.isReject\\\"\\r\\n                    [class.bg-success-light]=\\\"row.isConfirm && !row.isExit\\\"\\r\\n                    [class.bg-info-light]=\\\"row.isExit\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow>\\r\\n                  <td class=\\\"mat-cell text-center\\\" [attr.colspan]=\\\"displayedColumns.length\\\">\\r\\n                    {{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"\\r\\n                  </td>\\r\\n                </tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\" [pageSize]=\\\"pageSize\\\"></mat-paginator>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n<swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon = \\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n\\t[confirmButtonText] = \\\"'OK'\\\"[cancelButtonText] = \\\"'Cancel'\\\" >\\r\\n</swal>\\r\\n\\r\\n\";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortError, HttpError, TimeoutError } from \"./Errors\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\nexport class XhrHttpClient extends HttpClient {\r\n    private readonly _logger: ILogger;\r\n\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n        this._logger = logger;\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return new Promise<HttpResponse>((resolve, reject) => {\r\n            const xhr = new XMLHttpRequest();\r\n\r\n            xhr.open(request.method!, request.url!, true);\r\n            xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;\r\n            xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\r\n            if (request.content === \"\") {\r\n                request.content = undefined;\r\n            }\r\n            if (request.content) {\r\n                // Explicitly setting the Content-Type header for React Native on Android platform.\r\n                if (isArrayBuffer(request.content)) {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"application/octet-stream\");\r\n                } else {\r\n                    xhr.setRequestHeader(\"Content-Type\", \"text/plain;charset=UTF-8\");\r\n                }\r\n            }\r\n\r\n            const headers = request.headers;\r\n            if (headers) {\r\n                Object.keys(headers)\r\n                    .forEach((header) => {\r\n                        xhr.setRequestHeader(header, headers[header]);\r\n                    });\r\n            }\r\n\r\n            if (request.responseType) {\r\n                xhr.responseType = request.responseType;\r\n            }\r\n\r\n            if (request.abortSignal) {\r\n                request.abortSignal.onabort = () => {\r\n                    xhr.abort();\r\n                    reject(new AbortError());\r\n                };\r\n            }\r\n\r\n            if (request.timeout) {\r\n                xhr.timeout = request.timeout;\r\n            }\r\n\r\n            xhr.onload = () => {\r\n                if (request.abortSignal) {\r\n                    request.abortSignal.onabort = null;\r\n                }\r\n\r\n                if (xhr.status >= 200 && xhr.status < 300) {\r\n                    resolve(new HttpResponse(xhr.status, xhr.statusText, xhr.response || xhr.responseText));\r\n                } else {\r\n                    reject(new HttpError(xhr.response || xhr.responseText || xhr.statusText, xhr.status));\r\n                }\r\n            };\r\n\r\n            xhr.onerror = () => {\r\n                this._logger.log(LogLevel.Warning, `Error from HTTP request. ${xhr.status}: ${xhr.statusText}.`);\r\n                reject(new HttpError(xhr.statusText, xhr.status));\r\n            };\r\n\r\n            xhr.ontimeout = () => {\r\n                this._logger.log(LogLevel.Warning, `Timeout from HTTP request.`);\r\n                reject(new TimeoutError());\r\n            };\r\n\r\n            xhr.send(request.content);\r\n        });\r\n    }\r\n}\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { SignalRService } from '../../admin/user/Services/signalr.service';\r\nimport { MergeMultiVisit } from '../../admin/visit/models/mergeMultiVisit';\r\nimport { VisitService } from '../../admin/visit/services/visit.service';\r\nimport { AllVisitorsDialogComponent } from './all-visitors-dialog/all-visitors-dialog.component';\r\nimport { RejectDialogComponent } from './reject-dialog/reject-dialog.component';\r\n\r\ninterface Visitor {\r\n  name: string;\r\n  surname: string;\r\n}\r\n\r\ninterface SecurityVisit {\r\n  id: number;\r\n  visitors: Visitor[];\r\n  totalVisitors: number;\r\n  licensePlate?: string;\r\n  isVehicle: boolean;\r\n  entryDate: Date;\r\n  exitDate: Date | null;\r\n  status: 'pending' | 'approved' | 'rejected';\r\n  rejectReason?: string;\r\n}\r\n\r\n@Component({\r\n  selector: 'app-security-transactions',\r\n  templateUrl: './security-transactions.component.html',\r\n  styleUrls: ['./security-transactions.component.css'],\r\n  animations: [\r\n    trigger('tabAnimation', [\r\n      state('void', style({\r\n        transform: 'translateY(-100%)',\r\n        opacity: 0\r\n      })),\r\n      state('*', style({\r\n        transform: 'translateY(0)',\r\n        opacity: 1\r\n      })),\r\n      transition('void => *', animate('300ms ease-out')),\r\n      transition('* => void', animate('300ms ease-in'))\r\n    ])\r\n  ]\r\n})\r\nexport class SecurityTransactionsComponent implements OnInit, OnDestroy {\r\n  displayedColumns: string[] = ['visitors', 'licensePlate', 'entryDate', 'exitDate', 'actions'];\r\n  approvedColumns: string[] = ['visitors', 'licensePlate', 'entryDate', 'exitDate'];\r\n  rejectedColumns: string[] = ['rejectReason', 'visitors', 'licensePlate', 'entryDate', 'exitDate'];\r\n\r\n  dataSource: MatTableDataSource<MergeMultiVisit>;\r\n  approvedDataSource: MatTableDataSource<MergeMultiVisit>;\r\n  rejectedDataSource: MatTableDataSource<MergeMultiVisit>;\r\n  allmergeData: MergeMultiVisit[] = [];\r\n  selectedTab = 'today';\r\n  pendingData: MergeMultiVisit[] = [];\r\n  filteredPendingData: MergeMultiVisit[] = [];\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('approvedPaginator') approvedPaginator: MatPaginator;\r\n  @ViewChild('rejectedPaginator') rejectedPaginator: MatPaginator;\r\n  @ViewChild('approvedSort') approvedSort: MatSort;\r\n  @ViewChild('rejectedSort') rejectedSort: MatSort;\r\n  private hubConnection!: signalR.HubConnection;\r\n  constructor(\r\n    private snackBar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private visitService: VisitService, private signalRService: SignalRService, private alertifyService: AlertifyService\r\n\r\n  ) {\r\n    this.dataSource = new MatTableDataSource([]);\r\n    this.approvedDataSource = new MatTableDataSource([]);\r\n    this.rejectedDataSource = new MatTableDataSource([]);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadVisits(this.getSelectedDateText());\r\n    \r\n    // SignalR bağlantısını başlat\r\n    this.signalRService.startConnection();\r\n\r\n    // 3 saniye sonra bağlantı durumunu kontrol et\r\n    setTimeout(() => {\r\n      if (!this.signalRService.hubConnection?.state) {\r\n        console.error('SignalR connection failed');\r\n        this.alertifyService.error('Gerçek zamanlı bildirimler için bağlantı kurulamadı. Sayfayı yenileyin veya daha sonra tekrar deneyin.');\r\n      } else {\r\n        this.setupVisitAddedListener();\r\n      }\r\n    }, 3000);\r\n  }\r\n\r\n  private setupVisitAddedListener(): void {\r\n    this.signalRService.addVisitAddedListener((visit: MergeMultiVisit) => {\r\n      if (!visit) return;\r\n      \r\n      visit.animated = true;\r\n      this.pendingData.unshift(visit);\r\n      this.dataSource = new MatTableDataSource(this.pendingData);\r\n      this.configDataTable();\r\n      \r\n      setTimeout(() => {\r\n        visit.animated = false;\r\n      }, 20000);\r\n      \r\n      this.alertifyService.success(`${visit.visit.visitorFullName} adına yeni ziyaret kaydı var!`);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.signalRService.hubConnection) {\r\n      this.signalRService.hubConnection.off(\"VisitAdded\");\r\n      this.signalRService.stopConnection();\r\n    }\r\n  }\r\n  \r\n\r\n  private loadVisits(date:string) {\r\n    this.visitService.getVisitMergeMultiVisitList(date).subscribe({\r\n      next: (data: MergeMultiVisit[]) => {\r\n\r\n        this.pendingData = data.filter(v => !v.visit.isConfirm && !v.visit.isReject);\r\n        let approvedData = data.filter(v => v.visit.isConfirm);\r\n        let rejectedData = data.filter(v => v.visit.isReject);\r\n        this.dataSource = new MatTableDataSource(this.pendingData);\r\n        this.approvedDataSource.data = approvedData;\r\n        this.rejectedDataSource.data = rejectedData;\r\n\r\n        this.configDataTable();\r\n      },\r\n      error: (error) => {\r\n        console.error('Ziyaret verileri yüklenirken hata oluştu:', error);\r\n        this.snackBar.open('Gösterilecek veri bulunamadı', 'Kapat', {\r\n          duration: 3000,\r\n          panelClass: ['error-snackbar']\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private configDataTable() {\r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.approvedDataSource.paginator = this.approvedPaginator;\r\n    this.approvedDataSource.sort = this.approvedSort;\r\n\r\n    this.rejectedDataSource.paginator = this.rejectedPaginator;\r\n    this.rejectedDataSource.sort = this.rejectedSort;\r\n\r\n\r\n  }\r\n\r\n  approveVisit(row: MergeMultiVisit) {\r\n        this.visitService.confirmVisit(row.visit.id).subscribe( res=>{\r\n          this.snackBar.open(res, 'Kapat', {\r\n            duration: 3000,\r\n            panelClass: ['success-snackbar']\r\n          });\r\n          this.loadVisits(this.getSelectedDateText());\r\n        });\r\n      }\r\n\r\n  \r\n\r\n  rejectVisit(mergeVisit: MergeMultiVisit) {\r\n\r\n    const dialogRef = this.dialog.open(RejectDialogComponent, {\r\n      width: '500px',\r\n      data: {\r\n        visit: mergeVisit.visit,\r\n        multiVisiters: mergeVisit.multiVisiters\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n\r\n        // API'ye red isteği gönder\r\n        const visitToUpdate = {\r\n          ...mergeVisit.visit,\r\n          isReject: true,\r\n          reasonForRejection: result.reason\r\n        };\r\n\r\n        this.visitService.rejectVisit(mergeVisit.visit.id, result.reason).subscribe({\r\n          next: () => {\r\n            const visitorNames = [\r\n              mergeVisit.visit.visitorFullName,\r\n              ...(mergeVisit.multiVisiters || []).map(mv => mv.visitorFullName)\r\n            ].join(', ');\r\n\r\n            const message = mergeVisit.visit.vehicleEntry ?\r\n              `${visitorNames} (${mergeVisit.visit.visitorLicensePlate}) ziyareti reddedildi` :\r\n              `${visitorNames} (Yaya) ziyareti reddedildi`;\r\n\r\n            this.snackBar.open(message, 'Kapat', {\r\n              duration: 3000,\r\n              panelClass: ['error-snackbar']\r\n            });\r\n\r\n            // Tabloları güncelle\r\n            this.loadVisits(this.getSelectedDateText());\r\n          },\r\n          error: (error) => {\r\n            console.error('Ziyaret reddetme hatası:', error);\r\n            this.snackBar.open('Ziyaret reddedilirken bir hata oluştu', 'Kapat', {\r\n              duration: 3000,\r\n              panelClass: ['error-snackbar']\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  private updateTables() {\r\n    const allData = [...this.dataSource.data];\r\n\r\n    /*this.approvedDataSource.data = allData.filter(visit => visit.visits === 'approved');\r\n    this.rejectedDataSource.data = allData.filter(visit => visit === 'rejected');\r\n   this.dataSource.data = allData.filter(visit => visit.status === 'pending');*/\r\n\r\n    this.refreshDataSources();\r\n  }\r\n\r\n  private refreshDataSources() {\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n    if (this.dataSource.sort) {\r\n      this.dataSource.sort.sortChange.emit();\r\n    }\r\n\r\n    if (this.approvedDataSource.paginator) {\r\n      this.approvedDataSource.paginator.firstPage();\r\n    }\r\n    if (this.approvedDataSource.sort) {\r\n      this.approvedDataSource.sort.sortChange.emit();\r\n    }\r\n\r\n    if (this.rejectedDataSource.paginator) {\r\n      this.rejectedDataSource.paginator.firstPage();\r\n    }\r\n    if (this.rejectedDataSource.sort) {\r\n      this.rejectedDataSource.sort.sortChange.emit();\r\n    }\r\n  }\r\n  applyFilter(event: Event) {\r\n    const target = event.target as HTMLInputElement;\r\n    if (!target) {\r\n      console.error(\"Event target is not an input element.\");\r\n      return;\r\n    }\r\n  \r\n    const filterValue = target.value?.trim().toLowerCase();\r\n  \r\n    // Eğer filtre değeri boşsa, tüm veriyi geri yükle ve işlemi durdur\r\n    if (!filterValue) {\r\n      console.warn(\"Filter value is empty or not valid. Resetting to all data.\");\r\n      this.filteredPendingData = this.pendingData;\r\n      this.dataSource = new MatTableDataSource(this.filteredPendingData);\r\n      if (this.dataSource.paginator) {\r\n        this.dataSource.paginator.firstPage();\r\n      }\r\n      return;\r\n    }\r\n  \r\n    // pendingData'nın geçerli bir array olduğunu kontrol et\r\n    if (!Array.isArray(this.pendingData)) {\r\n      console.error(\"pendingData is not an array:\", this.pendingData);\r\n      return;\r\n    }\r\n  \r\n    // Filtreleme işlemi\r\n    this.filteredPendingData = this.pendingData.filter(v =>\r\n      v?.visit?.visitorFullName?.toLowerCase().includes(filterValue) ||\r\n      v?.visit?.visitorLicensePlate?.toLowerCase().includes(filterValue)\r\n    );\r\n  \r\n    this.dataSource = new MatTableDataSource(this.filteredPendingData);\r\n  \r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n  \r\n  \r\n\r\n  filterByDate(tab: string) {\r\n    this.selectedTab = tab;\r\n    this.loadVisits(this.getSelectedDateText());\r\n  }\r\n  getSelectedDateText(): string {\r\n    const today = new Date();\r\n    \r\n    switch(this.selectedTab) {\r\n      case 'today':\r\n        return `${this.formatDate(today)}`;\r\n      \r\n      case 'tomorrow': {\r\n        const tomorrow = new Date();\r\n        tomorrow.setDate(today.getDate() + 1);\r\n        return `${this.formatDate(tomorrow)}`;\r\n      }\r\n      \r\n      case 'twoDaysLater': {\r\n        const twoDaysLater = new Date(); \r\n        twoDaysLater.setDate(today.getDate() + 2);\r\n        return `${this.formatDate(twoDaysLater)}`;\r\n      }\r\n\r\n      default:\r\n        return '';\r\n    }\r\n  }\r\n\r\n  private formatDate(date: Date): string {\r\n    const day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate().toString();\r\n    const month = (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1).toString();\r\n    const year = date.getFullYear();\r\n    return `${day}-${month}-${year}`;\r\n  }\r\n\r\n  getAllVisitorNames(row: MergeMultiVisit): { visitorNames: string[], totalVisitors: number } {\r\n    const allVisitors: string[] = [];\r\n\r\n    if (row.visit?.visitorFullName) {\r\n      allVisitors.push(row.visit.visitorFullName);\r\n    }\r\n\r\n    if (row.multiVisiters && row.multiVisiters.length > 2) {\r\n      for (let index = 0; index < 2; index++) {\r\n        allVisitors.push(row.multiVisiters[index].visitorFullName);\r\n      }\r\n      allVisitors.push(`+${row.multiVisiters.length - 2}`);\r\n    } else if (row.multiVisiters) {\r\n      // İkiden az ziyaretçi varsa hepsini ekle\r\n      allVisitors.push(...row.multiVisiters.map(mv => mv.visitorFullName));\r\n    }\r\n\r\n    // Toplam ziyaretçi sayısı: Ana ziyaretçi + multiVisiters\r\n    const totalVisitors = (row.multiVisiters?.length || 0) + 1;\r\n\r\n    return { visitorNames: allVisitors, totalVisitors };\r\n  }\r\n\r\n  showAllVisitors(row: MergeMultiVisit) {\r\n    this.dialog.open(AllVisitorsDialogComponent, {\r\n      width: '500px',\r\n      data: row\r\n    });\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"margin-top: 15px;\\\">\\r\\n        <div class=\\\"card-header bg-white d-flex justify-content-between align-items-center\\\">\\r\\n          <h5 class=\\\"card-title mb-0\\\">Filtreleme</h5>\\r\\n          <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"createPdf()\\\">\\r\\n            <i class=\\\"fas fa-file-pdf\\\"></i>\\r\\n            PDF Oluştur\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"card-body py-2\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>Başlangıç</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"startDatePicker\\\" [(ngModel)]=\\\"startDate\\\" (dateChange)=\\\"onStartDateChange()\\\" placeholder=\\\"Seçiniz\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"startDate\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"startDate=null;formattedStartDate=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>Bitiş</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"endDatePicker\\\" [(ngModel)]=\\\"endDate\\\" (dateChange)=\\\"onEndDateChange()\\\" placeholder=\\\"Seçiniz\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"endDate\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"endDate=null;formattedEndDate=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>İsim</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"searchName\\\" placeholder=\\\"İsim giriniz\\\">\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"searchName\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"searchName=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>İşlem</mat-label>\\r\\n                <mat-select [(ngModel)]=\\\"selectedProcessType\\\">\\r\\n                  <mat-option value=\\\"Ziyaret Talebi\\\">Ziyaret</mat-option>\\r\\n                  <mat-option value=\\\"Güvenlik Onay\\\">Güvenlik Onay</mat-option>\\r\\n                  <mat-option value=\\\"Güvenlik Red\\\">Güvenlik Red</mat-option>\\r\\n                  <mat-option value=\\\"Rapor Oluşturma\\\">Rapor Oluşturma</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"selectedProcessType\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"selectedProcessType=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12 text-center\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSearch()\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n                Ara\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n              <h4 class=\\\"card-title \\\">{{'BanuLogList'| translate}}</h4>\\r\\n              <a *ngIf=\\\"checkClaim('CreateBanuLogCommand')\\\" class=\\\"pull-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#banulog\\\"> <i style=\\\"color:white\\\"  title=\\\"{{'Add'| translate}}\\\" class=\\\"far fa-plus-square fa-2x\\\"></i></a>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                \\r\\n                <div class=\\\"col-md-4 pull-right\\\">\\r\\n                  <mat-form-field>\\r\\n                    <mat-label>Filter</mat-label>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n  \\r\\n  \\r\\n                                  \\r\\n                     <ng-container matColumnDef=\\\"id\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.id}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"createdDate\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.createdDate|date:'dd/MM/yyyy'}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactorFullName\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorFullName'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactorFullName}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactorId\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorId'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactorId}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactionsDescription\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionsDescription'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactionsDescription}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactionType\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionType'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactionType}}</td>\\r\\n                     </ng-container>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n                                  <ng-container matColumnDef=\\\"update\\\" >\\r\\n                    <th mat-header-cell *matHeaderCellDef></th>\\r\\n                    <td style=\\\"width: 25px;\\\" mat-cell\\r\\n                      *matCellDef=\\\"let element\\\">\\r\\n                      <a *ngIf=\\\"checkClaim('UpdateBanuLogCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#banulog\\\"  (click)=\\\"getBanuLogById(element.id)\\\">\\r\\n                        <i title=\\\"{{'Update'| translate}}\\\" style=\\\"color:#ff5722;\\\" class=\\\"far fa-edit\\\"></i>\\r\\n                      </a>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n  \\r\\n                  <ng-container matColumnDef=\\\"delete\\\" >\\r\\n                    <th mat-header-cell *matHeaderCellDef></th>\\r\\n                    <td  style=\\\"width: 25px;\\\" mat-cell\\r\\n                      *matCellDef=\\\"let element\\\">\\r\\n                      <a *ngIf=\\\"checkClaim('DeleteBanuLogCommand')\\\" (confirm)=\\\"deleteBanuLog(element.id)\\\" [swal]=\\\"deleteSwal\\\"><i title=\\\"{{'Delete'| translate}}\\\" style=\\\"color: #D9534E;\\\"class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n  \\r\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  \\r\\n                  <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                  </tr>\\r\\n                              </table>\\r\\n                              <mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n                              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  <div class=\\\"modal modal-angular fade\\\" id=\\\"banulog\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n            (click)=\\\"clearFormGroup(banuLogAddForm)\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n          <h4 class=\\\"margin-top\\\">\\r\\n             {{'BanuLogForm'| translate}}\\r\\n          </h4>\\r\\n          <div class=\\\"separator\\\"></div>\\r\\n          <form *ngIf=\\\"banuLogAddForm\\\" [formGroup]=\\\"banuLogAddForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n            \\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"createdDate\\\" type=\\\"date\\\" id=\\\"createdDate\\\" name=\\\"createdDate\\\"\\r\\n                         formControlName=\\\"createdDate\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('createdDate')!.hasError('createdDate') && banuLogAddForm.get('createdDate')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"transactorFullName\\\" type=\\\"text\\\" id=\\\"transactorFullName\\\" name=\\\"transactorFullName\\\"\\r\\n                         formControlName=\\\"transactorFullName\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('transactorFullName')!.hasError('transactorFullName') && banuLogAddForm.get('transactorFullName')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                              <select class=\\\"browser-default custom-select\\\" formControlName=\\\"transactorId\\\">\\r\\n                                  <option *ngFor=\\\"let item of banuLoglookUp\\\" [value]=\\\"item.id\\\"> {{item.label}}</option>\\r\\n                              </select>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"transactionsDescription\\\" type=\\\"text\\\" id=\\\"transactionsDescription\\\" name=\\\"transactionsDescription\\\"\\r\\n                         formControlName=\\\"transactionsDescription\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('transactionsDescription')!.hasError('transactionsDescription') && banuLogAddForm.get('transactionsDescription')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"transactionType\\\" type=\\\"text\\\" id=\\\"transactionType\\\" name=\\\"transactionType\\\"\\r\\n                         formControlName=\\\"transactionType\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('transactionType')!.hasError('transactionType') && banuLogAddForm.get('transactionType')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                     \\r\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save'|translate}}</button>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon = \\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n      [confirmButtonText] = \\\"'OK'\\\"[cancelButtonText] = \\\"'Cancel'\\\" >\\r\\n  </swal>\\r\\n  \\r\\n  \";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.\r\n/** Indicates the severity of a log message.\r\n *\r\n * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.\r\n */\r\nexport enum LogLevel {\r\n    /** Log level for very low severity diagnostic messages. */\r\n    Trace = 0,\r\n    /** Log level for low severity diagnostic messages. */\r\n    Debug = 1,\r\n    /** Log level for informational diagnostic messages. */\r\n    Information = 2,\r\n    /** Log level for diagnostic messages that indicate a non-fatal problem. */\r\n    Warning = 3,\r\n    /** Log level for diagnostic messages that indicate a failure in the current operation. */\r\n    Error = 4,\r\n    /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */\r\n    Critical = 5,\r\n    /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */\r\n    None = 6,\r\n}\r\n\r\n/** An abstraction that provides a sink for diagnostic messages. */\r\nexport interface ILogger {\r\n    /** Called by the framework to emit a diagnostic message.\r\n     *\r\n     * @param {LogLevel} logLevel The severity level of the message.\r\n     * @param {string} message The message.\r\n     */\r\n    log(logLevel: LogLevel, message: string): void;\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 class=\\\"card-title \\\">{{'GroupList'|translate}}</h4>\\r\\n            <a *ngIf=\\\"checkClaim('CreateGroupCommand')\\\" class=\\\"pull-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#group\\\"><i style=\\\"color:white\\\" title=\\\"{{'Add'| translate}}\\\" class=\\\"far fa-plus-square fa-2x\\\"></i> </a>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              \\r\\n              <div class=\\\"col-md-4 pull-right\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label>{{'Filter' |translate}}</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"groupName\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'GroupName'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.groupName}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"updateGroupClaim\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateGroupClaimCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#groupClaims\\\" (click)=\\\"getGroupClaims(element.id)\\\"><i title=\\\"{{'GrupPermissions' | translate }}\\\" style=\\\"color:blue;\\\" class=\\\"fas fa-shield-alt\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"updateUserGroupClaims\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateUserGroupByGroupIdCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#groupUsers\\\" (click)=\\\"getGroupUsers(element.id)\\\"><i title=\\\"{{'UsersGroups' | translate}}\\\" style=\\\"color:green;\\\" class=\\\"fas fa-user-shield\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"update\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateGroupCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#group\\\" (click)=\\\"getGroupById(element.id)\\\"><i title=\\\"{{'Update' | translate}}\\\" style=\\\"color:#ff5722;\\\" class=\\\"far fa-edit\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"delete\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('DeleteGroupCommand')\\\" (confirm)=\\\"deleteGroup(element.id)\\\" [swal]=\\\"deleteSwal\\\"><i title=\\\"{{'Delete'| translate}}\\\" style=\\\"color:#D9534E;\\\" class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n              <mat-paginator [pageSizeOptions]=\\\"[10, 25,50,100]\\\"></mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"group\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header bg-primary text-white\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n          <i class=\\\"material-icons mr-2\\\">group_add</i>\\r\\n          {{'GroupForm'| translate}}\\r\\n        </h4>\\r\\n        <button type=\\\"button\\\" #closeButton class=\\\"close text-white\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(groupAddForm)\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form *ngIf=\\\"groupAddForm\\\" [formGroup]=\\\"groupAddForm\\\" (ngSubmit)=\\\"save()\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>{{'GroupName'|translate}}</mat-label>\\r\\n                <input matInput type=\\\"text\\\" formControlName=\\\"groupName\\\">\\r\\n                <mat-icon matPrefix class=\\\"mr-2\\\">group</mat-icon>\\r\\n                <mat-error *ngIf=\\\"groupAddForm.get('groupName')!.hasError('required') && groupAddForm.get('groupName')!.touched\\\">\\r\\n                  {{'Required'| translate}}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"d-flex justify-content-end mt-4\\\">\\r\\n            <button mat-button type=\\\"button\\\" class=\\\"mr-2\\\" data-dismiss=\\\"modal\\\" (click)=\\\"clearFormGroup(groupAddForm)\\\">\\r\\n              <mat-icon>close</mat-icon>\\r\\n              {{'Cancel' |translate}}\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!groupAddForm.valid\\\">\\r\\n              <mat-icon>save</mat-icon>\\r\\n              {{'Save' |translate}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"groupUsers\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header bg-primary text-white\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n          <i class=\\\"material-icons mr-2\\\">people</i>\\r\\n          {{'GroupUsers'| translate}}\\r\\n        </h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close text-white\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body p-4\\\">\\r\\n        <ng-multiselect-dropdown \\r\\n          [settings]=\\\"dropdownSettings\\\" \\r\\n          [placeholder]=\\\"'Users'\\\" \\r\\n          [data]=\\\"formattedUserDropdownList\\\"\\r\\n          [(ngModel)]=\\\"userSelectedItems\\\" \\r\\n          (onSelect)=\\\"onItemSelect('User')\\\" \\r\\n          (onSelectAll)=\\\"onSelectAll('User')\\\"\\r\\n          (onDeSelect)=\\\"onItemDeSelect('User')\\\"\\r\\n          class=\\\"w-100\\\">\\r\\n        </ng-multiselect-dropdown>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-end mt-4\\\">\\r\\n          <button mat-button type=\\\"button\\\" class=\\\"mr-2\\\" data-dismiss=\\\"modal\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n            {{'Cancel' |translate}}\\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveGroupUsers()\\\">\\r\\n            <mat-icon>save</mat-icon>\\r\\n            {{'Save' |translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"groupClaims\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header bg-primary text-white\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n          <i class=\\\"material-icons mr-2\\\">security</i>\\r\\n          {{'GroupClaims'| translate}}\\r\\n        </h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close text-white\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body p-4\\\">\\r\\n        <ng-multiselect-dropdown \\r\\n          [settings]=\\\"dropdownSettings\\\" \\r\\n          [placeholder]=\\\"'Claims'\\\" \\r\\n          [data]=\\\"claimDropdownList\\\"\\r\\n          [(ngModel)]=\\\"claimSelectedItems\\\" \\r\\n          (onSelect)=\\\"onItemSelect('Claim')\\\" \\r\\n          (onSelectAll)=\\\"onSelectAll('Claim')\\\"\\r\\n          (onDeSelect)=\\\"onItemDeSelect('Claim')\\\"\\r\\n          class=\\\"w-100\\\">\\r\\n        </ng-multiselect-dropdown>\\r\\n\\r\\n        <div class=\\\"d-flex justify-content-end mt-4\\\">\\r\\n          <button mat-button type=\\\"button\\\" class=\\\"mr-2\\\" data-dismiss=\\\"modal\\\">\\r\\n            <mat-icon>close</mat-icon>\\r\\n            {{'Cancel' |translate}}\\r\\n          </button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"saveGroupClaims()\\\">\\r\\n            <mat-icon>save</mat-icon>\\r\\n            {{'Save' |translate}}\\r\\n          </button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon=\\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n  [confirmButtonText]=\\\"'OK'\\\" [cancelButtonText]=\\\"'Cancel'\\\">\\r\\n</swal>\";","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AuthService } from 'app/core/components/admin/login/Services/auth.service';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { MultiVisiters } from './models/multivisiters';\r\nimport { MultiVisitersService } from './services/multivisiters.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: 'app-multiVisiters',\r\n\ttemplateUrl: './multivisiters.component.html',\r\n\tstyleUrls: ['./multiVisiters.component.scss']\r\n})\r\nexport class MultiVisitersComponent implements AfterViewInit, OnInit {\r\n\t\r\n\tdataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = ['id','createdDate','visitId','visitorFullName', 'update','delete'];\r\n\r\n\tmultiVisitersList:MultiVisiters[];\r\n\tmultiVisiters:MultiVisiters=new MultiVisiters();\r\n\r\n\tmultiVisitersAddForm: FormGroup;\r\n\r\n\r\n\tmultiVisitersId:number;\r\n\r\n\tconstructor(private multiVisitersService:MultiVisitersService, private lookupService:LookUpService,private alertifyService:AlertifyService,private formBuilder: FormBuilder, private authService:AuthService) { }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.getMultiVisitersList();\r\n    }\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.createMultiVisitersAddForm();\r\n\t}\r\n\r\n\r\n\tgetMultiVisitersList() {\r\n\t\tthis.multiVisitersService.getMultiVisitersList().subscribe(data => {\r\n\t\t\tthis.multiVisitersList = data;\r\n\t\t\tthis.dataSource = new MatTableDataSource(data);\r\n            this.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tsave(){\r\n\r\n\t\tif (this.multiVisitersAddForm.valid) {\r\n\t\t\tthis.multiVisiters = Object.assign({}, this.multiVisitersAddForm.value)\r\n\r\n\t\t\tif (this.multiVisiters.id == \"\")\r\n\t\t\t\tthis.addMultiVisiters();\r\n\t\t\telse\r\n\t\t\t\tthis.updateMultiVisiters();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddMultiVisiters(){\r\n\r\n\t\tthis.multiVisitersService.addMultiVisiters(this.multiVisiters).subscribe(data => {\r\n\t\t\tthis.getMultiVisitersList();\r\n\t\t\tthis.multiVisiters = new MultiVisiters();\r\n\t\t\tjQuery('#multivisiters').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.multiVisitersAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tupdateMultiVisiters(){\r\n\r\n\t\tthis.multiVisitersService.updateMultiVisiters(this.multiVisiters).subscribe(data => {\r\n\r\n\t\t\tvar index=this.multiVisitersList.findIndex(x=>x.id==this.multiVisiters.id);\r\n\t\t\tthis.multiVisitersList[index]=this.multiVisiters;\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.multiVisitersList);\r\n            this.configDataTable();\r\n\t\t\tthis.multiVisiters = new MultiVisiters();\r\n\t\t\tjQuery('#multivisiters').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.multiVisitersAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tcreateMultiVisitersAddForm() {\r\n\t\tthis.multiVisitersAddForm = this.formBuilder.group({\t\t\r\n\t\t\tid : [0],\r\ncreatedDate : [null, Validators.required],\r\nvisitId : [\"\", Validators.required],\r\nvisitorFullName : [\"\", Validators.required]\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteMultiVisiters(multiVisitersId:string){\r\n\t\tthis.multiVisitersService.deleteMultiVisiters(multiVisitersId).subscribe(data=>{\r\n\t\t\tthis.alertifyService.success(data.toString());\r\n\t\t\tthis.multiVisitersList=this.multiVisitersList.filter(x=> x.id!=multiVisitersId);\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.multiVisitersList);\r\n\t\t\tthis.configDataTable();\r\n\t\t})\r\n\t}\r\n\r\n\tgetMultiVisitersById(multiVisitersId:number){\r\n\t\tthis.clearFormGroup(this.multiVisitersAddForm);\r\n\t\tthis.multiVisitersService.getMultiVisitersById(multiVisitersId).subscribe(data=>{\r\n\t\t\tthis.multiVisiters=data;\r\n\t\t\tthis.multiVisitersAddForm.patchValue(data);\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim:string):boolean{\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n  }\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 class=\\\"card-title \\\">{{'LanguageList'|translate}}</h4>\\r\\n            <a *ngIf=\\\"checkClaim('CreateLanguageCommand')\\\" class=\\\"pull-right\\\" data-toggle=\\\"modal\\\"\\r\\n              data-target=\\\"#language\\\"> <i style=\\\"color:white\\\" title=\\\"{{'Add'| translate}}\\\" class=\\\"far fa-plus-square fa-2x\\\"></i></a>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n\\r\\n              <div class=\\\"col-md-4 pull-right\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label>{{'Filter' |translate}}</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"name\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Name'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"code\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Code'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"update\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateLanguageCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#language\\\" (click)=\\\"getLanguageById(element.id)\\\">\\r\\n                      <i title=\\\"{{'Update'| translate}}\\\" style=\\\"color:#ff5722;\\\" class=\\\"far fa-edit\\\"></i>\\r\\n                    </a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"delete\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('DeleteLanguageCommand')\\\" (confirm)=\\\"deleteLanguage(element.id)\\\" [swal]=\\\"deleteSwal\\\"><i title=\\\"{{'Delete'| translate}}\\\" style=\\\"color:#D9534E;\\\" class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n              <mat-paginator [pageSizeOptions]=\\\"[10, 25,50,100]\\\"></mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"language\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(languageAddForm)\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n          {{'LanguageForm'|translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n        <form *ngIf=\\\"languageAddForm\\\" [formGroup]=\\\"languageAddForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\" {{'FullName'|translate}}\\\" type=\\\"text\\\" id=\\\"name\\\" name=\\\"name\\\"\\r\\n                  formControlName=\\\"name\\\">\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"languageAddForm.get('name')!.hasError('required') && languageAddForm.get('name')!.touched\\\"> {{'Required'| translate}}</div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"{{'Code'|translate}}\\\" type=\\\"text\\\" id=\\\"code\\\" name=\\\"code\\\"\\r\\n                  formControlName=\\\"code\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                  *ngIf=\\\"languageAddForm.get('code')!.hasError('code') && languageAddForm.get('code')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save' |translate}}</button>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon=\\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n  [confirmButtonText]=\\\"'OK'\\\" [cancelButtonText]=\\\"'Cancel'\\\">\\r\\n</swal>\";","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AuthService } from 'app/core/components/admin/login/Services/auth.service';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { Subject } from 'rxjs';\r\nimport { LogDto } from './models/LogDto';\r\nimport { LogDtoService } from './services/LogDto.service';\r\n\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: 'app-logDto',\r\n\ttemplateUrl: './logdto.component.html',\r\n\tstyleUrls: ['./logDto.component.scss']\r\n})\r\nexport class LogDtoComponent implements AfterViewInit, OnInit {\r\n\r\n\tdataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = ['id', 'level', 'exceptionMessage','timeStamp','user','value','type'];\t\r\n\r\n\r\n\tlogDtoList: LogDto[];\r\n\tlogDto: LogDto = new LogDto();\r\n\r\n\tlogDtoAddForm: FormGroup;\r\n\r\n\tlogDtoId: number;\r\n\tdtTrigger: Subject<any> = new Subject<any>();\r\n\r\n\tconstructor(private logDtoService: LogDtoService, private lookupService: LookUpService, private alertifyService: AlertifyService, private formBuilder: FormBuilder, private authService: AuthService) { }\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.getLogDtoList();\r\n\t}\r\n\r\n\tgetLogDtoList() {\r\n\t\tthis.logDtoService.getLogDtoList().subscribe(data => {\r\n\t\t\tthis.logDtoList = data;\r\n\t\t\tthis.dataSource = new MatTableDataSource(data);\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tngOnDestroy(): void {\r\n\t\tthis.dtTrigger.unsubscribe();\r\n\t}\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.getLogDtoList();\r\n\t}\r\n\r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim: string): boolean {\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t\r\n\t  }\r\n\r\n\t  applyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { AuthService } from '../login/Services/auth.service';\r\nimport { OperationClaim } from './models/operationclaim';\r\nimport { OperationClaimService } from './services/OperationClaim.service';\r\n\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: 'app-operationClaim',\r\n\ttemplateUrl: './operationclaim.component.html',\r\n\tstyleUrls: ['./operationClaim.component.scss']\r\n})\r\nexport class OperationClaimComponent implements AfterViewInit, OnInit {\r\n\r\n\tdataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = ['id', 'name', 'alias', 'description', 'update'];\r\n\r\n\toperationClaimList: OperationClaim[];\r\n\toperationClaim: OperationClaim = new OperationClaim();\r\n\r\n\toperationClaimAddForm: FormGroup;\r\n\r\n\toperationClaimId: number;\r\n\r\n\tconstructor(private operationClaimService: OperationClaimService, private lookupService: LookUpService, private alertifyService: AlertifyService, private formBuilder: FormBuilder, private authService: AuthService) { }\r\n\tngAfterViewInit(): void {\r\n\t\tthis.getOperationClaimList();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.createOperationClaimAddForm();\r\n\t}\r\n\r\n\tgetOperationClaimList() {\r\n\t\tthis.operationClaimService.getOperationClaimList().subscribe(data => {\r\n\t\t\tthis.operationClaimList = data;\r\n\t\t\tthis.dataSource = new MatTableDataSource(data);\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tsave() {\r\n\r\n\t\tif (this.operationClaimAddForm.valid) {\r\n\t\t\tthis.operationClaim = Object.assign({}, this.operationClaimAddForm.value)\r\n\t\t\tthis.updateOperationClaim();\r\n\t\t}\r\n\t}\r\n\r\n\tupdateOperationClaim() {\r\n\t\tthis.operationClaimService.updateOperationClaim(this.operationClaim).subscribe(data => {\r\n\r\n\t\t\tvar index = this.operationClaimList.findIndex(x => x.id == this.operationClaim.id);\r\n\t\t\tthis.operationClaimList[index] = this.operationClaim;\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.operationClaimList);\r\n\t\t\tthis.configDataTable();\r\n\t\t\tthis.operationClaim = new OperationClaim();\r\n\t\t\tjQuery('#operationclaim').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.operationClaimAddForm);\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tcreateOperationClaimAddForm() {\r\n\t\tthis.operationClaimAddForm = this.formBuilder.group({\r\n\t\t\tid: [0],\r\n\t\t\tname: [],\r\n\t\t\talias: [\"\"],\r\n\t\t\tdescription: [\"\"]\r\n\t\t})\r\n\t}\r\n\r\n\tgetOperationClaimById(operationClaimId: number) {\r\n\t\tthis.clearFormGroup(this.operationClaimAddForm);\r\n\t\tthis.operationClaimService.getOperationClaim(operationClaimId).subscribe(data => {\r\n\t\t\tthis.operationClaimAddForm.patchValue(data);\r\n\t\t\tthis.operationClaim = data;\r\n\t\t})\r\n\t}\r\n\r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim: string): boolean {\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {DOCUMENT} from '@angular/common';\nimport {HttpClient, HttpErrorResponse} from '@angular/common/http';\nimport {\n  ErrorHandler,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Optional,\n  SecurityContext,\n  SkipSelf,\n  OnDestroy,\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeHtml} from '@angular/platform-browser';\nimport {forkJoin, Observable, of as observableOf, throwError as observableThrow} from 'rxjs';\nimport {catchError, finalize, map, share, tap} from 'rxjs/operators';\n\n\n/**\n * Returns an exception to be thrown in the case when attempting to\n * load an icon with a name that cannot be found.\n * @docs-private\n */\nexport function getMatIconNameNotFoundError(iconName: string): Error {\n  return Error(`Unable to find icon with the name \"${iconName}\"`);\n}\n\n\n/**\n * Returns an exception to be thrown when the consumer attempts to use\n * `<mat-icon>` without including @angular/common/http.\n * @docs-private\n */\nexport function getMatIconNoHttpProviderError(): Error {\n  return Error('Could not find HttpClient provider for use with Angular Material icons. ' +\n               'Please include the HttpClientModule from @angular/common/http in your ' +\n               'app imports.');\n}\n\n\n/**\n * Returns an exception to be thrown when a URL couldn't be sanitized.\n * @param url URL that was attempted to be sanitized.\n * @docs-private\n */\nexport function getMatIconFailedToSanitizeUrlError(url: SafeResourceUrl): Error {\n  return Error(`The URL provided to MatIconRegistry was not trusted as a resource URL ` +\n               `via Angular's DomSanitizer. Attempted URL was \"${url}\".`);\n}\n\n/**\n * Returns an exception to be thrown when a HTML string couldn't be sanitized.\n * @param literal HTML that was attempted to be sanitized.\n * @docs-private\n */\nexport function getMatIconFailedToSanitizeLiteralError(literal: SafeHtml): Error {\n  return Error(`The literal provided to MatIconRegistry was not trusted as safe HTML by ` +\n               `Angular's DomSanitizer. Attempted literal was \"${literal}\".`);\n}\n\n/** Options that can be used to configure how an icon or the icons in an icon set are presented. */\nexport interface IconOptions {\n  /** View box to set on the icon. */\n  viewBox?: string;\n\n  /** Whether or not to fetch the icon or icon set using HTTP credentials. */\n  withCredentials?: boolean;\n}\n\n/**\n * Configuration for an icon, including the URL and possibly the cached SVG element.\n * @docs-private\n */\nclass SvgIconConfig {\n  svgElement: SVGElement | null;\n\n  constructor(\n    public url: SafeResourceUrl,\n    public svgText: string | null,\n    public options?: IconOptions) {}\n}\n\n/** Icon configuration whose content has already been loaded. */\ntype LoadedSvgIconConfig = SvgIconConfig & {svgText: string};\n\n/**\n * Service to register and display icons used by the `<mat-icon>` component.\n * - Registers icon URLs by namespace and name.\n * - Registers icon set URLs by namespace.\n * - Registers aliases for CSS classes, for use with icon fonts.\n * - Loads icons from URLs and extracts individual icons from icon sets.\n */\n@Injectable({providedIn: 'root'})\nexport class MatIconRegistry implements OnDestroy {\n  private _document: Document;\n\n  /**\n   * URLs and cached SVG elements for individual icons. Keys are of the format \"[namespace]:[icon]\".\n   */\n  private _svgIconConfigs = new Map<string, SvgIconConfig>();\n\n  /**\n   * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.\n   * Multiple icon sets can be registered under the same namespace.\n   */\n  private _iconSetConfigs = new Map<string, SvgIconConfig[]>();\n\n  /** Cache for icons loaded by direct URLs. */\n  private _cachedIconsByUrl = new Map<string, SVGElement>();\n\n  /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */\n  private _inProgressUrlFetches = new Map<string, Observable<string>>();\n\n  /** Map from font identifiers to their CSS class names. Used for icon fonts. */\n  private _fontCssClassesByAlias = new Map<string, string>();\n\n  /**\n   * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.\n   * The default 'material-icons' value assumes that the material icon font has been loaded as\n   * described at http://google.github.io/material-design-icons/#icon-font-for-the-web\n   */\n  private _defaultFontSetClass = 'material-icons';\n\n  constructor(\n    @Optional() private _httpClient: HttpClient,\n    private _sanitizer: DomSanitizer,\n    @Optional() @Inject(DOCUMENT) document: any,\n    private readonly _errorHandler: ErrorHandler) {\n      this._document = document;\n    }\n\n  /**\n   * Registers an icon by URL in the default namespace.\n   * @param iconName Name under which the icon should be registered.\n   * @param url\n   */\n  addSvgIcon(iconName: string, url: SafeResourceUrl, options?: IconOptions): this {\n    return this.addSvgIconInNamespace('', iconName, url, options);\n  }\n\n  /**\n   * Registers an icon using an HTML string in the default namespace.\n   * @param iconName Name under which the icon should be registered.\n   * @param literal SVG source of the icon.\n   */\n  addSvgIconLiteral(iconName: string, literal: SafeHtml, options?: IconOptions): this {\n    return this.addSvgIconLiteralInNamespace('', iconName, literal, options);\n  }\n\n  /**\n   * Registers an icon by URL in the specified namespace.\n   * @param namespace Namespace in which the icon should be registered.\n   * @param iconName Name under which the icon should be registered.\n   * @param url\n   */\n  addSvgIconInNamespace(namespace: string, iconName: string, url: SafeResourceUrl,\n                        options?: IconOptions): this {\n    return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));\n  }\n\n  /**\n   * Registers an icon using an HTML string in the specified namespace.\n   * @param namespace Namespace in which the icon should be registered.\n   * @param iconName Name under which the icon should be registered.\n   * @param literal SVG source of the icon.\n   */\n  addSvgIconLiteralInNamespace(namespace: string, iconName: string, literal: SafeHtml,\n                               options?: IconOptions): this {\n    const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n\n    // TODO: add an ngDevMode check\n    if (!cleanLiteral) {\n      throw getMatIconFailedToSanitizeLiteralError(literal);\n    }\n\n    return this._addSvgIconConfig(namespace, iconName,\n        new SvgIconConfig('', cleanLiteral, options));\n  }\n\n  /**\n   * Registers an icon set by URL in the default namespace.\n   * @param url\n   */\n  addSvgIconSet(url: SafeResourceUrl, options?: IconOptions): this {\n    return this.addSvgIconSetInNamespace('', url, options);\n  }\n\n  /**\n   * Registers an icon set using an HTML string in the default namespace.\n   * @param literal SVG source of the icon set.\n   */\n  addSvgIconSetLiteral(literal: SafeHtml, options?: IconOptions): this {\n    return this.addSvgIconSetLiteralInNamespace('', literal, options);\n  }\n\n  /**\n   * Registers an icon set by URL in the specified namespace.\n   * @param namespace Namespace in which to register the icon set.\n   * @param url\n   */\n  addSvgIconSetInNamespace(namespace: string, url: SafeResourceUrl, options?: IconOptions): this {\n    return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));\n  }\n\n  /**\n   * Registers an icon set using an HTML string in the specified namespace.\n   * @param namespace Namespace in which to register the icon set.\n   * @param literal SVG source of the icon set.\n   */\n  addSvgIconSetLiteralInNamespace(namespace: string, literal: SafeHtml,\n                                  options?: IconOptions): this {\n    const cleanLiteral = this._sanitizer.sanitize(SecurityContext.HTML, literal);\n\n    if (!cleanLiteral) {\n      throw getMatIconFailedToSanitizeLiteralError(literal);\n    }\n\n    return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));\n  }\n\n  /**\n   * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon\n   * component with the alias as the fontSet input will cause the class name to be applied\n   * to the `<mat-icon>` element.\n   *\n   * @param alias Alias for the font.\n   * @param className Class name override to be used instead of the alias.\n   */\n  registerFontClassAlias(alias: string, className: string = alias): this {\n    this._fontCssClassesByAlias.set(alias, className);\n    return this;\n  }\n\n  /**\n   * Returns the CSS class name associated with the alias by a previous call to\n   * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.\n   */\n  classNameForFontAlias(alias: string): string {\n    return this._fontCssClassesByAlias.get(alias) || alias;\n  }\n\n  /**\n   * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n   * have a fontSet input value, and is not loading an icon by name or URL.\n   *\n   * @param className\n   */\n  setDefaultFontSetClass(className: string): this {\n    this._defaultFontSetClass = className;\n    return this;\n  }\n\n  /**\n   * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not\n   * have a fontSet input value, and is not loading an icon by name or URL.\n   */\n  getDefaultFontSetClass(): string {\n    return this._defaultFontSetClass;\n  }\n\n  /**\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.\n   * The response from the URL may be cached so this will not always cause an HTTP request, but\n   * the produced element will always be a new copy of the originally fetched icon. (That is,\n   * it will not contain any modifications made to elements previously returned).\n   *\n   * @param safeUrl URL from which to fetch the SVG icon.\n   */\n  getSvgIconFromUrl(safeUrl: SafeResourceUrl): Observable<SVGElement> {\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n\n    if (!url) {\n      throw getMatIconFailedToSanitizeUrlError(safeUrl);\n    }\n\n    const cachedIcon = this._cachedIconsByUrl.get(url);\n\n    if (cachedIcon) {\n      return observableOf(cloneSvg(cachedIcon));\n    }\n\n    return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(\n      tap(svg => this._cachedIconsByUrl.set(url!, svg)),\n      map(svg => cloneSvg(svg)),\n    );\n  }\n\n  /**\n   * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name\n   * and namespace. The icon must have been previously registered with addIcon or addIconSet;\n   * if not, the Observable will throw an error.\n   *\n   * @param name Name of the icon to be retrieved.\n   * @param namespace Namespace in which to look for the icon.\n   */\n  getNamedSvgIcon(name: string, namespace: string = ''): Observable<SVGElement> {\n    // Return (copy of) cached icon if possible.\n    const key = iconKey(namespace, name);\n    const config = this._svgIconConfigs.get(key);\n\n    if (config) {\n      return this._getSvgFromConfig(config);\n    }\n\n    // See if we have any icon sets registered for the namespace.\n    const iconSetConfigs = this._iconSetConfigs.get(namespace);\n\n    if (iconSetConfigs) {\n      return this._getSvgFromIconSetConfigs(name, iconSetConfigs);\n    }\n\n    return observableThrow(getMatIconNameNotFoundError(key));\n  }\n\n  ngOnDestroy() {\n   this._svgIconConfigs.clear();\n   this._iconSetConfigs.clear();\n   this._cachedIconsByUrl.clear();\n  }\n\n  /**\n   * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.\n   */\n  private _getSvgFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n    if (config.svgText) {\n      // We already have the SVG element for this icon, return a copy.\n      return observableOf(cloneSvg(this._svgElementFromConfig(config as LoadedSvgIconConfig)));\n    } else {\n      // Fetch the icon from the config's URL, cache it, and return a copy.\n      return this._loadSvgIconFromConfig(config).pipe(map(svg => cloneSvg(svg)));\n    }\n  }\n\n  /**\n   * Attempts to find an icon with the specified name in any of the SVG icon sets.\n   * First searches the available cached icons for a nested element with a matching name, and\n   * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets\n   * that have not been cached, and searches again after all fetches are completed.\n   * The returned Observable produces the SVG element if possible, and throws\n   * an error if no icon with the specified name can be found.\n   */\n  private _getSvgFromIconSetConfigs(name: string, iconSetConfigs: SvgIconConfig[]):\n      Observable<SVGElement> {\n    // For all the icon set SVG elements we've fetched, see if any contain an icon with the\n    // requested name.\n    const namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\n    if (namedIcon) {\n      // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every\n      // time anyway, there's probably not much advantage compared to just always extracting\n      // it from the icon set.\n      return observableOf(namedIcon);\n    }\n\n    // Not found in any cached icon sets. If there are icon sets with URLs that we haven't\n    // fetched, fetch them now and look for iconName in the results.\n    const iconSetFetchRequests: Observable<string | null>[] = iconSetConfigs\n      .filter(iconSetConfig => !iconSetConfig.svgText)\n      .map(iconSetConfig => {\n        return this._loadSvgIconSetFromConfig(iconSetConfig).pipe(\n          catchError((err: HttpErrorResponse) => {\n            const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, iconSetConfig.url);\n\n            // Swallow errors fetching individual URLs so the\n            // combined Observable won't necessarily fail.\n            const errorMessage = `Loading icon set URL: ${url} failed: ${err.message}`;\n            this._errorHandler.handleError(new Error(errorMessage));\n            return observableOf(null);\n          })\n        );\n      });\n\n    // Fetch all the icon set URLs. When the requests complete, every IconSet should have a\n    // cached SVG element (unless the request failed), and we can check again for the icon.\n    return forkJoin(iconSetFetchRequests).pipe(map(() => {\n      const foundIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);\n\n      // TODO: add an ngDevMode check\n      if (!foundIcon) {\n        throw getMatIconNameNotFoundError(name);\n      }\n\n      return foundIcon;\n    }));\n  }\n\n  /**\n   * Searches the cached SVG elements for the given icon sets for a nested icon element whose \"id\"\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\n   * returns it. Returns null if no matching element is found.\n   */\n  private _extractIconWithNameFromAnySet(iconName: string, iconSetConfigs: SvgIconConfig[]):\n      SVGElement | null {\n    // Iterate backwards, so icon sets added later have precedence.\n    for (let i = iconSetConfigs.length - 1; i >= 0; i--) {\n      const config = iconSetConfigs[i];\n\n      // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of\n      // the parsing by doing a quick check using `indexOf` to see if there's any chance for the\n      // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least\n      // some of the parsing.\n      if (config.svgText && config.svgText.indexOf(iconName) > -1) {\n        const svg = this._svgElementFromConfig(config as LoadedSvgIconConfig);\n        const foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);\n        if (foundIcon) {\n          return foundIcon;\n        }\n      }\n    }\n    return null;\n  }\n\n  /**\n   * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element\n   * from it.\n   */\n  private _loadSvgIconFromConfig(config: SvgIconConfig): Observable<SVGElement> {\n    return this._fetchIcon(config).pipe(\n      tap(svgText => config.svgText = svgText),\n      map(() => this._svgElementFromConfig(config as LoadedSvgIconConfig))\n    );\n  }\n\n  /**\n   * Loads the content of the icon set URL specified in the\n   * SvgIconConfig and attaches it to the config.\n   */\n  private _loadSvgIconSetFromConfig(config: SvgIconConfig): Observable<string | null> {\n    if (config.svgText) {\n      return observableOf(null);\n    }\n\n    return this._fetchIcon(config).pipe(tap(svgText => config.svgText = svgText));\n  }\n\n  /**\n   * Searches the cached element of the given SvgIconConfig for a nested icon element whose \"id\"\n   * tag matches the specified name. If found, copies the nested element to a new SVG element and\n   * returns it. Returns null if no matching element is found.\n   */\n  private _extractSvgIconFromSet(iconSet: SVGElement, iconName: string,\n                                 options?: IconOptions): SVGElement | null {\n    // Use the `id=\"iconName\"` syntax in order to escape special\n    // characters in the ID (versus using the #iconName syntax).\n    const iconSource = iconSet.querySelector(`[id=\"${iconName}\"]`);\n\n    if (!iconSource) {\n      return null;\n    }\n\n    // Clone the element and remove the ID to prevent multiple elements from being added\n    // to the page with the same ID.\n    const iconElement = iconSource.cloneNode(true) as Element;\n    iconElement.removeAttribute('id');\n\n    // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as\n    // the content of a new <svg> node.\n    if (iconElement.nodeName.toLowerCase() === 'svg') {\n      return this._setSvgAttributes(iconElement as SVGElement, options);\n    }\n\n    // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note\n    // that the same could be achieved by referring to it via <use href=\"#id\">, however the <use>\n    // tag is problematic on Firefox, because it needs to include the current page path.\n    if (iconElement.nodeName.toLowerCase() === 'symbol') {\n      return this._setSvgAttributes(this._toSvgElement(iconElement), options);\n    }\n\n    // createElement('SVG') doesn't work as expected; the DOM ends up with\n    // the correct nodes, but the SVG content doesn't render. Instead we\n    // have to create an empty SVG node using innerHTML and append its content.\n    // Elements created using DOMParser.parseFromString have the same problem.\n    // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display\n    const svg = this._svgElementFromString('<svg></svg>');\n    // Clone the node so we don't remove it from the parent icon set element.\n    svg.appendChild(iconElement);\n\n    return this._setSvgAttributes(svg, options);\n  }\n\n  /**\n   * Creates a DOM element from the given SVG string.\n   */\n  private _svgElementFromString(str: string): SVGElement {\n    const div = this._document.createElement('DIV');\n    div.innerHTML = str;\n    const svg = div.querySelector('svg') as SVGElement;\n\n    // TODO: add an ngDevMode check\n    if (!svg) {\n      throw Error('<svg> tag not found');\n    }\n\n    return svg;\n  }\n\n  /**\n   * Converts an element into an SVG node by cloning all of its children.\n   */\n  private _toSvgElement(element: Element): SVGElement {\n    const svg = this._svgElementFromString('<svg></svg>');\n    const attributes = element.attributes;\n\n    // Copy over all the attributes from the `symbol` to the new SVG, except the id.\n    for (let i = 0; i < attributes.length; i++) {\n      const {name, value} = attributes[i];\n\n      if (name !== 'id') {\n        svg.setAttribute(name, value);\n      }\n    }\n\n    for (let i = 0; i < element.childNodes.length; i++) {\n      if (element.childNodes[i].nodeType === this._document.ELEMENT_NODE) {\n        svg.appendChild(element.childNodes[i].cloneNode(true));\n      }\n    }\n\n    return svg;\n  }\n\n  /**\n   * Sets the default attributes for an SVG element to be used as an icon.\n   */\n  private _setSvgAttributes(svg: SVGElement, options?: IconOptions): SVGElement {\n    svg.setAttribute('fit', '');\n    svg.setAttribute('height', '100%');\n    svg.setAttribute('width', '100%');\n    svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');\n    svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.\n\n    if (options && options.viewBox) {\n      svg.setAttribute('viewBox', options.viewBox);\n    }\n\n    return svg;\n  }\n\n  /**\n   * Returns an Observable which produces the string contents of the given icon. Results may be\n   * cached, so future calls with the same URL may not cause another HTTP request.\n   */\n  private _fetchIcon(iconConfig: SvgIconConfig): Observable<string> {\n    const {url: safeUrl, options} = iconConfig;\n    const withCredentials = options?.withCredentials ?? false;\n\n    if (!this._httpClient) {\n      throw getMatIconNoHttpProviderError();\n    }\n\n    // TODO: add an ngDevMode check\n    if (safeUrl == null) {\n      throw Error(`Cannot fetch icon from URL \"${safeUrl}\".`);\n    }\n\n    const url = this._sanitizer.sanitize(SecurityContext.RESOURCE_URL, safeUrl);\n\n    // TODO: add an ngDevMode check\n    if (!url) {\n      throw getMatIconFailedToSanitizeUrlError(safeUrl);\n    }\n\n    // Store in-progress fetches to avoid sending a duplicate request for a URL when there is\n    // already a request in progress for that URL. It's necessary to call share() on the\n    // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.\n    const inProgressFetch = this._inProgressUrlFetches.get(url);\n\n    if (inProgressFetch) {\n      return inProgressFetch;\n    }\n\n    const req = this._httpClient.get(url, {responseType: 'text', withCredentials}).pipe(\n      finalize(() => this._inProgressUrlFetches.delete(url)),\n      share(),\n    );\n\n    this._inProgressUrlFetches.set(url, req);\n    return req;\n  }\n\n  /**\n   * Registers an icon config by name in the specified namespace.\n   * @param namespace Namespace in which to register the icon config.\n   * @param iconName Name under which to register the config.\n   * @param config Config to be registered.\n   */\n  private _addSvgIconConfig(namespace: string, iconName: string, config: SvgIconConfig): this {\n    this._svgIconConfigs.set(iconKey(namespace, iconName), config);\n    return this;\n  }\n\n  /**\n   * Registers an icon set config in the specified namespace.\n   * @param namespace Namespace in which to register the icon config.\n   * @param config Config to be registered.\n   */\n  private _addSvgIconSetConfig(namespace: string, config: SvgIconConfig): this {\n    const configNamespace = this._iconSetConfigs.get(namespace);\n\n    if (configNamespace) {\n      configNamespace.push(config);\n    } else {\n      this._iconSetConfigs.set(namespace, [config]);\n    }\n\n    return this;\n  }\n\n  /** Parses a config's text into an SVG element. */\n  private _svgElementFromConfig(config: LoadedSvgIconConfig): SVGElement {\n    if (!config.svgElement) {\n      const svg = this._svgElementFromString(config.svgText);\n      this._setSvgAttributes(svg, config.options);\n      config.svgElement = svg;\n    }\n\n    return config.svgElement;\n  }\n}\n\n/** @docs-private */\nexport function ICON_REGISTRY_PROVIDER_FACTORY(\n  parentRegistry: MatIconRegistry,\n  httpClient: HttpClient,\n  sanitizer: DomSanitizer,\n  errorHandler: ErrorHandler,\n  document?: any) {\n  return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);\n}\n\n/** @docs-private */\nexport const ICON_REGISTRY_PROVIDER = {\n  // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.\n  provide: MatIconRegistry,\n  deps: [\n    [new Optional(), new SkipSelf(), MatIconRegistry],\n    [new Optional(), HttpClient],\n    DomSanitizer,\n    ErrorHandler,\n    [new Optional(), DOCUMENT as InjectionToken<any>],\n  ],\n  useFactory: ICON_REGISTRY_PROVIDER_FACTORY,\n};\n\n/** Clones an SVGElement while preserving type information. */\nfunction cloneSvg(svg: SVGElement): SVGElement {\n  return svg.cloneNode(true) as SVGElement;\n}\n\n/** Returns the cache key to use for an icon namespace and name. */\nfunction iconKey(namespace: string, name: string) {\n  return namespace + ':' + name;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewChecked,\n  Attribute,\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  ErrorHandler,\n  inject,\n  Inject,\n  InjectionToken,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CanColor, CanColorCtor, mixinColor} from '@angular/material/core';\nimport {Subscription} from 'rxjs';\nimport {take} from 'rxjs/operators';\n\nimport {MatIconRegistry} from './icon-registry';\n\n\n// Boilerplate for applying mixins to MatIcon.\n/** @docs-private */\nclass MatIconBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatIconMixinBase: CanColorCtor & typeof MatIconBase = mixinColor(MatIconBase);\n\n/**\n * Injection token used to provide the current location to `MatIcon`.\n * Used to handle server-side rendering and to stub out during unit tests.\n * @docs-private\n */\nexport const MAT_ICON_LOCATION = new InjectionToken<MatIconLocation>('mat-icon-location', {\n  providedIn: 'root',\n  factory: MAT_ICON_LOCATION_FACTORY\n});\n\n/**\n * Stubbed out location for `MatIcon`.\n * @docs-private\n */\nexport interface MatIconLocation {\n  getPathname: () => string;\n}\n\n/** @docs-private */\nexport function MAT_ICON_LOCATION_FACTORY(): MatIconLocation {\n  const _document = inject(DOCUMENT);\n  const _location = _document ? _document.location : null;\n\n  return {\n    // Note that this needs to be a function, rather than a property, because Angular\n    // will only resolve it once, but we want the current path on each call.\n    getPathname: () => _location ? (_location.pathname + _location.search) : ''\n  };\n}\n\n\n/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */\nconst funcIriAttributes = [\n  'clip-path',\n  'color-profile',\n  'src',\n  'cursor',\n  'fill',\n  'filter',\n  'marker',\n  'marker-start',\n  'marker-mid',\n  'marker-end',\n  'mask',\n  'stroke'\n];\n\n/** Selector that can be used to find all elements that are using a `FuncIRI`. */\nconst funcIriAttributeSelector = funcIriAttributes.map(attr => `[${attr}]`).join(', ');\n\n/** Regex that can be used to extract the id out of a FuncIRI. */\nconst funcIriPattern = /^url\\(['\"]?#(.*?)['\"]?\\)$/;\n\n/**\n * Component to display an icon. It can be used in the following ways:\n *\n * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the\n *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of\n *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format\n *   \"[namespace]:[name]\", if not the value will be the name of an icon in the default namespace.\n *   Examples:\n *     `<mat-icon svgIcon=\"left-arrow\"></mat-icon>\n *     <mat-icon svgIcon=\"animals:cat\"></mat-icon>`\n *\n * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`\n *   component. By default the Material icons font is used as described at\n *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an\n *   alternate font by setting the fontSet input to either the CSS class to apply to use the\n *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.\n *   Examples:\n *     `<mat-icon>home</mat-icon>\n *     <mat-icon fontSet=\"myfont\">sun</mat-icon>`\n *\n * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the\n *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a\n *   CSS class which causes the glyph to be displayed via a :before selector, as in\n *   https://fortawesome.github.io/Font-Awesome/examples/\n *   Example:\n *     `<mat-icon fontSet=\"fa\" fontIcon=\"alarm\"></mat-icon>`\n */\n@Component({\n  template: '<ng-content></ng-content>',\n  selector: 'mat-icon',\n  exportAs: 'matIcon',\n  styleUrls: ['icon.css'],\n  inputs: ['color'],\n  host: {\n    'role': 'img',\n    'class': 'mat-icon notranslate',\n    '[attr.data-mat-icon-type]': '_usingFontIcon() ? \"font\" : \"svg\"',\n    '[attr.data-mat-icon-name]': '_svgName || fontIcon',\n    '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',\n    '[class.mat-icon-inline]': 'inline',\n    '[class.mat-icon-no-color]': 'color !== \"primary\" && color !== \"accent\" && color !== \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatIcon extends _MatIconMixinBase implements OnChanges, OnInit, AfterViewChecked,\n  CanColor, OnDestroy {\n\n  /**\n   * Whether the icon should be inlined, automatically sizing the icon to match the font size of\n   * the element the icon is contained in.\n   */\n  @Input()\n  get inline(): boolean {\n    return this._inline;\n  }\n  set inline(inline: boolean) {\n    this._inline = coerceBooleanProperty(inline);\n  }\n  private _inline: boolean = false;\n\n  /** Name of the icon in the SVG icon set. */\n  @Input() svgIcon: string;\n\n  /** Font set that the icon is a part of. */\n  @Input()\n  get fontSet(): string { return this._fontSet; }\n  set fontSet(value: string) {\n    this._fontSet = this._cleanupFontValue(value);\n  }\n  private _fontSet: string;\n\n  /** Name of an icon within a font set. */\n  @Input()\n  get fontIcon(): string { return this._fontIcon; }\n  set fontIcon(value: string) {\n    this._fontIcon = this._cleanupFontValue(value);\n  }\n  private _fontIcon: string;\n\n  private _previousFontSetClass: string;\n  private _previousFontIconClass: string;\n\n  _svgName: string | null;\n  _svgNamespace: string | null;\n\n  /** Keeps track of the current page path. */\n  private _previousPath?: string;\n\n  /** Keeps track of the elements and attributes that we've prefixed with the current path. */\n  private _elementsWithExternalReferences?: Map<Element, {name: string, value: string}[]>;\n\n  /** Subscription to the current in-progress SVG icon request. */\n  private _currentIconFetch = Subscription.EMPTY;\n\n  constructor(\n      elementRef: ElementRef<HTMLElement>, private _iconRegistry: MatIconRegistry,\n      @Attribute('aria-hidden') ariaHidden: string,\n      @Inject(MAT_ICON_LOCATION) private _location: MatIconLocation,\n      private readonly _errorHandler: ErrorHandler) {\n    super(elementRef);\n\n    // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is\n    // the right thing to do for the majority of icon use-cases.\n    if (!ariaHidden) {\n      elementRef.nativeElement.setAttribute('aria-hidden', 'true');\n    }\n  }\n\n  /**\n   * Splits an svgIcon binding value into its icon set and icon name components.\n   * Returns a 2-element array of [(icon set), (icon name)].\n   * The separator for the two fields is ':'. If there is no separator, an empty\n   * string is returned for the icon set and the entire value is returned for\n   * the icon name. If the argument is falsy, returns an array of two empty strings.\n   * Throws an error if the name contains two or more ':' separators.\n   * Examples:\n   *   `'social:cake' -> ['social', 'cake']\n   *   'penguin' -> ['', 'penguin']\n   *   null -> ['', '']\n   *   'a:b:c' -> (throws Error)`\n   */\n  private _splitIconName(iconName: string): [string, string] {\n    if (!iconName) {\n      return ['', ''];\n    }\n    const parts = iconName.split(':');\n    switch (parts.length) {\n      case 1: return ['', parts[0]]; // Use default namespace.\n      case 2: return <[string, string]>parts;\n      default: throw Error(`Invalid icon name: \"${iconName}\"`); // TODO: add an ngDevMode check\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.\n    const svgIconChanges = changes['svgIcon'];\n\n    this._svgNamespace = null;\n    this._svgName = null;\n\n    if (svgIconChanges) {\n      this._currentIconFetch.unsubscribe();\n\n      if (this.svgIcon) {\n        const [namespace, iconName] = this._splitIconName(this.svgIcon);\n\n        if (namespace) {\n          this._svgNamespace = namespace;\n        }\n\n        if (iconName) {\n          this._svgName = iconName;\n        }\n\n        this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace)\n            .pipe(take(1))\n            .subscribe(svg => this._setSvgElement(svg), (err: Error) => {\n              const errorMessage = `Error retrieving icon ${namespace}:${iconName}! ${err.message}`;\n              this._errorHandler.handleError(new Error(errorMessage));\n            });\n      } else if (svgIconChanges.previousValue) {\n        this._clearSvgElement();\n      }\n    }\n\n    if (this._usingFontIcon()) {\n      this._updateFontIconClasses();\n    }\n  }\n\n  ngOnInit() {\n    // Update font classes because ngOnChanges won't be called if none of the inputs are present,\n    // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.\n    if (this._usingFontIcon()) {\n      this._updateFontIconClasses();\n    }\n  }\n\n  ngAfterViewChecked() {\n    const cachedElements = this._elementsWithExternalReferences;\n\n    if (cachedElements && cachedElements.size) {\n      const newPath = this._location.getPathname();\n\n      // We need to check whether the URL has changed on each change detection since\n      // the browser doesn't have an API that will let us react on link clicks and\n      // we can't depend on the Angular router. The references need to be updated,\n      // because while most browsers don't care whether the URL is correct after\n      // the first render, Safari will break if the user navigates to a different\n      // page and the SVG isn't re-rendered.\n      if (newPath !== this._previousPath) {\n        this._previousPath = newPath;\n        this._prependPathToReferences(newPath);\n      }\n    }\n  }\n\n  ngOnDestroy() {\n    this._currentIconFetch.unsubscribe();\n\n    if (this._elementsWithExternalReferences) {\n      this._elementsWithExternalReferences.clear();\n    }\n  }\n\n  _usingFontIcon(): boolean {\n    return !this.svgIcon;\n  }\n\n  private _setSvgElement(svg: SVGElement) {\n    this._clearSvgElement();\n\n    // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.\n    // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/\n    // Do this before inserting the element into the DOM, in order to avoid a style recalculation.\n    const styleTags = svg.querySelectorAll('style') as NodeListOf<HTMLStyleElement>;\n\n    for (let i = 0; i < styleTags.length; i++) {\n      styleTags[i].textContent += ' ';\n    }\n\n    // Note: we do this fix here, rather than the icon registry, because the\n    // references have to point to the URL at the time that the icon was created.\n    const path = this._location.getPathname();\n    this._previousPath = path;\n    this._cacheChildrenWithExternalReferences(svg);\n    this._prependPathToReferences(path);\n    this._elementRef.nativeElement.appendChild(svg);\n  }\n\n  private _clearSvgElement() {\n    const layoutElement: HTMLElement = this._elementRef.nativeElement;\n    let childCount = layoutElement.childNodes.length;\n\n    if (this._elementsWithExternalReferences) {\n      this._elementsWithExternalReferences.clear();\n    }\n\n    // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that\n    // we can't use innerHTML, because IE will throw if the element has a data binding.\n    while (childCount--) {\n      const child = layoutElement.childNodes[childCount];\n\n      // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid\n      // of any loose text nodes, as well as any SVG elements in order to remove any old icons.\n      if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {\n        layoutElement.removeChild(child);\n      }\n    }\n  }\n\n  private _updateFontIconClasses() {\n    if (!this._usingFontIcon()) {\n      return;\n    }\n\n    const elem: HTMLElement = this._elementRef.nativeElement;\n    const fontSetClass = this.fontSet ?\n        this._iconRegistry.classNameForFontAlias(this.fontSet) :\n        this._iconRegistry.getDefaultFontSetClass();\n\n    if (fontSetClass != this._previousFontSetClass) {\n      if (this._previousFontSetClass) {\n        elem.classList.remove(this._previousFontSetClass);\n      }\n      if (fontSetClass) {\n        elem.classList.add(fontSetClass);\n      }\n      this._previousFontSetClass = fontSetClass;\n    }\n\n    if (this.fontIcon != this._previousFontIconClass) {\n      if (this._previousFontIconClass) {\n        elem.classList.remove(this._previousFontIconClass);\n      }\n      if (this.fontIcon) {\n        elem.classList.add(this.fontIcon);\n      }\n      this._previousFontIconClass = this.fontIcon;\n    }\n  }\n\n  /**\n   * Cleans up a value to be used as a fontIcon or fontSet.\n   * Since the value ends up being assigned as a CSS class, we\n   * have to trim the value and omit space-separated values.\n   */\n  private _cleanupFontValue(value: string) {\n    return typeof value === 'string' ? value.trim().split(' ')[0] : value;\n  }\n\n  /**\n   * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`\n   * reference. This is required because WebKit browsers require references to be prefixed with\n   * the current path, if the page has a `base` tag.\n   */\n  private _prependPathToReferences(path: string) {\n    const elements = this._elementsWithExternalReferences;\n\n    if (elements) {\n      elements.forEach((attrs, element) => {\n        attrs.forEach(attr => {\n          element.setAttribute(attr.name, `url('${path}#${attr.value}')`);\n        });\n      });\n    }\n  }\n\n  /**\n   * Caches the children of an SVG element that have `url()`\n   * references that we need to prefix with the current path.\n   */\n  private _cacheChildrenWithExternalReferences(element: SVGElement) {\n    const elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);\n    const elements = this._elementsWithExternalReferences =\n        this._elementsWithExternalReferences || new Map();\n\n    for (let i = 0; i < elementsWithFuncIri.length; i++) {\n      funcIriAttributes.forEach(attr => {\n        const elementWithReference = elementsWithFuncIri[i];\n        const value = elementWithReference.getAttribute(attr);\n        const match = value ? value.match(funcIriPattern) : null;\n\n        if (match) {\n          let attributes = elements.get(elementWithReference);\n\n          if (!attributes) {\n            attributes = [];\n            elements.set(elementWithReference, attributes);\n          }\n\n          attributes!.push({name: attr, value: match[1]});\n        }\n      });\n    }\n  }\n\n  static ngAcceptInputType_inline: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatIcon} from './icon';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatIcon, MatCommonModule],\n  declarations: [MatIcon],\n})\nexport class MatIconModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './icon-module';\nexport * from './icon';\nexport * from './icon-registry';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \".card .card-header .card-title {\\n  margin-bottom: 3px !important;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGxvZ0R0by5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDZCQUFBO0FBQ0oiLCJmaWxlIjoibG9nRHRvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQgLmNhcmQtaGVhZGVyIC5jYXJkLXRpdGxlIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDNweCAhaW1wb3J0YW50O1xyXG59Il19 */\";","export default \".status-tables {\\r\\n    margin-top: 32px;\\r\\n    display: grid;\\r\\n    grid-template-columns: 1fr 1fr;\\r\\n    gap: 24px;\\r\\n  }\\r\\n  \\r\\n  .status-table {\\r\\n    margin-bottom: 24px;\\r\\n  }\\r\\n  \\r\\n  .mr-2 {\\r\\n    margin-right: 8px;\\r\\n  }\\r\\n  \\r\\n  @-webkit-keyframes highlight {\\r\\n    0% {\\r\\n      background-color: #72c579; \\r\\n    }\\r\\n    100% {\\r\\n      background-color: white;\\r\\n    }\\r\\n    50% {\\r\\n      background-color: #72c579;\\r\\n    }\\r\\n    75% {\\r\\n      background-color: #72c579;\\r\\n    }\\r\\n    100% {\\r\\n      background-color: white;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @keyframes highlight {\\r\\n    0% {\\r\\n      background-color: #72c579; \\r\\n    }\\r\\n    100% {\\r\\n      background-color: white;\\r\\n    }\\r\\n    50% {\\r\\n      background-color: #72c579;\\r\\n    }\\r\\n    75% {\\r\\n      background-color: #72c579;\\r\\n    }\\r\\n    100% {\\r\\n      background-color: white;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .highlight {\\r\\n    -webkit-animation: highlight 2s infinite;\\r\\n            animation: highlight 2s infinite;\\r\\n  }\\r\\n  \\r\\n  .card-category {\\r\\n    font-size: 14px;\\r\\n    margin-top: 15px !important;\\r\\n    padding: 10px 15px !important;\\r\\n  }\\r\\n  \\r\\n  mat-chip {\\r\\n    min-height: 24px;\\r\\n    padding: 4px 12px;\\r\\n    pointer-events: none !important;\\r\\n  }\\r\\n  \\r\\n  .visitors-container {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 12px;\\r\\n  }\\r\\n  \\r\\n  .visitors-list {\\r\\n    flex: 1;\\r\\n  }\\r\\n  \\r\\n  .total-visitors mat-chip {\\r\\n    font-size: 12px !important;\\r\\n    pointer-events: none !important;\\r\\n  }\\r\\n  \\r\\n  .no-data-message {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    padding: 32px;\\r\\n    text-align: center;\\r\\n    background: #f5f5f5;\\r\\n    border-radius: 8px;\\r\\n    margin: 16px 0;\\r\\n  }\\r\\n  \\r\\n  .no-data-message mat-icon {\\r\\n    font-size: 48px;\\r\\n    width: 48px;\\r\\n    height: 48px;\\r\\n    color: #9e9e9e;\\r\\n    margin-bottom: 16px;\\r\\n  }\\r\\n  \\r\\n  .no-data-message p {\\r\\n    color: #666;\\r\\n    font-size: 16px;\\r\\n    margin: 0;\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 768px) {\\r\\n    .no-data-message {\\r\\n      padding: 24px;\\r\\n    }\\r\\n  \\r\\n    .no-data-message mat-icon {\\r\\n      font-size: 36px;\\r\\n      width: 36px;\\r\\n      height: 36px;\\r\\n      margin-bottom: 12px;\\r\\n    }\\r\\n  \\r\\n    .no-data-message p {\\r\\n      font-size: 14px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  /* Snackbar stilleri */\\r\\n  \\r\\n  ::ng-deep .success-snackbar {\\r\\n    background: #4caf50;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  ::ng-deep .error-snackbar {\\r\\n    background: #f44336;\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  ::ng-deep .success-snackbar .mat-simple-snackbar-action,\\r\\n  ::ng-deep .error-snackbar .mat-simple-snackbar-action {\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  /* Ziyaretçi bilgileri için stiller */\\r\\n  \\r\\n  .visitor-info {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: space-between;\\r\\n    gap: 12px;\\r\\n    padding: 8px 0;\\r\\n  }\\r\\n  \\r\\n  .visitor-names {\\r\\n    flex: 1;\\r\\n    font-size: 14px;\\r\\n  }\\r\\n  \\r\\n  .visitor-count {\\r\\n    min-height: 24px;\\r\\n    padding: 4px 12px;\\r\\n    font-size: 12px !important;\\r\\n  }\\r\\n  \\r\\n  /* Araç/Yaya chip'leri için stiller */\\r\\n  \\r\\n  .vehicle-chip {\\r\\n    background: #e8f5e9 !important;\\r\\n    color: #2e7d32 !important;\\r\\n    min-height: 24px;\\r\\n    padding: 4px 12px;\\r\\n  }\\r\\n  \\r\\n  .pedestrian-chip {\\r\\n    background: #f5f5f5 !important;\\r\\n    color: #616161 !important;\\r\\n    min-height: 24px;\\r\\n    padding: 4px 12px;\\r\\n  }\\r\\n  \\r\\n  .vehicle-chip mat-icon,\\r\\n  .pedestrian-chip mat-icon {\\r\\n    font-size: 18px;\\r\\n    height: 18px;\\r\\n    width: 18px;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n  \\r\\n  /* Tablo hücresi düzenlemeleri */\\r\\n  \\r\\n  .mat-cell {\\r\\n    padding: 12px 16px;\\r\\n  }\\r\\n  \\r\\n  .mat-header-cell {\\r\\n    padding: 0 16px;\\r\\n    font-weight: 500;\\r\\n    color: rgba(0, 0, 0, 0.87);\\r\\n  }\\r\\n  \\r\\n  /* Chip listesi düzenlemeleri */\\r\\n  \\r\\n  mat-chip-list {\\r\\n    pointer-events: none;\\r\\n  }\\r\\n  \\r\\n  mat-chip {\\r\\n    pointer-events: none !important;\\r\\n  }\\r\\n  \\r\\n  /* Tablo genel stilleri */\\r\\n  \\r\\n  .mat-elevation-z8 {\\r\\n    border-radius: 8px;\\r\\n    overflow: hidden;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  /* Responsive düzenlemeler */\\r\\n  \\r\\n  @media (max-width: 1024px) {\\r\\n    .status-tables {\\r\\n      grid-template-columns: 1fr;\\r\\n    }\\r\\n  \\r\\n    .card {\\r\\n      margin-bottom: 24px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 768px) {\\r\\n    .container-fluid {\\r\\n      padding: 16px !important;\\r\\n    }\\r\\n  \\r\\n    .card-header {\\r\\n      margin: -15px 10px 0;\\r\\n      padding: 12px !important;\\r\\n    }\\r\\n  \\r\\n    .card-title {\\r\\n      font-size: 18px;\\r\\n    }\\r\\n  \\r\\n    .card-category {\\r\\n      font-size: 14px;\\r\\n      margin-top: 15px !important;\\r\\n      padding: 10px 15px !important;\\r\\n    }\\r\\n  \\r\\n    .mat-table {\\r\\n      display: block;\\r\\n      overflow-x: auto;\\r\\n      white-space: nowrap;\\r\\n    }\\r\\n  \\r\\n    .mat-cell,\\r\\n    .mat-header-cell {\\r\\n      padding: 8px !important;\\r\\n    }\\r\\n  \\r\\n    .visitor-info {\\r\\n      flex-direction: column;\\r\\n      align-items: flex-start;\\r\\n      gap: 8px;\\r\\n    }\\r\\n  \\r\\n    .visitor-chips {\\r\\n      width: 100%;\\r\\n      margin-bottom: 8px;\\r\\n    }\\r\\n  \\r\\n    .total-visitor-chip {\\r\\n      width: auto;\\r\\n    }\\r\\n  \\r\\n    .mat-chip {\\r\\n      font-size: 12px !important;\\r\\n      height: 24px !important;\\r\\n    }\\r\\n  \\r\\n    .mat-chip mat-icon {\\r\\n      font-size: 14px;\\r\\n      height: 14px;\\r\\n      width: 14px;\\r\\n    }\\r\\n  \\r\\n    .date-tabs {\\r\\n      display: flex;\\r\\n      flex-wrap: wrap;\\r\\n      gap: 8px;\\r\\n      margin-bottom: 16px;\\r\\n    }\\r\\n  \\r\\n    .date-tabs button {\\r\\n      flex: 1;\\r\\n      min-width: 0;\\r\\n      padding: 4px 8px;\\r\\n      font-size: 13px;\\r\\n    }\\r\\n  \\r\\n    .mat-form-field {\\r\\n      margin-bottom: 16px;\\r\\n    }\\r\\n  \\r\\n    .mat-paginator {\\r\\n      font-size: 12px;\\r\\n    }\\r\\n  \\r\\n    .mat-paginator-page-size {\\r\\n      margin-right: 8px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 480px) {\\r\\n    .container-fluid {\\r\\n      padding: 8px !important;\\r\\n    }\\r\\n  \\r\\n    .card {\\r\\n      margin-bottom: 16px;\\r\\n    }\\r\\n  \\r\\n    .card-header {\\r\\n      margin: -10px 5px 0;\\r\\n      padding: 10px !important;\\r\\n    }\\r\\n  \\r\\n    .mat-cell,\\r\\n    .mat-header-cell {\\r\\n      padding: 6px !important;\\r\\n      font-size: 12px;\\r\\n    }\\r\\n  \\r\\n    .mat-chip {\\r\\n      font-size: 11px !important;\\r\\n      height: 22px !important;\\r\\n      padding: 2px 8px !important;\\r\\n    }\\r\\n  \\r\\n    .mat-chip mat-icon {\\r\\n      font-size: 12px;\\r\\n      height: 12px;\\r\\n      width: 12px;\\r\\n      margin-right: 2px;\\r\\n    }\\r\\n  \\r\\n    .date-tabs button {\\r\\n      font-size: 12px;\\r\\n      padding: 2px 6px;\\r\\n    }\\r\\n  \\r\\n    .mat-form-field {\\r\\n      font-size: 14px;\\r\\n    }\\r\\n  \\r\\n    .mat-paginator-page-size-select {\\r\\n      margin: 0 4px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  /* Tablo stilleri */\\r\\n  \\r\\n  .mat-table {\\r\\n    width: 100%;\\r\\n    background: white;\\r\\n  }\\r\\n  \\r\\n  .mat-row:hover {\\r\\n    background: #f5f5f5;\\r\\n  }\\r\\n  \\r\\n  /* Chip stilleri */\\r\\n  \\r\\n  .mat-chip-list {\\r\\n    display: inline-flex;\\r\\n  }\\r\\n  \\r\\n  .mat-chip {\\r\\n    font-size: 13px !important;\\r\\n    height: 24px !important;\\r\\n    line-height: 24px !important;\\r\\n  }\\r\\n  \\r\\n  .visitor-count {\\r\\n    background: #e3f2fd !important;\\r\\n    color: #1976d2 !important;\\r\\n  }\\r\\n  \\r\\n  .vehicle-chip mat-icon,\\r\\n  .pedestrian-chip mat-icon {\\r\\n    margin-right: 4px;\\r\\n    font-size: 16px;\\r\\n    width: 16px;\\r\\n    height: 16px;\\r\\n    vertical-align: text-bottom;\\r\\n  }\\r\\n  \\r\\n  /* Card stilleri */\\r\\n  \\r\\n  .card-header {\\r\\n    padding: 15px !important;\\r\\n    margin: -20px 15px 0;\\r\\n  }\\r\\n  \\r\\n  .card-header-success {\\r\\n    background: linear-gradient(60deg, #66bb6a, #43a047);\\r\\n  }\\r\\n  \\r\\n  .card-header-danger {\\r\\n    background: linear-gradient(60deg, #ef5350, #e53935);\\r\\n  }\\r\\n  \\r\\n  /* Tablo container stilleri */\\r\\n  \\r\\n  .mat-elevation-z8 {\\r\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;\\r\\n  }\\r\\n  \\r\\n  .visitor-chips {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 8px;\\r\\n    flex: 1;\\r\\n  }\\r\\n  \\r\\n  .visitor-icon {\\r\\n    font-size: 16px;\\r\\n    height: 16px;\\r\\n    width: 16px;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n  \\r\\n  .primary-visitor-chip {\\r\\n    background: #e3f2fd !important;\\r\\n    color: #1976d2 !important;\\r\\n    font-weight: 500;\\r\\n    min-height: 28px;\\r\\n  }\\r\\n  \\r\\n  .secondary-visitor-chip {\\r\\n    background: #f5f5f5 !important;\\r\\n    color: #616161 !important;\\r\\n    min-height: 28px;\\r\\n  }\\r\\n  \\r\\n  .total-visitor-chip {\\r\\n    background: #e8f5e9 !important;\\r\\n    color: #2e7d32 !important;\\r\\n    font-size: 12px !important;\\r\\n    min-height: 24px;\\r\\n    padding: 0 8px;\\r\\n  }\\r\\n  \\r\\n  .total-visitor-chip mat-icon {\\r\\n    font-size: 16px;\\r\\n    height: 16px;\\r\\n    width: 16px;\\r\\n    margin-right: 4px;\\r\\n  }\\r\\n  \\r\\n  /* Responsive tasarım için */\\r\\n  \\r\\n  @media (max-width: 768px) {\\r\\n    .visitor-info {\\r\\n      flex-direction: column;\\r\\n      align-items: flex-start;\\r\\n    }\\r\\n  \\r\\n    .visitor-chips {\\r\\n      margin-bottom: 8px;\\r\\n    }\\r\\n  \\r\\n    .total-visitor-chip {\\r\\n      align-self: flex-end;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  /* Hover efekti */\\r\\n  \\r\\n  .mat-chip {\\r\\n    transition: transform 0.2s ease;\\r\\n  }\\r\\n  \\r\\n  .mat-chip:hover {\\r\\n    transform: translateY(-1px);\\r\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\r\\n  }\\r\\n  \\r\\n  /* Chip içindeki ikonların hizalaması */\\r\\n  \\r\\n  .mat-chip mat-icon {\\r\\n    vertical-align: middle;\\r\\n  }\\r\\n  \\r\\n  /* Chip listesi container'ı */\\r\\n  \\r\\n  .mat-chip-list {\\r\\n    display: flex;\\r\\n    flex-wrap: wrap;\\r\\n    gap: 6px;\\r\\n  }\\r\\n  \\r\\n  .visitor-actions {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 8px;\\r\\n  }\\r\\n  \\r\\n  .visitor-actions button {\\r\\n    min-width: 36px;\\r\\n    width: 36px;\\r\\n    height: 36px;\\r\\n    padding: 0;\\r\\n    margin-left: 4px;\\r\\n  }\\r\\n  \\r\\n  .visitor-actions button mat-icon {\\r\\n    font-size: 20px;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    line-height: 20px;\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 768px) {\\r\\n    .visitor-actions {\\r\\n      width: 100%;\\r\\n      justify-content: space-between;\\r\\n    }\\r\\n    \\r\\n    .visitor-actions button {\\r\\n      min-width: 32px;\\r\\n      width: 32px;\\r\\n      height: 32px;\\r\\n    }\\r\\n  \\r\\n    .visitor-actions button mat-icon {\\r\\n      font-size: 18px;\\r\\n      width: 18px;\\r\\n      height: 18px;\\r\\n      line-height: 18px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .show-all-btn {\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    gap: 8px;\\r\\n    padding: 4px 12px;\\r\\n    height: 32px;\\r\\n    font-size: 13px;\\r\\n    border-radius: 16px;\\r\\n    background: white;\\r\\n    transition: all 0.2s ease;\\r\\n    color: #1976d2;\\r\\n  }\\r\\n  \\r\\n  .show-all-btn:hover {\\r\\n    background: #1976d2;\\r\\n    color: black;\\r\\n    transform: translateY(-1px);\\r\\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\\r\\n  }\\r\\n  \\r\\n  .show-all-btn:hover mat-icon {\\r\\n    color: white;\\r\\n  }\\r\\n  \\r\\n  .show-all-btn mat-icon {\\r\\n    font-size: 18px;\\r\\n    width: 18px;\\r\\n    height: 18px;\\r\\n    margin: 0;\\r\\n    color: #1976d2;\\r\\n    transition: color 0.2s ease;\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 768px) {\\r\\n    .show-all-btn {\\r\\n      padding: 4px 8px;\\r\\n      height: 28px;\\r\\n      font-size: 12px;\\r\\n    }\\r\\n  \\r\\n    .show-all-btn mat-icon {\\r\\n      font-size: 16px;\\r\\n      width: 16px;\\r\\n      height: 16px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  /* Tarih seçim butonları */\\r\\n  \\r\\n  .date-tabs {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    gap: 16px;\\r\\n    margin: 24px auto;\\r\\n    max-width: 600px;\\r\\n    background: #f5f5f5;\\r\\n    padding: 8px;\\r\\n    border-radius: 12px;\\r\\n  }\\r\\n  \\r\\n  .date-tabs button {\\r\\n    flex: 1;\\r\\n    min-width: 140px;\\r\\n    padding: 12px 24px;\\r\\n    border-radius: 8px;\\r\\n    border: none;\\r\\n    background: transparent;\\r\\n    color: #666;\\r\\n    font-weight: 500;\\r\\n    transition: all 0.3s ease;\\r\\n    display: flex;\\r\\n    align-items: center;\\r\\n    justify-content: center;\\r\\n    gap: 8px;\\r\\n    position: relative;\\r\\n    overflow: hidden;\\r\\n    cursor: pointer;\\r\\n  }\\r\\n  \\r\\n  .date-tabs button.active {\\r\\n    background: #ab47bc !important;\\r\\n    color: white !important;\\r\\n    box-shadow: 0 4px 12px rgba(171, 71, 188, 0.2);\\r\\n    transform: translateY(-1px);\\r\\n  }\\r\\n  \\r\\n  .date-tabs button.active mat-icon {\\r\\n    color: white !important;\\r\\n    transform: scale(1.1);\\r\\n  }\\r\\n  \\r\\n  .date-tabs button.active span {\\r\\n    color: white !important;\\r\\n    transform: scale(1.05);\\r\\n  }\\r\\n  \\r\\n  .date-tabs button:not(.active):hover {\\r\\n    background: rgba(171, 71, 188, 0.1);\\r\\n    color: #ab47bc;\\r\\n    transform: translateY(-1px);\\r\\n  }\\r\\n  \\r\\n  .date-tabs button mat-icon {\\r\\n    font-size: 20px;\\r\\n    width: 20px;\\r\\n    height: 20px;\\r\\n    transition: all 0.3s ease;\\r\\n  }\\r\\n  \\r\\n  .date-tabs button:hover mat-icon {\\r\\n    transform: translateY(-2px);\\r\\n  }\\r\\n  \\r\\n  .date-tabs button span {\\r\\n    font-size: 14px;\\r\\n    font-weight: 500;\\r\\n    transition: all 0.3s ease;\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 768px) {\\r\\n    .date-tabs {\\r\\n      flex-direction: row;\\r\\n      flex-wrap: wrap;\\r\\n      gap: 8px;\\r\\n      padding: 8px;\\r\\n      margin: 16px auto;\\r\\n    }\\r\\n  \\r\\n    .date-tabs button {\\r\\n      min-width: 0;\\r\\n      padding: 8px 16px;\\r\\n      font-size: 13px;\\r\\n    }\\r\\n  \\r\\n    .date-tabs button mat-icon {\\r\\n      font-size: 18px;\\r\\n      width: 18px;\\r\\n      height: 18px;\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  @media (max-width: 480px) {\\r\\n    .date-tabs {\\r\\n      flex-direction: column;\\r\\n      width: 100%;\\r\\n    }\\r\\n  \\r\\n    .date-tabs button {\\r\\n      width: 100%;\\r\\n      padding: 10px;\\r\\n    }\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64, */\";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// Not exported from index\r\n/** @private */\r\nexport class TextMessageFormat {\r\n    public static RecordSeparatorCode = 0x1e;\r\n    public static RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);\r\n\r\n    public static write(output: string): string {\r\n        return `${output}${TextMessageFormat.RecordSeparator}`;\r\n    }\r\n\r\n    public static parse(input: string): string[] {\r\n        if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {\r\n            throw new Error(\"Message is incomplete.\");\r\n        }\r\n\r\n        const messages = input.split(TextMessageFormat.RecordSeparator);\r\n        messages.pop();\r\n        return messages;\r\n    }\r\n}\r\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { LookUp } from \"app/core/models/lookUp\";\r\nimport { Observable } from \"rxjs\";\r\nimport { environment } from \"../../../../../../environments/environment\";\r\nimport { Group } from \"../Models/group\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\",\r\n})\r\nexport class GroupService {\r\n  constructor(private readonly _httpClient: HttpClient) {}\r\n\r\n  getGroupList(): Observable<Group[]> {\r\n    return this._httpClient.get<Group[]>(environment.getApiUrl + \"/groups/\");\r\n  }\r\n\r\n  getGroupById(id: number): Observable<Group> {\r\n    return this._httpClient.get<Group>(environment.getApiUrl + `/groups/${id}`);\r\n  }\r\n\r\n  getGroupClaims(id: number): Observable<LookUp[]> {\r\n    return this._httpClient.get<LookUp[]>(\r\n      environment.getApiUrl + `/group-claims/groups/${id}`\r\n    );\r\n  }\r\n\r\n  getGroupUsers(id: number): Observable<LookUp[]> {\r\n    return this._httpClient.get<LookUp[]>(\r\n      environment.getApiUrl + `/user-groups/groups/${id}/users`\r\n    );\r\n  }\r\n\r\n  addGroup(group: Group): Observable<any> {\r\n    var result = this._httpClient.post(\r\n      environment.getApiUrl + \"/groups/\",\r\n      group,\r\n      { responseType: \"text\" }\r\n    );\r\n    return result;\r\n  }\r\n\r\n  updateGroup(group: Group): Observable<any> {\r\n    var result = this._httpClient.put(\r\n      environment.getApiUrl + \"/groups/\",\r\n      group,\r\n      { responseType: \"text\" }\r\n    );\r\n    return result;\r\n  }\r\n\r\n  deleteGroup(id: number) {\r\n    return this._httpClient.request(\r\n      \"delete\",\r\n      environment.getApiUrl + `/groups/${id}`\r\n    );\r\n  }\r\n\r\n  saveGroupClaims(groupId: number, claims: number[]): Observable<any> {\r\n    var result = this._httpClient.put(\r\n      environment.getApiUrl + `/group-claims/`,\r\n      { GroupId: groupId, ClaimIds: claims },\r\n      { responseType: \"text\" }\r\n    );\r\n    return result;\r\n  }\r\n\r\n  saveGroupUsers(groupId: number, userIds: number[]): Observable<any> {\r\n    var result = this._httpClient.put(\r\n      environment.getApiUrl + \"/user-groups/groups/\",\r\n      { GroupId: groupId, UserIds: userIds },\r\n      { responseType: \"text\" }\r\n    );\r\n    return result;\r\n  }\r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortSignal } from \"./AbortController\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\n\r\n/** Represents an HTTP request. */\r\nexport interface HttpRequest {\r\n    /** The HTTP method to use for the request. */\r\n    method?: string;\r\n\r\n    /** The URL for the request. */\r\n    url?: string;\r\n\r\n    /** The body content for the request. May be a string or an ArrayBuffer (for binary data). */\r\n    content?: string | ArrayBuffer;\r\n\r\n    /** An object describing headers to apply to the request. */\r\n    headers?: MessageHeaders;\r\n\r\n    /** The XMLHttpRequestResponseType to apply to the request. */\r\n    responseType?: XMLHttpRequestResponseType;\r\n\r\n    /** An AbortSignal that can be monitored for cancellation. */\r\n    abortSignal?: AbortSignal;\r\n\r\n    /** The time to wait for the request to complete before throwing a TimeoutError. Measured in milliseconds. */\r\n    timeout?: number;\r\n\r\n    /** This controls whether credentials such as cookies are sent in cross-site requests. */\r\n    withCredentials?: boolean;\r\n}\r\n\r\n/** Represents an HTTP response. */\r\nexport class HttpResponse {\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     */\r\n    constructor(statusCode: number);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code and message.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and string content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: ArrayBuffer);\r\n\r\n    /** Constructs a new instance of {@link @microsoft/signalr.HttpResponse} with the specified status code, message and binary content.\r\n     *\r\n     * @param {number} statusCode The status code of the response.\r\n     * @param {string} statusText The status message of the response.\r\n     * @param {string | ArrayBuffer} content The content of the response.\r\n     */\r\n    constructor(statusCode: number, statusText: string, content: string | ArrayBuffer);\r\n    constructor(\r\n        public readonly statusCode: number,\r\n        public readonly statusText?: string,\r\n        public readonly content?: string | ArrayBuffer) {\r\n    }\r\n}\r\n\r\n/** Abstraction over an HTTP client.\r\n *\r\n * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.\r\n */\r\nexport abstract class HttpClient {\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP GET request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public get(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public get(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"GET\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP POST request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public post(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public post(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"POST\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string): Promise<HttpResponse>;\r\n\r\n    /** Issues an HTTP DELETE request to the specified URL, returning a Promise that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {string} url The URL for the request.\r\n     * @param {HttpRequest} options Additional options to configure the request. The 'url' field in this object will be overridden by the url parameter.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an {@link @microsoft/signalr.HttpResponse} describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public delete(url: string, options: HttpRequest): Promise<HttpResponse>;\r\n    public delete(url: string, options?: HttpRequest): Promise<HttpResponse> {\r\n        return this.send({\r\n            ...options,\r\n            method: \"DELETE\",\r\n            url,\r\n        });\r\n    }\r\n\r\n    /** Issues an HTTP request to the specified URL, returning a {@link Promise} that resolves with an {@link @microsoft/signalr.HttpResponse} representing the result.\r\n     *\r\n     * @param {HttpRequest} request An {@link @microsoft/signalr.HttpRequest} describing the request to send.\r\n     * @returns {Promise<HttpResponse>} A Promise that resolves with an HttpResponse describing the response, or rejects with an Error indicating a failure.\r\n     */\r\n    public abstract send(request: HttpRequest): Promise<HttpResponse>;\r\n\r\n    /** Gets all cookies that apply to the specified URL.\r\n     *\r\n     * @param url The URL that the cookies are valid for.\r\n     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.\r\n     */\r\n    // @ts-ignore\r\n    public getCookieString(url: string): string {\r\n        return \"\";\r\n    }\r\n}\r\n","\r\nexport class BanuLog{\r\nid?:string; \r\ncreatedDate?:(Date | any); \r\ntransactorFullName?:string; \r\ntransactorId?:number; \r\ntransactionsDescription?:string; \r\ntransactionType?:string; \r\n\r\n}","export default \"<div class=\\\"container-fluid\\\" style=\\\"padding-top: 35px;\\\">\\r\\n  <div class=\\\"card\\\">\\r\\n    <div class=\\\"card-header card-header-primary\\\">\\r\\n      <h4 class=\\\"card-title\\\">Güvenlik İşlemleri</h4>\\r\\n      <p class=\\\"card-category\\\">Ziyaretçi Giriş/Çıkış Takibi</p>\\r\\n    </div>\\r\\n    <div class=\\\"card-body\\\">\\r\\n      <!-- Tab Butonları -->\\r\\n      <div class=\\\"date-tabs\\\">\\r\\n        <button mat-button \\r\\n                [class.active]=\\\"selectedTab === 'today'\\\"\\r\\n                (click)=\\\"filterByDate('today')\\\">\\r\\n          <mat-icon>today</mat-icon>\\r\\n          <span>Bugün</span>\\r\\n        </button>\\r\\n        <button mat-button \\r\\n                [class.active]=\\\"selectedTab === 'tomorrow'\\\"\\r\\n                (click)=\\\"filterByDate('tomorrow')\\\">\\r\\n          <mat-icon>event</mat-icon>\\r\\n          <span>Yarın</span>\\r\\n        </button>\\r\\n        <button mat-button \\r\\n                [class.active]=\\\"selectedTab === 'twoDaysLater'\\\"\\r\\n                (click)=\\\"filterByDate('twoDaysLater')\\\">\\r\\n          <mat-icon>event_note</mat-icon>\\r\\n          <span>2 Gün Sonraki</span>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n      <!-- Arama Alanı -->\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"w-100\\\">\\r\\n        <mat-label>Ara</mat-label>\\r\\n        <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"İsim, soyisim veya plaka ile arama yapın\\\" #input>\\r\\n        <mat-icon matSuffix>search</mat-icon>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <!-- Tablo -->\\r\\n      <div class=\\\"mat-elevation-z8\\\">\\r\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort *ngIf=\\\"dataSource.data.length > 0\\\">\\r\\n          \\r\\n          <ng-container matColumnDef=\\\"visitors\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Ziyaretçiler </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n              <div class=\\\"visitor-info\\\">\\r\\n                <div class=\\\"visitor-chips\\\">\\r\\n                  <mat-chip-list>\\r\\n                    <!-- Tüm ziyaretçiler -->\\r\\n                    <mat-chip *ngFor=\\\"let visitorName of (getAllVisitorNames(row)).visitorNames; let i = index\\\" \\r\\n                             [class.primary-visitor-chip]=\\\"i === 0\\\"\\r\\n                             [class.secondary-visitor-chip]=\\\"i !== 0\\\">\\r\\n                      <mat-icon class=\\\"visitor-icon\\\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\\r\\n                      {{visitorName}}\\r\\n                    </mat-chip>\\r\\n                  </mat-chip-list>\\r\\n                </div>\\r\\n                <div class=\\\"visitor-actions\\\">\\r\\n                  <mat-chip class=\\\"total-visitor-chip\\\">\\r\\n                    <mat-icon>group</mat-icon>\\r\\n                    {{(getAllVisitorNames(row)).totalVisitors}} Kişi\\r\\n                  </mat-chip>\\r\\n                  <button mat-stroked-button color=\\\"primary\\\" \\r\\n                          (click)=\\\"showAllVisitors(row)\\\"\\r\\n                          matTooltip=\\\"Tüm Ziyaretçileri Göster\\\"\\r\\n                          *ngIf=\\\"row.multiVisiters?.length > 2\\\"\\r\\n                          class=\\\"show-all-btn\\\">\\r\\n                    <mat-icon>people_alt</mat-icon>\\r\\n                    Tümünü Gör\\r\\n                  </button>\\r\\n                </div>\\r\\n              </div>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"licensePlate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Araç/Yaya </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n              <mat-chip-list>\\r\\n                <ng-container *ngIf=\\\"row.visit.vehicleEntry; else pedestrian\\\">\\r\\n                  <mat-chip class=\\\"vehicle-chip\\\">\\r\\n                    <mat-icon>directions_car</mat-icon>\\r\\n                    {{row.visit.visitorLicensePlate || 'Plaka Girilmemiş'}}\\r\\n                  </mat-chip>\\r\\n                </ng-container>\\r\\n                <ng-template #pedestrian>\\r\\n                  <mat-chip class=\\\"pedestrian-chip\\\">\\r\\n                    <mat-icon>directions_walk</mat-icon>\\r\\n                    Yaya\\r\\n                  </mat-chip>\\r\\n                </ng-template>\\r\\n              </mat-chip-list>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"entryDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Giriş Tarihi </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> \\r\\n              {{row.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"exitDate\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Çıkış Tarihi </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\"> \\r\\n              {{row.visit.visitEndDate && row.visit.visitEndDate !== '0001-01-01T00:00:00' ? \\r\\n                (row.visit.visitEndDate | date:'dd/MM/yyyy HH:mm') : 'Çıkış Yapılmadı'}} \\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"actions\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef> İşlemler </th>\\r\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n              <button mat-mini-fab color=\\\"primary\\\" class=\\\"mr-2\\\" \\r\\n                      (click)=\\\"approveVisit(row)\\\"\\r\\n                      [disabled]=\\\"row.status === 'approved'\\\"\\r\\n                      matTooltip=\\\"Ziyareti Onayla\\\">\\r\\n                <mat-icon>check</mat-icon>\\r\\n              </button>\\r\\n              <button mat-mini-fab color=\\\"warn\\\" \\r\\n                      (click)=\\\"rejectVisit(row)\\\"\\r\\n                      [disabled]=\\\"row.status === 'rejected'\\\"\\r\\n                      matTooltip=\\\"Ziyareti Reddet\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n        </table>\\r\\n\\r\\n        <div class=\\\"no-data-message\\\" *ngIf=\\\"!dataSource.data.length\\\">\\r\\n          <mat-icon>info</mat-icon>\\r\\n          <p>Henüz bekleyen ziyaret bulunmamaktadır.</p>\\r\\n        </div>\\r\\n\\r\\n     \\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"status-tables\\\">\\r\\n        <div class=\\\"status-table\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-success\\\">\\r\\n              <h4 class=\\\"card-title\\\">\\r\\n                <mat-icon>check_circle</mat-icon>\\r\\n                Onaylanan Ziyaretler\\r\\n              </h4>\\r\\n              <p class=\\\"card-category\\\">Ziyaret Durum</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"mat-elevation-z8\\\">\\r\\n                <table mat-table [dataSource]=\\\"approvedDataSource\\\" matSort #approvedSort=\\\"matSort\\\" *ngIf=\\\"approvedDataSource.data.length > 0\\\">\\r\\n                  \\r\\n                  <ng-container matColumnDef=\\\"visitors\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Ziyaretçiler </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                      <div class=\\\"visitor-info\\\">\\r\\n                        <div class=\\\"visitor-chips\\\">\\r\\n                          <mat-chip-list>\\r\\n                            <mat-chip *ngFor=\\\"let visitorName of (getAllVisitorNames(row)).visitorNames; let i = index\\\" \\r\\n                                     [class.primary-visitor-chip]=\\\"i === 0\\\"\\r\\n                                     [class.secondary-visitor-chip]=\\\"i !== 0\\\">\\r\\n                              <mat-icon class=\\\"visitor-icon\\\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\\r\\n                              {{visitorName}}\\r\\n                            </mat-chip>\\r\\n                          </mat-chip-list>\\r\\n                        </div>\\r\\n                        <div class=\\\"visitor-actions\\\">\\r\\n                          <mat-chip class=\\\"total-visitor-chip\\\">\\r\\n                            <mat-icon>group</mat-icon>\\r\\n                            {{getAllVisitorNames(row).totalVisitors}} Kişi\\r\\n                          </mat-chip>\\r\\n                          <button mat-stroked-button color=\\\"primary\\\" \\r\\n                                  (click)=\\\"showAllVisitors(row)\\\"\\r\\n                                  matTooltip=\\\"Tüm Ziyaretçileri Göster\\\"\\r\\n                                  *ngIf=\\\"row.multiVisiters?.length > 2\\\"\\r\\n                                  class=\\\"show-all-btn\\\">\\r\\n                            <mat-icon>people_alt</mat-icon>\\r\\n                            Tümünü Gör\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"licensePlate\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Araç/Yaya </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                      <mat-chip-list>\\r\\n                        <ng-container *ngIf=\\\"row.isVehicle; else pedestrianApproved\\\">\\r\\n                          <mat-chip class=\\\"vehicle-chip\\\">\\r\\n                            <mat-icon>directions_car</mat-icon>\\r\\n                            {{row.licensePlate}}\\r\\n                          </mat-chip>\\r\\n                        </ng-container>\\r\\n                        <ng-template #pedestrianApproved>\\r\\n                          <mat-chip class=\\\"pedestrian-chip\\\">\\r\\n                            <mat-icon>directions_walk</mat-icon>\\r\\n                            Yaya\\r\\n                          </mat-chip>\\r\\n                        </ng-template>\\r\\n                      </mat-chip-list>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"entryDate\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Giriş Tarihi </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.visit.visitStartDate| date:'dd/MM/yyyy HH:mm'}} </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"exitDate\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Çıkış Tarihi </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.visit.visitEndDate | date:'dd/MM/yyyy HH:mm' || 'Çıkış Yapılmadı'}} </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <tr mat-header-row *matHeaderRowDef=\\\"approvedColumns\\\"></tr>\\r\\n                  <tr mat-row *matRowDef=\\\"let row; columns: approvedColumns;\\\"></tr>\\r\\n                </table>\\r\\n\\r\\n                <div class=\\\"no-data-message\\\" *ngIf=\\\"!approvedDataSource.data.length\\\">\\r\\n                  <mat-icon>info</mat-icon>\\r\\n                  <p>Henüz onaylanan ziyaret bulunmamaktadır.</p>\\r\\n                </div>\\r\\n\\r\\n                <mat-paginator #approvedPaginator [pageSizeOptions]=\\\"[5, 10, 25]\\\"></mat-paginator>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"status-table\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n              <h4 class=\\\"card-title\\\">\\r\\n                <mat-icon>cancel</mat-icon>\\r\\n                Reddedilen Ziyaretler\\r\\n              </h4>\\r\\n              <p class=\\\"card-category\\\">Ziyaret Durum</p>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"mat-elevation-z8\\\">\\r\\n                <table mat-table [dataSource]=\\\"rejectedDataSource\\\" matSort #rejectedSort=\\\"matSort\\\" *ngIf=\\\"rejectedDataSource.data.length > 0\\\">\\r\\n                  \\r\\n                  <ng-container matColumnDef=\\\"visitors\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Ziyaretçiler </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                      <div class=\\\"visitor-info\\\">\\r\\n                        <div class=\\\"visitor-chips\\\">\\r\\n                          <mat-chip-list>\\r\\n                            <mat-chip *ngFor=\\\"let visitorName of (getAllVisitorNames(row)).visitorNames; let i = index\\\" \\r\\n                                     [class.primary-visitor-chip]=\\\"i === 0\\\"\\r\\n                                     [class.secondary-visitor-chip]=\\\"i !== 0\\\">\\r\\n                              <mat-icon class=\\\"visitor-icon\\\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\\r\\n                              {{visitorName}}\\r\\n                            </mat-chip>\\r\\n                          </mat-chip-list>\\r\\n                        </div>\\r\\n                        <div class=\\\"visitor-actions\\\">\\r\\n                          <mat-chip class=\\\"total-visitor-chip\\\">\\r\\n                            <mat-icon>group</mat-icon>\\r\\n                            {{(getAllVisitorNames(row)).totalVisitors}} Kişi\\r\\n                          </mat-chip>\\r\\n                          <button mat-stroked-button color=\\\"primary\\\" \\r\\n                                  (click)=\\\"showAllVisitors(row)\\\"\\r\\n                                  matTooltip=\\\"Tüm Ziyaretçileri Göster\\\"\\r\\n                                  *ngIf=\\\"row.multiVisiters?.length > 2\\\"\\r\\n                                  class=\\\"show-all-btn\\\">\\r\\n                            <mat-icon>people_alt</mat-icon>\\r\\n                            Tümünü Gör\\r\\n                          </button>\\r\\n                        </div>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"licensePlate\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Araç/Yaya </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n                      <mat-chip-list>\\r\\n                        <ng-container *ngIf=\\\"row.visit.vehicleEntry; else pedestrianRejected\\\">\\r\\n                          <mat-chip class=\\\"vehicle-chip\\\">\\r\\n                            <mat-icon>directions_car</mat-icon>\\r\\n                            {{row.visit.visitorLicensePlate}}\\r\\n                          </mat-chip>\\r\\n                        </ng-container>\\r\\n                        <ng-template #pedestrianRejected>\\r\\n                          <mat-chip class=\\\"pedestrian-chip\\\">\\r\\n                            <mat-icon>directions_walk</mat-icon>\\r\\n                            Yaya\\r\\n                          </mat-chip>\\r\\n                        </ng-template>\\r\\n                      </mat-chip-list>\\r\\n                    </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"entryDate\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Giriş Tarihi </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}} </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"exitDate\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Çıkış Tarihi </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.visit.visitEndDate | date:'dd/MM/yyyy HH:mm' || 'Çıkış Yapılmadı'}} </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <ng-container matColumnDef=\\\"rejectReason\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Red Sebebi </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let row\\\"> {{row.visit.reasonForRejection}} </td>\\r\\n                  </ng-container>\\r\\n\\r\\n                  <tr mat-header-row *matHeaderRowDef=\\\"rejectedColumns\\\"></tr>\\r\\n                  <tr mat-row *matRowDef=\\\"let row; columns: rejectedColumns;\\\"></tr>\\r\\n                </table>\\r\\n\\r\\n                <div class=\\\"no-data-message\\\" *ngIf=\\\"!rejectedDataSource.data.length\\\">\\r\\n                  <mat-icon>info</mat-icon>\\r\\n                  <p>Henüz reddedilen ziyaret bulunmamaktadır.</p>\\r\\n                </div>\\r\\n\\r\\n                <mat-paginator #rejectedPaginator [pageSizeOptions]=\\\"[5, 10, 25]\\\"></mat-paginator>\\r\\n              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\";","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 class=\\\"card-title \\\">{{'UserList'|translate}}</h4>\\r\\n            <a *ngIf=\\\"checkClaim('CreateUserCommand')\\\" class=\\\"pull-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#user\\\"> <i\\r\\n                style=\\\"color:white\\\" title=\\\"{{'Add'| translate}}\\\" class=\\\"far fa-plus-square fa-2x\\\"></i></a>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n\\r\\n              <div class=\\\"col-md-4 pull-right\\\">\\r\\n                  <mat-form-field>\\r\\n                      <mat-label>{{'Filter' |translate}}</mat-label>\\r\\n                      <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                  </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"userId\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'ID' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userId}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"email\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Email' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.email}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"fullName\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'FullName' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.fullName}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"status\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Status' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <mat-checkbox [checked]=\\\"element.status\\\" [disabled]=\\\"true\\\">\\r\\n                    </mat-checkbox>\\r\\n                  </td>\\r\\n\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"mobilePhones\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'MobilePhones' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.mobilePhones}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"address\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Address' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.address}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"notes\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Notes' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.notes}} </td>\\r\\n                </ng-container>\\r\\n                <ng-container matColumnDef=\\\"reqLimit\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef> {{'Req Limit' |translate}}</th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.reqLimit}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"passwordChange\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UserChangePasswordCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#passwordChange\\\" (click)=\\\"setUserId(element.userId)\\\"><i\\r\\n                        title=\\\"{{('ChangePassword' | translate)}}\\\" style=\\\"color:slateblue;\\\" class=\\\"fas fa-key\\\"\\r\\n                        aria-hidden=\\\"true\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"updateClaim\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateUserClaimCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#claimsPermissions\\\"\\r\\n                      (click)=\\\"getUserClaimsPermissions(element.userId)\\\"><i title=\\\"{{('UsersClaims' | translate)}}\\\"\\r\\n                        style=\\\"color:green;\\\" class=\\\"fas fa-user-shield\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n               \\r\\n\\r\\n                <ng-container matColumnDef=\\\"updateGroupClaim\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateGroupClaimCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#groupPermissions\\\"\\r\\n                      (click)=\\\"getUserGroupPermissions(element.userId)\\\"><i title=\\\"{{'UsersGroups' | translate}}\\\"\\r\\n                        style=\\\"color:royalblue;\\\" class=\\\"fas fa-user-lock\\\" aria-hidden=\\\"true\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"update\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateUserCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#user\\\" (click)=\\\"getUserById(element.userId)\\\"><i\\r\\n                        title=\\\"{{'Update' | translate}}\\\" style=\\\"color:#ff5722;\\\" class=\\\"far fa-edit\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"updateReqLimit\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateUserCommand')\\\" \\r\\n                       data-toggle=\\\"modal\\\" \\r\\n                       data-target=\\\"#reqLimitModal\\\"\\r\\n                       (click)=\\\"setSelectedUserId(element.userId)\\\">\\r\\n                      <i title=\\\"{{'Update Request Limit' | translate}}\\\" \\r\\n                         style=\\\"color:#2196F3;\\\" \\r\\n                         class=\\\"fas fa-arrow-up\\\">\\r\\n                      </i>\\r\\n                    </a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"delete\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('DeleteUserCommand')\\\" (confirm)=\\\"deleteUser(element.userId)\\\" [swal]=\\\"deleteSwal\\\"><i title=\\\"{{'Delete' | translate}}\\\" style=\\\"color:#D9534E;\\\"\\r\\n                        class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n              <mat-paginator [pageSizeOptions]=\\\"[10, 25,50,100]\\\"></mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"user\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog modal-lg\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header bg-primary text-white\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n          <i class=\\\"material-icons mr-2\\\">person_add</i>\\r\\n          {{'UserForm'| translate}}\\r\\n        </h4>\\r\\n        <button type=\\\"button\\\" #closeButton class=\\\"close text-white\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(userAddForm)\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form *ngIf=\\\"userAddForm\\\" [formGroup]=\\\"userAddForm\\\" (ngSubmit)=\\\"save()\\\" class=\\\"p-3\\\">\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>{{'FullName'|translate}}</mat-label>\\r\\n                <input matInput type=\\\"text\\\" formControlName=\\\"fullName\\\" required>\\r\\n                <mat-icon matPrefix class=\\\"mr-2\\\">person</mat-icon>\\r\\n                <mat-error *ngIf=\\\"userAddForm.get('fullName')!.hasError('required') && userAddForm.get('fullName')!.touched\\\">\\r\\n                  {{'Required'| translate}}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>{{'Email'|translate}}</mat-label>\\r\\n                <input matInput type=\\\"email\\\" formControlName=\\\"email\\\" required minlength=\\\"10\\\" maxlength=\\\"50\\\" [(ngModel)]=\\\"userEmail\\\" (ngModelChange)=\\\"validateEmail()\\\">\\r\\n                <mat-icon matPrefix class=\\\"mr-2\\\">email</mat-icon>\\r\\n                \\r\\n                <mat-error *ngIf=\\\"userAddForm.get('email')!.hasError('minlength') && userAddForm.get('email')!.touched\\\">\\r\\n                  E-posta en az 10 karakter olmalıdır.\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"userAddForm.get('email')!.hasError('maxlength') && userAddForm.get('email')!.touched\\\">\\r\\n                  E-posta en fazla 50 karakter olmalıdır.\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n              <div *ngIf=\\\"!notValidEmail\\\" class=\\\"error-message\\\">E-posta en az 10 karakter olmalıdır.</div>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"row mb-4\\\">\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>{{'MobilePhones'|translate}}</mat-label>\\r\\n                <input matInput type=\\\"tel\\\" formControlName=\\\"mobilePhones\\\">\\r\\n                <mat-icon matPrefix class=\\\"mr-2\\\">phone</mat-icon>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n\\r\\n            <div class=\\\"col-md-6\\\">\\r\\n              <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>{{'Notes'|translate}}</mat-label>\\r\\n                <textarea matInput formControlName=\\\"notes\\\" rows=\\\"1\\\"></textarea>\\r\\n                <mat-icon matPrefix class=\\\"mr-2\\\">note</mat-icon>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n         \\r\\n        \\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>{{'Address'|translate}}</mat-label>\\r\\n                <textarea matInput formControlName=\\\"address\\\" rows=\\\"2\\\"></textarea>\\r\\n                <mat-icon matPrefix class=\\\"mr-2\\\">location_on</mat-icon>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <div class=\\\"d-flex justify-content-end mt-4\\\">\\r\\n            <button mat-button type=\\\"button\\\" class=\\\"mr-2\\\" data-dismiss=\\\"modal\\\" (click)=\\\"clearFormGroup(userAddForm)\\\">\\r\\n              <mat-icon>close</mat-icon>\\r\\n              {{'Cancel' |translate}}\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!userAddForm.valid\\\">\\r\\n              <mat-icon>save</mat-icon>\\r\\n              {{'Save' |translate}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"passwordChange\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" #closeButton class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(passwordForm)\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n          {{'Change Password' | translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n        <form *ngIf=\\\"passwordForm\\\" [formGroup]=\\\"passwordForm\\\" (ngSubmit)=\\\"savePassword()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"{{'Password'|translate}}\\\" type=\\\"password\\\" id=\\\"password\\\" name=\\\"password\\\"\\r\\n                  formControlName=\\\"password\\\">\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"passwordForm.get('password')!.hasError('required') && passwordForm.get('password')!.touched\\\">\\r\\n                  {{'Required'| translate}}\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"{{'ConfirmPassword'|translate}}\\\" type=\\\"password\\\" id=\\\"confirmPassword\\\"\\r\\n                  name=\\\"confirmPassword\\\" formControlName=\\\"confirmPassword\\\">\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                  *ngIf=\\\"passwordForm.get('confirmPassword')!.hasError('required') && passwordForm.get('confirmPassword')!.touched\\\">\\r\\n                  Parola onay alanı zorunludur!</div>\\r\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"passwordForm.get('confirmPassword')!.hasError('mustMatch')\\\">\\r\\n                  {{'ConfirmPassword'| translate}}\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save' |translate}}</button>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"groupPermissions\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\r\\n            aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n          {{'Permissions'| translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n\\r\\n        <ng-multiselect-dropdown [settings]=\\\"dropdownSettings\\\" [placeholder]=\\\"'Groups'\\\" [data]=\\\"groupDropdownList\\\"\\r\\n          [(ngModel)]=\\\"groupSelectedItems\\\" (onSelect)=\\\"onItemSelect('Group')\\\" (onSelectAll)=\\\"onSelectAll('Group')\\\"\\r\\n          (onDeSelect)=\\\"onItemDeSelect('Group')\\\">\\r\\n        </ng-multiselect-dropdown>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <a class=\\\"btn btn-primary pull-right\\\" (click)=\\\"saveUserGroupsPermissions()\\\"> {{'Save' |translate}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"claimsPermissions\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"><span\\r\\n            aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n          {{'Permissions'| translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n\\r\\n        <ng-multiselect-dropdown [settings]=\\\"dropdownSettings\\\" [placeholder]=\\\"'Claims'\\\" [data]=\\\"claimDropdownList\\\"\\r\\n          [(ngModel)]=\\\"claimSelectedItems\\\" (onSelect)=\\\"onItemSelect('Claim')\\\" (onSelectAll)=\\\"onSelectAll('Claim')\\\"\\r\\n          (onDeSelect)=\\\"onItemDeSelect('Claim')\\\">\\r\\n        </ng-multiselect-dropdown>\\r\\n\\r\\n      </div>\\r\\n      <div class=\\\"modal-footer\\\">\\r\\n        <a class=\\\"btn btn-primary pull-right\\\" (click)=\\\"saveUserClaimsPermission()\\\"> {{'Save' |translate}}</a>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"reqLimitModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-header bg-primary text-white\\\">\\r\\n        <h4 class=\\\"modal-title\\\">\\r\\n          <i class=\\\"fas fa-arrow-up mr-2\\\"></i>\\r\\n          {{'Update Request Limit' | translate}}\\r\\n        </h4>\\r\\n        <button type=\\\"button\\\" class=\\\"close text-white\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"modal-body\\\">\\r\\n        <form [formGroup]=\\\"reqLimitForm\\\" (ngSubmit)=\\\"saveRequestLimit()\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <mat-form-field class=\\\"w-100\\\" appearance=\\\"outline\\\">\\r\\n                <mat-label>{{'Request Limit' | translate}}</mat-label>\\r\\n                <input matInput type=\\\"number\\\" formControlName=\\\"reqLimit\\\" min=\\\"1\\\">\\r\\n                <mat-error *ngIf=\\\"reqLimitForm.get('reqLimit')?.hasError('required')\\\">\\r\\n                  {{'Required' | translate}}\\r\\n                </mat-error>\\r\\n                <mat-error *ngIf=\\\"reqLimitForm.get('reqLimit')?.hasError('min')\\\">\\r\\n                  {{'Must be greater than 0' | translate}}\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"d-flex justify-content-end mt-3\\\">\\r\\n            <button mat-button type=\\\"button\\\" class=\\\"mr-2\\\" data-dismiss=\\\"modal\\\">\\r\\n              {{'Cancel' | translate}}\\r\\n            </button>\\r\\n            <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" [disabled]=\\\"!reqLimitForm.valid\\\">\\r\\n              {{'Save' | translate}}\\r\\n            </button>\\r\\n          </div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon=\\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n  [confirmButtonText]=\\\"'OK'\\\" [cancelButtonText]=\\\"'Cancel'\\\">\\r\\n</swal>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\";","export default \"<div class=\\\"login-container\\\">\\r\\n  <div class=\\\"login-background\\\"></div>\\r\\n  <div class=\\\"login-card\\\">\\r\\n    <div class=\\\"login-header\\\">\\r\\n      <div class=\\\"logo-wrapper\\\">\\r\\n        <img src=\\\"../../../../../assets/img/analogo.jpg\\\" alt=\\\"Logo\\\" class=\\\"logo\\\">\\r\\n      </div>\\r\\n      <h1 class=\\\"title\\\">Misafir Takip Sistemi</h1>\\r\\n      <p class=\\\"subtitle\\\">{{'Login' | translate}}</p>\\r\\n    </div>\\r\\n\\r\\n    <form (submit)=\\\"login()\\\" class=\\\"login-form\\\">\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"form-field\\\">\\r\\n        <mat-label>{{'Email' | translate}}</mat-label>\\r\\n        <input matInput name=\\\"email\\\" [(ngModel)]=\\\"loginUser.email\\\" required autocomplete=\\\"email\\\">\\r\\n        <mat-icon matPrefix>email</mat-icon>\\r\\n        <mat-error>{{'Required' | translate}}</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n      <mat-form-field appearance=\\\"outline\\\" class=\\\"form-field\\\">\\r\\n        <mat-label>{{'Password' | translate}}</mat-label>\\r\\n        <input matInput [type]=\\\"hidePassword ? 'password' : 'text'\\\" name=\\\"password\\\" [(ngModel)]=\\\"loginUser.password\\\" required autocomplete=\\\"current-password\\\">\\r\\n        <mat-icon matPrefix>lock</mat-icon>\\r\\n        <mat-icon matSuffix (click)=\\\"hidePassword = !hidePassword\\\" class=\\\"cursor-pointer\\\" [attr.aria-label]=\\\"hidePassword ? 'Show password' : 'Hide password'\\\">\\r\\n          {{hidePassword ? 'visibility_off' : 'visibility'}}\\r\\n        </mat-icon>\\r\\n        <mat-error>{{'Required' | translate}}</mat-error>\\r\\n      </mat-form-field>\\r\\n\\r\\n     \\r\\n\\r\\n      <button mat-flat-button color=\\\"primary\\\" type=\\\"submit\\\" class=\\\"login-button\\\">\\r\\n        <mat-icon>login</mat-icon>\\r\\n        <span>{{'Login'| translate}}</span>\\r\\n      </button>\\r\\n\\r\\n      <div class=\\\"forgot-password\\\">\\r\\n        <a href=\\\"https://eposta.bandirma.edu.tr/SifreSifirla\\\" target=\\\"_blank\\\">Şifremi Unuttum?</a>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n\";","import { DatePipe } from '@angular/common';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AuthService } from 'app/core/components/admin/login/Services/auth.service';\r\nimport { PrivPagingResult } from 'app/core/models/privPaging';\r\nimport { Filter } from 'app/core/search-settings/global-filter';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { BanuLog } from './models/BanuLog';\r\nimport { BanuLogService } from './services/BanuLog.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: 'app-banuLog',\r\n\ttemplateUrl: './banulog.component.html',\r\n\tstyleUrls: ['./banuLog.component.scss']\r\n})\r\nexport class BanuLogComponent implements AfterViewInit, OnInit {\r\n\r\n\tdataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = [ 'createdDate', 'transactorFullName', 'transactorId', 'transactionsDescription', 'transactionType'];\r\n\r\n\tbanuLogList: BanuLog[];\r\n\tbanuLog: BanuLog = new BanuLog();\r\n\r\n\tbanuLogAddForm: FormGroup;\r\n\tbasePageIndex:number=1;\r\n\tbasePageCount:number=100;\r\n\tstartDate: Date | null = null;\r\n\tendDate: Date | null = null;\r\n\tformattedStartDate: string = '';\r\n\tformattedEndDate: string = '';\r\n\tselectedProcessType: string = '';\r\n\tsearchName: string = '';\r\n\tbanuLogId: number;\r\n\tisSearch:boolean=false;\r\n\tfilters: Filter[] = [];\r\n\tfilteredAllResult:PrivPagingResult<BanuLog>=null\r\n\tallResult:PrivPagingResult<BanuLog>=null\r\n\tfilterResult: BanuLog[] = [];\r\n\tpage:number=1;\r\n\tpageCount:number[]=[];\r\n\tallPageCount:number[]=[];\r\n\tpageSize:number=100;\r\n\tselectedPageCount: number = null;\r\n\t\r\n\tgetVisiblePages(): number[] {\r\n\t\tconst totalPages = this.pageCount.length;\r\n\t\tconst currentPage = this.page;\r\n\t\tconst visiblePages: number[] = [];\r\n\t\r\n\t\tif (totalPages <= 7) {\r\n\t\t\t// Toplam sayfa sayısı 7 veya daha azsa hepsini göster\r\n\t\t\treturn this.pageCount;\r\n\t\t}\r\n\t\r\n\t\t// İlk sayfayı her zaman göster\r\n\t\tvisiblePages.push(1);\r\n\t\r\n\t\tif (currentPage > 4) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Aktif sayfanın etrafındaki sayfaları göster\r\n\t\tfor (let i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {\r\n\t\t\tvisiblePages.push(i);\r\n\t\t}\r\n\t\r\n\t\tif (currentPage < totalPages - 3) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Son sayfayı her zaman göster\r\n\t\tvisiblePages.push(totalPages);\r\n\t\r\n\t\treturn visiblePages;\r\n\t}\r\n\tgetAllVisiblePages(): number[] {\r\n\t\tconst totalPages = this.allPageCount.length;\r\n\t\tconst currentPage = this.basePageIndex;\r\n\t\tconst visiblePages: number[] = [];\r\n\t\r\n\t\tif (totalPages <= 7) {\r\n\t\t\t// Toplam sayfa sayısı 7 veya daha azsa hepsini göster\r\n\t\t\treturn this.allPageCount;\r\n\t\t}\r\n\t\r\n\t\t// İlk sayfayı her zaman göster\r\n\t\tvisiblePages.push(1);\r\n\t\r\n\t\tif (currentPage > 4) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Aktif sayfanın etrafındaki sayfaları göster\r\n\t\tfor (let i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {\r\n\t\t\tvisiblePages.push(i);\r\n\t\t}\r\n\t\r\n\t\tif (currentPage < totalPages - 3) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Son sayfayı her zaman göster\r\n\t\tvisiblePages.push(totalPages);\r\n\t\r\n\t\treturn visiblePages;\r\n\t}\r\n\t\r\n\tconstructor(private banuLogService: BanuLogService, private lookupService: LookUpService, private alertifyService: AlertifyService, private formBuilder: FormBuilder, private authService: AuthService, private datePipe: DatePipe) { }\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.getBanuLogList();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.createBanuLogAddForm();\r\n\t}\r\n\r\n\r\n\tgetBanuLogList() {\r\n\t\tthis.banuLogService.getBanuLogByPagingList(this.basePageIndex,this.basePageCount).subscribe(res => {\r\n\t\t\tthis.banuLogList =res.data;\r\n\t\t\tthis.allResult =res;\r\n\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\tthis.allPageCount=[];\r\n\t\t\t\t\tfor (let index = 1; index < res.totalPages+1; index++) {\r\n\t\t\t\t\t\tthis.allPageCount.push(index);\r\n\t\t\t\t\t}\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tsave() {\r\n\r\n\t\tif (this.banuLogAddForm.valid) {\r\n\t\t\tthis.banuLog = Object.assign({}, this.banuLogAddForm.value)\r\n\r\n\t\t\tif (this.banuLog.id == \"\")\r\n\t\t\t\tthis.addBanuLog();\r\n\t\t\telse\r\n\t\t\t\tthis.updateBanuLog();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddBanuLog() {\r\n\r\n\t\tthis.banuLogService.addBanuLog(this.banuLog).subscribe(data => {\r\n\t\t\tthis.getBanuLogList();\r\n\t\t\tthis.banuLog = new BanuLog();\r\n\t\t\tjQuery('#banulog').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.banuLogAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tupdateBanuLog() {\r\n\r\n\t\tthis.banuLogService.updateBanuLog(this.banuLog).subscribe(data => {\r\n\r\n\t\t\tvar index = this.banuLogList.findIndex(x => x.id == this.banuLog.id);\r\n\t\t\tthis.banuLogList[index] = this.banuLog;\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.banuLogList);\r\n\t\t\tthis.configDataTable();\r\n\t\t\tthis.banuLog = new BanuLog();\r\n\t\t\tjQuery('#banulog').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.banuLogAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tcreateBanuLogAddForm() {\r\n\t\tthis.banuLogAddForm = this.formBuilder.group({\r\n\t\t\tid: [0],\r\n\t\t\tcreatedDate: [null, Validators.required],\r\n\t\t\ttransactorFullName: [\"\", Validators.required],\r\n\t\t\ttransactorId: [0, Validators.required],\r\n\t\t\ttransactionsDescription: [\"\", Validators.required],\r\n\t\t\ttransactionType: [\"\", Validators.required]\r\n\t\t})\r\n\t}\r\n\tonPageCountChange(event: any) {\r\n\t\tthis.page = event.value; \r\n\t\tthis.onSearch();\r\n\t}\r\n\r\n\tonPageChange(newPage: number) {\r\n\t\tif (newPage >= 1 && newPage <= this.pageCount.length) {\r\n\t\t\tthis.page = newPage;\r\n\t\t\tthis.onSearch();\r\n\t\t}\r\n\t}\r\n    onAllPageCountChange(event: any) {\r\n\t\tthis.basePageIndex = event.value; \r\n\t\tthis.getBanuLogList();\r\n\t}\r\n\r\n\tonAllPageChange(newPage: number) {\r\n\t\tif (newPage >= 1 && newPage <= this.allPageCount.length) {\r\n\t\t\tthis.basePageIndex = newPage;\r\n\t\t\tthis.getBanuLogList();\r\n\t\t}\r\n\t}\r\n\tdeleteBanuLog(banuLogId: string) {\r\n\t\tthis.banuLogService.deleteBanuLog(banuLogId).subscribe(data => {\r\n\t\t\tthis.alertifyService.success(data.toString());\r\n\t\t\tthis.banuLogList = this.banuLogList.filter(x => x.id != banuLogId);\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.banuLogList);\r\n\t\t\tthis.configDataTable();\r\n\t\t})\r\n\t}\r\n\r\n\tonStartDateChange(): void {\r\n\t\tif (this.startDate) {\r\n\t\t\tthis.formattedStartDate = this.datePipe.transform(this.startDate, 'dd-MM-yyyy') || '';\r\n\t\t\tthis.page=1;\r\n\t\t}\r\n\t}\r\n\r\n\tonEndDateChange(): void {\r\n\t\tif (this.endDate) {\r\n\t\t\tthis.formattedEndDate = this.datePipe.transform(this.endDate, 'dd-MM-yyyy') || '';\r\n\t\t\t(this.formattedEndDate)\r\n\t\t\tthis.page=1;\r\n\t\t}\r\n\t}\r\n\tgetBanuLogById(banuLogId: number) {\r\n\t\tthis.clearFormGroup(this.banuLogAddForm);\r\n\t\tthis.banuLogService.getBanuLogById(banuLogId).subscribe(data => {\r\n\t\t\tthis.banuLog = data;\r\n\t\t\tthis.banuLogAddForm.patchValue(data);\r\n\t\t})\r\n\t}\r\n\tcreatePdf() {\r\n\t\tif (this.filterResult.length == 0 && this.isSearch == true) {\r\n\t\t  this.alertifyService.error(\"PDF oluşturulacak bir veri yok!\");\r\n\t\t  return;\r\n\t\t}\r\n\t  \r\n\t\tthis.banuLogService.getBanuLogFilterListToPdf(this.filters).subscribe(\r\n\t\t  (response: HttpResponse<Blob>) => {\r\n\t\t\t// Blob nesnesini oluştur\r\n\t\t\tconst file = new Blob([response.body!], { type: response.body?.type });\r\n\t\t\tconst contentType = response.headers.get('Content-Type');\r\n\t\t\tconst format = contentType?.split('/')[1];\r\n\t\t\t// Dosya adını HTTP yanıt başlıklarından al\r\n\t\t\tlet fileName = `BanuLogs_${new Date().toISOString()}.${format}`; \r\n\t\t\tconst contentDisposition = response.headers.get('Content-Disposition');\r\n\t\t\t\r\n\t\t\tif (contentDisposition) {\r\n\t\t\t  const matches = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\r\n\t\t\t  if (matches?.length > 1) {\r\n\t\t\t\tfileName = matches[1];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t  \r\n\t\t\tconst fileURL = URL.createObjectURL(file);\r\n\t\t\tconst a = document.createElement('a');\r\n\t\t\ta.href = fileURL;\r\n\t\t\ta.download = fileName;\r\n\t\t\tdocument.body.appendChild(a);\r\n\t\t\ta.click();\r\n\t\t\tdocument.body.removeChild(a);\r\n\t\t  },\r\n\t\t  (error) => {\r\n\t\t\tthis.alertifyService.error(\"PDF oluşturulurken bir hata oluştu!\");\r\n\t\t  }\r\n\t\t);\r\n\t  }\r\n\t  \r\n\t\r\n\t\tonSearch() {\r\n\t\t\tthis.isSearch = true;\r\n\t\t\tthis.filters = [];\r\n\t\t  \r\n\t\t\tif (this.formattedStartDate != '' && this.formattedStartDate != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'CreatedDate',\r\n\t\t\t\t\toperation: 'GreaterThanOrEqual',\r\n\t\t\t\t\tvalue: this.formattedStartDate\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (this.formattedEndDate != '' && this.formattedEndDate != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'CreatedDate',\r\n\t\t\t\t\toperation: 'LessThanOrEqual',\r\n\t\t\t\t\tvalue: this.formattedEndDate\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t\tif (this.searchName != '' && this.searchName != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'TransactorFullName',\r\n\t\t\t\t\toperation: 'Contains',\r\n\t\t\t\t\tvalue: this.searchName\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t\tif (this.selectedProcessType != '' && this.selectedProcessType != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'TransactionType',\r\n\t\t\t\t\toperation: 'Contains',\r\n\t\t\t\t\tvalue: this.selectedProcessType\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t  \r\n\t\t\tthis.banuLogService.getBanuLogGlobalFilterList(this.filters,this.page,this.pageSize).subscribe(res => {\r\n\t\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\t\tthis.filteredAllResult=res\r\n\t\t\t\tthis.filterResult = res.data;\r\n\t\t\t\tthis.configDataTable();\r\n\t\t\t\tthis.pageCount=[];\r\n\t\t\t\t\tfor (let index = 1; index < res.totalPages+1; index++) {\r\n\t\t\t\t\t\tthis.pageCount.push(index);\r\n\t\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t  \r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim: string): boolean {\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { BanuLog } from 'app/core/components/admin/banuLog/models/BanuLog';\r\nimport { BanuLogService } from 'app/core/components/admin/banuLog/services/BanuLog.service';\r\nimport { AuthService } from 'app/core/components/admin/login/Services/auth.service';\r\nimport { Filter } from 'app/core/search-settings/global-filter';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-spark-table',\r\n  templateUrl: './spark-table.component.html',\r\n  styleUrls: ['./spark-table.component.css']\r\n})\r\nexport class SparkTableComponent implements OnInit {\r\n  dataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = ['id', 'createdDate', 'transactorFullName', 'transactorId', 'transactionsDescription', 'transactionType', 'update', 'delete'];\r\n\r\n\tbanuLogList: BanuLog[];\r\n\tbanuLog: BanuLog = new BanuLog();\r\n\r\n\tbanuLogAddForm: FormGroup;\r\n\r\n\tstartDate: Date | null = null;\r\n\tendDate: Date | null = null;\r\n\tformattedStartDate: string = '';\r\n\tformattedEndDate: string = '';\r\n\tselectedProcessType: string = '';\r\n\tsearchName: string = '';\r\n\tbanuLogId: number;\r\n\tisSearch:boolean=false;\r\n\tfilters: Filter[] = [];\r\n\tfilterResult: BanuLog[] = [];\r\n\r\n\t\r\n\tconstructor(private banuLogService: BanuLogService, private lookupService: LookUpService, private alertifyService: AlertifyService, private formBuilder: FormBuilder, private authService: AuthService, private datePipe: DatePipe) { }\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.getBanuLogList();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.createBanuLogAddForm();\r\n\t}\r\n\r\n\r\n\tgetBanuLogList() {\r\n\t\tthis.banuLogService.getBanuLogList().subscribe(data => {\r\n\t\t\tthis.banuLogList = data;\r\n\t\t\tthis.dataSource = new MatTableDataSource(data);\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\r\n\r\n\r\n\r\n\tcreateBanuLogAddForm() {\r\n\t\tthis.banuLogAddForm = this.formBuilder.group({\r\n\t\t\tid: [0],\r\n\t\t\tcreatedDate: [null, Validators.required],\r\n\t\t\ttransactorFullName: [\"\", Validators.required],\r\n\t\t\ttransactorId: [0, Validators.required],\r\n\t\t\ttransactionsDescription: [\"\", Validators.required],\r\n\t\t\ttransactionType: [\"\", Validators.required]\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteBanuLog(banuLogId: string) {\r\n\t\tthis.banuLogService.deleteBanuLog(banuLogId).subscribe(data => {\r\n\t\t\tthis.alertifyService.success(data.toString());\r\n\t\t\tthis.banuLogList = this.banuLogList.filter(x => x.id != banuLogId);\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.banuLogList);\r\n\t\t\tthis.configDataTable();\r\n\t\t})\r\n\t}\r\n\r\n\tonStartDateChange(): void {\r\n\t\tif (this.startDate) {\r\n\t\t\tthis.formattedStartDate = this.datePipe.transform(this.startDate, 'dd-MM-yyyy') || '';\r\n\t\t}\r\n\t}\r\n\r\n\tonEndDateChange(): void {\r\n\t\tif (this.endDate) {\r\n\t\t\tthis.formattedEndDate = this.datePipe.transform(this.endDate, 'dd-MM-yyyy') || '';\r\n\t\t}\r\n\t}\r\n\tgetBanuLogById(banuLogId: number) {\r\n\t\tthis.clearFormGroup(this.banuLogAddForm);\r\n\t\tthis.banuLogService.getBanuLogById(banuLogId).subscribe(data => {\r\n\t\t\tthis.banuLog = data;\r\n\t\t\tthis.banuLogAddForm.patchValue(data);\r\n\t\t})\r\n\t}\r\n\tcreatePdf(){\r\n\t\tif(this.filterResult.length==0 && this.isSearch==true){\r\n\t\t\tthis.alertifyService.error(\"Pdf oluşturulacak bir veri yok!\");\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.banuLogService.getBanuLogListToPdf(this.filterResult.length==0 && this.isSearch==false ? this.banuLogList : this.filterResult).subscribe(\r\n\t\t\t(response: Blob) => {\r\n\t\t\t  // PDF dosyasını Blob olarak alıyoruz\r\n\t\t\t  const fileURL = URL.createObjectURL(response); \r\n\t\t\t  const a = document.createElement('a'); \r\n\t\t\t  a.href = fileURL; \r\n\t\t\t  a.download = 'BanuLogs.pdf'; \r\n\t\t\t  document.body.appendChild(a);\r\n\t\t\t  a.click(); \r\n\t\t\t  document.body.removeChild(a); \r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tthis.alertifyService.error(\"PDF oluşturulurken bir hata oluştu!\")\r\n\t\t\t}\r\n\t\t  );\r\n\t\t}\r\n\t\r\n\t\tonSearch() {\r\n\t\t\tthis.isSearch = true;\r\n\t\t\tthis.filters = [];\r\n\t\t  \r\n\t\t\t// Start Date filtresi ekleniyor\r\n\t\t\tif (this.formattedStartDate != '' && this.formattedStartDate != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'CreatedDate',\r\n\t\t\t\t\toperation: 'GreaterThanOrEqual',\r\n\t\t\t\t\tvalue: this.formattedStartDate\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\r\n\t\t\t// End Date filtresi ekleniyor\r\n\t\t\tif (this.formattedEndDate != '' && this.formattedEndDate != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'CreatedDate',\r\n\t\t\t\t\toperation: 'LessThanOrEqual',\r\n\t\t\t\t\tvalue: this.formattedEndDate\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t\t// Name filtresi ekleniyor\r\n\t\t\tif (this.searchName != '' && this.searchName != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'TransactorFullName',\r\n\t\t\t\t\toperation: 'Contains',\r\n\t\t\t\t\tvalue: this.searchName\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t\t// Process Type filtresi ekleniyor\r\n\t\t\tif (this.selectedProcessType != '' && this.selectedProcessType != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'TransactionType',\r\n\t\t\t\t\toperation: 'Contains',\r\n\t\t\t\t\tvalue: this.selectedProcessType\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t  \r\n\t\t\tthis.banuLogService.getBanuLogGlobalFilterList(this.filters,1,5).subscribe(data => {\r\n\t\t\t\tthis.dataSource = new MatTableDataSource(data.data);\r\n\t\t\t\tthis.filterResult = data.data;\r\n\t\t\t\tthis.configDataTable();\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t  \r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim: string): boolean {\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n\r\n}\r\n","import { DatePipe } from '@angular/common';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\r\nimport { AlertifyService } from '../../../services/alertify.service';\r\nimport { MultiVisitersService } from '../../admin/multiVisiters/services/multivisiters.service';\r\nimport { VisitService } from '../../admin/visit/services/visit.service';\r\nimport { PedestrianEntranceRequest, VehicleData, Visitor } from './models/visit-add.model';\r\n\r\n@Component({\r\n  selector: 'app-visit-add',\r\n  templateUrl: './visit-add.component.html',\r\n  styleUrls: ['./visit-add.component.css'],\r\n  providers: [\r\n    DatePipe,\r\n    {\r\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\r\n      useValue: { hideRequiredMarker: true }\r\n    }\r\n  ]\r\n})\r\nexport class VisitAddComponent implements OnInit {\r\n  selectedTab = 'vehicle';\r\n  \r\n  vehicleData: VehicleData = {\r\n    plate: '',\r\n    visitStartDate: null,\r\n    visitEndDate: null\r\n  };\r\n\r\n  vehicleVisitors: Visitor[] = [\r\n    { name: '' }\r\n  ];\r\n\r\n  pedestrianVisitors: Visitor[] = [\r\n    { name: '' }\r\n  ];\r\n\r\n  formattedStartDate: string = '';\r\n  formattedEndDate: string = '';\r\n\r\n  constructor(\r\n    private datePipe: DatePipe,\r\n    private visitService: VisitService,\r\n    private multiVisitersService: MultiVisitersService,\r\n    private alertifyService: AlertifyService\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  switchTab(tab: string) {\r\n    this.selectedTab = tab;\r\n  }\r\n\r\n  addVisitor() {\r\n    this.vehicleVisitors.push({ name: '' });\r\n  }\r\n\r\n  removeVisitor(index: number) {\r\n    if (index !== 0) {\r\n      this.vehicleVisitors.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  addPedestrianVisitor() {\r\n    this.pedestrianVisitors.push({ name: '' });\r\n  }\r\n\r\n  removePedestrianVisitor(index: number) {\r\n    if (index !== 0) {\r\n      this.pedestrianVisitors.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  dateFilter = (date: Date | null): boolean => {\r\n    if (!date) return false;\r\n    const today = new Date();\r\n    today.setHours(0, 0, 0, 0);\r\n    return date >= today;\r\n  };\r\n\r\n  onStartDateChange(): void {\r\n    if (this.vehicleData.visitStartDate) {\r\n      this.formattedStartDate = this.datePipe.transform(this.vehicleData.visitStartDate, 'dd/MM/yyyy') || '';\r\n    }\r\n  }\r\n\r\n  onEndDateChange(): void {\r\n    if (this.vehicleData.visitEndDate) {\r\n      this.formattedEndDate = this.datePipe.transform(this.vehicleData.visitEndDate, 'dd/MM/yyyy') || '';\r\n    }\r\n  }\r\n\r\n  async saveVisit(isVehicle: boolean) {\r\n    try {\r\n      const visitors = isVehicle ? this.vehicleVisitors : this.pedestrianVisitors;\r\n      const mainVisitor = visitors[0];\r\n      const additionalVisitors = visitors.slice(1).filter(v => v.name.trim() !== '');\r\n\r\n      const startDate = new Date(this.vehicleData.visitStartDate!);\r\n      const endDate = new Date(this.vehicleData.visitEndDate!);\r\n      startDate.setMinutes(startDate.getMinutes() - startDate.getTimezoneOffset());\r\n      endDate.setMinutes(endDate.getMinutes() - endDate.getTimezoneOffset());\r\n\r\n      const mainVisitRequest: PedestrianEntranceRequest = {\r\n        personnelId: 0,\r\n        visitorFullName: mainVisitor.name,\r\n        vehicleEntry: isVehicle,\r\n        multiPersonVisit: additionalVisitors.length > 0,\r\n        isExit: false,\r\n        status: true,\r\n        isConfirm: false,\r\n        isReject: false,\r\n        visitStartDate: startDate,\r\n        visitEndDate: endDate,\r\n        visitorLicensePlate: isVehicle ? this.vehicleData.plate : undefined,\r\n        multiVisitersList: additionalVisitors.map(visitor => ({\r\n          visitorFullName: visitor.name\r\n        }))\r\n      };\r\n\r\n      const saveVisitObservable = isVehicle ? \r\n        this.visitService.vehicleEntrance(mainVisitRequest) : \r\n        this.visitService.pedestrianEntrance(mainVisitRequest);\r\n\r\n      saveVisitObservable.subscribe({\r\n        next: (response) => {\r\n          this.alertifyService.success(response);\r\n          this.resetForm();\r\n        },\r\n        error: (error) => {\r\n          console.error('Error creating visit:', error);\r\n          this.alertifyService.error(error.error);\r\n        }\r\n      });\r\n\r\n    } catch (error: any) {\r\n      console.error('Error in save process:', error);\r\n      this.alertifyService.error(error.message);\r\n    }\r\n  }\r\n\r\n  private resetForm() {\r\n    this.vehicleData = {\r\n      plate: '',\r\n      visitStartDate: null,\r\n      visitEndDate: null\r\n    };\r\n    \r\n    this.vehicleVisitors = [{ name: '' }];\r\n    this.pedestrianVisitors = [{ name: '' }];\r\n    \r\n    this.formattedStartDate = '';\r\n    this.formattedEndDate = '';\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtdWx0aVZpc2l0ZXJzLmNvbXBvbmVudC5zY3NzIn0= */\";","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 class=\\\"card-title \\\">{{'MultiVisitersList'| translate}}</h4>\\r\\n            <a *ngIf=\\\"checkClaim('CreateMultiVisitersCommand')\\\" class=\\\"pull-right\\\" data-toggle=\\\"modal\\\" data-target=\\\"#multivisiters\\\"> <i style=\\\"color:white\\\"  title=\\\"{{'Add'| translate}}\\\" class=\\\"far fa-plus-square fa-2x\\\"></i></a>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              \\r\\n              <div class=\\\"col-md-4 pull-right\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label>Filter</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                   <ng-container matColumnDef=\\\"id\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.id}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"createdDate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.createdDate}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"visitId\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VisitId'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.visitId}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"visitorFullName\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VisitorFullName'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.visitorFullName}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"update\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell\\r\\n                    *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateMultiVisitersCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#multivisiters\\\"  (click)=\\\"getMultiVisitersById(element.id)\\\">\\r\\n                      <i title=\\\"{{'Update'| translate}}\\\" style=\\\"color:#ff5722;\\\" class=\\\"far fa-edit\\\"></i>\\r\\n                    </a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"delete\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td  style=\\\"width: 25px;\\\" mat-cell\\r\\n                    *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('DeleteMultiVisitersCommand')\\\" (confirm)=\\\"deleteMultiVisiters(element.id)\\\" [swal]=\\\"deleteSwal\\\"><i title=\\\"{{'Delete'| translate}}\\\" style=\\\"color: #D9534E;\\\"class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                </tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-paginator [pageSizeOptions]=\\\"[10, 25, 50, 100]\\\"></mat-paginator>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"multivisiters\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(multiVisitersAddForm)\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n           {{'MultiVisitersForm'| translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n        <form *ngIf=\\\"multiVisitersAddForm\\\" [formGroup]=\\\"multiVisitersAddForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n          \\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"createdDate\\\" type=\\\"date\\\" id=\\\"createdDate\\\" name=\\\"createdDate\\\"\\r\\n                       formControlName=\\\"createdDate\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"multiVisitersAddForm.get('createdDate')!.hasError('createdDate') && multiVisitersAddForm.get('createdDate')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select class=\\\"browser-default custom-select\\\" formControlName=\\\"visitId\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of multiVisiterslookUp\\\" [value]=\\\"item.id\\\"> {{item.label}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"visitorFullName\\\" type=\\\"text\\\" id=\\\"visitorFullName\\\" name=\\\"visitorFullName\\\"\\r\\n                       formControlName=\\\"visitorFullName\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"multiVisitersAddForm.get('visitorFullName')!.hasError('visitorFullName') && multiVisitersAddForm.get('visitorFullName')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n                   \\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save'|translate}}</button>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon = \\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n\\t[confirmButtonText] = \\\"'OK'\\\"[cancelButtonText] = \\\"'Cancel'\\\" >\\r\\n</swal>\\r\\n\\r\\n\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  Directive,\n  Input,\n  Optional,\n  Inject,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Content of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-content, [mat-card-content], [matCardContent]',\n  host: {'class': 'mat-card-content'}\n})\nexport class MatCardContent {}\n\n/**\n * Title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n  host: {\n    'class': 'mat-card-title'\n  }\n})\nexport class MatCardTitle {}\n\n/**\n * Sub-title of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n  host: {\n    'class': 'mat-card-subtitle'\n  }\n})\nexport class MatCardSubtitle {}\n\n/**\n * Action section of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-actions',\n  exportAs: 'matCardActions',\n  host: {\n    'class': 'mat-card-actions',\n    '[class.mat-card-actions-align-end]': 'align === \"end\"',\n  }\n})\nexport class MatCardActions {\n  /** Position of the actions inside the card. */\n  @Input() align: 'start' | 'end' = 'start';\n}\n\n/**\n * Footer of a card, needed as it's used as a selector in the API.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-card-footer',\n  host: {'class': 'mat-card-footer'}\n})\nexport class MatCardFooter {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-image], [matCardImage]',\n  host: {'class': 'mat-card-image'}\n})\nexport class MatCardImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-sm-image], [matCardImageSmall]',\n  host: {'class': 'mat-card-sm-image'}\n})\nexport class MatCardSmImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-md-image], [matCardImageMedium]',\n  host: {'class': 'mat-card-md-image'}\n})\nexport class MatCardMdImage {}\n\n/**\n * Image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-lg-image], [matCardImageLarge]',\n  host: {'class': 'mat-card-lg-image'}\n})\nexport class MatCardLgImage {}\n\n/**\n * Large image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-xl-image], [matCardImageXLarge]',\n  host: {'class': 'mat-card-xl-image'}\n})\nexport class MatCardXlImage {}\n\n/**\n * Avatar image used in a card, needed to add the mat- CSS styling.\n * @docs-private\n */\n@Directive({\n  selector: '[mat-card-avatar], [matCardAvatar]',\n  host: {'class': 'mat-card-avatar'}\n})\nexport class MatCardAvatar {}\n\n\n/**\n * A basic content container component that adds the styles of a Material design card.\n *\n * While this component can be used alone, it also provides a number\n * of preset styles for common card sections, including:\n * - mat-card-title\n * - mat-card-subtitle\n * - mat-card-content\n * - mat-card-actions\n * - mat-card-footer\n */\n@Component({\n  selector: 'mat-card',\n  exportAs: 'matCard',\n  templateUrl: 'card.html',\n  styleUrls: ['card.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-card mat-focus-indicator',\n    '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n  }\n})\nexport class MatCard {\n  // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n  constructor(@Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {}\n}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a\n * preset header section (i.e. a title, subtitle, and avatar layout).\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-header',\n  templateUrl: 'card-header.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-header'}\n})\nexport class MatCardHeader {}\n\n\n/**\n * Component intended to be used within the `<mat-card>` component. It adds styles for a preset\n * layout that groups an image with a title section.\n * @docs-private\n */\n@Component({\n  selector: 'mat-card-title-group',\n  templateUrl: 'card-title-group.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {'class': 'mat-card-title-group'}\n})\nexport class MatCardTitleGroup {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {\n  MatCard,\n  MatCardActions,\n  MatCardAvatar,\n  MatCardContent,\n  MatCardFooter,\n  MatCardHeader,\n  MatCardImage,\n  MatCardLgImage,\n  MatCardMdImage,\n  MatCardSmImage,\n  MatCardSubtitle,\n  MatCardTitle,\n  MatCardTitleGroup,\n  MatCardXlImage,\n} from './card';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [\n    MatCard,\n    MatCardHeader,\n    MatCardTitleGroup,\n    MatCardContent,\n    MatCardTitle,\n    MatCardSubtitle,\n    MatCardActions,\n    MatCardFooter,\n    MatCardSmImage,\n    MatCardMdImage,\n    MatCardLgImage,\n    MatCardImage,\n    MatCardXlImage,\n    MatCardAvatar,\n    MatCommonModule,\n  ],\n  declarations: [\n    MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle,\n    MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage,\n    MatCardXlImage, MatCardAvatar,\n  ],\n})\nexport class MatCardModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './card';\nexport * from './card-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 class=\\\"card-title \\\">{{'TranslateList'|translate}}</h4>\\r\\n            <a *ngIf=\\\"checkClaim('CreateTranslateCommand')\\\" class=\\\"pull-right\\\" data-toggle=\\\"modal\\\"\\r\\n              data-target=\\\"#translate\\\"> <i style=\\\"color:white\\\"  title=\\\"{{'Add'| translate}}\\\"  class=\\\"far fa-plus-square fa-2x\\\"></i></a>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n\\r\\n              <div class=\\\"col-md-4 pull-right\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label>{{'Filter' |translate}}</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"language\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'LangCode' |translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.language}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"code\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Code'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.code}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"value\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Value'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.value}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"update\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateTranslateCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#translate\\\" (click)=\\\"getTranslateById(element.id)\\\">\\r\\n                      <i title=\\\"{{'Update' | translate}}\\\" style=\\\"color:#ff5722;\\\" class=\\\"far fa-edit\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"delete\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('DeleteTranslateCommand')\\\" (confirm)=\\\"deleteTranslate(element.id)\\\" [swal]=\\\"deleteSwal\\\"><i title=\\\"{{'Delete' | translate}}\\\" style=\\\"color:#D9534E;\\\" class=\\\"fas fa-trash-alt\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n              <mat-paginator [pageSizeOptions]=\\\"[10, 25,50,100]\\\"></mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"translate\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(translateAddForm)\\\">\\r\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\r\\n        </button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n          {{'TranslateForm'|translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n        <form *ngIf=\\\"translateAddForm\\\" [formGroup]=\\\"translateAddForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-12\\\">\\r\\n              <select class=\\\"browser-default custom-select\\\" name=\\\"langId\\\" formControlName=\\\"langId\\\">\\r\\n                <option *ngFor=\\\"let item of langugelookUp\\\" [ngValue]=\\\"item.id\\\"> {{item.label}}</option>\\r\\n              </select>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"{{'Code'|translate}}\\\" type=\\\"text\\\" id=\\\"code\\\" name=\\\"code\\\"\\r\\n                  formControlName=\\\"code\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                  *ngIf=\\\"translateAddForm.get('code')!.hasError('code') && translateAddForm.get('code')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"{{'Value'|translate}}\\\" type=\\\"text\\\" id=\\\"value\\\" name=\\\"value\\\"\\r\\n                  formControlName=\\\"value\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                  *ngIf=\\\"translateAddForm.get('value')!.hasError('value') && translateAddForm.get('value')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save' |translate}}</button>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon=\\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n  [confirmButtonText]=\\\"'OK'\\\" [cancelButtonText]=\\\"'Cancel'\\\">\\r\\n</swal>\";","\r\nexport class Visit{\r\n    id?:string; \r\ncreatedDate?:(Date | any); \r\npersonnelId?:number; \r\nvisitorFullName?:string; \r\nvisitorLicensePlate?:string; \r\nvehicleEntry:boolean; \r\nmultiPersonVisit:boolean; \r\nisConfirm:boolean; \r\nisExit:boolean; \r\nstatus:boolean; \r\nreasonForRejection?:string; \r\nisReject:boolean; \r\napprovalDate?:(Date | any); \r\nexitDate?:(Date | any); \r\nvisitStartDate?:(Date | any); \r\nvisitEndDate?:(Date | any); \r\n\r\n}","import { DatePipe } from '@angular/common';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AuthService } from 'app/core/components/admin/login/Services/auth.service';\r\nimport { PrivPagingResult } from 'app/core/models/privPaging';\r\nimport { Filter } from 'app/core/search-settings/global-filter';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { BanuLog } from '../../admin/banuLog/models/BanuLog';\r\nimport { BanuLogService } from '../../admin/banuLog/services/BanuLog.service';\r\n\r\n@Component({\r\n  selector: 'app-banu-logs',\r\n  templateUrl: './banu-logs.component.html',\r\n  styleUrls: ['./banu-logs.component.css']\r\n})\r\nexport class BanuLogsComponent implements AfterViewInit, OnInit {\r\n\r\n\tdataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = [ 'createdDate', 'transactorFullName', 'transactorId', 'transactionsDescription', 'transactionType'];\r\n\r\n\tbanuLogList: BanuLog[];\r\n\tbanuLog: BanuLog = new BanuLog();\r\n\r\n\tbanuLogAddForm: FormGroup;\r\n\tbasePageIndex:number=1;\r\n\tbasePageCount:number=100;\r\n\tstartDate: Date | null = null;\r\n\tendDate: Date | null = null;\r\n\tformattedStartDate: string = '';\r\n\tformattedEndDate: string = '';\r\n\tselectedProcessType: string = '';\r\n\tsearchName: string = '';\r\n\tbanuLogId: number;\r\n\tisSearch:boolean=false;\r\n\tfilters: Filter[] = [];\r\n\tfilteredAllResult:PrivPagingResult<BanuLog>=null\r\n\tallResult:PrivPagingResult<BanuLog>=null\r\n\tfilterResult: BanuLog[] = [];\r\n\tpage:number=1;\r\n\tpageCount:number[]=[];\r\n\tallPageCount:number[]=[];\r\n\tpageSize:number=100;\r\n\tselectedPageCount: number = null;\r\n\t\r\n\tgetVisiblePages(): number[] {\r\n\t\tconst totalPages = this.pageCount.length;\r\n\t\tconst currentPage = this.page;\r\n\t\tconst visiblePages: number[] = [];\r\n\t\r\n\t\tif (totalPages <= 7) {\r\n\t\t\t// Toplam sayfa sayısı 7 veya daha azsa hepsini göster\r\n\t\t\treturn this.pageCount;\r\n\t\t}\r\n\t\r\n\t\t// İlk sayfayı her zaman göster\r\n\t\tvisiblePages.push(1);\r\n\t\r\n\t\tif (currentPage > 4) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Aktif sayfanın etrafındaki sayfaları göster\r\n\t\tfor (let i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {\r\n\t\t\tvisiblePages.push(i);\r\n\t\t}\r\n\t\r\n\t\tif (currentPage < totalPages - 3) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Son sayfayı her zaman göster\r\n\t\tvisiblePages.push(totalPages);\r\n\t\r\n\t\treturn visiblePages;\r\n\t}\r\n\tgetAllVisiblePages(): number[] {\r\n\t\tconst totalPages = this.allPageCount.length;\r\n\t\tconst currentPage = this.basePageIndex;\r\n\t\tconst visiblePages: number[] = [];\r\n\t\r\n\t\tif (totalPages <= 7) {\r\n\t\t\t// Toplam sayfa sayısı 7 veya daha azsa hepsini göster\r\n\t\t\treturn this.allPageCount;\r\n\t\t}\r\n\t\r\n\t\t// İlk sayfayı her zaman göster\r\n\t\tvisiblePages.push(1);\r\n\t\r\n\t\tif (currentPage > 4) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Aktif sayfanın etrafındaki sayfaları göster\r\n\t\tfor (let i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {\r\n\t\t\tvisiblePages.push(i);\r\n\t\t}\r\n\t\r\n\t\tif (currentPage < totalPages - 3) {\r\n\t\t\tvisiblePages.push(-1); // \"...\" için\r\n\t\t}\r\n\t\r\n\t\t// Son sayfayı her zaman göster\r\n\t\tvisiblePages.push(totalPages);\r\n\t\r\n\t\treturn visiblePages;\r\n\t}\r\n\t\r\n\tconstructor(private banuLogService: BanuLogService, private lookupService: LookUpService, private alertifyService: AlertifyService, private formBuilder: FormBuilder, private authService: AuthService, private datePipe: DatePipe) { }\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.getBanuLogList();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.createBanuLogAddForm();\r\n\t}\r\n\r\n\r\n\tgetBanuLogList() {\r\n\t\tthis.banuLogService.getBanuLogByPagingListSecurity(this.basePageIndex,this.basePageCount).subscribe(res => {\r\n\t\t\tthis.banuLogList =res.data;\r\n\t\t\tthis.allResult =res;\r\n\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\tthis.allPageCount=[];\r\n\t\t\t\t\tfor (let index = 1; index < res.totalPages+1; index++) {\r\n\t\t\t\t\t\tthis.allPageCount.push(index);\r\n\t\t\t\t\t}\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tsave() {\r\n\r\n\t\tif (this.banuLogAddForm.valid) {\r\n\t\t\tthis.banuLog = Object.assign({}, this.banuLogAddForm.value)\r\n\r\n\t\t\tif (this.banuLog.id == \"\")\r\n\t\t\t\tthis.addBanuLog();\r\n\t\t\telse\r\n\t\t\t\tthis.updateBanuLog();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddBanuLog() {\r\n\r\n\t\tthis.banuLogService.addBanuLog(this.banuLog).subscribe(data => {\r\n\t\t\tthis.getBanuLogList();\r\n\t\t\tthis.banuLog = new BanuLog();\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.banuLogAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tupdateBanuLog() {\r\n\r\n\t\tthis.banuLogService.updateBanuLog(this.banuLog).subscribe(data => {\r\n\r\n\t\t\tvar index = this.banuLogList.findIndex(x => x.id == this.banuLog.id);\r\n\t\t\tthis.banuLogList[index] = this.banuLog;\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.banuLogList);\r\n\t\t\tthis.configDataTable();\r\n\t\t\tthis.banuLog = new BanuLog();\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.banuLogAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tcreateBanuLogAddForm() {\r\n\t\tthis.banuLogAddForm = this.formBuilder.group({\r\n\t\t\tid: [0],\r\n\t\t\tcreatedDate: [null, Validators.required],\r\n\t\t\ttransactorFullName: [\"\", Validators.required],\r\n\t\t\ttransactorId: [0, Validators.required],\r\n\t\t\ttransactionsDescription: [\"\", Validators.required],\r\n\t\t\ttransactionType: [\"\", Validators.required]\r\n\t\t})\r\n\t}\r\n\tonPageCountChange(event: any) {\r\n\t\tthis.page = event.value; \r\n\t\tthis.onSearch();\r\n\t}\r\n\r\n\tonPageChange(newPage: number) {\r\n\t\tif (newPage >= 1 && newPage <= this.pageCount.length) {\r\n\t\t\tthis.page = newPage;\r\n\t\t\tthis.onSearch();\r\n\t\t}\r\n\t}\r\n    onAllPageCountChange(event: any) {\r\n\t\tthis.basePageIndex = event.value; \r\n\t\tthis.getBanuLogList();\r\n\t}\r\n\r\n\tonAllPageChange(newPage: number) {\r\n\t\tif (newPage >= 1 && newPage <= this.allPageCount.length) {\r\n\t\t\tthis.basePageIndex = newPage;\r\n\t\t\tthis.getBanuLogList();\r\n\t\t}\r\n\t}\r\n\tdeleteBanuLog(banuLogId: string) {\r\n\t\tthis.banuLogService.deleteBanuLog(banuLogId).subscribe(data => {\r\n\t\t\tthis.alertifyService.success(data.toString());\r\n\t\t\tthis.banuLogList = this.banuLogList.filter(x => x.id != banuLogId);\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.banuLogList);\r\n\t\t\tthis.configDataTable();\r\n\t\t})\r\n\t}\r\n\r\n\tonStartDateChange(): void {\r\n\t\tif (this.startDate) {\r\n\t\t\tthis.formattedStartDate = this.datePipe.transform(this.startDate, 'dd-MM-yyyy') || '';\r\n\t\t\tthis.page=1;\r\n\t\t}\r\n\t}\r\n\r\n\tonEndDateChange(): void {\r\n\t\tif (this.endDate) {\r\n\t\t\tthis.formattedEndDate = this.datePipe.transform(this.endDate, 'dd-MM-yyyy') || '';\r\n\t\t\tthis.page=1;\r\n\t\t}\r\n\t}\r\n\tgetBanuLogById(banuLogId: number) {\r\n\t\tthis.clearFormGroup(this.banuLogAddForm);\r\n\t\tthis.banuLogService.getBanuLogById(banuLogId).subscribe(data => {\r\n\t\t\tthis.banuLog = data;\r\n\t\t\tthis.banuLogAddForm.patchValue(data);\r\n\t\t})\r\n\t}\r\n\tcreatePdf() {\r\n\t\tif (this.filterResult.length == 0 && this.isSearch == true) {\r\n\t\t  this.alertifyService.error(\"PDF oluşturulacak bir veri yok!\");\r\n\t\t  return;\r\n\t\t}\r\n\t  \r\n\t\tthis.banuLogService.getBanuLogFilterListToPdfSecurity(this.filters).subscribe(\r\n\t\t  (response: HttpResponse<Blob>) => {\r\n\t\t\t// Blob nesnesini oluştur\r\n\t\t\tconst file = new Blob([response.body!], { type: response.body?.type });\r\n\t\t\tconst contentType = response.headers.get('Content-Type');\r\n\t\t\tconst format = contentType?.split('/')[1];\r\n\t\t\t\r\n\t\t\tlet fileName = `BanuLogs_${new Date().toISOString()}.${format}`; \r\n\t\t\t\r\n\t\t\t\r\n\t\t\tconst contentDisposition = response.headers.get('Content-Disposition');\r\n\t\t\tif (contentDisposition) {\r\n\t\t\t  const matches = contentDisposition.match(/filename=\"?([^\"]+)\"?/);\r\n\t\t\t  if (matches?.length > 1) {\r\n\t\t\t\tfileName = matches[1];\r\n\t\t\t  }\r\n\t\t\t}\r\n\t  \r\n\t\t\tconst fileURL = URL.createObjectURL(file);\r\n\t\t\tconst a = document.createElement('a');\r\n\t\t\ta.href = fileURL;\r\n\t\t\ta.download = fileName;\r\n\t\t\tdocument.body.appendChild(a);\r\n\t\t\ta.click();\r\n\t\t\tdocument.body.removeChild(a);\r\n\t\t  },\r\n\t\t  (error) => {\r\n\t\t\tthis.alertifyService.error(\"PDF oluşturulurken bir hata oluştu!\");\r\n\t\t  }\r\n\t\t);\r\n\t  }\r\n\t\r\n\t\tonSearch() {\r\n\t\t\tthis.isSearch = true;\r\n\t\t\tthis.filters = [];\r\n\t\t  \r\n\t\t\tif (this.formattedStartDate != '' && this.formattedStartDate != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'CreatedDate',\r\n\t\t\t\t\toperation: 'GreaterThanOrEqual',\r\n\t\t\t\t\tvalue: this.formattedStartDate\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif (this.formattedEndDate != '' && this.formattedEndDate != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'CreatedDate',\r\n\t\t\t\t\toperation: 'LessThanOrEqual',\r\n\t\t\t\t\tvalue: this.formattedEndDate\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t\tif (this.searchName != '' && this.searchName != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'TransactorFullName',\r\n\t\t\t\t\toperation: 'Contains',\r\n\t\t\t\t\tvalue: this.searchName\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t\tif (this.selectedProcessType != '' && this.selectedProcessType != null) {\r\n\t\t\t\tthis.filters.push({\r\n\t\t\t\t\tkey: 'TransactionType',\r\n\t\t\t\t\toperation: 'Contains',\r\n\t\t\t\t\tvalue: this.selectedProcessType\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t  \r\n\t\t  \r\n\t\t\tthis.banuLogService.getBanuLogGlobalFilterListSecurity(this.filters,this.page,this.pageSize).subscribe(res => {\r\n\t\t\t\tthis.dataSource = new MatTableDataSource(res.data);\r\n\t\t\t\tthis.filteredAllResult=res\r\n\t\t\t\tthis.filterResult = res.data;\r\n\t\t\t\tthis.configDataTable();\r\n\t\t\t\tthis.pageCount=[];\r\n\t\t\t\t\tfor (let index = 1; index < res.totalPages+1; index++) {\r\n\t\t\t\t\t\tthis.pageCount.push(index);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t},error=>{\r\n\t\t\t\tthis.alertifyService.error(error.error.message);\r\n\t\t\t});\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t\t\r\n\t  \r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim: string): boolean {\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","export class PasswordDto\r\n{\r\n    userId:number;\r\n    password:string;\r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { IConnection } from \"./IConnection\";\r\nimport { AckMessage, HubMessage, IHubProtocol, MessageType, SequenceMessage } from \"./IHubProtocol\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport class MessageBuffer {\r\n    private readonly _protocol: IHubProtocol;\r\n    private readonly _connection: IConnection;\r\n\r\n    private readonly _bufferSize: number = 100_000;\r\n\r\n    private _messages: BufferedItem[] = [];\r\n    private _totalMessageCount: number = 0;\r\n    private _waitForSequenceMessage: boolean = false;\r\n\r\n    // Message IDs start at 1 and always increment by 1\r\n    private _nextReceivingSequenceId = 1;\r\n    private _latestReceivedSequenceId = 0;\r\n    private _bufferedByteCount: number = 0;\r\n    private _reconnectInProgress: boolean = false;\r\n\r\n    private _ackTimerHandle?: any;\r\n\r\n    constructor(protocol: IHubProtocol, connection: IConnection, bufferSize: number) {\r\n        this._protocol = protocol;\r\n        this._connection = connection;\r\n        this._bufferSize = bufferSize;\r\n    }\r\n\r\n    public async _send(message: HubMessage): Promise<void> {\r\n        const serializedMessage = this._protocol.writeMessage(message);\r\n\r\n        let backpressurePromise: Promise<void> = Promise.resolve();\r\n\r\n        // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect\r\n        if (this._isInvocationMessage(message)) {\r\n            this._totalMessageCount++;\r\n            let backpressurePromiseResolver: (value: void) => void = () => {};\r\n            let backpressurePromiseRejector: (value?: void) => void = () => {};\r\n\r\n            if (isArrayBuffer(serializedMessage)) {\r\n                this._bufferedByteCount += serializedMessage.byteLength;\r\n            } else {\r\n                this._bufferedByteCount += serializedMessage.length;\r\n            }\r\n\r\n            if (this._bufferedByteCount >= this._bufferSize) {\r\n                backpressurePromise = new Promise((resolve, reject) => {\r\n                    backpressurePromiseResolver = resolve;\r\n                    backpressurePromiseRejector = reject;\r\n                });\r\n            }\r\n\r\n            this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount,\r\n                backpressurePromiseResolver, backpressurePromiseRejector));\r\n        }\r\n\r\n        try {\r\n            // If this is set it means we are reconnecting or resending\r\n            // We don't want to send on a disconnected connection\r\n            // And we don't want to send if resend is running since that would mean sending\r\n            // this message twice\r\n            if (!this._reconnectInProgress) {\r\n                await this._connection.send(serializedMessage);\r\n            }\r\n        } catch {\r\n            this._disconnected();\r\n        }\r\n        await backpressurePromise;\r\n    }\r\n\r\n    public _ack(ackMessage: AckMessage): void {\r\n        let newestAckedMessage = -1;\r\n\r\n        // Find index of newest message being acked\r\n        for (let index = 0; index < this._messages.length; index++) {\r\n            const element = this._messages[index];\r\n            if (element._id <= ackMessage.sequenceId) {\r\n                newestAckedMessage = index;\r\n                if (isArrayBuffer(element._message)) {\r\n                    this._bufferedByteCount -= element._message.byteLength;\r\n                } else {\r\n                    this._bufferedByteCount -= element._message.length;\r\n                }\r\n                // resolve items that have already been sent and acked\r\n                element._resolver();\r\n            } else if (this._bufferedByteCount < this._bufferSize) {\r\n                // resolve items that now fall under the buffer limit but haven't been acked\r\n                element._resolver();\r\n            } else {\r\n                break;\r\n            }\r\n        }\r\n\r\n        if (newestAckedMessage !== -1) {\r\n            // We're removing everything including the message pointed to, so add 1\r\n            this._messages = this._messages.slice(newestAckedMessage + 1);\r\n        }\r\n    }\r\n\r\n    public _shouldProcessMessage(message: HubMessage): boolean {\r\n        if (this._waitForSequenceMessage) {\r\n            if (message.type !== MessageType.Sequence) {\r\n                return false;\r\n            } else {\r\n                this._waitForSequenceMessage = false;\r\n                return true;\r\n            }\r\n        }\r\n\r\n        // No special processing for acks, pings, etc.\r\n        if (!this._isInvocationMessage(message)) {\r\n            return true;\r\n        }\r\n\r\n        const currentId = this._nextReceivingSequenceId;\r\n        this._nextReceivingSequenceId++;\r\n        if (currentId <= this._latestReceivedSequenceId) {\r\n            if (currentId === this._latestReceivedSequenceId) {\r\n                // Should only hit this if we just reconnected and the server is sending\r\n                // Messages it has buffered, which would mean it hasn't seen an Ack for these messages\r\n                this._ackTimer();\r\n            }\r\n            // Ignore, this is a duplicate message\r\n            return false;\r\n        }\r\n\r\n        this._latestReceivedSequenceId = currentId;\r\n\r\n        // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves\r\n        // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)\r\n        this._ackTimer();\r\n        return true;\r\n    }\r\n\r\n    public _resetSequence(message: SequenceMessage): void {\r\n        if (message.sequenceId > this._nextReceivingSequenceId) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._connection.stop(new Error(\"Sequence ID greater than amount of messages we've received.\"));\r\n            return;\r\n        }\r\n\r\n        this._nextReceivingSequenceId = message.sequenceId;\r\n    }\r\n\r\n    public _disconnected(): void {\r\n        this._reconnectInProgress = true;\r\n        this._waitForSequenceMessage = true;\r\n    }\r\n\r\n    public async _resend(): Promise<void> {\r\n        const sequenceId = this._messages.length !== 0\r\n            ? this._messages[0]._id\r\n            :  this._totalMessageCount + 1;\r\n        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Sequence, sequenceId }));\r\n\r\n        // Get a local variable to the _messages, just in case messages are acked while resending\r\n        // Which would slice the _messages array (which creates a new copy)\r\n        const messages = this._messages;\r\n        for (const element of messages) {\r\n            await this._connection.send(element._message);\r\n        }\r\n\r\n        this._reconnectInProgress = false;\r\n    }\r\n\r\n    public _dispose(error?: Error): void {\r\n        error ??= new Error(\"Unable to reconnect to server.\")\r\n\r\n        // Unblock backpressure if any\r\n        for (const element of this._messages) {\r\n            element._rejector(error);\r\n        }\r\n    }\r\n\r\n    private _isInvocationMessage(message: HubMessage): boolean {\r\n        // There is no way to check if something implements an interface.\r\n        // So we individually check the messages in a switch statement.\r\n        // To make sure we don't miss any message types we rely on the compiler\r\n        // seeing the function returns a value and it will do the\r\n        // exhaustive check for us on the switch statement, since we don't use 'case default'\r\n        switch (message.type) {\r\n            case MessageType.Invocation:\r\n            case MessageType.StreamItem:\r\n            case MessageType.Completion:\r\n            case MessageType.StreamInvocation:\r\n            case MessageType.CancelInvocation:\r\n                return true;\r\n            case MessageType.Close:\r\n            case MessageType.Sequence:\r\n            case MessageType.Ping:\r\n            case MessageType.Ack:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    private _ackTimer(): void {\r\n        if (this._ackTimerHandle === undefined) {\r\n            this._ackTimerHandle = setTimeout(async () => {\r\n                try {\r\n                    if (!this._reconnectInProgress) {\r\n                        await this._connection.send(this._protocol.writeMessage({ type: MessageType.Ack, sequenceId: this._latestReceivedSequenceId }))\r\n                    }\r\n                // Ignore errors, that means the connection is closed and we don't care about the Ack message anymore.\r\n                } catch { }\r\n\r\n                clearTimeout(this._ackTimerHandle);\r\n                this._ackTimerHandle = undefined;\r\n            // 1 second delay so we don't spam Ack messages if there are many messages being received at once.\r\n            }, 1000);\r\n        }\r\n    }\r\n}\r\n\r\nclass BufferedItem {\r\n    constructor(message: string | ArrayBuffer, id: number, resolver: (value: void) => void, rejector: (value?: any) => void) {\r\n        this._message = message;\r\n        this._id = id;\r\n        this._resolver = resolver;\r\n        this._rejector = rejector;\r\n    }\r\n\r\n    _message: string | ArrayBuffer;\r\n    _id: number;\r\n    _resolver: (value: void) => void;\r\n    _rejector: (value?: any) => void;\r\n}\r\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AuthService } from 'app/core/components/admin/login/Services/auth.service';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { Visit } from './models/Visit';\r\nimport { VisitService } from './services/visit.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: 'app-visit',\r\n\ttemplateUrl: './visit.component.html',\r\n\tstyleUrls: ['./visit.component.scss']\r\n})\r\nexport class VisitComponent implements AfterViewInit, OnInit {\r\n\tdataSource: MatTableDataSource<Visit>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = ['createdDate', 'personnelId', 'visitorFullName', 'visitorLicensePlate', 'vehicleEntry', 'multiPersonVisit', 'isConfirm', 'isExit', 'status', 'isReject', 'approvalDate', 'exitDate', 'visitStartDate', 'visitEndDate'];\r\n\tpageSize: number = 50;\r\n\tpage: number = 1;\r\n\ttotalPages: number = 0;\r\n\ttotalItemCount: number = 0;\r\n\tvisitList: Visit[] = [];\r\n\tvisit: Visit = new Visit();\r\n\tvisitAddForm: FormGroup;\r\n\r\n\tconstructor(private visitService: VisitService, private lookupService: LookUpService, private alertifyService: AlertifyService, private formBuilder: FormBuilder, private authService: AuthService) { }\r\n\r\n\tngAfterViewInit(): void {\r\n\t\tthis.getVisitList();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\t\tthis.getVisitList();\r\n\t}\r\n\r\n\tgetVisitList() {\r\n\t\tthis.visitService.getVisitListByPaging(this.page, this.pageSize).subscribe(data => {\r\n\t\t\tthis.visitList = data.data;\r\n\t\t\tthis.totalPages = data.totalPages;\r\n\t\t\tthis.totalItemCount = data.totalItemCount;\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.visitList);\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tonPageChange(newPage: number) {\r\n\t\tif (newPage >= 1 && newPage <= this.totalPages) {\r\n\t\t\tthis.page = newPage;\r\n\t\t\tthis.getVisitList();\r\n\t\t}\r\n\t}\r\n\r\n\tgetPagination(): number[] {\r\n\t\tconst pages: number[] = [];\r\n\t\tif (this.totalPages <= 7) {\r\n\t\t\tfor (let i = 1; i <= this.totalPages; i++) pages.push(i);\r\n\t\t} else {\r\n\t\t\tpages.push(1);\r\n\t\t\tif (this.page > 4) pages.push(-1);\r\n\t\t\tfor (let i = Math.max(2, this.page - 2); i <= Math.min(this.totalPages - 1, this.page + 2); i++) {\r\n\t\t\t\tpages.push(i);\r\n\t\t\t}\r\n\t\t\tif (this.page < this.totalPages - 3) pages.push(-1);\r\n\t\t\tpages.push(this.totalPages);\r\n\t\t}\r\n\t\treturn pages;\r\n\t}\r\n\r\n\r\n\r\n\r\n\t\r\n\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n}\r\n","export class Translate{\r\n    id?:number; \r\nlangid?:number; \r\ncode?:string; \r\nvalue?:string; \r\n\r\n}","export class Language{\r\n    id?:number; \r\n    name:string; \r\n    code:string; \r\n\r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { AbortError } from \"./Errors\";\r\nimport { FetchHttpClient } from \"./FetchHttpClient\";\r\nimport { HttpClient, HttpRequest, HttpResponse } from \"./HttpClient\";\r\nimport { ILogger } from \"./ILogger\";\r\nimport { Platform } from \"./Utils\";\r\nimport { XhrHttpClient } from \"./XhrHttpClient\";\r\n\r\n/** Default implementation of {@link @microsoft/signalr.HttpClient}. */\r\nexport class DefaultHttpClient extends HttpClient {\r\n    private readonly _httpClient: HttpClient;\r\n\r\n    /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */\r\n    public constructor(logger: ILogger) {\r\n        super();\r\n\r\n        if (typeof fetch !== \"undefined\" || Platform.isNode) {\r\n            this._httpClient = new FetchHttpClient(logger);\r\n        } else if (typeof XMLHttpRequest !== \"undefined\") {\r\n            this._httpClient = new XhrHttpClient(logger);\r\n        } else {\r\n            throw new Error(\"No usable HttpClient found.\");\r\n        }\r\n    }\r\n\r\n    /** @inheritDoc */\r\n    public send(request: HttpRequest): Promise<HttpResponse> {\r\n        // Check that abort was not signaled before calling send\r\n        if (request.abortSignal && request.abortSignal.aborted) {\r\n            return Promise.reject(new AbortError());\r\n        }\r\n\r\n        if (!request.method) {\r\n            return Promise.reject(new Error(\"No method defined.\"));\r\n        }\r\n        if (!request.url) {\r\n            return Promise.reject(new Error(\"No url defined.\"));\r\n        }\r\n\r\n        return this._httpClient.send(request);\r\n    }\r\n\r\n    public getCookieString(url: string): string {\r\n        return this._httpClient.getCookieString(url);\r\n    }\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { TextMessageFormat } from \"./TextMessageFormat\";\r\nimport { isArrayBuffer } from \"./Utils\";\r\n\r\n/** @private */\r\nexport interface HandshakeRequestMessage {\r\n    readonly protocol: string;\r\n    readonly version: number;\r\n}\r\n\r\n/** @private */\r\nexport interface HandshakeResponseMessage {\r\n    readonly error: string;\r\n    readonly minorVersion: number;\r\n}\r\n\r\n/** @private */\r\nexport class HandshakeProtocol {\r\n    // Handshake request is always JSON\r\n    public writeHandshakeRequest(handshakeRequest: HandshakeRequestMessage): string {\r\n        return TextMessageFormat.write(JSON.stringify(handshakeRequest));\r\n    }\r\n\r\n    public parseHandshakeResponse(data: any): [any, HandshakeResponseMessage] {\r\n        let messageData: string;\r\n        let remainingData: any;\r\n\r\n        if (isArrayBuffer(data)) {\r\n            // Format is binary but still need to read JSON text from handshake response\r\n            const binaryData = new Uint8Array(data);\r\n            const separatorIndex = binaryData.indexOf(TextMessageFormat.RecordSeparatorCode);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));\r\n            remainingData = (binaryData.byteLength > responseLength) ? binaryData.slice(responseLength).buffer : null;\r\n        } else {\r\n            const textData: string = data;\r\n            const separatorIndex = textData.indexOf(TextMessageFormat.RecordSeparator);\r\n            if (separatorIndex === -1) {\r\n                throw new Error(\"Message is incomplete.\");\r\n            }\r\n\r\n            // content before separator is handshake response\r\n            // optional content after is additional messages\r\n            const responseLength = separatorIndex + 1;\r\n            messageData = textData.substring(0, responseLength);\r\n            remainingData = (textData.length > responseLength) ? textData.substring(responseLength) : null;\r\n        }\r\n\r\n        // At this point we should have just the single handshake message\r\n        const messages = TextMessageFormat.parse(messageData);\r\n        const response = JSON.parse(messages[0]);\r\n        if (response.type) {\r\n            throw new Error(\"Expected a handshake response from the server.\");\r\n        }\r\n        const responseMessage: HandshakeResponseMessage = response;\r\n\r\n        // multiple messages could have arrived with handshake\r\n        // return additional data to be parsed as usual, or null if all parsed\r\n        return [remainingData, responseMessage];\r\n    }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n\\t<div class=\\\"container-fluid\\\">\\r\\n\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t<div class=\\\"card\\\">\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card-header card-header-danger\\\">\\r\\n\\t\\t\\t\\t\\t\\t<h4 class=\\\"card-title \\\">{{'LogList'|translate}}</h4>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"card-body\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"table-responsive\\\">\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-4 pull-right\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<mat-label>{{'Filter' |translate}}</mat-label>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</mat-form-field>\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t<table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"id\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"level\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Level'|translate}} </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.level}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"exceptionMessage\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'ExceptionMessage'|translate}} </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.exceptionMessage}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"timeStamp\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TimeStamp'|translate}} </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.timeStamp}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"user\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'User'|translate}} </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.user}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"value\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Value'|translate}} </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.value}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<ng-container matColumnDef=\\\"type\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Type'|translate}} </th>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td mat-cell *matCellDef=\\\"let element\\\"> {{element.type}} </td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</ng-container>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t<td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t</tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\t<mat-paginator [pageSizeOptions]=\\\"[10, 25,50,100]\\\"></mat-paginator>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t</div>\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n</div>\";","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { AuthService } from '../login/Services/auth.service';\r\nimport { Language } from './models/language';\r\nimport { LanguageService } from './services/Language.service';\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: 'app-language',\r\n\ttemplateUrl: './language.component.html',\r\n\tstyleUrls: ['./language.component.scss']\r\n})\r\nexport class LanguageComponent implements AfterViewInit, OnInit {\r\n\r\n\tdataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = ['id', 'name', 'code','update','delete'];\r\n\t\r\n\tlanguageList:Language[];\r\n\tlanguage:Language=new Language();\r\n\r\n\tlanguageAddForm: FormGroup;\r\n\r\n\tlanguageId:number;\r\n\r\n\r\n\tconstructor(private languageService:LanguageService, private lookupService:LookUpService,private alertifyService:AlertifyService,private formBuilder: FormBuilder, private authService:AuthService) { }\r\n\t\r\n\tngAfterViewInit(): void {\r\n\r\n\t\tthis.getLanguageList();\r\n\t}\r\n\r\n\tngOnInit() {\r\n\r\n\t\tthis.createLanguageAddForm();\r\n\t}\r\n\r\n\tgetLanguageList() {\r\n\t\tthis.languageService.getLanguageList().subscribe(data => {\r\n\t\t\tthis.languageList = data;\r\n\t\t\tthis.dataSource = new MatTableDataSource(data);\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tsave(){\r\n\t\tif (this.languageAddForm.valid) {\r\n\t\t\tthis.language = Object.assign({}, this.languageAddForm.value)\r\n\r\n\t\t\tif (this.language.id == 0)\r\n\t\t\t\tthis.addLanguage();\r\n\t\t\telse\r\n\t\t\t\tthis.updateLanguage();\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddLanguage(){\r\n\t\tthis.languageService.addLanguage(this.language).subscribe(data => {\r\n\t\t\tthis.getLanguageList();\r\n\t\t\tthis.language = new Language();\r\n\t\t\tjQuery('#language').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.languageAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tupdateLanguage(){\r\n\t\tthis.languageService.updateLanguage(this.language).subscribe(data => {\r\n\r\n\t\t\tvar index=this.languageList.findIndex(x=>x.id==this.language.id);\r\n\t\t\tthis.languageList[index]=this.language;\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.languageList);\r\n\t\t\tthis.configDataTable();\r\n\t\t\tthis.language = new Language();\r\n\t\t\tjQuery('#language').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.languageAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tcreateLanguageAddForm() {\r\n\t\tthis.languageAddForm = this.formBuilder.group({\r\n\t\t\tid: [0],\r\n\t\t\tname:[\"\", Validators.required],\r\n\t\t\tcode:[\"\", Validators.required]   \r\n\t\t})\r\n\t}\r\n\r\n\tdeleteLanguage(languageId:number){\r\n\t\tthis.languageService.deleteLanguage(languageId).subscribe(data=>{\r\n\t\t\tthis.alertifyService.success(data.toString());\r\n\t\t\tthis.languageList=this.languageList.filter(x=> x.id!=languageId);\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.languageList);\r\n\t\t\tthis.configDataTable();\r\n\t\t})\r\n\t}\r\n\r\n\tgetLanguageById(languageId:number){\r\n\t\tthis.clearFormGroup(this.languageAddForm);\r\n\t\tthis.languageService.getLanguage(languageId).subscribe(data=>{\r\n\t\t\tthis.language=data;\r\n\t\t\tthis.languageAddForm.patchValue(data);\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim:string):boolean{\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t  }\r\n\r\n\t  applyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\nimport {ThemePalette} from '@angular/material/core';\n\n/** Default `mat-checkbox` options that can be overridden. */\nexport interface MatCheckboxDefaultOptions {\n  color?: ThemePalette;\n  clickAction?: MatCheckboxClickAction;\n}\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nexport const MAT_CHECKBOX_DEFAULT_OPTIONS =\n    new InjectionToken<MatCheckboxDefaultOptions>('mat-checkbox-default-options', {\n      providedIn: 'root',\n      factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n    });\n\n/** @docs-private */\nexport function MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY(): MatCheckboxDefaultOptions {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate',\n  };\n}\n\n/**\n * Checkbox click action when user click on input element.\n * noop: Do not toggle checked or indeterminate.\n * check: Only toggle checked status, ignore indeterminate.\n * check-indeterminate: Toggle checked status, set indeterminate to false. Default behavior.\n * undefined: Same as `check-indeterminate`.\n */\nexport type MatCheckboxClickAction = 'noop' | 'check' | 'check-indeterminate' | undefined;\n\n/**\n * Injection token that can be used to specify the checkbox click behavior.\n * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.\n * @breaking-change 10.0.0\n */\nexport const MAT_CHECKBOX_CLICK_ACTION =\n    new InjectionToken<MatCheckboxClickAction>('mat-checkbox-click-action');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FocusableOption, FocusMonitor, FocusOrigin} from '@angular/cdk/a11y';\nimport {BooleanInput, coerceBooleanProperty, NumberInput} from '@angular/cdk/coercion';\nimport {\n  AfterViewChecked,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n} from '@angular/core';\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisable,\n  CanDisableCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  HasTabIndex,\n  HasTabIndexCtor,\n  MatRipple,\n  mixinColor,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {\n  MAT_CHECKBOX_CLICK_ACTION,\n  MAT_CHECKBOX_DEFAULT_OPTIONS,\n  MatCheckboxClickAction,\n  MatCheckboxDefaultOptions\n} from './checkbox-config';\n\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nexport const MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatCheckbox),\n  multi: true\n};\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nexport const enum TransitionCheckState {\n  /** The initial state of the component before any user interaction. */\n  Init,\n  /** The state representing the component when it's becoming checked. */\n  Checked,\n  /** The state representing the component when it's becoming unchecked. */\n  Unchecked,\n  /** The state representing the component when it's becoming indeterminate. */\n  Indeterminate\n}\n\n/** Change event object emitted by MatCheckbox. */\nexport class MatCheckboxChange {\n  /** The source MatCheckbox of the event. */\n  source: MatCheckbox;\n  /** The new `checked` value of the checkbox. */\n  checked: boolean;\n}\n\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nclass MatCheckboxBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatCheckboxMixinBase:\n    HasTabIndexCtor &\n    CanColorCtor &\n    CanDisableRippleCtor &\n    CanDisableCtor &\n    typeof MatCheckboxBase =\n        mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(MatCheckboxBase))));\n\n\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\n@Component({\n  selector: 'mat-checkbox',\n  templateUrl: 'checkbox.html',\n  styleUrls: ['checkbox.css'],\n  exportAs: 'matCheckbox',\n  host: {\n    'class': 'mat-checkbox',\n    '[id]': 'id',\n    '[attr.tabindex]': 'null',\n    '[class.mat-checkbox-indeterminate]': 'indeterminate',\n    '[class.mat-checkbox-checked]': 'checked',\n    '[class.mat-checkbox-disabled]': 'disabled',\n    '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n  providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],\n  inputs: ['disableRipple', 'color', 'tabIndex'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatCheckbox extends _MatCheckboxMixinBase implements ControlValueAccessor,\n    AfterViewInit, AfterViewChecked, OnDestroy, CanColor, CanDisable, HasTabIndex, CanDisableRipple,\n    FocusableOption {\n\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  @Input('aria-label') ariaLabel: string = '';\n\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  @Input('aria-labelledby') ariaLabelledby: string | null = null;\n\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\n  @Input('aria-describedby') ariaDescribedby: string;\n\n  private _uniqueId: string = `mat-checkbox-${++nextUniqueId}`;\n\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  @Input() id: string = this._uniqueId;\n\n  /** Returns the unique id for the visual hidden input. */\n  get inputId(): string { return `${this.id || this._uniqueId}-input`; }\n\n  /** Whether the checkbox is required. */\n  @Input()\n  get required(): boolean { return this._required; }\n  set required(value: boolean) { this._required = coerceBooleanProperty(value); }\n  private _required: boolean;\n\n  /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n  @Input() labelPosition: 'before' | 'after' = 'after';\n\n  /** Name value will be applied to the input element if present */\n  @Input() name: string | null = null;\n\n  /** Event emitted when the checkbox's `checked` value changes. */\n  @Output() readonly change: EventEmitter<MatCheckboxChange> =\n      new EventEmitter<MatCheckboxChange>();\n\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  @Output() readonly indeterminateChange: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** The value attribute of the native input element */\n  @Input() value: string;\n\n  /** The native `<input type=\"checkbox\">` element */\n  @ViewChild('input') _inputElement: ElementRef<HTMLInputElement>;\n\n  /** Reference to the ripple instance of the checkbox. */\n  @ViewChild(MatRipple) ripple: MatRipple;\n\n  /**\n   * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n   * @docs-private\n   */\n  _onTouched: () => any = () => {};\n\n  private _currentAnimationClass: string = '';\n\n  private _currentCheckState: TransitionCheckState = TransitionCheckState.Init;\n\n  private _controlValueAccessorChangeFn: (value: any) => void = () => {};\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              private _changeDetectorRef: ChangeDetectorRef,\n              private _focusMonitor: FocusMonitor,\n              private _ngZone: NgZone,\n              @Attribute('tabindex') tabIndex: string,\n              /**\n               * @deprecated `_clickAction` parameter to be removed, use\n               * `MAT_CHECKBOX_DEFAULT_OPTIONS`\n               * @breaking-change 10.0.0\n               */\n              @Optional() @Inject(MAT_CHECKBOX_CLICK_ACTION)\n                  private _clickAction: MatCheckboxClickAction,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string,\n              @Optional() @Inject(MAT_CHECKBOX_DEFAULT_OPTIONS)\n                  private _options?: MatCheckboxDefaultOptions) {\n    super(elementRef);\n    this._options = this._options || {};\n\n    if (this._options.color) {\n      this.color = this.defaultColor = this._options.color;\n    }\n\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.\n    this._clickAction = this._clickAction || this._options.clickAction;\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n      if (!focusOrigin) {\n        // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n        // Angular does not expect events to be raised during change detection, so any state change\n        // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n        // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n        // telling the form control it has been touched until the next tick.\n        Promise.resolve().then(() => {\n          this._onTouched();\n          this._changeDetectorRef.markForCheck();\n        });\n      }\n    });\n\n    this._syncIndeterminate(this._indeterminate);\n  }\n\n  // TODO: Delete next major revision.\n  ngAfterViewChecked() {}\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n  }\n\n  /**\n   * Whether the checkbox is checked.\n   */\n  @Input()\n  get checked(): boolean { return this._checked; }\n  set checked(value: boolean) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _checked: boolean = false;\n\n  /**\n   * Whether the checkbox is disabled. This fully overrides the implementation provided by\n   * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n   */\n  @Input()\n  get disabled() { return this._disabled; }\n  set disabled(value: any) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this.disabled) {\n      this._disabled = newValue;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  private _disabled: boolean = false;\n\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  @Input()\n  get indeterminate(): boolean { return this._indeterminate; }\n  set indeterminate(value: boolean) {\n    const changed = value != this._indeterminate;\n    this._indeterminate = coerceBooleanProperty(value);\n\n    if (changed) {\n      if (this._indeterminate) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(\n          this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(this._indeterminate);\n    }\n\n    this._syncIndeterminate(this._indeterminate);\n  }\n  private _indeterminate: boolean = false;\n\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: any) {\n    this.checked = !!value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: any) {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean) {\n    this.disabled = isDisabled;\n  }\n\n  _getAriaChecked(): 'true' | 'false' | 'mixed' {\n    if (this.checked) {\n      return 'true';\n    }\n\n    return this.indeterminate ? 'mixed' : 'false';\n  }\n\n  private _transitionCheckState(newState: TransitionCheckState) {\n    let oldState = this._currentCheckState;\n    let element: HTMLElement = this._elementRef.nativeElement;\n\n    if (oldState === newState) {\n      return;\n    }\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(\n        oldState, newState);\n    this._currentCheckState = newState;\n\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n\n  private _emitChangeEvent() {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = this.checked;\n\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(event);\n  }\n\n  /** Toggles the `checked` state of the checkbox. */\n  toggle(): void {\n    this.checked = !this.checked;\n  }\n\n  /**\n   * Event handler for checkbox input element.\n   * Toggles checked state if element is not disabled.\n   * Do not toggle on (change) event since IE doesn't fire change event when\n   *   indeterminate checkbox is clicked.\n   * @param event\n   */\n  _onInputClick(event: Event) {\n    // We have to stop propagation for click events on the visual hidden input element.\n    // By default, when a user clicks on a label element, a generated click event will be\n    // dispatched on the associated input element. Since we are using a label element as our\n    // root container, the click event on the `checkbox` will be executed twice.\n    // The real click event will bubble up, and the generated click event also tries to bubble up.\n    // This will lead to multiple click events.\n    // Preventing bubbling for the second event will solve that issue.\n    event.stopPropagation();\n\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && this._clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && this._clickAction !== 'check') {\n\n        Promise.resolve().then(() => {\n          this._indeterminate = false;\n          this.indeterminateChange.emit(this._indeterminate);\n        });\n      }\n\n      this.toggle();\n      this._transitionCheckState(\n          this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (!this.disabled && this._clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n\n  /** Focuses the checkbox. */\n  focus(origin: FocusOrigin = 'keyboard', options?: FocusOptions): void {\n    this._focusMonitor.focusVia(this._inputElement, origin, options);\n  }\n\n  _onInteractionEvent(event: Event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n\n  private _getAnimationClassForCheckStateTransition(\n      oldState: TransitionCheckState, newState: TransitionCheckState): string {\n    // Don't transition if animations are disabled.\n    if (this._animationMode === 'NoopAnimations') {\n      return '';\n    }\n\n    let animSuffix: string = '';\n\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          animSuffix = 'unchecked-checked';\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          animSuffix = 'unchecked-indeterminate';\n        } else {\n          return '';\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        animSuffix = newState === TransitionCheckState.Checked ?\n            'unchecked-checked' : 'unchecked-indeterminate';\n        break;\n      case TransitionCheckState.Checked:\n        animSuffix = newState === TransitionCheckState.Unchecked ?\n            'checked-unchecked' : 'checked-indeterminate';\n        break;\n      case TransitionCheckState.Indeterminate:\n        animSuffix = newState === TransitionCheckState.Checked ?\n            'indeterminate-checked' : 'indeterminate-unchecked';\n        break;\n    }\n\n    return `mat-checkbox-anim-${animSuffix}`;\n  }\n\n  /**\n   * Syncs the indeterminate value with the checkbox DOM node.\n   *\n   * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n   * property is supported on an element boils down to `if (propName in element)`. Domino's\n   * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n   * server-side rendering.\n   */\n  private _syncIndeterminate(value: boolean) {\n    const nativeCheckbox = this._inputElement;\n\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n  static ngAcceptInputType_indeterminate: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  forwardRef,\n  Provider,\n} from '@angular/core';\nimport {\n  CheckboxRequiredValidator,\n  NG_VALIDATORS,\n} from '@angular/forms';\n\nexport const MAT_CHECKBOX_REQUIRED_VALIDATOR: Provider = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n  multi: true\n};\n\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\n@Directive({\n  selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n  providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n})\nexport class MatCheckboxRequiredValidator extends CheckboxRequiredValidator {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatCheckbox} from './checkbox';\nimport {MatCheckboxRequiredValidator} from './checkbox-required-validator';\n\n/** This module is used by both original and MDC-based checkbox implementations. */\n@NgModule({\n  exports: [MatCheckboxRequiredValidator],\n  declarations: [MatCheckboxRequiredValidator],\n})\nexport class _MatCheckboxRequiredValidatorModule {\n}\n\n@NgModule({\n  imports: [\n    MatRippleModule, MatCommonModule, ObserversModule,\n    _MatCheckboxRequiredValidatorModule\n  ],\n  exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n  declarations: [MatCheckbox],\n})\nexport class MatCheckboxModule {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './checkbox';\nexport * from './checkbox-config';\nexport * from './checkbox-module';\nexport * from './checkbox-required-validator';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { LookUp } from 'app/core/models/LookUp';\r\nimport { LookUpEmail } from 'app/core/models/LookUpEmail';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { environment } from 'environments/environment';\r\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\r\nimport { AuthService } from '../login/Services/auth.service';\r\nimport { Group } from './Models/group';\r\nimport { GroupService } from './Services/group.service';\r\n\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n  selector: 'app-group',\r\n  templateUrl: './group.component.html',\r\n  styleUrls: ['./group.component.scss']\r\n})\r\nexport class GroupComponent implements AfterViewInit, OnInit {\r\n\r\n  dataSource: MatTableDataSource<any>;\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\tdisplayedColumns: string[] = [\"groupName\",\"updateUserGroupClaims\",\"update\"];\r\n  \r\n  userDropdownList:LookUpEmail[];\r\n  userSelectedItems:LookUp[];\r\n\r\n  claimDropdownList:LookUp[];\r\n  claimSelectedItems:LookUp[];\r\n\r\n  dropdownSettings: IDropdownSettings;\r\n\r\n  groupList:Group[];\r\n  group:Group=new Group();\r\n\r\n  groupAddForm: FormGroup;\r\n\r\n  isUserChange: boolean = false;\r\n  isClaimChange: boolean = false;\r\n\r\n  groupId:number;\r\n\r\n  formattedUserDropdownList: any[];\r\n\r\n  constructor(private groupService:GroupService, private lookupService:LookUpService,private alertifyService:AlertifyService,private formBuilder: FormBuilder, private authService:AuthService) { }\r\n\r\n  \r\n  ngAfterViewInit(): void {\r\n\r\n    this.getGroupList();\r\n\r\n  }\r\n  ngOnInit() {\r\n\r\n    this.createGroupAddForm();\r\n\r\n    this.dropdownSettings=environment.getDropDownSetting;\r\n\r\n      this.lookupService.getOperationClaimLookUp().subscribe(data=>{\r\n        this.claimDropdownList=data;\r\n      });\r\n\r\n     this.lookupService.getUserLookUp().subscribe(data=>{\r\n       this.userDropdownList = data;\r\n       this.formattedUserDropdownList = this.userDropdownList.map(user => ({ id: user.id, label: `${user.label} (${user.email})` }));\r\n     });\r\n  }\r\n\r\n\r\n  getGroupList() {\r\n    this.groupService.getGroupList().subscribe(data => {\r\n      this.groupList = data,\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.configDataTable();\r\n    });\r\n  }\r\n\r\n  save(){\r\n    if (this.groupAddForm.valid) {\r\n      this.group = Object.assign({}, this.groupAddForm.value)\r\n\r\n      if (this.group.id == 0)\r\n        this.addGroup();\r\n      else\r\n        this.updateGroup();\r\n\r\n    }\r\n\r\n  }\r\n\r\n  addGroup(){\r\n\r\n    this.groupService.addGroup(this.group).subscribe(data => {\r\n      this.getGroupList();\r\n      this.group = new Group();\r\n      jQuery(\"#group\").modal(\"hide\");\r\n      this.alertifyService.success(data);\r\n      this.clearFormGroup(this.groupAddForm);\r\n\r\n    })\r\n\r\n  }\r\n\r\n  updateGroup(){  \r\n    this.groupService.updateGroup(this.group).subscribe(data => {\r\n\r\n      var index=this.groupList.findIndex(x=>x.id==this.group.id);\r\n      this.groupList[index]=this.group;\r\n      this.dataSource = new MatTableDataSource(this.groupList);\r\n      this.configDataTable();\r\n      this.group = new Group();\r\n      jQuery(\"#group\").modal(\"hide\");\r\n      this.alertifyService.success(data);\r\n      this.clearFormGroup(this.groupAddForm);\r\n\r\n    })\r\n\r\n  }\r\n\r\n  createGroupAddForm() {\r\n    this.groupAddForm = this.formBuilder.group({\r\n      id: [0],\r\n      groupName: [\"\", Validators.required],\r\n    })\r\n  }\r\n\r\n  deleteGroup(groupId:number){\r\n    this.groupService.deleteGroup(groupId).subscribe(data=>{\r\n      this.alertifyService.success(data.toString());\r\n      this.groupList=this.groupList.filter(x=> x.id!=groupId);\r\n      this.dataSource = new MatTableDataSource(this.groupList);\r\n      this.configDataTable();\r\n    })\r\n  }\r\n\r\n  getGroupById(groupId:number){\r\n    this.clearFormGroup(this.groupAddForm);\r\n    this.groupService.getGroupById(groupId).subscribe(data=>{\r\n      this.group=data;\r\n      this.groupAddForm.patchValue(data);\r\n    })\r\n  }\r\n\r\n  getGroupClaims(groupId:number){\r\n\r\n    this.groupId=groupId;\r\n\r\n    this.groupService.getGroupClaims(groupId).subscribe(data => {\r\n      this.claimSelectedItems = data;\r\n    })\r\n\r\n  }\r\n\r\n  getGroupUsers(groupId:number){\r\n\r\n     this.groupId=groupId;\r\n\r\n    this.groupService.getGroupUsers(groupId).subscribe(data => {\r\n      this.userSelectedItems = data;\r\n    })\r\n    \r\n  }\r\n\r\n  saveGroupClaims(){\r\n    if(this.isClaimChange){\r\n      var ids=this.claimSelectedItems.map(function(x){ return x.id as number});\r\n      this.groupService.saveGroupClaims(this.groupId, ids).subscribe(x=>{\r\n        jQuery(\"#groupClaims\").modal(\"hide\");\r\n        this.isClaimChange=false;\r\n        this.alertifyService.success(x);\r\n      });\r\n      }\r\n\r\n  }\r\n\r\n  saveGroupUsers(){\r\n\r\n    if(this.isUserChange){\r\n\r\n      var ids=this.userSelectedItems.map(function(x){ return x.id as number});\r\n      this.groupService.saveGroupUsers(this.groupId, ids).subscribe(x=>{\r\n        jQuery(\"#groupUsers\").modal(\"hide\");\r\n        this.isUserChange=false;\r\n        this.alertifyService.success(x);\r\n      });\r\n      }\r\n\r\n  }\r\n\r\n  onItemSelect(comboType: string) {\r\n    this.setComboStatus(comboType);\r\n  }\r\n\r\n  onSelectAll(comboType: string) {\r\n    this.setComboStatus(comboType);\r\n  }\r\n  onItemDeSelect(comboType: string) {\r\n    this.setComboStatus(comboType);\r\n  }\r\n\r\n  setComboStatus(comboType: string) {\r\n\r\n    if (comboType == \"User\")\r\n      this.isUserChange = true;\r\n    else if (comboType == \"Claim\")\r\n      this.isClaimChange = true;\r\n\r\n  }\r\n\r\n  clearFormGroup(group: FormGroup) {\r\n\r\n    group.markAsUntouched();\r\n    group.reset();\r\n\r\n    Object.keys(group.controls).forEach(key => {\r\n      group.get(key).setErrors(null);\r\n      if (key == \"id\")\r\n        group.get(key).setValue(0);\r\n    });\r\n  }\r\n\r\n  checkClaim(claim:string):boolean{\r\n    return this.authService.claimGuard(claim)\r\n  }\r\n\r\n  configDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n}","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ViewContainerRef, InjectionToken} from '@angular/core';\nimport {AriaLivePoliteness} from '@angular/cdk/a11y';\nimport {Direction} from '@angular/cdk/bidi';\n\n/** Injection token that can be used to access the data that was passed in to a snack bar. */\nexport const MAT_SNACK_BAR_DATA = new InjectionToken<any>('MatSnackBarData');\n\n/** Possible values for horizontalPosition on MatSnackBarConfig. */\nexport type MatSnackBarHorizontalPosition = 'start' | 'center' | 'end' | 'left' | 'right';\n\n/** Possible values for verticalPosition on MatSnackBarConfig. */\nexport type MatSnackBarVerticalPosition = 'top' | 'bottom';\n\n/**\n * Configuration used when opening a snack-bar.\n */\nexport class MatSnackBarConfig<D = any> {\n  /** The politeness level for the MatAriaLiveAnnouncer announcement. */\n  politeness?: AriaLivePoliteness = 'assertive';\n\n  /**\n   * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom\n   * component or template, the announcement message will default to the specified message.\n   */\n  announcementMessage?: string = '';\n\n  /**\n   * The view container that serves as the parent for the snackbar for the purposes of dependency\n   * injection. Note: this does not affect where the snackbar is inserted in the DOM.\n   */\n  viewContainerRef?: ViewContainerRef;\n\n  /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */\n  duration?: number = 0;\n\n  /** Extra CSS classes to be added to the snack bar container. */\n  panelClass?: string | string[];\n\n  /** Text layout direction for the snack bar. */\n  direction?: Direction;\n\n  /** Data being injected into the child component. */\n  data?: D | null = null;\n\n  /** The horizontal position to place the snack bar. */\n  horizontalPosition?: MatSnackBarHorizontalPosition = 'center';\n\n  /** The vertical position to place the snack bar. */\n  verticalPosition?: MatSnackBarVerticalPosition = 'bottom';\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayRef} from '@angular/cdk/overlay';\nimport {Observable, Subject} from 'rxjs';\nimport {_SnackBarContainer} from './snack-bar-container';\n\n\n/** Event that is emitted when a snack bar is dismissed. */\nexport interface MatSnackBarDismiss {\n  /** Whether the snack bar was dismissed using the action button. */\n  dismissedByAction: boolean;\n}\n\n/** Maximum amount of milliseconds that can be passed into setTimeout. */\nconst MAX_TIMEOUT = Math.pow(2, 31) - 1;\n\n/**\n * Reference to a snack bar dispatched from the snack bar service.\n */\nexport class MatSnackBarRef<T> {\n  /** The instance of the component making up the content of the snack bar. */\n  instance: T;\n\n  /**\n   * The instance of the component making up the content of the snack bar.\n   * @docs-private\n   */\n  containerInstance: _SnackBarContainer;\n\n  /** Subject for notifying the user that the snack bar has been dismissed. */\n  private readonly _afterDismissed = new Subject<MatSnackBarDismiss>();\n\n  /** Subject for notifying the user that the snack bar has opened and appeared. */\n  private readonly _afterOpened = new Subject<void>();\n\n  /** Subject for notifying the user that the snack bar action was called. */\n  private readonly _onAction = new Subject<void>();\n\n  /**\n   * Timeout ID for the duration setTimeout call. Used to clear the timeout if the snackbar is\n   * dismissed before the duration passes.\n   */\n  private _durationTimeoutId: number;\n\n  /** Whether the snack bar was dismissed using the action button. */\n  private _dismissedByAction = false;\n\n  constructor(containerInstance: _SnackBarContainer,\n              private _overlayRef: OverlayRef) {\n    this.containerInstance = containerInstance;\n    // Dismiss snackbar on action.\n    this.onAction().subscribe(() => this.dismiss());\n    containerInstance._onExit.subscribe(() => this._finishDismiss());\n  }\n\n  /** Dismisses the snack bar. */\n  dismiss(): void {\n    if (!this._afterDismissed.closed) {\n      this.containerInstance.exit();\n    }\n    clearTimeout(this._durationTimeoutId);\n  }\n\n  /** Marks the snackbar action clicked. */\n  dismissWithAction(): void {\n    if (!this._onAction.closed) {\n      this._dismissedByAction = true;\n      this._onAction.next();\n      this._onAction.complete();\n    }\n  }\n\n\n  /**\n   * Marks the snackbar action clicked.\n   * @deprecated Use `dismissWithAction` instead.\n   * @breaking-change 8.0.0\n   */\n  closeWithAction(): void {\n    this.dismissWithAction();\n  }\n\n  /** Dismisses the snack bar after some duration */\n  _dismissAfter(duration: number): void {\n    // Note that we need to cap the duration to the maximum value for setTimeout, because\n    // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.\n    this._durationTimeoutId = setTimeout(() => this.dismiss(), Math.min(duration, MAX_TIMEOUT));\n  }\n\n  /** Marks the snackbar as opened */\n  _open(): void {\n    if (!this._afterOpened.closed) {\n      this._afterOpened.next();\n      this._afterOpened.complete();\n    }\n  }\n\n  /** Cleans up the DOM after closing. */\n  private _finishDismiss(): void {\n    this._overlayRef.dispose();\n\n    if (!this._onAction.closed) {\n      this._onAction.complete();\n    }\n\n    this._afterDismissed.next({dismissedByAction: this._dismissedByAction});\n    this._afterDismissed.complete();\n    this._dismissedByAction = false;\n  }\n\n  /** Gets an observable that is notified when the snack bar is finished closing. */\n  afterDismissed(): Observable<MatSnackBarDismiss> {\n    return this._afterDismissed;\n  }\n\n  /** Gets an observable that is notified when the snack bar has opened and appeared. */\n  afterOpened(): Observable<void> {\n    return this.containerInstance._onEnter;\n  }\n\n  /** Gets an observable that is notified when the snack bar action is called. */\n  onAction(): Observable<void> {\n    return this._onAction;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Inject, ViewEncapsulation} from '@angular/core';\nimport {MAT_SNACK_BAR_DATA} from './snack-bar-config';\nimport {MatSnackBarRef} from './snack-bar-ref';\n\n\n/**\n * Interface for a simple snack bar component that has a message and a single action.\n */\nexport interface TextOnlySnackBar {\n  data: {message: string, action: string};\n  snackBarRef: MatSnackBarRef<TextOnlySnackBar>;\n  action: () => void;\n  hasAction: boolean;\n}\n\n/**\n * A component used to open as the default snack bar, matching material spec.\n * This should only be used internally by the snack bar service.\n */\n@Component({\n  selector: 'simple-snack-bar',\n  templateUrl: 'simple-snack-bar.html',\n  styleUrls: ['simple-snack-bar.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  host: {\n    'class': 'mat-simple-snackbar',\n  }\n})\nexport class SimpleSnackBar implements TextOnlySnackBar {\n  /** Data that was injected into the snack bar. */\n  data: {message: string, action: string};\n\n  constructor(\n    public snackBarRef: MatSnackBarRef<SimpleSnackBar>,\n    @Inject(MAT_SNACK_BAR_DATA) data: any) {\n    this.data = data;\n  }\n\n  /** Performs the action on the snack bar. */\n  action(): void {\n    this.snackBarRef.dismissWithAction();\n  }\n\n  /** If the action button should be shown. */\n  get hasAction(): boolean {\n    return !!this.data.action;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material snack bar.\n * @docs-private\n */\nexport const matSnackBarAnimations: {\n  readonly snackBarState: AnimationTriggerMetadata;\n} = {\n  /** Animation that shows and hides a snack bar. */\n  snackBarState: trigger('state', [\n    state('void, hidden', style({\n      transform: 'scale(0.8)',\n      opacity: 0,\n    })),\n    state('visible', style({\n      transform: 'scale(1)',\n      opacity: 1,\n    })),\n    transition('* => visible', animate('150ms cubic-bezier(0, 0, 0.2, 1)')),\n    transition('* => void, * => hidden', animate('75ms cubic-bezier(0.4, 0.0, 1, 1)', style({\n      opacity: 0\n    }))),\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {AnimationEvent} from '@angular/animations';\nimport {\n  BasePortalOutlet,\n  CdkPortalOutlet,\n  ComponentPortal,\n  TemplatePortal,\n  DomPortal,\n} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EmbeddedViewRef,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {take} from 'rxjs/operators';\nimport {matSnackBarAnimations} from './snack-bar-animations';\nimport {MatSnackBarConfig} from './snack-bar-config';\n\n/**\n * Internal interface for a snack bar container.\n * @docs-private\n */\nexport interface _SnackBarContainer {\n  snackBarConfig: MatSnackBarConfig;\n  _onExit: Subject<any>;\n  _onEnter: Subject<any>;\n  enter: () => void;\n  exit: () => Observable<void>;\n  attachTemplatePortal: <C>(portal: TemplatePortal<C>) => EmbeddedViewRef<C>;\n  attachComponentPortal: <T>(portal: ComponentPortal<T>) => ComponentRef<T>;\n}\n\n/**\n * Internal component that wraps user-provided snack bar content.\n * @docs-private\n */\n@Component({\n  selector: 'snack-bar-container',\n  templateUrl: 'snack-bar-container.html',\n  styleUrls: ['snack-bar-container.css'],\n  // In Ivy embedded views will be change detected from their declaration place, rather than\n  // where they were stamped out. This means that we can't have the snack bar container be OnPush,\n  // because it might cause snack bars that were opened from a template not to be out of date.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  animations: [matSnackBarAnimations.snackBarState],\n  host: {\n    '[attr.role]': '_role',\n    'class': 'mat-snack-bar-container',\n    '[@state]': '_animationState',\n    '(@state.done)': 'onAnimationEnd($event)'\n  },\n})\nexport class MatSnackBarContainer extends BasePortalOutlet\n    implements OnDestroy, _SnackBarContainer {\n  /** Whether the component has been destroyed. */\n  private _destroyed = false;\n\n  /** The portal outlet inside of this container into which the snack bar content will be loaded. */\n  @ViewChild(CdkPortalOutlet, {static: true}) _portalOutlet: CdkPortalOutlet;\n\n  /** Subject for notifying that the snack bar has exited from view. */\n  readonly _onExit: Subject<void> = new Subject();\n\n  /** Subject for notifying that the snack bar has finished entering the view. */\n  readonly _onEnter: Subject<void> = new Subject();\n\n  /** The state of the snack bar animations. */\n  _animationState = 'void';\n\n  /** ARIA role for the snack bar container. */\n  _role: 'alert' | 'status' | null;\n\n  constructor(\n    private _ngZone: NgZone,\n    private _elementRef: ElementRef<HTMLElement>,\n    private _changeDetectorRef: ChangeDetectorRef,\n    /** The snack bar configuration. */\n    public snackBarConfig: MatSnackBarConfig) {\n\n    super();\n\n    // Based on the ARIA spec, `alert` and `status` roles have an\n    // implicit `assertive` and `polite` politeness respectively.\n    if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {\n      this._role = 'alert';\n    } else if (snackBarConfig.politeness === 'off') {\n      this._role = null;\n    } else {\n      this._role = 'status';\n    }\n  }\n\n  /** Attach a component portal as content to this snack bar container. */\n  attachComponentPortal<T>(portal: ComponentPortal<T>): ComponentRef<T> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachComponentPortal(portal);\n  }\n\n  /** Attach a template portal as content to this snack bar container. */\n  attachTemplatePortal<C>(portal: TemplatePortal<C>): EmbeddedViewRef<C> {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachTemplatePortal(portal);\n  }\n\n  /**\n   * Attaches a DOM portal to the snack bar container.\n   * @deprecated To be turned into a method.\n   * @breaking-change 10.0.0\n   */\n  attachDomPortal = (portal: DomPortal) => {\n    this._assertNotAttached();\n    this._applySnackBarClasses();\n    return this._portalOutlet.attachDomPortal(portal);\n  }\n\n  /** Handle end of animations, updating the state of the snackbar. */\n  onAnimationEnd(event: AnimationEvent) {\n    const {fromState, toState} = event;\n\n    if ((toState === 'void' && fromState !== 'void') || toState === 'hidden') {\n      this._completeExit();\n    }\n\n    if (toState === 'visible') {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const onEnter = this._onEnter;\n\n      this._ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n\n  /** Begin animation of snack bar entrance into view. */\n  enter(): void {\n    if (!this._destroyed) {\n      this._animationState = 'visible';\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Begin animation of the snack bar exiting from view. */\n  exit(): Observable<void> {\n    // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case\n    // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to\n    // `MatSnackBar.open`).\n    this._animationState = 'hidden';\n\n    // Mark this element with an 'exit' attribute to indicate that the snackbar has\n    // been dismissed and will soon be removed from the DOM. This is used by the snackbar\n    // test harness.\n    this._elementRef.nativeElement.setAttribute('mat-exit', '');\n\n    return this._onExit;\n  }\n\n  /** Makes sure the exit callbacks have been invoked when the element is destroyed. */\n  ngOnDestroy() {\n    this._destroyed = true;\n    this._completeExit();\n  }\n\n  /**\n   * Waits for the zone to settle before removing the element. Helps prevent\n   * errors where we end up removing an element which is in the middle of an animation.\n   */\n  private _completeExit() {\n    this._ngZone.onMicrotaskEmpty.pipe(take(1)).subscribe(() => {\n      this._onExit.next();\n      this._onExit.complete();\n    });\n  }\n\n  /** Applies the various positioning and user-configured CSS classes to the snack bar. */\n  private _applySnackBarClasses() {\n    const element: HTMLElement = this._elementRef.nativeElement;\n    const panelClasses = this.snackBarConfig.panelClass;\n\n    if (panelClasses) {\n      if (Array.isArray(panelClasses)) {\n        // Note that we can't use a spread here, because IE doesn't support multiple arguments.\n        panelClasses.forEach(cssClass => element.classList.add(cssClass));\n      } else {\n        element.classList.add(panelClasses);\n      }\n    }\n\n    if (this.snackBarConfig.horizontalPosition === 'center') {\n      element.classList.add('mat-snack-bar-center');\n    }\n\n    if (this.snackBarConfig.verticalPosition === 'top') {\n      element.classList.add('mat-snack-bar-top');\n    }\n  }\n\n  /** Asserts that no content is already attached to the container. */\n  private _assertNotAttached() {\n    if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempting to attach snack bar content after content is already attached');\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {SimpleSnackBar} from './simple-snack-bar';\nimport {MatSnackBarContainer} from './snack-bar-container';\n\n\n@NgModule({\n  imports: [\n    OverlayModule,\n    PortalModule,\n    CommonModule,\n    MatButtonModule,\n    MatCommonModule,\n  ],\n  exports: [MatSnackBarContainer, MatCommonModule],\n  declarations: [MatSnackBarContainer, SimpleSnackBar],\n  entryComponents: [MatSnackBarContainer, SimpleSnackBar],\n})\nexport class MatSnackBarModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {LiveAnnouncer} from '@angular/cdk/a11y';\nimport {BreakpointObserver, Breakpoints} from '@angular/cdk/layout';\nimport {Overlay, OverlayConfig, OverlayRef} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType, TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ComponentRef,\n  EmbeddedViewRef,\n  Inject,\n  Injectable,\n  InjectionToken,\n  Injector,\n  Optional,\n  SkipSelf,\n  TemplateRef,\n  OnDestroy, Type,\n} from '@angular/core';\nimport {takeUntil} from 'rxjs/operators';\nimport {TextOnlySnackBar, SimpleSnackBar} from './simple-snack-bar';\nimport {MAT_SNACK_BAR_DATA, MatSnackBarConfig} from './snack-bar-config';\nimport {MatSnackBarContainer, _SnackBarContainer} from './snack-bar-container';\nimport {MatSnackBarModule} from './snack-bar-module';\nimport {MatSnackBarRef} from './snack-bar-ref';\n\n\n/** Injection token that can be used to specify default snack bar. */\nexport const MAT_SNACK_BAR_DEFAULT_OPTIONS =\n    new InjectionToken<MatSnackBarConfig>('mat-snack-bar-default-options', {\n      providedIn: 'root',\n      factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY,\n    });\n\n/** @docs-private */\nexport function MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY(): MatSnackBarConfig {\n  return new MatSnackBarConfig();\n}\n\n/**\n * Service to dispatch Material Design snack bar messages.\n */\n@Injectable({providedIn: MatSnackBarModule})\nexport class MatSnackBar implements OnDestroy {\n  /**\n   * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).\n   * If there is a parent snack-bar service, all operations should delegate to that parent\n   * via `_openedSnackBarRef`.\n   */\n  private _snackBarRefAtThisLevel: MatSnackBarRef<any> | null = null;\n\n  /** The component that should be rendered as the snack bar's simple component. */\n  protected simpleSnackBarComponent: Type<TextOnlySnackBar> = SimpleSnackBar;\n\n  /** The container component that attaches the provided template or component. */\n  protected snackBarContainerComponent: Type<_SnackBarContainer> = MatSnackBarContainer;\n\n  /** The CSS class to applie for handset mode. */\n  protected handsetCssClass = 'mat-snack-bar-handset';\n\n  /** Reference to the currently opened snackbar at *any* level. */\n  get _openedSnackBarRef(): MatSnackBarRef<any> | null {\n    const parent = this._parentSnackBar;\n    return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;\n  }\n\n  set _openedSnackBarRef(value: MatSnackBarRef<any> | null) {\n    if (this._parentSnackBar) {\n      this._parentSnackBar._openedSnackBarRef = value;\n    } else {\n      this._snackBarRefAtThisLevel = value;\n    }\n  }\n\n  constructor(\n      private _overlay: Overlay,\n      private _live: LiveAnnouncer,\n      private _injector: Injector,\n      private _breakpointObserver: BreakpointObserver,\n      @Optional() @SkipSelf() private _parentSnackBar: MatSnackBar,\n      @Inject(MAT_SNACK_BAR_DEFAULT_OPTIONS) private _defaultConfig: MatSnackBarConfig) {}\n\n  /**\n   * Creates and dispatches a snack bar with a custom component for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param component Component to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromComponent<T>(component: ComponentType<T>, config?: MatSnackBarConfig):\n      MatSnackBarRef<T> {\n    return this._attach(component, config) as MatSnackBarRef<T>;\n  }\n\n  /**\n   * Creates and dispatches a snack bar with a custom template for the content, removing any\n   * currently opened snack bars.\n   *\n   * @param template Template to be instantiated.\n   * @param config Extra configuration for the snack bar.\n   */\n  openFromTemplate(template: TemplateRef<any>, config?: MatSnackBarConfig):\n      MatSnackBarRef<EmbeddedViewRef<any>> {\n    return this._attach(template, config);\n  }\n\n  /**\n   * Opens a snackbar with a message and an optional action.\n   * @param message The message to show in the snackbar.\n   * @param action The label for the snackbar action.\n   * @param config Additional configuration options for the snackbar.\n   */\n  open(message: string, action: string = '', config?: MatSnackBarConfig):\n      MatSnackBarRef<TextOnlySnackBar> {\n    const _config = {...this._defaultConfig, ...config};\n\n    // Since the user doesn't have access to the component, we can\n    // override the data to pass in our own message and action.\n    _config.data = {message, action};\n\n    // Since the snack bar has `role=\"alert\"`, we don't\n    // want to announce the same message twice.\n    if (_config.announcementMessage === message) {\n      _config.announcementMessage = undefined;\n    }\n\n    return this.openFromComponent(this.simpleSnackBarComponent, _config);\n  }\n\n  /**\n   * Dismisses the currently-visible snack bar.\n   */\n  dismiss(): void {\n    if (this._openedSnackBarRef) {\n      this._openedSnackBarRef.dismiss();\n    }\n  }\n\n  ngOnDestroy() {\n    // Only dismiss the snack bar at the current level on destroy.\n    if (this._snackBarRefAtThisLevel) {\n      this._snackBarRefAtThisLevel.dismiss();\n    }\n  }\n\n  /**\n   * Attaches the snack bar container component to the overlay.\n   */\n  private _attachSnackBarContainer(overlayRef: OverlayRef,\n                                     config: MatSnackBarConfig): _SnackBarContainer {\n\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n    const injector = Injector.create({\n      parent: userInjector || this._injector,\n      providers: [{provide: MatSnackBarConfig, useValue: config}]\n    });\n\n    const containerPortal =\n        new ComponentPortal(this.snackBarContainerComponent, config.viewContainerRef, injector);\n    const containerRef: ComponentRef<_SnackBarContainer> =\n        overlayRef.attach(containerPortal);\n    containerRef.instance.snackBarConfig = config;\n    return containerRef.instance;\n  }\n\n  /**\n   * Places a new component or a template as the content of the snack bar container.\n   */\n  private _attach<T>(content: ComponentType<T> | TemplateRef<T>, userConfig?: MatSnackBarConfig):\n      MatSnackBarRef<T | EmbeddedViewRef<any>> {\n\n    const config = {...new MatSnackBarConfig(), ...this._defaultConfig, ...userConfig};\n    const overlayRef = this._createOverlay(config);\n    const container = this._attachSnackBarContainer(overlayRef, config);\n    const snackBarRef = new MatSnackBarRef<T | EmbeddedViewRef<any>>(container, overlayRef);\n\n    if (content instanceof TemplateRef) {\n      const portal = new TemplatePortal(content, null!, {\n        $implicit: config.data,\n        snackBarRef\n      } as any);\n\n      snackBarRef.instance = container.attachTemplatePortal(portal);\n    } else {\n      const injector = this._createInjector(config, snackBarRef);\n      const portal = new ComponentPortal(content, undefined, injector);\n      const contentRef = container.attachComponentPortal<T>(portal);\n\n      // We can't pass this via the injector, because the injector is created earlier.\n      snackBarRef.instance = contentRef.instance;\n    }\n\n    // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as\n    // appropriate. This class is applied to the overlay element because the overlay must expand to\n    // fill the width of the screen for full width snackbars.\n    this._breakpointObserver.observe(Breakpoints.HandsetPortrait).pipe(\n        takeUntil(overlayRef.detachments())\n    ).subscribe(state => {\n      const classList = overlayRef.overlayElement.classList;\n      state.matches ? classList.add(this.handsetCssClass) : classList.remove(this.handsetCssClass);\n    });\n\n    this._animateSnackBar(snackBarRef, config);\n    this._openedSnackBarRef = snackBarRef;\n    return this._openedSnackBarRef;\n  }\n\n  /** Animates the old snack bar out and the new one in. */\n  private _animateSnackBar(snackBarRef: MatSnackBarRef<any>, config: MatSnackBarConfig) {\n    // When the snackbar is dismissed, clear the reference to it.\n    snackBarRef.afterDismissed().subscribe(() => {\n      // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.\n      if (this._openedSnackBarRef == snackBarRef) {\n        this._openedSnackBarRef = null;\n      }\n\n      if (config.announcementMessage) {\n        this._live.clear();\n      }\n    });\n\n    if (this._openedSnackBarRef) {\n      // If a snack bar is already in view, dismiss it and enter the\n      // new snack bar after exit animation is complete.\n      this._openedSnackBarRef.afterDismissed().subscribe(() => {\n        snackBarRef.containerInstance.enter();\n      });\n      this._openedSnackBarRef.dismiss();\n    } else {\n      // If no snack bar is in view, enter the new snack bar.\n      snackBarRef.containerInstance.enter();\n    }\n\n    // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.\n    if (config.duration && config.duration > 0) {\n      snackBarRef.afterOpened().subscribe(() => snackBarRef._dismissAfter(config.duration!));\n    }\n\n    if (config.announcementMessage) {\n      this._live.announce(config.announcementMessage, config.politeness);\n    }\n  }\n\n  /**\n   * Creates a new overlay and places it in the correct location.\n   * @param config The user-specified snack bar config.\n   */\n  private _createOverlay(config: MatSnackBarConfig): OverlayRef {\n    const overlayConfig = new OverlayConfig();\n    overlayConfig.direction = config.direction;\n\n    let positionStrategy = this._overlay.position().global();\n    // Set horizontal position.\n    const isRtl = config.direction === 'rtl';\n    const isLeft = (\n        config.horizontalPosition === 'left' ||\n        (config.horizontalPosition === 'start' && !isRtl) ||\n        (config.horizontalPosition === 'end' && isRtl));\n    const isRight = !isLeft && config.horizontalPosition !== 'center';\n    if (isLeft) {\n      positionStrategy.left('0');\n    } else if (isRight) {\n      positionStrategy.right('0');\n    } else {\n      positionStrategy.centerHorizontally();\n    }\n    // Set horizontal position.\n    if (config.verticalPosition === 'top') {\n      positionStrategy.top('0');\n    } else {\n      positionStrategy.bottom('0');\n    }\n\n    overlayConfig.positionStrategy = positionStrategy;\n    return this._overlay.create(overlayConfig);\n  }\n\n  /**\n   * Creates an injector to be used inside of a snack bar component.\n   * @param config Config that was used to create the snack bar.\n   * @param snackBarRef Reference to the snack bar.\n   */\n  private _createInjector<T>(config: MatSnackBarConfig, snackBarRef: MatSnackBarRef<T>): Injector {\n    const userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;\n\n    return Injector.create({\n      parent: userInjector || this._injector,\n      providers: [\n        {provide: MatSnackBarRef, useValue: snackBarRef},\n        {provide: MAT_SNACK_BAR_DATA, useValue: config.data}\n      ]\n    });\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './snack-bar-module';\nexport * from './snack-bar';\nexport * from './snack-bar-container';\nexport * from './snack-bar-config';\nexport * from './snack-bar-ref';\nexport * from './simple-snack-bar';\nexport * from './snack-bar-animations';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export default \"<div class=\\\"container-fluid\\\" style=\\\"padding-top: 35px;\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n        <div class=\\\"card-header card-header-primary\\\">\\r\\n            <h4 class=\\\"card-title\\\" style=\\\"padding-bottom: 25px;\\\">Ziyaretleriniz</h4>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"filteredVisits.length === 0\\\" class=\\\"card-body\\\">\\r\\n            <div class=\\\"text-center\\\">\\r\\n                <mat-spinner style=\\\"margin: 0 auto;\\\"></mat-spinner>\\r\\n                <p>Yükleniyor...</p>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"filteredVisits.length > 0\\\" class=\\\"card-body\\\">\\r\\n            <!-- Tab Butonları -->\\r\\n            <div class=\\\"date-tabs text-center mb-3\\\">\\r\\n                <button mat-button (click)=\\\"filterVisits('all')\\\">Tümü</button>\\r\\n                <button mat-button (click)=\\\"filterVisits('approved')\\\">Onaylı</button>\\r\\n                <button mat-button (click)=\\\"filterVisits('rejected')\\\">Reddedildi</button>\\r\\n                <button mat-button (click)=\\\"filterVisits('pending')\\\">Beklemede</button>\\r\\n            </div>\\r\\n\\r\\n            <!-- Tablo -->\\r\\n            <div class=\\\"mat-elevation-z8\\\">\\r\\n                <table mat-table [dataSource]=\\\"filteredVisits\\\" class=\\\"mat-elevation-z8\\\">\\r\\n                    <ng-container matColumnDef=\\\"visitorFullName\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Ziyaretçi Adı </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let visit\\\"> {{ visit.visitorFullName }} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"visitStartDate\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Giriş Tarihi </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let visit\\\"> {{ visit.visitStartDate | date: 'short' }} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"exitDate\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Çıkış Tarihi </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let visit\\\"> {{ visit.exitDate !== '0001-01-01T02:00:00+02:00' ? (visit.exitDate | date: 'short') : 'Yok' }} </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <ng-container matColumnDef=\\\"status\\\">\\r\\n                        <th mat-header-cell *matHeaderCellDef> Durum </th>\\r\\n                        <td mat-cell *matCellDef=\\\"let visit\\\"> \\r\\n                            <span *ngIf=\\\"visit.isConfirm\\\" class=\\\"status approved\\\">\\r\\n                                <mat-icon>check_circle</mat-icon> Onaylı\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"visit.isReject\\\" class=\\\"status rejected\\\">\\r\\n                                <mat-icon>cancel</mat-icon> Reddedildi: {{ visit.reasonForRejection }}\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"!visit.isConfirm && !visit.isReject\\\" class=\\\"status pending\\\">\\r\\n                                <mat-icon>hourglass_empty</mat-icon> Beklemede\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"visit.vehicleEntry\\\" class=\\\"status vehicle\\\">\\r\\n                                <mat-icon>directions_car</mat-icon> Araç\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"!visit.vehicleEntry\\\" class=\\\"status pedestrian\\\">\\r\\n                                <mat-icon>directions_walk</mat-icon> Yaya\\r\\n                            </span>\\r\\n                        </td>\\r\\n                    </ng-container>\\r\\n\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"['visitorFullName', 'visitStartDate', 'exitDate', 'status']\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: ['visitorFullName', 'visitStartDate', 'exitDate', 'status'];\\\"></tr>\\r\\n                </table>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\";","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { LookUp } from 'app/core/models/LookUp';\r\nimport { LocalStorageService } from 'app/core/services/local-storage.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { environment } from 'environments/environment';\r\nimport { LanguageService } from '../../../services/language.service';\r\nimport { LoginUser } from './model/login-user';\r\nimport { AuthService } from './Services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  username:string=\"\";\r\n  loginUser:LoginUser=new LoginUser();\r\n  langugelookUp:LookUp[];\r\n  hidePassword = true;\r\n\r\n\r\n  constructor(private auth:AuthService,\r\n    private storageService:LocalStorageService,\r\n    private lookupService:LookUpService,\r\n    public translateService:TranslateService,\r\n    private httpClient:HttpClient,\r\n    private languageService: LanguageService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    this.username=this.auth.userName;\r\n    this.httpClient.get<LookUp[]>(environment.getApiUrl +\"/languages/codes\").subscribe(data=>{\r\n      this.langugelookUp=data;\r\n    })\r\n    \r\n  }\r\n\r\n  getUserName(){\r\n    return this.username;\r\n  }\r\n\r\n  login(){\r\n    this.auth.login(this.loginUser);\r\n  }\r\n\r\n  logOut(){\r\n      this.storageService.removeToken();\r\n      this.storageService.removeItem(\"lang\");\r\n  }\r\n\r\n  changeLang(lang){  \r\n    localStorage.setItem(\"lang\",lang);\r\n    this.translateService.use(lang);\r\n  }\r\n\r\n  getLanguageCodes() {\r\n    this.languageService.getLanguageCodes().subscribe({\r\n      next: (response) => {\r\n      },\r\n      error: (error) => {\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, Input, ViewEncapsulation} from '@angular/core';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\n\n@Component({\n  selector: 'mat-divider',\n  host: {\n    'role': 'separator',\n    '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n    '[class.mat-divider-vertical]': 'vertical',\n    '[class.mat-divider-horizontal]': '!vertical',\n    '[class.mat-divider-inset]': 'inset',\n    'class': 'mat-divider'\n  },\n  template: '',\n  styleUrls: ['divider.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDivider {\n  /** Whether the divider is vertically aligned. */\n  @Input()\n  get vertical(): boolean { return this._vertical; }\n  set vertical(value: boolean) { this._vertical = coerceBooleanProperty(value); }\n  private _vertical: boolean = false;\n\n  /** Whether the divider is an inset divider. */\n  @Input()\n  get inset(): boolean { return this._inset; }\n  set inset(value: boolean) { this._inset = coerceBooleanProperty(value); }\n  private _inset: boolean = false;\n\n  static ngAcceptInputType_vertical: BooleanInput;\n  static ngAcceptInputType_inset: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule} from '@angular/material/core';\nimport {MatDivider} from './divider';\n\n\n@NgModule({\n  imports: [MatCommonModule],\n  exports: [MatDivider, MatCommonModule],\n  declarations: [MatDivider],\n})\nexport class MatDividerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './divider';\nexport * from './divider-module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {coerceBooleanProperty} from '@angular/cdk/coercion';\n\n/** @docs-private */\nexport type Constructor<T> = new(...args: any[]) => T;\n\n/**\n * Interface for a mixin to provide a directive with a function that checks if the sticky input has\n * been changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nexport interface CanStick {\n  /** Whether sticky positioning should be applied. */\n  sticky: boolean;\n\n  /** Whether the sticky input has changed since it was last checked. */\n  _hasStickyChanged: boolean;\n\n  /** Whether the sticky value has changed since this was last called. */\n  hasStickyChanged(): boolean;\n\n  /** Resets the dirty check for cases where the sticky state has been used without checking. */\n  resetStickyChanged(): void;\n}\n\n/** @docs-private */\nexport type CanStickCtor = Constructor<CanStick>;\n\n/**\n * Mixin to provide a directive with a function that checks if the sticky input has been\n * changed since the last time the function was called. Essentially adds a dirty-check to the\n * sticky value.\n * @docs-private\n */\nexport function mixinHasStickyInput<T extends Constructor<{}>>(base: T): CanStickCtor & T {\n  return class extends base {\n    /** Whether sticky positioning should be applied. */\n    get sticky(): boolean { return this._sticky; }\n    set sticky(v: boolean) {\n      const prevValue = this._sticky;\n      this._sticky = coerceBooleanProperty(v);\n      this._hasStickyChanged = prevValue !== this._sticky;\n    }\n    _sticky: boolean = false;\n\n    /** Whether the sticky input has changed since it was last checked. */\n    _hasStickyChanged: boolean = false;\n\n    /** Whether the sticky value has changed since this was last called. */\n    hasStickyChanged(): boolean {\n      const hasStickyChanged = this._hasStickyChanged;\n      this._hasStickyChanged = false;\n      return hasStickyChanged;\n    }\n\n    /** Resets the dirty check for cases where the sticky state has been used without checking. */\n    resetStickyChanged() {\n      this._hasStickyChanged = false;\n    }\n\n    constructor(...args: any[]) { super(...args); }\n  };\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {InjectionToken} from '@angular/core';\n\n/**\n * Used to provide a table to some of the sub-components without causing a circular dependency.\n * @docs-private\n */\nexport const CDK_TABLE = new InjectionToken<any>('CDK_TABLE');\n\n/** Configurable options for `CdkTextColumn`. */\nexport interface TextColumnOptions<T> {\n  /**\n   * Default function that provides the header text based on the column name if a header\n   * text is not provided.\n   */\n  defaultHeaderTextTransform?: (name: string) => string;\n\n  /** Default data accessor to use if one is not provided. */\n  defaultDataAccessor?: (data: T, name: string) => string;\n}\n\n/** Injection token that can be used to specify the text column options. */\nexport const TEXT_COLUMN_OPTIONS =\n    new InjectionToken<TextColumnOptions<any>>('text-column-options');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  ContentChild,\n  Directive,\n  ElementRef,\n  Input,\n  TemplateRef,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {CanStick, CanStickCtor, mixinHasStickyInput} from './can-stick';\nimport {CDK_TABLE} from './tokens';\n\n\n/** Base interface for a cell definition. Captures a column's cell template definition. */\nexport interface CellDef {\n  template: TemplateRef<any>;\n}\n\n/**\n * Cell definition for a CDK table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\n@Directive({selector: '[cdkCellDef]'})\nexport class CdkCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) {}\n}\n\n/**\n * Header cell definition for a CDK table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\n@Directive({selector: '[cdkHeaderCellDef]'})\nexport class CdkHeaderCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) {}\n}\n\n/**\n * Footer cell definition for a CDK table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\n@Directive({selector: '[cdkFooterCellDef]'})\nexport class CdkFooterCellDef implements CellDef {\n  constructor(/** @docs-private */ public template: TemplateRef<any>) {}\n}\n\n// Boilerplate for applying mixins to CdkColumnDef.\n/** @docs-private */\nclass CdkColumnDefBase {}\nconst _CdkColumnDefBase: CanStickCtor&typeof CdkColumnDefBase =\n    mixinHasStickyInput(CdkColumnDefBase);\n\n/**\n * Column definition for the CDK table.\n * Defines a set of cells available for a table column.\n */\n@Directive({\n  selector: '[cdkColumnDef]',\n  inputs: ['sticky'],\n  providers: [{provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: CdkColumnDef}],\n})\nexport class CdkColumnDef extends _CdkColumnDefBase implements CanStick {\n  /** Unique name for this column. */\n  @Input('cdkColumnDef')\n  get name(): string { return this._name; }\n  set name(name: string) { this._setNameInput(name); }\n  protected _name: string;\n\n  /**\n   * Whether this column should be sticky positioned on the end of the row. Should make sure\n   * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value\n   * has been changed.\n   */\n  @Input('stickyEnd')\n  get stickyEnd(): boolean {\n    return this._stickyEnd;\n  }\n  set stickyEnd(v: boolean) {\n    const prevValue = this._stickyEnd;\n    this._stickyEnd = coerceBooleanProperty(v);\n    this._hasStickyChanged = prevValue !== this._stickyEnd;\n  }\n  _stickyEnd: boolean = false;\n\n  /** @docs-private */\n  @ContentChild(CdkCellDef) cell: CdkCellDef;\n\n  /** @docs-private */\n  @ContentChild(CdkHeaderCellDef) headerCell: CdkHeaderCellDef;\n\n  /** @docs-private */\n  @ContentChild(CdkFooterCellDef) footerCell: CdkFooterCellDef;\n\n  /**\n   * Transformed version of the column name that can be used as part of a CSS classname. Excludes\n   * all non-alphanumeric characters and the special characters '-' and '_'. Any characters that\n   * do not match are replaced by the '-' character.\n   */\n  cssClassFriendlyName: string;\n\n  /**\n   * Class name for cells in this column.\n   * @docs-private\n   */\n  _columnCssClassName: string[];\n\n  constructor(@Inject(CDK_TABLE) @Optional() public _table?: any) {\n    super();\n  }\n\n  /**\n   * Overridable method that sets the css classes that will be added to every cell in this\n   * column.\n   * In the future, columnCssClassName will change from type string[] to string and this\n   * will set a single string value.\n   * @docs-private\n   */\n  protected _updateColumnCssClassName() {\n    this._columnCssClassName = [`cdk-column-${this.cssClassFriendlyName}`];\n  }\n\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  protected _setNameInput(value: string) {\n    // If the directive is set without a name (updated programatically), then this setter will\n    // trigger with an empty string and should not overwrite the programatically set value.\n    if (value) {\n      this._name = value;\n      this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');\n      this._updateColumnCssClassName();\n    }\n  }\n\n  static ngAcceptInputType_sticky: BooleanInput;\n  static ngAcceptInputType_stickyEnd: BooleanInput;\n}\n\n/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */\nexport class BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    // If IE 11 is dropped before we switch to setting a single class name, change to multi param\n    // with destructuring.\n    const classList = elementRef.nativeElement.classList;\n    for (const className of columnDef._columnCssClassName) {\n      classList.add(className);\n    }\n  }\n}\n\n/** Header cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-header-cell, th[cdk-header-cell]',\n  host: {\n    'class': 'cdk-header-cell',\n    'role': 'columnheader',\n  },\n})\nexport class CdkHeaderCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n\n/** Footer cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-footer-cell, td[cdk-footer-cell]',\n  host: {\n    'class': 'cdk-footer-cell',\n    'role': 'gridcell',\n  },\n})\nexport class CdkFooterCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n\n/** Cell template container that adds the right classes and role. */\n@Directive({\n  selector: 'cdk-cell, td[cdk-cell]',\n  host: {\n    'class': 'cdk-cell',\n    'role': 'gridcell',\n  },\n})\nexport class CdkCell extends BaseCdkCell {\n  constructor(columnDef: CdkColumnDef, elementRef: ElementRef) {\n    super(columnDef, elementRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, NgZone, OnDestroy, InjectionToken} from '@angular/core';\nimport {from, Subject} from 'rxjs';\nimport {take, takeUntil} from 'rxjs/operators';\n\n/**\n * @docs-private\n */\nexport class _Schedule {\n  tasks: (() => unknown)[] = [];\n  endTasks: (() => unknown)[] = [];\n}\n\n/** Injection token used to provide a coalesced style scheduler. */\nexport const _COALESCED_STYLE_SCHEDULER =\n    new InjectionToken<_CoalescedStyleScheduler>('_COALESCED_STYLE_SCHEDULER');\n\n/**\n * Allows grouping up CSSDom mutations after the current execution context.\n * This can significantly improve performance when separate consecutive functions are\n * reading from the CSSDom and then mutating it.\n *\n * @docs-private\n */\n@Injectable()\nexport class _CoalescedStyleScheduler implements OnDestroy {\n  private _currentSchedule: _Schedule|null = null;\n  private readonly _destroyed = new Subject<void>();\n\n  constructor(private readonly _ngZone: NgZone) {}\n\n  /**\n   * Schedules the specified task to run at the end of the current VM turn.\n   */\n  schedule(task: () => unknown): void {\n    this._createScheduleIfNeeded();\n\n    this._currentSchedule!.tasks.push(task);\n  }\n\n  /**\n   * Schedules the specified task to run after other scheduled tasks at the end of the current\n   * VM turn.\n   */\n  scheduleEnd(task: () => unknown): void {\n    this._createScheduleIfNeeded();\n\n    this._currentSchedule!.endTasks.push(task);\n  }\n\n  /** Prevent any further tasks from running. */\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n\n  private _createScheduleIfNeeded() {\n    if (this._currentSchedule) { return; }\n\n    this._currentSchedule = new _Schedule();\n\n    this._getScheduleObservable().pipe(\n        takeUntil(this._destroyed),\n    ).subscribe(() => {\n      while (this._currentSchedule!.tasks.length || this._currentSchedule!.endTasks.length) {\n        const schedule = this._currentSchedule!;\n\n        // Capture new tasks scheduled by the current set of tasks.\n        this._currentSchedule = new _Schedule();\n\n        for (const task of schedule.tasks) {\n          task();\n        }\n\n        for (const task of schedule.endTasks) {\n          task();\n        }\n      }\n\n      this._currentSchedule = null;\n    });\n  }\n\n  private _getScheduleObservable() {\n    // Use onStable when in the context of an ongoing change detection cycle so that we\n    // do not accidentally trigger additional cycles.\n    return this._ngZone.isStable ?\n        from(Promise.resolve(undefined)) :\n        this._ngZone.onStable.pipe(take(1));\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Directive,\n  IterableChanges,\n  IterableDiffer,\n  IterableDiffers,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  TemplateRef,\n  ViewContainerRef,\n  ViewEncapsulation,\n  Inject,\n  Optional\n} from '@angular/core';\nimport {CanStick, CanStickCtor, mixinHasStickyInput} from './can-stick';\nimport {CdkCellDef, CdkColumnDef} from './cell';\nimport {CDK_TABLE} from './tokens';\n\n/**\n * The row template that can be used by the mat-table. Should not be used outside of the\n * material library.\n */\nexport const CDK_ROW_TEMPLATE = `<ng-container cdkCellOutlet></ng-container>`;\n\n/**\n * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs\n * for changes and notifying the table.\n */\n@Directive()\nexport abstract class BaseRowDef implements OnChanges {\n  /** The columns to be displayed on this row. */\n  columns: Iterable<string>;\n\n  /** Differ used to check if any changes were made to the columns. */\n  protected _columnsDiffer: IterableDiffer<any>;\n\n  constructor(\n      /** @docs-private */ public template: TemplateRef<any>, protected _differs: IterableDiffers) {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    // Create a new columns differ if one does not yet exist. Initialize it based on initial value\n    // of the columns property or an empty array if none is provided.\n    if (!this._columnsDiffer) {\n      const columns = (changes['columns'] && changes['columns'].currentValue) || [];\n      this._columnsDiffer = this._differs.find(columns).create();\n      this._columnsDiffer.diff(columns);\n    }\n  }\n\n  /**\n   * Returns the difference between the current columns and the columns from the last diff, or null\n   * if there is no difference.\n   */\n  getColumnsDiff(): IterableChanges<any>|null {\n    return this._columnsDiffer.diff(this.columns);\n  }\n\n  /** Gets this row def's relevant cell template from the provided column def. */\n  extractCellTemplate(column: CdkColumnDef): TemplateRef<any> {\n    if (this instanceof CdkHeaderRowDef) {\n      return column.headerCell.template;\n    }\n    if (this instanceof CdkFooterRowDef) {\n      return column.footerCell.template;\n    } else {\n      return column.cell.template;\n    }\n  }\n}\n\n// Boilerplate for applying mixins to CdkHeaderRowDef.\n/** @docs-private */\nclass CdkHeaderRowDefBase extends BaseRowDef {}\nconst _CdkHeaderRowDefBase: CanStickCtor&typeof CdkHeaderRowDefBase =\n    mixinHasStickyInput(CdkHeaderRowDefBase);\n\n/**\n * Header row definition for the CDK table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\n@Directive({\n  selector: '[cdkHeaderRowDef]',\n  inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky'],\n})\nexport class CdkHeaderRowDef extends _CdkHeaderRowDefBase implements CanStick, OnChanges {\n  constructor(\n    template: TemplateRef<any>,\n    _differs: IterableDiffers,\n    @Inject(CDK_TABLE) @Optional() public _table?: any) {\n    super(template, _differs);\n  }\n\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n  }\n\n  static ngAcceptInputType_sticky: BooleanInput;\n}\n\n// Boilerplate for applying mixins to CdkFooterRowDef.\n/** @docs-private */\nclass CdkFooterRowDefBase extends BaseRowDef {}\nconst _CdkFooterRowDefBase: CanStickCtor&typeof CdkFooterRowDefBase =\n    mixinHasStickyInput(CdkFooterRowDefBase);\n\n/**\n * Footer row definition for the CDK table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\n@Directive({\n  selector: '[cdkFooterRowDef]',\n  inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky'],\n})\nexport class CdkFooterRowDef extends _CdkFooterRowDefBase implements CanStick, OnChanges {\n  constructor(\n    template: TemplateRef<any>,\n    _differs: IterableDiffers,\n    @Inject(CDK_TABLE) @Optional() public _table?: any) {\n    super(template, _differs);\n  }\n\n  // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.\n  // Explicitly define it so that the method is called as part of the Angular lifecycle.\n  ngOnChanges(changes: SimpleChanges): void {\n    super.ngOnChanges(changes);\n  }\n\n  static ngAcceptInputType_sticky: BooleanInput;\n}\n\n/**\n * Data row definition for the CDK table.\n * Captures the header row's template and other row properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\n@Directive({\n  selector: '[cdkRowDef]',\n  inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen'],\n})\nexport class CdkRowDef<T> extends BaseRowDef {\n  /**\n   * Function that should return true if this row template should be used for the provided index\n   * and row data. If left undefined, this row will be considered the default row template to use\n   * when no other when functions return true for the data.\n   * For every row, there must be at least one when function that passes or an undefined to default.\n   */\n  when: (index: number, rowData: T) => boolean;\n\n  // TODO(andrewseguin): Add an input for providing a switch function to determine\n  //   if this template should be used.\n  constructor(\n    template: TemplateRef<any>,\n    _differs: IterableDiffers,\n    @Inject(CDK_TABLE) @Optional() public _table?: any) {\n    super(template, _differs);\n  }\n}\n\n/** Context provided to the row cells when `multiTemplateDataRows` is false */\nexport interface CdkCellOutletRowContext<T> {\n  /** Data for the row that this cell is located within. */\n  $implicit?: T;\n\n  /** Index of the data object in the provided data array. */\n  index?: number;\n\n  /** Length of the number of total rows. */\n  count?: number;\n\n  /** True if this cell is contained in the first row. */\n  first?: boolean;\n\n  /** True if this cell is contained in the last row. */\n  last?: boolean;\n\n  /** True if this cell is contained in a row with an even-numbered index. */\n  even?: boolean;\n\n  /** True if this cell is contained in a row with an odd-numbered index. */\n  odd?: boolean;\n}\n\n/**\n * Context provided to the row cells when `multiTemplateDataRows` is true. This context is the same\n * as CdkCellOutletRowContext except that the single `index` value is replaced by `dataIndex` and\n * `renderIndex`.\n */\nexport interface CdkCellOutletMultiRowContext<T> {\n  /** Data for the row that this cell is located within. */\n  $implicit?: T;\n\n  /** Index of the data object in the provided data array. */\n  dataIndex?: number;\n\n  /** Index location of the rendered row that this cell is located within. */\n  renderIndex?: number;\n\n  /** Length of the number of total rows. */\n  count?: number;\n\n  /** True if this cell is contained in the first row. */\n  first?: boolean;\n\n  /** True if this cell is contained in the last row. */\n  last?: boolean;\n\n  /** True if this cell is contained in a row with an even-numbered index. */\n  even?: boolean;\n\n  /** True if this cell is contained in a row with an odd-numbered index. */\n  odd?: boolean;\n}\n\n/**\n * Outlet for rendering cells inside of a row or header row.\n * @docs-private\n */\n@Directive({selector: '[cdkCellOutlet]'})\nexport class CdkCellOutlet implements OnDestroy {\n  /** The ordered list of cells to render within this outlet's view container */\n  cells: CdkCellDef[];\n\n  /** The data context to be provided to each cell */\n  context: any;\n\n  /**\n   * Static property containing the latest constructed instance of this class.\n   * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using\n   * createEmbeddedView. After one of these components are created, this property will provide\n   * a handle to provide that component's cells and context. After init, the CdkCellOutlet will\n   * construct the cells with the provided context.\n   */\n  static mostRecentCellOutlet: CdkCellOutlet|null = null;\n\n  constructor(public _viewContainer: ViewContainerRef) {\n    CdkCellOutlet.mostRecentCellOutlet = this;\n  }\n\n  ngOnDestroy() {\n    // If this was the last outlet being rendered in the view, remove the reference\n    // from the static property after it has been destroyed to avoid leaking memory.\n    if (CdkCellOutlet.mostRecentCellOutlet === this) {\n      CdkCellOutlet.mostRecentCellOutlet = null;\n    }\n  }\n}\n\n/** Header template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'cdk-header-row, tr[cdk-header-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-header-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CdkHeaderRow {\n}\n\n\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'cdk-footer-row, tr[cdk-footer-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-footer-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CdkFooterRow {\n}\n\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\n@Component({\n  selector: 'cdk-row, tr[cdk-row]',\n  template: CDK_ROW_TEMPLATE,\n  host: {\n    'class': 'cdk-row',\n    'role': 'row',\n  },\n  // See note on CdkTable for explanation on why this uses the default change detection strategy.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n})\nexport class CdkRow {\n}\n\n/** Row that can be used to display a message when no data is shown in the table. */\n@Directive({\n  selector: 'ng-template[cdkNoDataRow]'\n})\nexport class CdkNoDataRow {\n  constructor(public templateRef: TemplateRef<any>) {}\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Directions that can be used when setting sticky positioning.\n * @docs-private\n */\nimport {Direction} from '@angular/cdk/bidi';\nimport {_CoalescedStyleScheduler} from './coalesced-style-scheduler';\n\nexport type StickyDirection = 'top' | 'bottom' | 'left' | 'right';\n\n/**\n * List of all possible directions that can be used for sticky positioning.\n * @docs-private\n */\nexport const STICKY_DIRECTIONS: StickyDirection[] = ['top', 'bottom', 'left', 'right'];\n\n\n/**\n * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.\n * @docs-private\n */\nexport class StickyStyler {\n  /**\n   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table\n   *     that uses the native `<table>` element.\n   * @param _stickCellCss The CSS class that will be applied to every row/cell that has\n   *     sticky positioning applied.\n   * @param direction The directionality context of the table (ltr/rtl); affects column positioning\n   *     by reversing left/right positions.\n   * @param _isBrowser Whether the table is currently being rendered on the server or the client.\n   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells\n   *     using inline styles. If false, it is assumed that position: sticky is included in\n   *     the component stylesheet for _stickCellCss.\n   */\n  constructor(private _isNativeHtmlTable: boolean,\n              private _stickCellCss: string,\n              public direction: Direction,\n              /**\n               * @deprecated `_coalescedStyleScheduler` parameter to become required.\n               * @breaking-change 11.0.0\n               */\n              private _coalescedStyleScheduler?: _CoalescedStyleScheduler,\n              private _isBrowser = true,\n              private readonly _needsPositionStickyOnElement = true) { }\n\n  /**\n   * Clears the sticky positioning styles from the row and its cells by resetting the `position`\n   * style, setting the zIndex to 0, and unsetting each provided sticky direction.\n   * @param rows The list of rows that should be cleared from sticking in the provided directions\n   * @param stickyDirections The directions that should no longer be set as sticky on the rows.\n   */\n  clearStickyPositioning(rows: HTMLElement[], stickyDirections: StickyDirection[]) {\n    const elementsToClear: HTMLElement[] = [];\n    for (const row of rows) {\n      // If the row isn't an element (e.g. if it's an `ng-container`),\n      // it won't have inline styles or `children` so we skip it.\n      if (row.nodeType !== row.ELEMENT_NODE) {\n        continue;\n      }\n\n      elementsToClear.push(row);\n      for (let i = 0; i < row.children.length; i++) {\n        elementsToClear.push(row.children[i] as HTMLElement);\n      }\n    }\n\n    // Coalesce with sticky row/column updates (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      for (const element of elementsToClear) {\n        this._removeStickyStyle(element, stickyDirections);\n      }\n    });\n  }\n\n  /**\n   * Applies sticky left and right positions to the cells of each row according to the sticky\n   * states of the rendered column definitions.\n   * @param rows The rows that should have its set of cells stuck according to the sticky states.\n   * @param stickyStartStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the start of the row.\n   * @param stickyEndStates A list of boolean states where each state represents whether the cell\n   *     in this index position should be stuck to the end of the row.\n   */\n  updateStickyColumns(\n      rows: HTMLElement[], stickyStartStates: boolean[], stickyEndStates: boolean[]) {\n    if (!rows.length || !this._isBrowser || !(stickyStartStates.some(state => state) ||\n        stickyEndStates.some(state => state))) {\n      return;\n    }\n\n    const firstRow = rows[0];\n    const numCells = firstRow.children.length;\n    const cellWidths: number[] = this._getCellWidths(firstRow);\n\n    const startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);\n    const endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates);\n\n    // Coalesce with sticky row updates (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      const isRtl = this.direction === 'rtl';\n      const start = isRtl ? 'right' : 'left';\n      const end = isRtl ? 'left' : 'right';\n\n      for (const row of rows) {\n        for (let i = 0; i < numCells; i++) {\n          const cell = row.children[i] as HTMLElement;\n          if (stickyStartStates[i]) {\n            this._addStickyStyle(cell, start, startPositions[i]);\n          }\n\n          if (stickyEndStates[i]) {\n            this._addStickyStyle(cell, end, endPositions[i]);\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Applies sticky positioning to the row's cells if using the native table layout, and to the\n   * row itself otherwise.\n   * @param rowsToStick The list of rows that should be stuck according to their corresponding\n   *     sticky state and to the provided top or bottom position.\n   * @param stickyStates A list of boolean states where each state represents whether the row\n   *     should be stuck in the particular top or bottom position.\n   * @param position The position direction in which the row should be stuck if that row should be\n   *     sticky.\n   *\n   */\n  stickRows(rowsToStick: HTMLElement[], stickyStates: boolean[], position: 'top' | 'bottom') {\n    // Since we can't measure the rows on the server, we can't stick the rows properly.\n    if (!this._isBrowser) {\n      return;\n    }\n\n    // If positioning the rows to the bottom, reverse their order when evaluating the sticky\n    // position such that the last row stuck will be \"bottom: 0px\" and so on. Note that the\n    // sticky states need to be reversed as well.\n    const rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;\n    const states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates;\n\n    // Measure row heights all at once before adding sticky styles to reduce layout thrashing.\n    const stickyHeights: number[] = [];\n    const elementsToStick: HTMLElement[][] = [];\n    for (let rowIndex = 0, stickyHeight = 0; rowIndex < rows.length; rowIndex++) {\n      stickyHeights[rowIndex] = stickyHeight;\n\n      if (!states[rowIndex]) {\n        continue;\n      }\n\n      const row = rows[rowIndex];\n      elementsToStick[rowIndex] = this._isNativeHtmlTable ?\n          Array.from(row.children) as HTMLElement[] : [row];\n\n      if (rowIndex !== rows.length - 1) {\n        stickyHeight += row.getBoundingClientRect().height;\n      }\n    }\n\n    // Coalesce with other sticky row updates (top/bottom), sticky columns updates\n    // (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      for (let rowIndex = 0; rowIndex < rows.length; rowIndex++) {\n        if (!states[rowIndex]) {\n          continue;\n        }\n\n        const height = stickyHeights[rowIndex];\n        for (const element of elementsToStick[rowIndex]) {\n          this._addStickyStyle(element, position, height);\n        }\n      }\n    });\n  }\n\n  /**\n   * When using the native table in Safari, sticky footer cells do not stick. The only way to stick\n   * footer rows is to apply sticky styling to the tfoot container. This should only be done if\n   * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from\n   * the tfoot element.\n   */\n  updateStickyFooterContainer(tableElement: Element, stickyStates: boolean[]) {\n    if (!this._isNativeHtmlTable) {\n      return;\n    }\n\n    const tfoot = tableElement.querySelector('tfoot')!;\n\n    // Coalesce with other sticky updates (and potentially other changes like column resize).\n    this._scheduleStyleChanges(() => {\n      if (stickyStates.some(state => !state)) {\n        this._removeStickyStyle(tfoot, ['bottom']);\n      } else {\n        this._addStickyStyle(tfoot, 'bottom', 0);\n      }\n    });\n  }\n\n  /**\n   * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating\n   * the zIndex, removing each of the provided sticky directions, and removing the\n   * sticky position if there are no more directions.\n   */\n  _removeStickyStyle(element: HTMLElement, stickyDirections: StickyDirection[]) {\n    for (const dir of stickyDirections) {\n      element.style[dir] = '';\n    }\n\n    // If the element no longer has any more sticky directions, remove sticky positioning and\n    // the sticky CSS class.\n    // Short-circuit checking element.style[dir] for stickyDirections as they\n    // were already removed above.\n    const hasDirection = STICKY_DIRECTIONS.some(dir =>\n        stickyDirections.indexOf(dir) === -1 && element.style[dir]);\n    if (hasDirection) {\n      element.style.zIndex = this._getCalculatedZIndex(element);\n    } else {\n      // When not hasDirection, _getCalculatedZIndex will always return ''.\n      element.style.zIndex = '';\n      if (this._needsPositionStickyOnElement) {\n        element.style.position = '';\n      }\n      element.classList.remove(this._stickCellCss);\n    }\n  }\n\n  /**\n   * Adds the sticky styling to the element by adding the sticky style class, changing position\n   * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky\n   * direction and value.\n   */\n  _addStickyStyle(element: HTMLElement, dir: StickyDirection, dirValue: number) {\n    element.classList.add(this._stickCellCss);\n    element.style[dir] = `${dirValue}px`;\n    element.style.zIndex = this._getCalculatedZIndex(element);\n    if (this._needsPositionStickyOnElement) {\n      element.style.cssText += 'position: -webkit-sticky; position: sticky; ';\n    }\n  }\n\n  /**\n   * Calculate what the z-index should be for the element, depending on what directions (top,\n   * bottom, left, right) have been set. It should be true that elements with a top direction\n   * should have the highest index since these are elements like a table header. If any of those\n   * elements are also sticky in another direction, then they should appear above other elements\n   * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements\n   * (e.g. footer rows) should then be next in the ordering such that they are below the header\n   * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)\n   * should minimally increment so that they are above non-sticky elements but below top and bottom\n   * elements.\n   */\n  _getCalculatedZIndex(element: HTMLElement): string {\n    const zIndexIncrements = {\n      top: 100,\n      bottom: 10,\n      left: 1,\n      right: 1,\n    };\n\n    let zIndex = 0;\n    // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,\n    // loses the array generic type in the `for of`. But we *also* have to use `Array` because\n    // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`\n    for (const dir of STICKY_DIRECTIONS as Iterable<StickyDirection> & StickyDirection[]) {\n      if (element.style[dir]) {\n        zIndex += zIndexIncrements[dir];\n      }\n    }\n\n    return zIndex ? `${zIndex}` : '';\n  }\n\n  /** Gets the widths for each cell in the provided row. */\n  _getCellWidths(row: HTMLElement): number[] {\n    const cellWidths: number[] = [];\n    const firstRowCells = row.children;\n    for (let i = 0; i < firstRowCells.length; i++) {\n      let cell: HTMLElement = firstRowCells[i] as HTMLElement;\n      cellWidths.push(cell.getBoundingClientRect().width);\n    }\n\n    return cellWidths;\n  }\n\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyStartColumnPositions(widths: number[], stickyStates: boolean[]): number[] {\n    const positions: number[] = [];\n    let nextPosition = 0;\n\n    for (let i = 0; i < widths.length; i++) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n\n    return positions;\n  }\n\n  /**\n   * Determines the left and right positions of each sticky column cell, which will be the\n   * accumulation of all sticky column cell widths to the left and right, respectively.\n   * Non-sticky cells do not need to have a value set since their positions will not be applied.\n   */\n  _getStickyEndColumnPositions(widths: number[], stickyStates: boolean[]): number[] {\n    const positions: number[] = [];\n    let nextPosition = 0;\n\n    for (let i = widths.length; i > 0; i--) {\n      if (stickyStates[i]) {\n        positions[i] = nextPosition;\n        nextPosition += widths[i];\n      }\n    }\n\n    return positions;\n  }\n\n  /**\n   * Schedules styles to be applied when the style scheduler deems appropriate.\n   * @breaking-change 11.0.0 This method can be removed in favor of calling\n   * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.\n   */\n  private _scheduleStyleChanges(changes: () => void) {\n    if (this._coalescedStyleScheduler) {\n      this._coalescedStyleScheduler.schedule(changes);\n    } else {\n      changes();\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Returns an error to be thrown when attempting to find an unexisting column.\n * @param id Id whose lookup failed.\n * @docs-private\n */\nexport function getTableUnknownColumnError(id: string) {\n  return Error(`Could not find column with id \"${id}\".`);\n}\n\n/**\n * Returns an error to be thrown when two column definitions have the same name.\n * @docs-private\n */\nexport function getTableDuplicateColumnNameError(name: string) {\n  return Error(`Duplicate column definition name provided: \"${name}\".`);\n}\n\n/**\n * Returns an error to be thrown when there are multiple rows that are missing a when function.\n * @docs-private\n */\nexport function getTableMultipleDefaultRowDefsError() {\n  return Error(`There can only be one default row without a when predicate function.`);\n}\n\n/**\n * Returns an error to be thrown when there are no matching row defs for a particular set of data.\n * @docs-private\n */\nexport function getTableMissingMatchingRowDefError(data: any) {\n  return Error(`Could not find a matching row definition for the` +\n      `provided row data: ${JSON.stringify(data)}`);\n}\n\n/**\n * Returns an error to be thrown when there is no row definitions present in the content.\n * @docs-private\n */\nexport function getTableMissingRowDefsError() {\n  return Error('Missing definitions for header, footer, and row; ' +\n      'cannot determine which columns should be rendered.');\n}\n\n/**\n * Returns an error to be thrown when the data source does not match the compatible types.\n * @docs-private\n */\nexport function getTableUnknownDataSourceError() {\n  return Error(`Provided data source did not match an array, Observable, or DataSource`);\n}\n\n/**\n * Returns an error to be thrown when the text column cannot find a parent table to inject.\n * @docs-private\n */\nexport function getTableTextColumnMissingParentTableError() {\n  return Error(`Text column could not find a parent table for registration.`);\n}\n\n/**\n * Returns an error to be thrown when a table text column doesn't have a name.\n * @docs-private\n */\nexport function getTableTextColumnMissingNameError() {\n  return Error(`Table text column must have a name.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  CollectionViewer,\n  DataSource,\n  _DisposeViewRepeaterStrategy,\n  isDataSource,\n  _VIEW_REPEATER_STRATEGY,\n  _ViewRepeater,\n  _ViewRepeaterItemChange,\n  _ViewRepeaterItemInsertArgs,\n  _ViewRepeaterOperation,\n} from '@angular/cdk/collections';\nimport {Platform} from '@angular/cdk/platform';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterContentChecked,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  IterableChangeRecord,\n  IterableDiffer,\n  IterableDiffers,\n  OnDestroy,\n  OnInit,\n  Optional,\n  QueryList,\n  TemplateRef,\n  TrackByFunction,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  BehaviorSubject,\n  isObservable,\n  Observable,\n  of as observableOf,\n  Subject,\n  Subscription,\n} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {CdkColumnDef} from './cell';\nimport {_CoalescedStyleScheduler, _COALESCED_STYLE_SCHEDULER} from './coalesced-style-scheduler';\nimport {\n  BaseRowDef,\n  CdkCellOutlet,\n  CdkCellOutletMultiRowContext,\n  CdkCellOutletRowContext,\n  CdkFooterRowDef,\n  CdkHeaderRowDef,\n  CdkNoDataRow,\n  CdkRowDef\n} from './row';\nimport {StickyStyler} from './sticky-styler';\nimport {\n  getTableDuplicateColumnNameError,\n  getTableMissingMatchingRowDefError,\n  getTableMissingRowDefsError,\n  getTableMultipleDefaultRowDefsError,\n  getTableUnknownColumnError,\n  getTableUnknownDataSourceError\n} from './table-errors';\nimport {CDK_TABLE} from './tokens';\n\n/** Interface used to provide an outlet for rows to be inserted into. */\nexport interface RowOutlet {\n  viewContainer: ViewContainerRef;\n}\n\n/**\n * Union of the types that can be set as the data source for a `CdkTable`.\n * @docs-private\n */\ntype CdkTableDataSourceInput<T> =\n    DataSource<T>|Observable<ReadonlyArray<T>|T[]>|ReadonlyArray<T>|T[];\n\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert data rows.\n * @docs-private\n */\n@Directive({selector: '[rowOutlet]'})\nexport class DataRowOutlet implements RowOutlet {\n  constructor(public viewContainer: ViewContainerRef, public elementRef: ElementRef) {}\n}\n\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the header.\n * @docs-private\n */\n@Directive({selector: '[headerRowOutlet]'})\nexport class HeaderRowOutlet implements RowOutlet {\n  constructor(public viewContainer: ViewContainerRef, public elementRef: ElementRef) {}\n}\n\n/**\n * Provides a handle for the table to grab the view container's ng-container to insert the footer.\n * @docs-private\n */\n@Directive({selector: '[footerRowOutlet]'})\nexport class FooterRowOutlet implements RowOutlet {\n  constructor(public viewContainer: ViewContainerRef, public elementRef: ElementRef) {}\n}\n\n/**\n * Provides a handle for the table to grab the view\n * container's ng-container to insert the no data row.\n * @docs-private\n */\n@Directive({selector: '[noDataRowOutlet]'})\nexport class NoDataRowOutlet implements RowOutlet {\n  constructor(public viewContainer: ViewContainerRef, public elementRef: ElementRef) {}\n}\n\n/**\n * The table template that can be used by the mat-table. Should not be used outside of the\n * material library.\n * @docs-private\n */\nexport const CDK_TABLE_TEMPLATE =\n    // Note that according to MDN, the `caption` element has to be projected as the **first**\n    // element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption\n    `\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n`;\n\n/**\n * Interface used to conveniently type the possible context interfaces for the render row.\n * @docs-private\n */\nexport interface RowContext<T> extends CdkCellOutletMultiRowContext<T>,\n                                       CdkCellOutletRowContext<T> {}\n\n/**\n * Class used to conveniently type the embedded view ref for rows with a context.\n * @docs-private\n */\nabstract class RowViewRef<T> extends EmbeddedViewRef<RowContext<T>> {}\n\n/**\n * Set of properties that represents the identity of a single rendered row.\n *\n * When the table needs to determine the list of rows to render, it will do so by iterating through\n * each data object and evaluating its list of row templates to display (when multiTemplateDataRows\n * is false, there is only one template per data object). For each pair of data object and row\n * template, a `RenderRow` is added to the list of rows to render. If the data object and row\n * template pair has already been rendered, the previously used `RenderRow` is added; else a new\n * `RenderRow` is * created. Once the list is complete and all data objects have been itereated\n * through, a diff is performed to determine the changes that need to be made to the rendered rows.\n *\n * @docs-private\n */\nexport interface RenderRow<T> {\n  data: T;\n  dataIndex: number;\n  rowDef: CdkRowDef<T>;\n}\n\n/**\n * A data table that can render a header row, data rows, and a footer row.\n * Uses the dataSource input to determine the data to be rendered. The data can be provided either\n * as a data array, an Observable stream that emits the data array to render, or a DataSource with a\n * connect function that will return an Observable stream that emits the data array to render.\n */\n@Component({\n  selector: 'cdk-table, table[cdk-table]',\n  exportAs: 'cdkTable',\n  template: CDK_TABLE_TEMPLATE,\n  host: {\n    'class': 'cdk-table',\n  },\n  encapsulation: ViewEncapsulation.None,\n  // The \"OnPush\" status for the `MatTable` component is effectively a noop, so we are removing it.\n  // The view for `MatTable` consists entirely of templates declared in other views. As they are\n  // declared elsewhere, they are checked when their declaration points are checked.\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  providers: [\n    {provide: CDK_TABLE, useExisting: CdkTable},\n    {provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy},\n    {provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler},\n  ]\n})\nexport class CdkTable<T> implements AfterContentChecked, CollectionViewer, OnDestroy, OnInit {\n  private _document: Document;\n\n  /** Latest data provided by the data source. */\n  protected _data: T[]|ReadonlyArray<T>;\n\n  /** Subject that emits when the component has been destroyed. */\n  private _onDestroy = new Subject<void>();\n\n  /** List of the rendered rows as identified by their `RenderRow` object. */\n  private _renderRows: RenderRow<T>[];\n\n  /** Subscription that listens for the data provided by the data source. */\n  private _renderChangeSubscription: Subscription|null;\n\n  /**\n   * Map of all the user's defined columns (header, data, and footer cell template) identified by\n   * name. Collection populated by the column definitions gathered by `ContentChildren` as well as\n   * any custom column definitions added to `_customColumnDefs`.\n   */\n  private _columnDefsByName = new Map<string, CdkColumnDef>();\n\n  /**\n   * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n   * using `ContentChildren` as well as any custom row definitions added to `_customRowDefs`.\n   */\n  private _rowDefs: CdkRowDef<T>[];\n\n  /**\n   * Set of all header row definitions that can be used by this table. Populated by the rows\n   * gathered by using `ContentChildren` as well as any custom row definitions added to\n   * `_customHeaderRowDefs`.\n   */\n  private _headerRowDefs: CdkHeaderRowDef[];\n\n  /**\n   * Set of all row definitions that can be used by this table. Populated by the rows gathered by\n   * using `ContentChildren` as well as any custom row definitions added to\n   * `_customFooterRowDefs`.\n   */\n  private _footerRowDefs: CdkFooterRowDef[];\n\n  /** Differ used to find the changes in the data provided by the data source. */\n  private _dataDiffer: IterableDiffer<RenderRow<T>>;\n\n  /** Stores the row definition that does not have a when predicate. */\n  private _defaultRowDef: CdkRowDef<T>|null;\n\n  /**\n   * Column definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * column definitions as *its* content child.\n   */\n  private _customColumnDefs = new Set<CdkColumnDef>();\n\n  /**\n   * Data row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * built-in data rows as *its* content child.\n   */\n  private _customRowDefs = new Set<CdkRowDef<T>>();\n\n  /**\n   * Header row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has\n   * built-in header rows as *its* content child.\n   */\n  private _customHeaderRowDefs = new Set<CdkHeaderRowDef>();\n\n  /**\n   * Footer row definitions that were defined outside of the direct content children of the table.\n   * These will be defined when, e.g., creating a wrapper around the cdkTable that has a\n   * built-in footer row as *its* content child.\n   */\n  private _customFooterRowDefs = new Set<CdkFooterRowDef>();\n\n  /**\n   * Whether the header row definition has been changed. Triggers an update to the header row after\n   * content is checked. Initialized as true so that the table renders the initial set of rows.\n   */\n  private _headerRowDefChanged = true;\n\n  /**\n   * Whether the footer row definition has been changed. Triggers an update to the footer row after\n   * content is checked. Initialized as true so that the table renders the initial set of rows.\n   */\n  private _footerRowDefChanged = true;\n\n  /**\n   * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing\n   * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with\n   * the cached `RenderRow` objects when possible, the row identity is preserved when the data\n   * and row template matches, which allows the `IterableDiffer` to check rows by reference\n   * and understand which rows are added/moved/removed.\n   *\n   * Implemented as a map of maps where the first key is the `data: T` object and the second is the\n   * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that\n   * contains an array of created pairs. The array is necessary to handle cases where the data\n   * array contains multiple duplicate data objects and each instantiated `RenderRow` must be\n   * stored.\n   */\n  private _cachedRenderRowsMap = new Map<T, WeakMap<CdkRowDef<T>, RenderRow<T>[]>>();\n\n  /** Whether the table is applied to a native `<table>`. */\n  private _isNativeHtmlTable: boolean;\n\n  /**\n   * Utility class that is responsible for applying the appropriate sticky positioning styles to\n   * the table's rows and cells.\n   */\n  private _stickyStyler: StickyStyler;\n\n  /**\n   * CSS class added to any row or cell that has sticky positioning applied. May be overriden by\n   * table subclasses.\n   */\n  protected stickyCssClass: string = 'cdk-table-sticky';\n\n  /**\n   * Whether to manually add positon: sticky to all sticky cell elements. Not needed if\n   * the position is set in a selector associated with the value of stickyCssClass. May be\n   * overridden by table subclasses\n   */\n  protected needsPositionStickyOnElement = true;\n\n  /** Whether the no data row is currently showing anything. */\n  private _isShowingNoDataRow = false;\n\n  /**\n   * Tracking function that will be used to check the differences in data changes. Used similarly\n   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data\n   * relative to the function to know if a row should be added/removed/moved.\n   * Accepts a function that takes two parameters, `index` and `item`.\n   */\n  @Input()\n  get trackBy(): TrackByFunction<T> {\n    return this._trackByFn;\n  }\n  set trackBy(fn: TrackByFunction<T>) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {\n      console.warn(`trackBy must be a function, but received ${JSON.stringify(fn)}.`);\n    }\n    this._trackByFn = fn;\n  }\n  private _trackByFn: TrackByFunction<T>;\n\n  /**\n   * The table's source of data, which can be provided in three ways (in order of complexity):\n   *   - Simple data array (each object represents one table row)\n   *   - Stream that emits a data array each time the array changes\n   *   - `DataSource` object that implements the connect/disconnect interface.\n   *\n   * If a data array is provided, the table must be notified when the array's objects are\n   * added, removed, or moved. This can be done by calling the `renderRows()` function which will\n   * render the diff since the last table render. If the data array reference is changed, the table\n   * will automatically trigger an update to the rows.\n   *\n   * When providing an Observable stream, the table will trigger an update automatically when the\n   * stream emits a new array of data.\n   *\n   * Finally, when providing a `DataSource` object, the table will use the Observable stream\n   * provided by the connect function and trigger updates when that stream emits new data array\n   * values. During the table's ngOnDestroy or when the data source is removed from the table, the\n   * table will call the DataSource's `disconnect` function (may be useful for cleaning up any\n   * subscriptions registered during the connect process).\n   */\n  @Input()\n  get dataSource(): CdkTableDataSourceInput<T> {\n    return this._dataSource;\n  }\n  set dataSource(dataSource: CdkTableDataSourceInput<T>) {\n    if (this._dataSource !== dataSource) {\n      this._switchDataSource(dataSource);\n    }\n  }\n  private _dataSource: CdkTableDataSourceInput<T>;\n\n  /**\n   * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'\n   * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each\n   * dataobject will render the first row that evaluates its when predicate to true, in the order\n   * defined in the table, or otherwise the default row which does not have a when predicate.\n   */\n  @Input()\n  get multiTemplateDataRows(): boolean {\n    return this._multiTemplateDataRows;\n  }\n  set multiTemplateDataRows(v: boolean) {\n    this._multiTemplateDataRows = coerceBooleanProperty(v);\n\n    // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),\n    // this setter will be invoked before the row outlet has been defined hence the null check.\n    if (this._rowOutlet && this._rowOutlet.viewContainer.length) {\n      this._forceRenderDataRows();\n      this.updateStickyColumnStyles();\n    }\n  }\n  _multiTemplateDataRows: boolean = false;\n\n  // TODO(andrewseguin): Remove max value as the end index\n  //   and instead calculate the view on init and scroll.\n  /**\n   * Stream containing the latest information on what rows are being displayed on screen.\n   * Can be used by the data source to as a heuristic of what data should be provided.\n   *\n   * @docs-private\n   */\n  viewChange: BehaviorSubject<{start: number, end: number}> =\n      new BehaviorSubject<{start: number, end: number}>({start: 0, end: Number.MAX_VALUE});\n\n  // Outlets in the table's template where the header, data rows, and footer will be inserted.\n  @ViewChild(DataRowOutlet, {static: true}) _rowOutlet: DataRowOutlet;\n  @ViewChild(HeaderRowOutlet, {static: true}) _headerRowOutlet: HeaderRowOutlet;\n  @ViewChild(FooterRowOutlet, {static: true}) _footerRowOutlet: FooterRowOutlet;\n  @ViewChild(NoDataRowOutlet, {static: true}) _noDataRowOutlet: NoDataRowOutlet;\n\n  /**\n   * The column definitions provided by the user that contain what the header, data, and footer\n   * cells should render for each column.\n   */\n  @ContentChildren(CdkColumnDef, {descendants: true}) _contentColumnDefs: QueryList<CdkColumnDef>;\n\n  /** Set of data row definitions that were provided to the table as content children. */\n  @ContentChildren(CdkRowDef, {descendants: true}) _contentRowDefs: QueryList<CdkRowDef<T>>;\n\n  /** Set of header row definitions that were provided to the table as content children. */\n  @ContentChildren(CdkHeaderRowDef, {\n    descendants: true\n  }) _contentHeaderRowDefs: QueryList<CdkHeaderRowDef>;\n\n  /** Set of footer row definitions that were provided to the table as content children. */\n  @ContentChildren(CdkFooterRowDef, {\n    descendants: true\n  }) _contentFooterRowDefs: QueryList<CdkFooterRowDef>;\n\n  /** Row definition that will only be rendered if there's no data in the table. */\n  @ContentChild(CdkNoDataRow) _noDataRow: CdkNoDataRow;\n\n  constructor(\n      protected readonly _differs: IterableDiffers,\n      protected readonly _changeDetectorRef: ChangeDetectorRef,\n      protected readonly _elementRef: ElementRef, @Attribute('role') role: string,\n      @Optional() protected readonly _dir: Directionality, @Inject(DOCUMENT) _document: any,\n      private _platform: Platform,\n\n      /**\n       * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`\n       *    parameters to become required.\n       * @breaking-change 11.0.0\n       */\n      @Optional() @Inject(_VIEW_REPEATER_STRATEGY)\n        protected readonly _viewRepeater?: _ViewRepeater<T, RenderRow<T>, RowContext<T>>,\n      @Optional() @Inject(_COALESCED_STYLE_SCHEDULER)\n        protected readonly _coalescedStyleScheduler?: _CoalescedStyleScheduler) {\n    if (!role) {\n      this._elementRef.nativeElement.setAttribute('role', 'grid');\n    }\n\n    this._document = _document;\n    this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';\n  }\n\n  ngOnInit() {\n    this._setupStickyStyler();\n\n    if (this._isNativeHtmlTable) {\n      this._applyNativeTableSections();\n    }\n\n    // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If\n    // the user has provided a custom trackBy, return the result of that function as evaluated\n    // with the values of the `RenderRow`'s data and index.\n    this._dataDiffer = this._differs.find([]).create((_i: number, dataRow: RenderRow<T>) => {\n      return this.trackBy ? this.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;\n    });\n  }\n\n  ngAfterContentChecked() {\n    // Cache the row and column definitions gathered by ContentChildren and programmatic injection.\n    this._cacheRowDefs();\n    this._cacheColumnDefs();\n\n    // Make sure that the user has at least added header, footer, or data row def.\n    if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingRowDefsError();\n    }\n\n    // Render updates if the list of columns have been changed for the header, row, or footer defs.\n    const columnsChanged = this._renderUpdatedColumns();\n    const stickyColumnStyleUpdateNeeded =\n            columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged;\n\n    // If the header row definition has been changed, trigger a render to the header row.\n    if (this._headerRowDefChanged) {\n      this._forceRenderHeaderRows();\n      this._headerRowDefChanged = false;\n    }\n\n    // If the footer row definition has been changed, trigger a render to the footer row.\n    if (this._footerRowDefChanged) {\n      this._forceRenderFooterRows();\n      this._footerRowDefChanged = false;\n    }\n\n    // If there is a data source and row definitions, connect to the data source unless a\n    // connection has already been made.\n    if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {\n      this._observeRenderChanges();\n    } else if (stickyColumnStyleUpdateNeeded) {\n      // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being\n      // called when it row data arrives. Otherwise, we need to call it proactively.\n      this.updateStickyColumnStyles();\n    }\n\n    this._checkStickyStates();\n  }\n\n  ngOnDestroy() {\n    this._rowOutlet.viewContainer.clear();\n    this._noDataRowOutlet.viewContainer.clear();\n    this._headerRowOutlet.viewContainer.clear();\n    this._footerRowOutlet.viewContainer.clear();\n\n    this._cachedRenderRowsMap.clear();\n\n    this._onDestroy.next();\n    this._onDestroy.complete();\n\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n  }\n\n  /**\n   * Renders rows based on the table's latest set of data, which was either provided directly as an\n   * input or retrieved through an Observable stream (directly or from a DataSource).\n   * Checks for differences in the data since the last diff to perform only the necessary\n   * changes (add/remove/move rows).\n   *\n   * If the table's data source is a DataSource or Observable, this will be invoked automatically\n   * each time the provided Observable stream emits a new data array. Otherwise if your data is\n   * an array, this function will need to be called to render any changes.\n   */\n  renderRows() {\n    this._renderRows = this._getAllRenderRows();\n    const changes = this._dataDiffer.diff(this._renderRows);\n    if (!changes) {\n      this._updateNoDataRow();\n      return;\n    }\n    const viewContainer = this._rowOutlet.viewContainer;\n\n    // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the\n    // `else` clause once `_viewRepeater` is turned into a required parameter.\n    if (this._viewRepeater) {\n      this._viewRepeater.applyChanges(\n          changes,\n          viewContainer,\n          (record: IterableChangeRecord<RenderRow<T>>,\n           _adjustedPreviousIndex: number|null,\n           currentIndex: number|null) => this._getEmbeddedViewArgs(record.item, currentIndex!),\n          (record) => record.item.data,\n          (change: _ViewRepeaterItemChange<RenderRow<T>, RowContext<T>>) => {\n            if (change.operation === _ViewRepeaterOperation.INSERTED && change.context) {\n              this._renderCellTemplateForItem(change.record.item.rowDef, change.context);\n            }\n          });\n    } else {\n      changes.forEachOperation(\n        (record: IterableChangeRecord<RenderRow<T>>, prevIndex: number|null,\n         currentIndex: number|null) => {\n          if (record.previousIndex == null) {\n            const renderRow = record.item;\n            const rowDef = renderRow.rowDef;\n            const context: RowContext<T> = {$implicit: renderRow.data};\n            this._renderRow(this._rowOutlet, rowDef, currentIndex!, context);\n          } else if (currentIndex == null) {\n            viewContainer.remove(prevIndex!);\n          } else {\n            const view = <RowViewRef<T>>viewContainer.get(prevIndex!);\n            viewContainer.move(view!, currentIndex);\n          }\n        });\n    }\n\n    // Update the meta context of a row's context data (index, count, first, last, ...)\n    this._updateRowIndexContext();\n\n    // Update rows that did not get added/removed/moved but may have had their identity changed,\n    // e.g. if trackBy matched data on some property but the actual data reference changed.\n    changes.forEachIdentityChange((record: IterableChangeRecord<RenderRow<T>>) => {\n      const rowView = <RowViewRef<T>>viewContainer.get(record.currentIndex!);\n      rowView.context.$implicit = record.item.data;\n    });\n\n    this._updateNoDataRow();\n    this.updateStickyColumnStyles();\n  }\n\n  /** Adds a column definition that was not included as part of the content children. */\n  addColumnDef(columnDef: CdkColumnDef) {\n    this._customColumnDefs.add(columnDef);\n  }\n\n  /** Removes a column definition that was not included as part of the content children. */\n  removeColumnDef(columnDef: CdkColumnDef) {\n    this._customColumnDefs.delete(columnDef);\n  }\n\n  /** Adds a row definition that was not included as part of the content children. */\n  addRowDef(rowDef: CdkRowDef<T>) {\n    this._customRowDefs.add(rowDef);\n  }\n\n  /** Removes a row definition that was not included as part of the content children. */\n  removeRowDef(rowDef: CdkRowDef<T>) {\n    this._customRowDefs.delete(rowDef);\n  }\n\n  /** Adds a header row definition that was not included as part of the content children. */\n  addHeaderRowDef(headerRowDef: CdkHeaderRowDef) {\n    this._customHeaderRowDefs.add(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n\n  /** Removes a header row definition that was not included as part of the content children. */\n  removeHeaderRowDef(headerRowDef: CdkHeaderRowDef) {\n    this._customHeaderRowDefs.delete(headerRowDef);\n    this._headerRowDefChanged = true;\n  }\n\n  /** Adds a footer row definition that was not included as part of the content children. */\n  addFooterRowDef(footerRowDef: CdkFooterRowDef) {\n    this._customFooterRowDefs.add(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n\n  /** Removes a footer row definition that was not included as part of the content children. */\n  removeFooterRowDef(footerRowDef: CdkFooterRowDef) {\n    this._customFooterRowDefs.delete(footerRowDef);\n    this._footerRowDefChanged = true;\n  }\n\n  /**\n   * Updates the header sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is\n   * automatically called when the header row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyHeaderRowStyles(): void {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    const tableElement = this._elementRef.nativeElement as HTMLElement;\n\n    // Hide the thead element if there are no header rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    const thead = tableElement.querySelector('thead');\n    if (thead) {\n      thead.style.display = headerRows.length ? '' : 'none';\n    }\n\n    const stickyStates = this._headerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(headerRows, ['top']);\n    this._stickyStyler.stickRows(headerRows, stickyStates, 'top');\n\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._headerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n\n  /**\n   * Updates the footer sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is\n   * automatically called when the footer row changes its displayed set of columns, or if its\n   * sticky input changes. May be called manually for cases where the cell content changes outside\n   * of these events.\n   */\n  updateStickyFooterRowStyles(): void {\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n    const tableElement = this._elementRef.nativeElement as HTMLElement;\n\n    // Hide the tfoot element if there are no footer rows. This is necessary to satisfy\n    // overzealous a11y checkers that fail because the `rowgroup` element does not contain\n    // required child `row`.\n    const tfoot = tableElement.querySelector('tfoot');\n    if (tfoot) {\n      tfoot.style.display = footerRows.length ? '' : 'none';\n    }\n\n    const stickyStates = this._footerRowDefs.map(def => def.sticky);\n    this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);\n    this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');\n    this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates);\n\n    // Reset the dirty state of the sticky input change since it has been used.\n    this._footerRowDefs.forEach(def => def.resetStickyChanged());\n  }\n\n  /**\n   * Updates the column sticky styles. First resets all applied styles with respect to the cells\n   * sticking to the left and right. Then sticky styles are added for the left and right according\n   * to the column definitions for each cell in each row. This is automatically called when\n   * the data source provides a new set of data or when a column definition changes its sticky\n   * input. May be called manually for cases where the cell content changes outside of these events.\n   */\n  updateStickyColumnStyles() {\n    const headerRows = this._getRenderedRows(this._headerRowOutlet);\n    const dataRows = this._getRenderedRows(this._rowOutlet);\n    const footerRows = this._getRenderedRows(this._footerRowOutlet);\n\n    // Clear the left and right positioning from all columns in the table across all rows since\n    // sticky columns span across all table sections (header, data, footer)\n    this._stickyStyler.clearStickyPositioning(\n        [...headerRows, ...dataRows, ...footerRows], ['left', 'right']);\n\n    // Update the sticky styles for each header row depending on the def's sticky state\n    headerRows.forEach((headerRow, i) => {\n      this._addStickyColumnStyles([headerRow], this._headerRowDefs[i]);\n    });\n\n    // Update the sticky styles for each data row depending on its def's sticky state\n    this._rowDefs.forEach(rowDef => {\n      // Collect all the rows rendered with this row definition.\n      const rows: HTMLElement[] = [];\n      for (let i = 0; i < dataRows.length; i++) {\n        if (this._renderRows[i].rowDef === rowDef) {\n          rows.push(dataRows[i]);\n        }\n      }\n\n      this._addStickyColumnStyles(rows, rowDef);\n    });\n\n    // Update the sticky styles for each footer row depending on the def's sticky state\n    footerRows.forEach((footerRow, i) => {\n      this._addStickyColumnStyles([footerRow], this._footerRowDefs[i]);\n    });\n\n    // Reset the dirty state of the sticky input change since it has been used.\n    Array.from(this._columnDefsByName.values()).forEach(def => def.resetStickyChanged());\n  }\n\n  /**\n   * Get the list of RenderRow objects to render according to the current list of data and defined\n   * row definitions. If the previous list already contained a particular pair, it should be reused\n   * so that the differ equates their references.\n   */\n  private _getAllRenderRows(): RenderRow<T>[] {\n    const renderRows: RenderRow<T>[] = [];\n\n    // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the\n    // new cache while unused ones can be picked up by garbage collection.\n    const prevCachedRenderRows = this._cachedRenderRowsMap;\n    this._cachedRenderRowsMap = new Map();\n\n    // For each data object, get the list of rows that should be rendered, represented by the\n    // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.\n    for (let i = 0; i < this._data.length; i++) {\n      let data = this._data[i];\n      const renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));\n\n      if (!this._cachedRenderRowsMap.has(data)) {\n        this._cachedRenderRowsMap.set(data, new WeakMap());\n      }\n\n      for (let j = 0; j < renderRowsForData.length; j++) {\n        let renderRow = renderRowsForData[j];\n\n        const cache = this._cachedRenderRowsMap.get(renderRow.data)!;\n        if (cache.has(renderRow.rowDef)) {\n          cache.get(renderRow.rowDef)!.push(renderRow);\n        } else {\n          cache.set(renderRow.rowDef, [renderRow]);\n        }\n        renderRows.push(renderRow);\n      }\n    }\n\n    return renderRows;\n  }\n\n  /**\n   * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that\n   * should be rendered for this data. Reuses the cached RenderRow objects if they match the same\n   * `(T, CdkRowDef)` pair.\n   */\n  private _getRenderRowsForData(\n      data: T, dataIndex: number, cache?: WeakMap<CdkRowDef<T>, RenderRow<T>[]>): RenderRow<T>[] {\n    const rowDefs = this._getRowDefs(data, dataIndex);\n\n    return rowDefs.map(rowDef => {\n      const cachedRenderRows = (cache && cache.has(rowDef)) ? cache.get(rowDef)! : [];\n      if (cachedRenderRows.length) {\n        const dataRow = cachedRenderRows.shift()!;\n        dataRow.dataIndex = dataIndex;\n        return dataRow;\n      } else {\n        return {data, rowDef, dataIndex};\n      }\n    });\n  }\n\n  /** Update the map containing the content's column definitions. */\n  private _cacheColumnDefs() {\n    this._columnDefsByName.clear();\n\n    const columnDefs = mergeArrayAndSet(\n        this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);\n    columnDefs.forEach(columnDef => {\n      if (this._columnDefsByName.has(columnDef.name) &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableDuplicateColumnNameError(columnDef.name);\n      }\n      this._columnDefsByName.set(columnDef.name, columnDef);\n    });\n  }\n\n  /** Update the list of all available row definitions that can be used. */\n  private _cacheRowDefs() {\n    this._headerRowDefs = mergeArrayAndSet(\n        this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);\n    this._footerRowDefs = mergeArrayAndSet(\n        this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);\n    this._rowDefs = mergeArrayAndSet(\n        this._getOwnDefs(this._contentRowDefs), this._customRowDefs);\n\n    // After all row definitions are determined, find the row definition to be considered default.\n    const defaultRowDefs = this._rowDefs.filter(def => !def.when);\n    if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 &&\n        (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMultipleDefaultRowDefsError();\n    }\n    this._defaultRowDef = defaultRowDefs[0];\n  }\n\n  /**\n   * Check if the header, data, or footer rows have changed what columns they want to display or\n   * whether the sticky states have changed for the header or footer. If there is a diff, then\n   * re-render that section.\n   */\n  private _renderUpdatedColumns(): boolean {\n    const columnsDiffReducer = (acc: boolean, def: BaseRowDef) => acc || !!def.getColumnsDiff();\n\n    // Force re-render data rows if the list of column definitions have changed.\n    const dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);\n    if (dataColumnsChanged) {\n      this._forceRenderDataRows();\n    }\n\n    // Force re-render header/footer rows if the list of column definitions have changed.\n    const headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);\n    if (headerColumnsChanged) {\n      this._forceRenderHeaderRows();\n    }\n\n    const footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);\n    if (footerColumnsChanged) {\n      this._forceRenderFooterRows();\n    }\n\n    return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;\n  }\n\n  /**\n   * Switch to the provided data source by resetting the data and unsubscribing from the current\n   * render change subscription if one exists. If the data source is null, interpret this by\n   * clearing the row outlet. Otherwise start listening for new data.\n   */\n  private _switchDataSource(dataSource: CdkTableDataSourceInput<T>) {\n    this._data = [];\n\n    if (isDataSource(this.dataSource)) {\n      this.dataSource.disconnect(this);\n    }\n\n    // Stop listening for data from the previous data source.\n    if (this._renderChangeSubscription) {\n      this._renderChangeSubscription.unsubscribe();\n      this._renderChangeSubscription = null;\n    }\n\n    if (!dataSource) {\n      if (this._dataDiffer) {\n        this._dataDiffer.diff([]);\n      }\n      this._rowOutlet.viewContainer.clear();\n    }\n\n    this._dataSource = dataSource;\n  }\n\n  /** Set up a subscription for the data provided by the data source. */\n  private _observeRenderChanges() {\n    // If no data source has been set, there is nothing to observe for changes.\n    if (!this.dataSource) {\n      return;\n    }\n\n    let dataStream: Observable<T[]|ReadonlyArray<T>>|undefined;\n\n    if (isDataSource(this.dataSource)) {\n      dataStream = this.dataSource.connect(this);\n    } else if (isObservable(this.dataSource)) {\n      dataStream = this.dataSource;\n    } else if (Array.isArray(this.dataSource)) {\n      dataStream = observableOf(this.dataSource);\n    }\n\n    if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableUnknownDataSourceError();\n    }\n\n    this._renderChangeSubscription = dataStream!.pipe(takeUntil(this._onDestroy))\n      .subscribe(data => {\n        this._data = data || [];\n        this.renderRows();\n      });\n  }\n\n  /**\n   * Clears any existing content in the header row outlet and creates a new embedded view\n   * in the outlet using the header row definition.\n   */\n  private _forceRenderHeaderRows() {\n    // Clear the header row outlet if any content exists.\n    if (this._headerRowOutlet.viewContainer.length > 0) {\n      this._headerRowOutlet.viewContainer.clear();\n    }\n\n    this._headerRowDefs.forEach((def, i) => this._renderRow(this._headerRowOutlet, def, i));\n    this.updateStickyHeaderRowStyles();\n  }\n\n  /**\n   * Clears any existing content in the footer row outlet and creates a new embedded view\n   * in the outlet using the footer row definition.\n   */\n  private _forceRenderFooterRows() {\n    // Clear the footer row outlet if any content exists.\n    if (this._footerRowOutlet.viewContainer.length > 0) {\n      this._footerRowOutlet.viewContainer.clear();\n    }\n\n    this._footerRowDefs.forEach((def, i) => this._renderRow(this._footerRowOutlet, def, i));\n    this.updateStickyFooterRowStyles();\n  }\n\n  /** Adds the sticky column styles for the rows according to the columns' stick states. */\n  private _addStickyColumnStyles(rows: HTMLElement[], rowDef: BaseRowDef) {\n    const columnDefs = Array.from(rowDef.columns || []).map(columnName => {\n      const columnDef = this._columnDefsByName.get(columnName);\n      if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnName);\n      }\n      return columnDef!;\n    });\n    const stickyStartStates = columnDefs.map(columnDef => columnDef.sticky);\n    const stickyEndStates = columnDefs.map(columnDef => columnDef.stickyEnd);\n    this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);\n  }\n\n  /** Gets the list of rows that have been rendered in the row outlet. */\n  _getRenderedRows(rowOutlet: RowOutlet): HTMLElement[] {\n    const renderedRows: HTMLElement[] = [];\n\n    for (let i = 0; i < rowOutlet.viewContainer.length; i++) {\n      const viewRef = (rowOutlet.viewContainer.get(i)! as EmbeddedViewRef<any>);\n      renderedRows.push(viewRef.rootNodes[0]);\n    }\n\n    return renderedRows;\n  }\n\n  /**\n   * Get the matching row definitions that should be used for this row data. If there is only\n   * one row definition, it is returned. Otherwise, find the row definitions that has a when\n   * predicate that returns true with the data. If none return true, return the default row\n   * definition.\n   */\n  _getRowDefs(data: T, dataIndex: number): CdkRowDef<T>[] {\n    if (this._rowDefs.length == 1) {\n      return [this._rowDefs[0]];\n    }\n\n    let rowDefs: CdkRowDef<T>[] = [];\n    if (this.multiTemplateDataRows) {\n      rowDefs = this._rowDefs.filter(def => !def.when || def.when(dataIndex, data));\n    } else {\n      let rowDef =\n          this._rowDefs.find(def => def.when && def.when(dataIndex, data)) || this._defaultRowDef;\n      if (rowDef) {\n        rowDefs.push(rowDef);\n      }\n    }\n\n    if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableMissingMatchingRowDefError(data);\n    }\n\n    return rowDefs;\n  }\n\n\n  private _getEmbeddedViewArgs(renderRow: RenderRow<T>,\n                               index: number): _ViewRepeaterItemInsertArgs<RowContext<T>> {\n    const rowDef = renderRow.rowDef;\n    const context: RowContext<T> = {$implicit: renderRow.data};\n    return {\n      templateRef: rowDef.template,\n      context,\n      index,\n    };\n  }\n\n  /**\n   * Creates a new row template in the outlet and fills it with the set of cell templates.\n   * Optionally takes a context to provide to the row and cells, as well as an optional index\n   * of where to place the new row template in the outlet.\n   */\n  private _renderRow(\n      outlet: RowOutlet, rowDef: BaseRowDef, index: number,\n      context: RowContext<T> = {}): EmbeddedViewRef<RowContext<T>> {\n    // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView\n    const view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);\n    this._renderCellTemplateForItem(rowDef, context);\n    return view;\n  }\n\n  private _renderCellTemplateForItem(rowDef: BaseRowDef, context: RowContext<T>) {\n    for (let cellTemplate of this._getCellTemplates(rowDef)) {\n      if (CdkCellOutlet.mostRecentCellOutlet) {\n        CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);\n      }\n    }\n\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /**\n   * Updates the index-related context for each row to reflect any changes in the index of the rows,\n   * e.g. first/last/even/odd.\n   */\n  private _updateRowIndexContext() {\n    const viewContainer = this._rowOutlet.viewContainer;\n    for (let renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {\n      const viewRef = viewContainer.get(renderIndex) as RowViewRef<T>;\n      const context = viewRef.context as RowContext<T>;\n      context.count = count;\n      context.first = renderIndex === 0;\n      context.last = renderIndex === count - 1;\n      context.even = renderIndex % 2 === 0;\n      context.odd = !context.even;\n\n      if (this.multiTemplateDataRows) {\n        context.dataIndex = this._renderRows[renderIndex].dataIndex;\n        context.renderIndex = renderIndex;\n      } else {\n        context.index = this._renderRows[renderIndex].dataIndex;\n      }\n    }\n  }\n\n  /** Gets the column definitions for the provided row def. */\n  private _getCellTemplates(rowDef: BaseRowDef): TemplateRef<any>[] {\n    if (!rowDef || !rowDef.columns) {\n      return [];\n    }\n    return Array.from(rowDef.columns, columnId => {\n      const column = this._columnDefsByName.get(columnId);\n\n      if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw getTableUnknownColumnError(columnId);\n      }\n\n      return rowDef.extractCellTemplate(column!);\n    });\n  }\n\n  /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */\n  private _applyNativeTableSections() {\n    const documentFragment = this._document.createDocumentFragment();\n    const sections = [\n      {tag: 'thead', outlets: [this._headerRowOutlet]},\n      {tag: 'tbody', outlets: [this._rowOutlet, this._noDataRowOutlet]},\n      {tag: 'tfoot', outlets: [this._footerRowOutlet]},\n    ];\n\n    for (const section of sections) {\n      const element = this._document.createElement(section.tag);\n      element.setAttribute('role', 'rowgroup');\n\n      for (const outlet of section.outlets) {\n        element.appendChild(outlet.elementRef.nativeElement);\n      }\n\n      documentFragment.appendChild(element);\n    }\n\n    // Use a DocumentFragment so we don't hit the DOM on each iteration.\n    this._elementRef.nativeElement.appendChild(documentFragment);\n  }\n\n  /**\n   * Forces a re-render of the data rows. Should be called in cases where there has been an input\n   * change that affects the evaluation of which rows should be rendered, e.g. toggling\n   * `multiTemplateDataRows` or adding/removing row definitions.\n   */\n  private _forceRenderDataRows() {\n    this._dataDiffer.diff([]);\n    this._rowOutlet.viewContainer.clear();\n    this.renderRows();\n  }\n\n  /**\n   * Checks if there has been a change in sticky states since last check and applies the correct\n   * sticky styles. Since checking resets the \"dirty\" state, this should only be performed once\n   * during a change detection and after the inputs are settled (after content check).\n   */\n  private _checkStickyStates() {\n    const stickyCheckReducer = (acc: boolean,\n                                d: CdkHeaderRowDef|CdkFooterRowDef|CdkColumnDef) => {\n      return acc || d.hasStickyChanged();\n    };\n\n    // Note that the check needs to occur for every definition since it notifies the definition\n    // that it can reset its dirty state. Using another operator like `some` may short-circuit\n    // remaining definitions and leave them in an unchecked state.\n\n    if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyHeaderRowStyles();\n    }\n\n    if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {\n      this.updateStickyFooterRowStyles();\n    }\n\n    if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {\n      this.updateStickyColumnStyles();\n    }\n  }\n\n  /**\n   * Creates the sticky styler that will be used for sticky rows and columns. Listens\n   * for directionality changes and provides the latest direction to the styler. Re-applies column\n   * stickiness when directionality changes.\n   */\n  private _setupStickyStyler() {\n    const direction: Direction = this._dir ? this._dir.value : 'ltr';\n    this._stickyStyler = new StickyStyler(\n        this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler,\n        this._platform.isBrowser, this.needsPositionStickyOnElement);\n    (this._dir ? this._dir.change : observableOf<Direction>())\n    .pipe(takeUntil(this._onDestroy))\n    .subscribe(value => {\n      this._stickyStyler.direction = value;\n      this.updateStickyColumnStyles();\n    });\n  }\n\n  /** Filters definitions that belong to this table from a QueryList. */\n  private _getOwnDefs<I extends {_table?: any}>(items: QueryList<I>): I[] {\n    return items.filter(item => !item._table || item._table === this);\n  }\n\n  /** Creates or removes the no data row, depending on whether any data is being shown. */\n  private _updateNoDataRow() {\n    if (this._noDataRow) {\n      const shouldShow = this._rowOutlet.viewContainer.length === 0;\n\n      if (shouldShow !== this._isShowingNoDataRow) {\n        const container = this._noDataRowOutlet.viewContainer;\n        shouldShow ? container.createEmbeddedView(this._noDataRow.templateRef) : container.clear();\n        this._isShowingNoDataRow = shouldShow;\n      }\n    }\n  }\n\n  static ngAcceptInputType_multiTemplateDataRows: BooleanInput;\n}\n\n/** Utility function that gets a merged list of the entries in an array and values of a Set. */\nfunction mergeArrayAndSet<T>(array: T[], set: Set<T>): T[] {\n  return array.concat(Array.from(set));\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  Inject,\n  Input,\n  OnDestroy,\n  OnInit,\n  Optional,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {CdkCellDef, CdkColumnDef, CdkHeaderCellDef} from './cell';\nimport {CdkTable} from './table';\nimport {\n  getTableTextColumnMissingParentTableError,\n  getTableTextColumnMissingNameError,\n} from './table-errors';\nimport {TEXT_COLUMN_OPTIONS, TextColumnOptions} from './tokens';\n\n\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\n@Component({\n  selector: 'cdk-text-column',\n  template: `\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n  encapsulation: ViewEncapsulation.None,\n  // Change detection is intentionally not set to OnPush. This component's template will be provided\n  // to the table to be inserted into its view. This is problematic when change detection runs since\n  // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n  // mean's the template in the table's view will not have the updated value (and in fact will cause\n  // an ExpressionChangedAfterItHasBeenCheckedError).\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class CdkTextColumn<T> implements OnDestroy, OnInit {\n  /** Column name that should be used to reference this column. */\n  @Input()\n  get name(): string {\n    return this._name;\n  }\n  set name(name: string) {\n    this._name = name;\n\n    // With Ivy, inputs can be initialized before static query results are\n    // available. In that case, we defer the synchronization until \"ngOnInit\" fires.\n    this._syncColumnDefName();\n  }\n  _name: string;\n\n  /**\n   * Text label that should be used for the column header. If this property is not\n   * set, the header text will default to the column name with its first letter capitalized.\n   */\n  @Input() headerText: string;\n\n  /**\n   * Accessor function to retrieve the data rendered for each cell. If this\n   * property is not set, the data cells will render the value found in the data's property matching\n   * the column's name. For example, if the column is named `id`, then the rendered value will be\n   * value defined by the data's `id` property.\n   */\n  @Input() dataAccessor: (data: T, name: string) => string;\n\n  /** Alignment of the cell values. */\n  @Input() justify: 'start'|'end' = 'start';\n\n  /** @docs-private */\n  @ViewChild(CdkColumnDef, {static: true}) columnDef: CdkColumnDef;\n\n  /**\n   * The column cell is provided to the column during `ngOnInit` with a static query.\n   * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n   * column definition was provided in the same view as the table, which is not the case with this\n   * component.\n   * @docs-private\n   */\n  @ViewChild(CdkCellDef, {static: true}) cell: CdkCellDef;\n\n  /**\n   * The column headerCell is provided to the column during `ngOnInit` with a static query.\n   * Normally, this will be retrieved by the column using `ContentChild`, but that assumes the\n   * column definition was provided in the same view as the table, which is not the case with this\n   * component.\n   * @docs-private\n   */\n  @ViewChild(CdkHeaderCellDef, {static: true}) headerCell: CdkHeaderCellDef;\n\n  constructor(\n      // `CdkTextColumn` is always requiring a table, but we just assert it manually\n      // for better error reporting.\n      // tslint:disable-next-line: lightweight-tokens\n      @Optional() private _table: CdkTable<T>,\n      @Optional() @Inject(TEXT_COLUMN_OPTIONS) private _options: TextColumnOptions<T>) {\n    this._options = _options || {};\n  }\n\n  ngOnInit() {\n    this._syncColumnDefName();\n\n    if (this.headerText === undefined) {\n      this.headerText = this._createDefaultHeaderText();\n    }\n\n    if (!this.dataAccessor) {\n      this.dataAccessor =\n          this._options.defaultDataAccessor || ((data: T, name: string) => (data as any)[name]);\n    }\n\n    if (this._table) {\n      // Provide the cell and headerCell directly to the table with the static `ViewChild` query,\n      // since the columnDef will not pick up its content by the time the table finishes checking\n      // its content and initializing the rows.\n      this.columnDef.cell = this.cell;\n      this.columnDef.headerCell = this.headerCell;\n      this._table.addColumnDef(this.columnDef);\n    } else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      throw getTableTextColumnMissingParentTableError();\n    }\n  }\n\n  ngOnDestroy() {\n    if (this._table) {\n      this._table.removeColumnDef(this.columnDef);\n    }\n  }\n\n  /**\n   * Creates a default header text. Use the options' header text transformation function if one\n   * has been provided. Otherwise simply capitalize the column name.\n   */\n  _createDefaultHeaderText() {\n    const name = this.name;\n\n    if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getTableTextColumnMissingNameError();\n    }\n\n    if (this._options && this._options.defaultHeaderTextTransform) {\n      return this._options.defaultHeaderTextTransform(name);\n    }\n\n    return name[0].toUpperCase() + name.slice(1);\n  }\n\n  /** Synchronizes the column definition name with the text column name. */\n  private _syncColumnDefName() {\n    if (this.columnDef) {\n      this.columnDef.name = this.name;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\nimport {HeaderRowOutlet, DataRowOutlet, CdkTable, FooterRowOutlet, NoDataRowOutlet} from './table';\nimport {\n  CdkCellOutlet, CdkFooterRow, CdkFooterRowDef, CdkHeaderRow, CdkHeaderRowDef, CdkRow,\n  CdkRowDef,\n  CdkNoDataRow\n} from './row';\nimport {\n  CdkColumnDef, CdkHeaderCellDef, CdkHeaderCell, CdkCell, CdkCellDef,\n  CdkFooterCellDef, CdkFooterCell\n} from './cell';\nimport {CdkTextColumn} from './text-column';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\n\nconst EXPORTED_DECLARATIONS = [\n  CdkTable,\n  CdkRowDef,\n  CdkCellDef,\n  CdkCellOutlet,\n  CdkHeaderCellDef,\n  CdkFooterCellDef,\n  CdkColumnDef,\n  CdkCell,\n  CdkRow,\n  CdkHeaderCell,\n  CdkFooterCell,\n  CdkHeaderRow,\n  CdkHeaderRowDef,\n  CdkFooterRow,\n  CdkFooterRowDef,\n  DataRowOutlet,\n  HeaderRowOutlet,\n  FooterRowOutlet,\n  CdkTextColumn,\n  CdkNoDataRow,\n  NoDataRowOutlet,\n];\n\n@NgModule({\n  exports: EXPORTED_DECLARATIONS,\n  declarations: EXPORTED_DECLARATIONS,\n  imports: [ScrollingModule]\n})\nexport class CdkTableModule { }\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './table';\nexport * from './cell';\nexport * from './coalesced-style-scheduler';\nexport * from './row';\nexport * from './table-module';\nexport * from './sticky-styler';\nexport * from './can-stick';\nexport * from './text-column';\nexport * from './tokens';\n\n/** Re-export DataSource for a more intuitive experience for users of just the table. */\nexport {DataSource} from '@angular/cdk/collections';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","export class LogDto {\r\n\tid?: number;\r\n\tlevel?: string;\r\n\texceptionMessage?: string;\r\n\ttimeStamp?: Date\r\n\tuser?: string;\r\n\tvalue?: string;\r\n\ttype?: string;\r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n// Version token that will be replaced by the prepack command\r\n/** The version of the SignalR client. */\r\n\r\nexport const VERSION: string = \"0.0.0-DEV_BUILD\";\r\n/** @private */\r\nexport class Arg {\r\n    public static isRequired(val: any, name: string): void {\r\n        if (val === null || val === undefined) {\r\n            throw new Error(`The '${name}' argument is required.`);\r\n        }\r\n    }\r\n    public static isNotEmpty(val: string, name: string): void {\r\n        if (!val || val.match(/^\\s*$/)) {\r\n            throw new Error(`The '${name}' argument should not be empty.`);\r\n        }\r\n    }\r\n\r\n    public static isIn(val: any, values: any, name: string): void {\r\n        // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.\r\n        if (!(val in values)) {\r\n            throw new Error(`Unknown ${name} value: ${val}.`);\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class Platform {\r\n    // react-native has a window but no document so we should check both\r\n    public static get isBrowser(): boolean {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"object\";\r\n    }\r\n\r\n    // WebWorkers don't have a window object so the isBrowser check would fail\r\n    public static get isWebWorker(): boolean {\r\n        return !Platform.isNode && typeof self === \"object\" && \"importScripts\" in self;\r\n    }\r\n\r\n    // react-native has a window but no document\r\n    static get isReactNative(): boolean {\r\n        return !Platform.isNode && typeof window === \"object\" && typeof window.document === \"undefined\";\r\n    }\r\n\r\n    // Node apps shouldn't have a window object, but WebWorkers don't either\r\n    // so we need to check for both WebWorker and window\r\n    public static get isNode(): boolean {\r\n        return typeof process !== \"undefined\" && process.release && process.release.name === \"node\";\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getDataDetail(data: any, includeContent: boolean): string {\r\n    let detail = \"\";\r\n    if (isArrayBuffer(data)) {\r\n        detail = `Binary data of length ${data.byteLength}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${formatArrayBuffer(data)}'`;\r\n        }\r\n    } else if (typeof data === \"string\") {\r\n        detail = `String data of length ${data.length}`;\r\n        if (includeContent) {\r\n            detail += `. Content: '${data}'`;\r\n        }\r\n    }\r\n    return detail;\r\n}\r\n\r\n/** @private */\r\nexport function formatArrayBuffer(data: ArrayBuffer): string {\r\n    const view = new Uint8Array(data);\r\n\r\n    // Uint8Array.map only supports returning another Uint8Array?\r\n    let str = \"\";\r\n    view.forEach((num) => {\r\n        const pad = num < 16 ? \"0\" : \"\";\r\n        str += `0x${pad}${num.toString(16)} `;\r\n    });\r\n\r\n    // Trim of trailing space.\r\n    return str.substr(0, str.length - 1);\r\n}\r\n\r\n// Also in signalr-protocol-msgpack/Utils.ts\r\n/** @private */\r\nexport function isArrayBuffer(val: any): val is ArrayBuffer {\r\n    return val && typeof ArrayBuffer !== \"undefined\" &&\r\n        (val instanceof ArrayBuffer ||\r\n            // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof\r\n            (val.constructor && val.constructor.name === \"ArrayBuffer\"));\r\n}\r\n\r\n/** @private */\r\nexport async function sendMessage(logger: ILogger, transportName: string, httpClient: HttpClient, url: string,\r\n                                  content: string | ArrayBuffer, options: IHttpConnectionOptions): Promise<void> {\r\n    const headers: {[k: string]: string} = {};\r\n\r\n    const [name, value] = getUserAgentHeader();\r\n    headers[name] = value;\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) sending data. ${getDataDetail(content, options.logMessageContent!)}.`);\r\n\r\n    const responseType = isArrayBuffer(content) ? \"arraybuffer\" : \"text\";\r\n    const response = await httpClient.post(url, {\r\n        content,\r\n        headers: { ...headers, ...options.headers},\r\n        responseType,\r\n        timeout: options.timeout,\r\n        withCredentials: options.withCredentials,\r\n    });\r\n\r\n    logger.log(LogLevel.Trace, `(${transportName} transport) request complete. Response status: ${response.statusCode}.`);\r\n}\r\n\r\n/** @private */\r\nexport function createLogger(logger?: ILogger | LogLevel): ILogger {\r\n    if (logger === undefined) {\r\n        return new ConsoleLogger(LogLevel.Information);\r\n    }\r\n\r\n    if (logger === null) {\r\n        return NullLogger.instance;\r\n    }\r\n\r\n    if ((logger as ILogger).log !== undefined) {\r\n        return logger as ILogger;\r\n    }\r\n\r\n    return new ConsoleLogger(logger as LogLevel);\r\n}\r\n\r\n/** @private */\r\nexport class SubjectSubscription<T> implements ISubscription<T> {\r\n    private _subject: Subject<T>;\r\n    private _observer: IStreamSubscriber<T>;\r\n\r\n    constructor(subject: Subject<T>, observer: IStreamSubscriber<T>) {\r\n        this._subject = subject;\r\n        this._observer = observer;\r\n    }\r\n\r\n    public dispose(): void {\r\n        const index: number = this._subject.observers.indexOf(this._observer);\r\n        if (index > -1) {\r\n            this._subject.observers.splice(index, 1);\r\n        }\r\n\r\n        if (this._subject.observers.length === 0 && this._subject.cancelCallback) {\r\n            this._subject.cancelCallback().catch((_) => { });\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport class ConsoleLogger implements ILogger {\r\n    private readonly _minLevel: LogLevel;\r\n\r\n    // Public for testing purposes.\r\n    public out: {\r\n        error(message: any): void,\r\n        warn(message: any): void,\r\n        info(message: any): void,\r\n        log(message: any): void,\r\n    };\r\n\r\n    constructor(minimumLogLevel: LogLevel) {\r\n        this._minLevel = minimumLogLevel;\r\n        this.out = console;\r\n    }\r\n\r\n    public log(logLevel: LogLevel, message: string): void {\r\n        if (logLevel >= this._minLevel) {\r\n            const msg = `[${new Date().toISOString()}] ${LogLevel[logLevel]}: ${message}`;\r\n            switch (logLevel) {\r\n                case LogLevel.Critical:\r\n                case LogLevel.Error:\r\n                    this.out.error(msg);\r\n                    break;\r\n                case LogLevel.Warning:\r\n                    this.out.warn(msg);\r\n                    break;\r\n                case LogLevel.Information:\r\n                    this.out.info(msg);\r\n                    break;\r\n                default:\r\n                    // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug\r\n                    this.out.log(msg);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getUserAgentHeader(): [string, string] {\r\n    let userAgentHeaderName = \"X-SignalR-User-Agent\";\r\n    if (Platform.isNode) {\r\n        userAgentHeaderName = \"User-Agent\";\r\n    }\r\n    return [ userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion()) ];\r\n}\r\n\r\n/** @private */\r\nexport function constructUserAgent(version: string, os: string, runtime: string, runtimeVersion: string | undefined): string {\r\n    // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])\r\n    let userAgent: string = \"Microsoft SignalR/\";\r\n\r\n    const majorAndMinor = version.split(\".\");\r\n    userAgent += `${majorAndMinor[0]}.${majorAndMinor[1]}`;\r\n    userAgent += ` (${version}; `;\r\n\r\n    if (os && os !== \"\") {\r\n        userAgent += `${os}; `;\r\n    } else {\r\n        userAgent += \"Unknown OS; \";\r\n    }\r\n\r\n    userAgent += `${runtime}`;\r\n\r\n    if (runtimeVersion) {\r\n        userAgent += `; ${runtimeVersion}`;\r\n    } else {\r\n        userAgent += \"; Unknown Runtime Version\";\r\n    }\r\n\r\n    userAgent += \")\";\r\n    return userAgent;\r\n}\r\n\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getOsName(): string {\r\n    if (Platform.isNode) {\r\n        switch (process.platform) {\r\n            case \"win32\":\r\n                return \"Windows NT\";\r\n            case \"darwin\":\r\n                return \"macOS\";\r\n            case \"linux\":\r\n                return \"Linux\";\r\n            default:\r\n                return process.platform;\r\n        }\r\n    } else {\r\n        return \"\";\r\n    }\r\n}\r\n\r\n// eslint-disable-next-line spaced-comment\r\n/*#__PURE__*/ function getRuntimeVersion(): string | undefined {\r\n    if (Platform.isNode) {\r\n        return process.versions.node;\r\n    }\r\n    return undefined;\r\n}\r\n\r\nfunction getRuntime(): string {\r\n    if (Platform.isNode) {\r\n        return \"NodeJS\";\r\n    } else {\r\n        return \"Browser\";\r\n    }\r\n}\r\n\r\n/** @private */\r\nexport function getErrorString(e: any): string {\r\n    if (e.stack) {\r\n        return e.stack;\r\n    } else if (e.message) {\r\n        return e.message;\r\n    }\r\n    return `${e}`;\r\n}\r\n\r\n/** @private */\r\nexport function getGlobalThis(): unknown {\r\n    // globalThis is semi-new and not available in Node until v12\r\n    if (typeof globalThis !== \"undefined\") {\r\n        return globalThis;\r\n    }\r\n    if (typeof self !== \"undefined\") {\r\n        return self;\r\n    }\r\n    if (typeof window !== \"undefined\") {\r\n        return window;\r\n    }\r\n    if (typeof global !== \"undefined\") {\r\n        return global;\r\n    }\r\n    throw new Error(\"could not find global\");\r\n}\r\n","import { Component, Inject } from '@angular/core';\r\nimport { FormControl, Validators } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { MultiVisiters } from '../../../admin/multiVisiters/models/MultiVisiters';\r\nimport { Visit } from '../../../admin/visit/models/Visit';\r\n\r\ninterface RejectDialogData {\r\n  visit: Visit;\r\n  multiVisiters: MultiVisiters[];\r\n}\r\n\r\n@Component({\r\n  selector: 'app-reject-dialog',\r\n  templateUrl: './reject-dialog.component.html',\r\n  styleUrls: ['./reject-dialog.component.css']\r\n})\r\nexport class RejectDialogComponent {\r\n  rejectReason = new FormControl('', [Validators.required, Validators.minLength(3)]);\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<RejectDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: RejectDialogData\r\n  ) {\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onConfirm(): void {\r\n    if (this.rejectReason.valid) {\r\n      const result = {\r\n        visitId: this.data.visit.id,\r\n        reason: this.rejectReason.value\r\n      };\r\n      this.dialogRef.close(result);\r\n    }\r\n  }\r\n\r\n  getAllVisitorNames(): string[] {\r\n    const allVisitors: string[] = [];\r\n    \r\n    // Ana ziyaretçiyi ekle\r\n    if (this.data.visit?.visitorFullName) {\r\n      allVisitors.push(this.data.visit.visitorFullName);\r\n    }\r\n    \r\n    // MultiVisiters'teki ziyaretçileri ekle\r\n    if (this.data.multiVisiters && this.data.multiVisiters.length > 0) {\r\n      allVisitors.push(...this.data.multiVisiters.map(mv => mv.visitorFullName));\r\n    }\r\n    \r\n    return allVisitors;\r\n  }\r\n}","export default \"<div class=\\\"dialog-container\\\">\\r\\n  <!-- Header -->\\r\\n  <div class=\\\"dialog-header\\\">\\r\\n    <mat-icon class=\\\"warning-icon\\\">warning</mat-icon>\\r\\n    <h2 mat-dialog-title>Ziyaret Reddetme</h2>\\r\\n  </div>\\r\\n\\r\\n  <mat-divider></mat-divider>\\r\\n\\r\\n  <div mat-dialog-content>\\r\\n    <div class=\\\"visit-info\\\">\\r\\n      <!-- Ziyaretçiler Bölümü -->\\r\\n      <div class=\\\"info-section visitors-section\\\">\\r\\n        <div class=\\\"section-header\\\">\\r\\n          <mat-icon class=\\\"section-icon\\\">people</mat-icon>\\r\\n          <h3>Ziyaretçiler <span class=\\\"visitor-count\\\">({{getAllVisitorNames().length}} Kişi)</span></h3>\\r\\n        </div>\\r\\n        <div class=\\\"visitor-chips-container\\\">\\r\\n          <mat-chip-list>\\r\\n            <mat-chip *ngFor=\\\"let visitorName of getAllVisitorNames(); let i = index\\\" \\r\\n                     [class.primary-visitor-chip]=\\\"i === 0\\\"\\r\\n                     [class.secondary-visitor-chip]=\\\"i !== 0\\\"\\r\\n                     class=\\\"visitor-chip\\\">\\r\\n              <mat-icon class=\\\"chip-icon\\\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\\r\\n              {{visitorName}}\\r\\n            </mat-chip>\\r\\n          </mat-chip-list>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Ziyaret Türü Bölümü -->\\r\\n      <div class=\\\"info-section visit-type-section\\\">\\r\\n        <div class=\\\"section-header\\\">\\r\\n          <mat-icon class=\\\"section-icon\\\">\\r\\n            {{data.visit.vehicleEntry ? 'directions_car' : 'directions_walk'}}\\r\\n          </mat-icon>\\r\\n          <h3>Ziyaret Türü</h3>\\r\\n        </div>\\r\\n        <div class=\\\"visit-type-info\\\">\\r\\n          <mat-chip-list>\\r\\n            <mat-chip [class.vehicle-chip]=\\\"data.visit.vehicleEntry\\\" \\r\\n                     [class.pedestrian-chip]=\\\"!data.visit.vehicleEntry\\\"\\r\\n                     class=\\\"type-chip\\\">\\r\\n              <mat-icon class=\\\"chip-icon\\\">\\r\\n                {{data.visit.vehicleEntry ? 'directions_car' : 'directions_walk'}}\\r\\n              </mat-icon>\\r\\n              {{data.visit.vehicleEntry ? 'Araçlı Ziyaret' : 'Yaya Ziyaret'}}\\r\\n            </mat-chip>\\r\\n            <mat-chip *ngIf=\\\"data.visit.vehicleEntry\\\" \\r\\n                     class=\\\"plate-chip\\\">\\r\\n              <mat-icon class=\\\"chip-icon\\\">pin</mat-icon>\\r\\n              {{data.visit.visitorLicensePlate || 'Plaka Girilmemiş'}}\\r\\n            </mat-chip>\\r\\n          </mat-chip-list>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <!-- Red Sebebi Bölümü -->\\r\\n      <div class=\\\"info-section reason-section\\\">\\r\\n        <div class=\\\"section-header\\\">\\r\\n          <mat-icon class=\\\"section-icon\\\">report_problem</mat-icon>\\r\\n          <h3>Red Sebebi</h3>\\r\\n        </div>\\r\\n        <mat-form-field appearance=\\\"outline\\\" class=\\\"reason-field\\\">\\r\\n          <mat-label>Lütfen red sebebini yazınız</mat-label>\\r\\n          <textarea matInput \\r\\n                    [formControl]=\\\"rejectReason\\\" \\r\\n                    placeholder=\\\"Red sebebini buraya yazın...\\\"\\r\\n                    rows=\\\"4\\\"></textarea>\\r\\n          <mat-error *ngIf=\\\"rejectReason.hasError('required')\\\">\\r\\n            Red sebebi zorunludur\\r\\n          </mat-error>\\r\\n          <mat-error *ngIf=\\\"rejectReason.hasError('minlength')\\\">\\r\\n            Red sebebi en az 3 karakter olmalıdır\\r\\n          </mat-error>\\r\\n        </mat-form-field>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <!-- Footer -->\\r\\n  <div mat-dialog-actions class=\\\"dialog-actions\\\">\\r\\n    <button mat-stroked-button \\r\\n            (click)=\\\"onCancel()\\\"\\r\\n            class=\\\"cancel-button\\\">\\r\\n      <mat-icon>close</mat-icon>\\r\\n      İptal\\r\\n    </button>\\r\\n    <button mat-raised-button \\r\\n            color=\\\"warn\\\" \\r\\n            (click)=\\\"onConfirm()\\\"\\r\\n            [disabled]=\\\"!rejectReason.valid\\\"\\r\\n            class=\\\"reject-button\\\">\\r\\n      <mat-icon>block</mat-icon>\\r\\n      Reddet\\r\\n    </button>\\r\\n  </div>\\r\\n</div>\";","export class OperationClaim {\r\n    id: number;\r\n    name:string;\r\n    alias: string;\r\n    description: string;\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n  private apiUrl = 'http://banu-pass-api:5000/api/v1/Languages/codes';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getLanguageCodes(): Observable<any> {\r\n    return this.http.get(this.apiUrl);\r\n  }\r\n} ","export default \".pagination-container {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n  }\\r\\n  \\r\\n  .pagination {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    margin: 0;\\r\\n    padding: 0;\\r\\n    \\r\\n    .page-item {\\r\\n      margin: 0 2px;\\r\\n      \\r\\n      &.active .page-link {\\r\\n        background-color: #f44336;\\r\\n        border-color: #f44336;\\r\\n        color: white;\\r\\n      }\\r\\n      \\r\\n      &.disabled .page-link {\\r\\n        color: #6c757d;\\r\\n        pointer-events: none;\\r\\n        background-color: #fff;\\r\\n        border-color: #dee2e6;\\r\\n      }\\r\\n    }\\r\\n  \\r\\n    .page-link {\\r\\n      padding: 8px 12px;\\r\\n      color: #f44336;\\r\\n      background-color: #fff;\\r\\n      border: 1px solid #dee2e6;\\r\\n      cursor: pointer;\\r\\n      transition: all 0.3s ease;\\r\\n  \\r\\n      &:hover {\\r\\n        background-color: #f8f9fa;\\r\\n        border-color: #f44336;\\r\\n      }\\r\\n  \\r\\n      &.dots {\\r\\n        cursor: default;\\r\\n        background-color: transparent;\\r\\n        border: none;\\r\\n        color: #6c757d;\\r\\n        \\r\\n        &:hover {\\r\\n          background-color: transparent;\\r\\n          border: none;\\r\\n        }\\r\\n      }\\r\\n    }\\r\\n  }\\r\\n  \\r\\n  .float-right {\\r\\n    float: right;\\r\\n  }\\r\\n  \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhbnUtbG9ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFNBQVM7SUFDVCxVQUFVOztJQUVWO01BQ0UsYUFBYTs7TUFFYjtRQUNFLHlCQUF5QjtRQUN6QixxQkFBcUI7UUFDckIsWUFBWTtNQUNkOztNQUVBO1FBQ0UsY0FBYztRQUNkLG9CQUFvQjtRQUNwQixzQkFBc0I7UUFDdEIscUJBQXFCO01BQ3ZCO0lBQ0Y7O0lBRUE7TUFDRSxpQkFBaUI7TUFDakIsY0FBYztNQUNkLHNCQUFzQjtNQUN0Qix5QkFBeUI7TUFDekIsZUFBZTtNQUNmLHlCQUF5Qjs7TUFFekI7UUFDRSx5QkFBeUI7UUFDekIscUJBQXFCO01BQ3ZCOztNQUVBO1FBQ0UsZUFBZTtRQUNmLDZCQUE2QjtRQUM3QixZQUFZO1FBQ1osY0FBYzs7UUFFZDtVQUNFLDZCQUE2QjtVQUM3QixZQUFZO1FBQ2Q7TUFDRjtJQUNGO0VBQ0Y7O0VBRUE7SUFDRSxZQUFZO0VBQ2QiLCJmaWxlIjoiYmFudS1sb2dzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnaW5hdGlvbi1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAucGFnaW5hdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIFxyXG4gICAgLnBhZ2UtaXRlbSB7XHJcbiAgICAgIG1hcmdpbjogMCAycHg7XHJcbiAgICAgIFxyXG4gICAgICAmLmFjdGl2ZSAucGFnZS1saW5rIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogI2Y0NDMzNjtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICYuZGlzYWJsZWQgLnBhZ2UtbGluayB7XHJcbiAgICAgICAgY29sb3I6ICM2Yzc1N2Q7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXItY29sb3I6ICNkZWUyZTY7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBcclxuICAgIC5wYWdlLWxpbmsge1xyXG4gICAgICBwYWRkaW5nOiA4cHggMTJweDtcclxuICAgICAgY29sb3I6ICNmNDQzMzY7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZWUyZTY7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICBcclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICAgICAgICBib3JkZXItY29sb3I6ICNmNDQzMzY7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgJi5kb3RzIHtcclxuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAjNmM3NTdkO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC5mbG9hdC1yaWdodCB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgfVxyXG4gICJdfQ== */\";","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/** @docs-private */\nexport function createMissingDateImplError(provider: string) {\n  return Error(\n      `MatDatepicker: No provider found for ${provider}. You must import one of the following ` +\n      `modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a ` +\n      `custom implementation.`);\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable} from '@angular/core';\nimport {Subject} from 'rxjs';\n\n\n/** Datepicker data that requires internationalization. */\n@Injectable({providedIn: 'root'})\nexport class MatDatepickerIntl {\n  /**\n   * Stream that emits whenever the labels here are changed. Use this to notify\n   * components if the labels have changed after initialization.\n   */\n  readonly changes: Subject<void> = new Subject<void>();\n\n  /** A label for the calendar popup (used by screen readers). */\n  calendarLabel: string = 'Calendar';\n\n  /** A label for the button used to open the calendar popup (used by screen readers). */\n  openCalendarLabel: string = 'Open calendar';\n\n  /** A label for the previous month button (used by screen readers). */\n  prevMonthLabel: string = 'Previous month';\n\n  /** A label for the next month button (used by screen readers). */\n  nextMonthLabel: string = 'Next month';\n\n  /** A label for the previous year button (used by screen readers). */\n  prevYearLabel: string = 'Previous year';\n\n  /** A label for the next year button (used by screen readers). */\n  nextYearLabel: string = 'Next year';\n\n  /** A label for the previous multi-year button (used by screen readers). */\n  prevMultiYearLabel: string = 'Previous 20 years';\n\n  /** A label for the next multi-year button (used by screen readers). */\n  nextMultiYearLabel: string = 'Next 20 years';\n\n  /** A label for the 'switch to month view' button (used by screen readers). */\n  switchToMonthViewLabel: string = 'Choose date';\n\n  /** A label for the 'switch to year view' button (used by screen readers). */\n  switchToMultiYearViewLabel: string = 'Choose month and year';\n\n  /** Formats a range of years. */\n  formatYearRange(start: string, end: string): string {\n    return `${start} \\u2013 ${end}`;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  ViewEncapsulation,\n  NgZone,\n  OnChanges,\n  SimpleChanges,\n  OnDestroy,\n} from '@angular/core';\nimport {take} from 'rxjs/operators';\n\n/** Extra CSS classes that can be associated with a calendar cell. */\nexport type MatCalendarCellCssClasses = string | string[] | Set<string> | {[key: string]: any};\n\n/** Function that can generate the extra classes that should be added to a calendar cell. */\nexport type MatCalendarCellClassFunction<D> =\n    (date: D, view: 'month' | 'year' | 'multi-year') => MatCalendarCellCssClasses;\n\n/**\n * An internal class that represents the data corresponding to a single calendar cell.\n * @docs-private\n */\nexport class MatCalendarCell<D = any> {\n  constructor(public value: number,\n              public displayValue: string,\n              public ariaLabel: string,\n              public enabled: boolean,\n              public cssClasses: MatCalendarCellCssClasses = {},\n              public compareValue = value,\n              public rawValue?: D) {}\n}\n\n/** Event emitted when a date inside the calendar is triggered as a result of a user action. */\nexport interface MatCalendarUserEvent<D> {\n  value: D;\n  event: Event;\n}\n\n/**\n * An internal component used to display calendar data in a table.\n * @docs-private\n */\n@Component({\n  selector: '[mat-calendar-body]',\n  templateUrl: 'calendar-body.html',\n  styleUrls: ['calendar-body.css'],\n  host: {\n    'class': 'mat-calendar-body',\n    'role': 'grid',\n    'aria-readonly': 'true'\n  },\n  exportAs: 'matCalendarBody',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarBody implements OnChanges, OnDestroy {\n  /**\n   * Used to skip the next focus event when rendering the preview range.\n   * We need a flag like this, because some browsers fire focus events asynchronously.\n   */\n  private _skipNextFocus: boolean;\n\n  /** The label for the table. (e.g. \"Jan 2017\"). */\n  @Input() label: string;\n\n  /** The cells to display in the table. */\n  @Input() rows: MatCalendarCell[][];\n\n  /** The value in the table that corresponds to today. */\n  @Input() todayValue: number;\n\n  /** Start value of the selected date range. */\n  @Input() startValue: number;\n\n  /** End value of the selected date range. */\n  @Input() endValue: number;\n\n  /** The minimum number of free cells needed to fit the label in the first row. */\n  @Input() labelMinRequiredCells: number;\n\n  /** The number of columns in the table. */\n  @Input() numCols: number = 7;\n\n  /** The cell number of the active cell in the table. */\n  @Input() activeCell: number = 0;\n\n  /** Whether a range is being selected. */\n  @Input() isRange: boolean = false;\n\n  /**\n   * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be\n   * maintained even as the table resizes.\n   */\n  @Input() cellAspectRatio: number = 1;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: number | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: number | null;\n\n  /** Start of the preview range. */\n  @Input() previewStart: number | null = null;\n\n  /** End of the preview range. */\n  @Input() previewEnd: number | null = null;\n\n  /** Emits when a new value is selected. */\n  @Output() readonly selectedValueChange: EventEmitter<MatCalendarUserEvent<number>> =\n      new EventEmitter<MatCalendarUserEvent<number>>();\n\n  /** Emits when the preview has changed as a result of a user action. */\n  @Output() previewChange = new EventEmitter<MatCalendarUserEvent<MatCalendarCell | null>>();\n\n  /** The number of blank cells to put at the beginning for the first row. */\n  _firstRowOffset: number;\n\n  /** Padding for the individual date cells. */\n  _cellPadding: string;\n\n  /** Width of an individual cell. */\n  _cellWidth: string;\n\n  constructor(private _elementRef: ElementRef<HTMLElement>, private _ngZone: NgZone) {\n    _ngZone.runOutsideAngular(() => {\n      const element = _elementRef.nativeElement;\n      element.addEventListener('mouseenter', this._enterHandler, true);\n      element.addEventListener('focus', this._enterHandler, true);\n      element.addEventListener('mouseleave', this._leaveHandler, true);\n      element.addEventListener('blur', this._leaveHandler, true);\n    });\n  }\n\n  /** Called when a cell is clicked. */\n  _cellClicked(cell: MatCalendarCell, event: MouseEvent): void {\n    if (cell.enabled) {\n      this.selectedValueChange.emit({value: cell.value, event});\n    }\n  }\n\n  /** Returns whether a cell should be marked as selected. */\n  _isSelected(value: number) {\n    return this.startValue === value || this.endValue === value;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const columnChanges = changes['numCols'];\n    const {rows, numCols} = this;\n\n    if (changes['rows'] || columnChanges) {\n      this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;\n    }\n\n    if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {\n      this._cellPadding = `${50 * this.cellAspectRatio / numCols}%`;\n    }\n\n    if (columnChanges || !this._cellWidth) {\n      this._cellWidth = `${100 / numCols}%`;\n    }\n  }\n\n  ngOnDestroy() {\n    const element = this._elementRef.nativeElement;\n    element.removeEventListener('mouseenter', this._enterHandler, true);\n    element.removeEventListener('focus', this._enterHandler, true);\n    element.removeEventListener('mouseleave', this._leaveHandler, true);\n    element.removeEventListener('blur', this._leaveHandler, true);\n  }\n\n  /** Returns whether a cell is active. */\n  _isActiveCell(rowIndex: number, colIndex: number): boolean {\n    let cellNumber = rowIndex * this.numCols + colIndex;\n\n    // Account for the fact that the first row may not have as many cells.\n    if (rowIndex) {\n      cellNumber -= this._firstRowOffset;\n    }\n\n    return cellNumber == this.activeCell;\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell(movePreview = true) {\n    this._ngZone.runOutsideAngular(() => {\n      this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n        const activeCell: HTMLElement | null =\n            this._elementRef.nativeElement.querySelector('.mat-calendar-body-active');\n\n        if (activeCell) {\n          if (!movePreview) {\n            this._skipNextFocus = true;\n          }\n\n          activeCell.focus();\n        }\n      });\n    });\n  }\n\n  /** Gets whether a value is the start of the main range. */\n  _isRangeStart(value: number) {\n    return isStart(value, this.startValue, this.endValue);\n  }\n\n  /** Gets whether a value is the end of the main range. */\n  _isRangeEnd(value: number) {\n    return isEnd(value, this.startValue, this.endValue);\n  }\n\n  /** Gets whether a value is within the currently-selected range. */\n  _isInRange(value: number): boolean {\n    return isInRange(value, this.startValue, this.endValue, this.isRange);\n  }\n\n  /** Gets whether a value is the start of the comparison range. */\n  _isComparisonStart(value: number) {\n    return isStart(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  /** Whether the cell is a start bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeStart(value: number, rowIndex: number, colIndex: number) {\n    if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {\n      return false;\n    }\n\n    let previousCell: MatCalendarCell | undefined = this.rows[rowIndex][colIndex - 1];\n\n    if (!previousCell) {\n      const previousRow = this.rows[rowIndex - 1];\n      previousCell = previousRow && previousRow[previousRow.length - 1];\n    }\n\n    return previousCell && !this._isRangeEnd(previousCell.compareValue);\n  }\n\n  /** Whether the cell is an end bridge cell between the main and comparison ranges. */\n  _isComparisonBridgeEnd(value: number, rowIndex: number, colIndex: number) {\n    if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {\n      return false;\n    }\n\n    let nextCell: MatCalendarCell | undefined = this.rows[rowIndex][colIndex + 1];\n\n    if (!nextCell) {\n      const nextRow = this.rows[rowIndex + 1];\n      nextCell = nextRow && nextRow[0];\n    }\n\n    return nextCell && !this._isRangeStart(nextCell.compareValue);\n  }\n\n  /** Gets whether a value is the end of the comparison range. */\n  _isComparisonEnd(value: number) {\n    return isEnd(value, this.comparisonStart, this.comparisonEnd);\n  }\n\n  /** Gets whether a value is within the current comparison range. */\n  _isInComparisonRange(value: number) {\n    return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);\n  }\n\n  /**\n   * Gets whether a value is the same as the start and end of the comparison range.\n   * For context, the functions that we use to determine whether something is the start/end of\n   * a range don't allow for the start and end to be on the same day, because we'd have to use\n   * much more specific CSS selectors to style them correctly in all scenarios. This is fine for\n   * the regular range, because when it happens, the selected styles take over and still show where\n   * the range would've been, however we don't have these selected styles for a comparison range.\n   * This function is used to apply a class that serves the same purpose as the one for selected\n   * dates, but it only applies in the context of a comparison range.\n   */\n  _isComparisonIdentical(value: number) {\n    // Note that we don't need to null check the start/end\n    // here, because the `value` will always be defined.\n    return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;\n  }\n\n  /** Gets whether a value is the start of the preview range. */\n  _isPreviewStart(value: number) {\n    return isStart(value, this.previewStart, this.previewEnd);\n  }\n\n  /** Gets whether a value is the end of the preview range. */\n  _isPreviewEnd(value: number) {\n    return isEnd(value, this.previewStart, this.previewEnd);\n  }\n\n  /** Gets whether a value is inside the preview range. */\n  _isInPreview(value: number) {\n    return isInRange(value, this.previewStart, this.previewEnd, this.isRange);\n  }\n\n  /**\n   * Event handler for when the user enters an element\n   * inside the calendar body (e.g. by hovering in or focus).\n   */\n  private _enterHandler = (event: Event) => {\n    if (this._skipNextFocus && event.type === 'focus') {\n      this._skipNextFocus = false;\n      return;\n    }\n\n    // We only need to hit the zone when we're selecting a range.\n    if (event.target && this.isRange) {\n      const cell = this._getCellFromElement(event.target as HTMLElement);\n\n      if (cell) {\n        this._ngZone.run(() => this.previewChange.emit({value: cell.enabled ? cell : null, event}));\n      }\n    }\n  }\n\n  /**\n   * Event handler for when the user's pointer leaves an element\n   * inside the calendar body (e.g. by hovering out or blurring).\n   */\n  private _leaveHandler = (event: Event) => {\n    // We only need to hit the zone when we're selecting a range.\n    if (this.previewEnd !== null && this.isRange) {\n      // Only reset the preview end value when leaving cells. This looks better, because\n      // we have a gap between the cells and the rows and we don't want to remove the\n      // range just for it to show up again when the user moves a few pixels to the side.\n      if (event.target && isTableCell(event.target as HTMLElement)) {\n        this._ngZone.run(() => this.previewChange.emit({value: null, event}));\n      }\n    }\n  }\n\n  /** Finds the MatCalendarCell that corresponds to a DOM node. */\n  private _getCellFromElement(element: HTMLElement): MatCalendarCell | null {\n    let cell: HTMLElement | undefined;\n\n    if (isTableCell(element)) {\n      cell = element;\n    } else if (isTableCell(element.parentNode!)) {\n      cell = element.parentNode as HTMLElement;\n    }\n\n    if (cell) {\n      const row = cell.getAttribute('data-mat-row');\n      const col = cell.getAttribute('data-mat-col');\n\n      if (row && col) {\n        return this.rows[parseInt(row)][parseInt(col)];\n      }\n    }\n\n    return null;\n  }\n\n}\n\n/** Checks whether a node is a table cell element. */\nfunction isTableCell(node: Node): node is HTMLTableCellElement {\n  return node.nodeName === 'TD';\n}\n\n/** Checks whether a value is the start of a range. */\nfunction isStart(value: number, start: number | null, end: number | null): boolean {\n  return end !== null && start !== end && value < end && value === start;\n}\n\n/** Checks whether a value is the end of a range. */\nfunction isEnd(value: number, start: number | null, end: number | null): boolean {\n  return start !== null && start !== end && value >= start && value === end;\n}\n\n/** Checks whether a value is inside of a range. */\nfunction isInRange(value: number,\n                   start: number | null,\n                   end: number | null,\n                   rangeEnabled: boolean): boolean {\n  return rangeEnabled && start !== null && end !== null && start !== end &&\n         value >= start && value <= end;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {FactoryProvider, Injectable, Optional, SkipSelf, OnDestroy, Directive} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Observable, Subject} from 'rxjs';\n\n/** A class representing a range of dates. */\nexport class DateRange<D> {\n  /**\n   * Ensures that objects with a `start` and `end` property can't be assigned to a variable that\n   * expects a `DateRange`\n   */\n  // tslint:disable-next-line:no-unused-variable\n  private _disableStructuralEquivalency: never;\n\n  constructor(\n    /** The start date of the range. */\n    readonly start: D | null,\n    /** The end date of the range. */\n    readonly end: D | null) {}\n}\n\n/**\n * Conditionally picks the date type, if a DateRange is passed in.\n * @docs-private\n */\nexport type ExtractDateTypeFromSelection<T> = T extends DateRange<infer D> ? D : NonNullable<T>;\n\n/** Event emitted by the date selection model when its selection changes. */\nexport interface DateSelectionModelChange<S> {\n  /** New value for the selection. */\n  selection: S;\n\n  /** Object that triggered the change. */\n  source: unknown;\n}\n\n/** A selection model containing a date selection. */\n@Directive()\nexport abstract class MatDateSelectionModel<S, D = ExtractDateTypeFromSelection<S>>\n    implements OnDestroy {\n  private _selectionChanged = new Subject<DateSelectionModelChange<S>>();\n\n  /** Emits when the selection has changed. */\n  selectionChanged: Observable<DateSelectionModelChange<S>> = this._selectionChanged;\n\n  protected constructor(\n    /** The current selection. */\n    readonly selection: S,\n    protected _adapter: DateAdapter<D>) {\n    this.selection = selection;\n  }\n\n  /**\n   * Updates the current selection in the model.\n   * @param value New selection that should be assigned.\n   * @param source Object that triggered the selection change.\n   */\n  updateSelection(value: S, source: unknown) {\n    (this as {selection: S}).selection = value;\n    this._selectionChanged.next({selection: value, source});\n  }\n\n  ngOnDestroy() {\n    this._selectionChanged.complete();\n  }\n\n  protected _isValidDateInstance(date: D): boolean {\n    return this._adapter.isDateInstance(date) && this._adapter.isValid(date);\n  }\n\n  /** Adds a date to the current selection. */\n  abstract add(date: D | null): void;\n\n  /** Checks whether the current selection is valid. */\n  abstract isValid(): boolean;\n\n  /** Checks whether the current selection is complete. */\n  abstract isComplete(): boolean;\n}\n\n/**  A selection model that contains a single date. */\n@Injectable()\nexport class MatSingleDateSelectionModel<D> extends MatDateSelectionModel<D | null, D> {\n  constructor(adapter: DateAdapter<D>) {\n    super(null, adapter);\n  }\n\n  /**\n   * Adds a date to the current selection. In the case of a single date selection, the added date\n   * simply overwrites the previous selection\n   */\n  add(date: D | null) {\n    super.updateSelection(date, this);\n  }\n\n  /** Checks whether the current selection is valid. */\n  isValid(): boolean {\n    return this.selection != null && this._isValidDateInstance(this.selection);\n  }\n\n  /**\n   * Checks whether the current selection is complete. In the case of a single date selection, this\n   * is true if the current selection is not null.\n   */\n  isComplete() {\n    return this.selection != null;\n  }\n}\n\n/**  A selection model that contains a date range. */\n@Injectable()\nexport class MatRangeDateSelectionModel<D> extends MatDateSelectionModel<DateRange<D>, D> {\n  constructor(adapter: DateAdapter<D>) {\n    super(new DateRange<D>(null, null), adapter);\n  }\n\n  /**\n   * Adds a date to the current selection. In the case of a date range selection, the added date\n   * fills in the next `null` value in the range. If both the start and the end already have a date,\n   * the selection is reset so that the given date is the new `start` and the `end` is null.\n   */\n  add(date: D | null): void {\n    let {start, end} = this.selection;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    super.updateSelection(new DateRange<D>(start, end), this);\n  }\n\n  /** Checks whether the current selection is valid. */\n  isValid(): boolean {\n    const {start, end} = this.selection;\n\n    // Empty ranges are valid.\n    if (start == null && end == null) {\n      return true;\n    }\n\n    // Complete ranges are only valid if both dates are valid and the start is before the end.\n    if (start != null && end != null) {\n      return this._isValidDateInstance(start) && this._isValidDateInstance(end) &&\n             this._adapter.compareDate(start, end) <= 0;\n    }\n\n    // Partial ranges are valid if the start/end is valid.\n    return (start == null || this._isValidDateInstance(start)) &&\n           (end == null || this._isValidDateInstance(end));\n  }\n\n  /**\n   * Checks whether the current selection is complete. In the case of a date range selection, this\n   * is true if the current selection has a non-null `start` and `end`.\n   */\n  isComplete(): boolean {\n    return this.selection.start != null && this.selection.end != null;\n  }\n}\n\n/** @docs-private */\nexport function MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(\n    parent: MatSingleDateSelectionModel<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new MatSingleDateSelectionModel(adapter);\n}\n\n/** Used to provide a single selection model to a component. */\nexport const MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY,\n};\n\n\n/** @docs-private */\nexport function MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(\n    parent: MatSingleDateSelectionModel<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new MatRangeDateSelectionModel(adapter);\n}\n\n/** Used to provide a range selection model to a component. */\nexport const MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER: FactoryProvider = {\n  provide: MatDateSelectionModel,\n  deps: [[new Optional(), new SkipSelf(), MatDateSelectionModel], DateAdapter],\n  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Injectable, InjectionToken, Optional, SkipSelf, FactoryProvider} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {DateRange} from './date-selection-model';\n\n/** Injection token used to customize the date range selection behavior. */\nexport const MAT_DATE_RANGE_SELECTION_STRATEGY =\n    new InjectionToken<MatDateRangeSelectionStrategy<any>>('MAT_DATE_RANGE_SELECTION_STRATEGY');\n\n/** Object that can be provided in order to customize the date range selection behavior. */\nexport interface MatDateRangeSelectionStrategy<D> {\n  /**\n   * Called when the user has finished selecting a value.\n   * @param date Date that was selected. Will be null if the user cleared the selection.\n   * @param currentRange Range that is currently show in the calendar.\n   * @param event DOM event that triggered the selection. Currently only corresponds to a `click`\n   *    event, but it may get expanded in the future.\n   */\n  selectionFinished(date: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\n\n  /**\n   * Called when the user has activated a new date (e.g. by hovering over\n   * it or moving focus) and the calendar tries to display a date range.\n   *\n   * @param activeDate Date that the user has activated. Will be null if the user moved\n   *    focus to an element that's no a calendar cell.\n   * @param currentRange Range that is currently shown in the calendar.\n   * @param event DOM event that caused the preview to be changed. Will be either a\n   *    `mouseenter`/`mouseleave` or `focus`/`blur` depending on how the user is navigating.\n   */\n  createPreview(activeDate: D | null, currentRange: DateRange<D>, event: Event): DateRange<D>;\n}\n\n/** Provides the default date range selection behavior. */\n@Injectable()\nexport class DefaultMatCalendarRangeStrategy<D> implements MatDateRangeSelectionStrategy<D> {\n  constructor(private _dateAdapter: DateAdapter<D>) {}\n\n  selectionFinished(date: D, currentRange: DateRange<D>) {\n    let {start, end} = currentRange;\n\n    if (start == null) {\n      start = date;\n    } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {\n      end = date;\n    } else {\n      start = date;\n      end = null;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n\n  createPreview(activeDate: D | null, currentRange: DateRange<D>) {\n    let start: D | null = null;\n    let end: D | null = null;\n\n    if (currentRange.start && !currentRange.end && activeDate) {\n      start = currentRange.start;\n      end = activeDate;\n    }\n\n    return new DateRange<D>(start, end);\n  }\n}\n\n\n/** @docs-private */\nexport function MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(\n  parent: MatDateRangeSelectionStrategy<unknown>, adapter: DateAdapter<unknown>) {\n  return parent || new DefaultMatCalendarRangeStrategy(adapter);\n}\n\n/** @docs-private */\nexport const MAT_CALENDAR_RANGE_STRATEGY_PROVIDER: FactoryProvider = {\n  provide: MAT_DATE_RANGE_SELECTION_STRATEGY,\n  deps: [[new Optional(), new SkipSelf(), MAT_DATE_RANGE_SELECTION_STRATEGY], DateAdapter],\n  useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY,\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n  ESCAPE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewEncapsulation,\n  ViewChild,\n  OnDestroy,\n  SimpleChanges,\n  OnChanges,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MatCalendarBody,\n  MatCalendarCell,\n  MatCalendarUserEvent,\n  MatCalendarCellClassFunction,\n} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\nimport {\n  MatDateRangeSelectionStrategy,\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n} from './date-range-selection-strategy';\n\n\nconst DAYS_PER_WEEK = 7;\n\n\n/**\n * An internal component used to display a single month in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-month-view',\n  templateUrl: 'month-view.html',\n  exportAs: 'matMonthView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMonthView<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /**\n   * The date to display in this month view (everything other than the month and year is ignored).\n   */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    const oldActiveDate = this._activeDate;\n    const validDate =\n      this._dateAdapter.getValidDateOrNull(\n        this._dateAdapter.deserialize(value)\n      ) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setRanges(this._selected);\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: D | null;\n\n  /** Emits when a new date is selected. */\n  @Output() readonly selectedChange: EventEmitter<D | null> = new EventEmitter<D | null>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<MatCalendarUserEvent<D | null>> =\n      new EventEmitter<MatCalendarUserEvent<D | null>>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** The label for this month (e.g. \"January 2017\"). */\n  _monthLabel: string;\n\n  /** Grid of calendar cells representing the dates of the month. */\n  _weeks: MatCalendarCell[][];\n\n  /** The number of blank cells in the first row before the 1st of the month. */\n  _firstWeekOffset: number;\n\n  /** Start value of the currently-shown date range. */\n  _rangeStart: number | null;\n\n  /** End value of the currently-shown date range. */\n  _rangeEnd: number | null;\n\n  /** Start value of the currently-shown comparison date range. */\n  _comparisonRangeStart: number | null;\n\n  /** End value of the currently-shown comparison date range. */\n  _comparisonRangeEnd: number | null;\n\n  /** Start of the preview range. */\n  _previewStart: number | null;\n\n  /** End of the preview range. */\n  _previewEnd: number | null;\n\n  /** Whether the user is currently selecting a range of dates. */\n  _isRange: boolean;\n\n  /** The date of the month that today falls on. Null if today is in another month. */\n  _todayDate: number | null;\n\n  /** The names of the weekdays. */\n  _weekdays: {long: string, narrow: string}[];\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality,\n              @Inject(MAT_DATE_RANGE_SELECTION_STRATEGY) @Optional()\n                  private _rangeStrategy?: MatDateRangeSelectionStrategy<D>) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];\n\n    if (comparisonChange && !comparisonChange.firstChange) {\n      this._setRanges(this.selected);\n    }\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new date is selected. */\n  _dateSelected(event: MatCalendarUserEvent<number>) {\n    const date = event.value;\n    const selectedYear = this._dateAdapter.getYear(this.activeDate);\n    const selectedMonth = this._dateAdapter.getMonth(this.activeDate);\n    const selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);\n    let rangeStartDate: number | null;\n    let rangeEndDate: number | null;\n\n    if (this._selected instanceof DateRange) {\n      rangeStartDate = this._getDateInCurrentMonth(this._selected.start);\n      rangeEndDate = this._getDateInCurrentMonth(this._selected.end);\n    } else {\n      rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);\n    }\n\n    if (rangeStartDate !== date || rangeEndDate !== date) {\n      this.selectedChange.emit(selectedDate);\n    }\n\n    this._userSelection.emit({value: selectedDate, event: event.event});\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in month view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            1 - this._dateAdapter.getDate(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate,\n            (this._dateAdapter.getNumDaysInMonth(this._activeDate) -\n              this._dateAdapter.getDate(this._activeDate)));\n        break;\n      case PAGE_UP:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, -1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate = event.altKey ?\n            this._dateAdapter.addCalendarYears(this._activeDate, 1) :\n            this._dateAdapter.addCalendarMonths(this._activeDate, 1);\n        break;\n      case ENTER:\n      case SPACE:\n        if (!this.dateFilter || this.dateFilter(this._activeDate)) {\n          this._dateSelected({value: this._dateAdapter.getDate(this._activeDate), event});\n          // Prevent unexpected default actions such as form submission.\n          event.preventDefault();\n        }\n        return;\n      case ESCAPE:\n        // Abort the current range selection if the user presses escape mid-selection.\n        if (this._previewEnd != null) {\n          this._previewStart = this._previewEnd = null;\n          this.selectedChange.emit(null);\n          this._userSelection.emit({value: null, event});\n          event.preventDefault();\n          event.stopPropagation(); // Prevents the overlay from closing.\n        }\n        return;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this month view. */\n  _init() {\n    this._setRanges(this.selected);\n    this._todayDate = this._getCellCompareValue(this._dateAdapter.today());\n    this._monthLabel =\n        this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)]\n            .toLocaleUpperCase();\n\n    let firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate),\n        this._dateAdapter.getMonth(this.activeDate), 1);\n    this._firstWeekOffset =\n        (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) -\n         this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;\n\n    this._initWeekdays();\n    this._createWeekCells();\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell(movePreview?: boolean) {\n    this._matCalendarBody._focusActiveCell(movePreview);\n  }\n\n  /** Called when the user has activated a new cell and the preview needs to be updated. */\n  _previewChanged({event, value: cell}: MatCalendarUserEvent<MatCalendarCell<D> | null>) {\n    if (this._rangeStrategy) {\n      // We can assume that this will be a range, because preview\n      // events aren't fired for single date selections.\n      const value = cell ? cell.rawValue! : null;\n      const previewRange =\n          this._rangeStrategy.createPreview(value, this.selected as DateRange<D>, event);\n      this._previewStart = this._getCellCompareValue(previewRange.start);\n      this._previewEnd = this._getCellCompareValue(previewRange.end);\n\n      // Note that here we need to use `detectChanges`, rather than `markForCheck`, because\n      // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time\n      // when navigating one month back using the keyboard which will cause this handler\n      // to throw a \"changed after checked\" error when updating the preview state.\n      this._changeDetectorRef.detectChanges();\n    }\n  }\n\n  /** Initializes the weekdays. */\n  private _initWeekdays() {\n    const firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();\n    const narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');\n    const longWeekdays = this._dateAdapter.getDayOfWeekNames('long');\n\n    // Rotate the labels for days of the week based on the configured first day of the week.\n    let weekdays = longWeekdays.map((long, i) => {\n        return {long, narrow: narrowWeekdays[i]};\n    });\n    this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n  }\n\n  /** Creates MatCalendarCells for the dates in this month. */\n  private _createWeekCells() {\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);\n    const dateNames = this._dateAdapter.getDateNames();\n    this._weeks = [[]];\n    for (let i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {\n      if (cell == DAYS_PER_WEEK) {\n        this._weeks.push([]);\n        cell = 0;\n      }\n      const date = this._dateAdapter.createDate(\n            this._dateAdapter.getYear(this.activeDate),\n            this._dateAdapter.getMonth(this.activeDate), i + 1);\n      const enabled = this._shouldEnableDate(date);\n      const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);\n      const cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;\n\n      this._weeks[this._weeks.length - 1].push(new MatCalendarCell<D>(i + 1, dateNames[i],\n          ariaLabel, enabled, cellClasses, this._getCellCompareValue(date)!, date));\n    }\n  }\n\n  /** Date filter for the month */\n  private _shouldEnableDate(date: D): boolean {\n    return !!date &&\n        (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) &&\n        (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) &&\n        (!this.dateFilter || this.dateFilter(date));\n  }\n\n  /**\n   * Gets the date in this month that the given Date falls on.\n   * Returns null if the given Date is in another month.\n   */\n  private _getDateInCurrentMonth(date: D | null): number | null {\n    return date && this._hasSameMonthAndYear(date, this.activeDate) ?\n        this._dateAdapter.getDate(date) : null;\n  }\n\n  /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */\n  private _hasSameMonthAndYear(d1: D | null, d2: D | null): boolean {\n    return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) &&\n              this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));\n  }\n\n  /** Gets the value that will be used to one cell to another. */\n  private _getCellCompareValue(date: D | null): number | null {\n    if (date) {\n      // We use the time since the Unix epoch to compare dates in this view, rather than the\n      // cell values, because we need to support ranges that span across multiple months/years.\n      const year = this._dateAdapter.getYear(date);\n      const month = this._dateAdapter.getMonth(date);\n      const day = this._dateAdapter.getDate(date);\n      return new Date(year, month, day).getTime();\n    }\n\n    return null;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the current range based on a model value. */\n  private _setRanges(selectedValue: DateRange<D> | D | null) {\n    if (selectedValue instanceof DateRange) {\n      this._rangeStart = this._getCellCompareValue(selectedValue.start);\n      this._rangeEnd = this._getCellCompareValue(selectedValue.end);\n      this._isRange = true;\n    } else {\n      this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);\n      this._isRange = false;\n    }\n\n    this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);\n    this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MatCalendarBody,\n  MatCalendarCell,\n  MatCalendarUserEvent,\n  MatCalendarCellClassFunction,\n} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\n\nexport const yearsPerPage = 24;\n\nexport const yearsPerRow = 4;\n\n/**\n * An internal component used to display a year selector in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-multi-year-view',\n  templateUrl: 'multi-year-view.html',\n  exportAs: 'matMultiYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatMultiYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this multi-year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n      this._dateAdapter.getValidDateOrNull(\n        this._dateAdapter.deserialize(value)\n      ) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n\n    if (!isSameMultiYearView(\n      this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setSelectedYear(value);\n  }\n  private _selected: DateRange<D> | D | null;\n\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to date cells. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Emits when a new year is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected year. This doesn't imply a change on the selected date */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the currently displayed years. */\n  _years: MatCalendarCell[][];\n\n  /** The year that today falls on. */\n  _todayYear: number;\n\n  /** The year of the selected date. Null if the selected date is null. */\n  _selectedYear: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Initializes this multi-year view. */\n  _init() {\n    this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today());\n\n    // We want a range years such that we maximize the number of\n    // enabled dates visible at once. This prevents issues where the minimum year\n    // is the last item of a page OR the maximum year is the first item of a page.\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view.\n    const activeYear = this._dateAdapter.getYear(this._activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n\n    this._years = [];\n    for (let i = 0, row: number[] = []; i < yearsPerPage; i++) {\n      row.push(minYearOfPage + i);\n      if (row.length == yearsPerRow) {\n        this._years.push(row.map(year => this._createCellForYear(year)));\n        row = [];\n      }\n    }\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Handles when a new year is selected. */\n  _yearSelected(event: MatCalendarUserEvent<number>) {\n    const year = event.value;\n    this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));\n    let month = this._dateAdapter.getMonth(this.activeDate);\n    let daysInMonth =\n        this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));\n    this.selectedChange.emit(this._dateAdapter.createDate(year, month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in multi-year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate,\n          yearsPerPage - getActiveOffset(\n            this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(\n                this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);\n        break;\n      case ENTER:\n      case SPACE:\n        this._yearSelected({value: this._dateAdapter.getYear(this._activeDate), event});\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  _getActiveCell(): number {\n    return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /** Creates an MatCalendarCell for the given year. */\n  private _createCellForYear(year: number) {\n    const date = this._dateAdapter.createDate(year, 0, 1);\n    const yearName = this._dateAdapter.getYearName(date);\n    const cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;\n\n    return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);\n  }\n\n  /** Whether the given year is enabled. */\n  private _shouldEnableYear(year: number) {\n    // disable if the year is greater than maxDate lower than minDate\n    if (year === undefined || year === null ||\n        (this.maxDate && year > this._dateAdapter.getYear(this.maxDate)) ||\n        (this.minDate && year < this._dateAdapter.getYear(this.minDate))) {\n      return false;\n    }\n\n    // enable if it reaches here and there's no filter defined\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfYear = this._dateAdapter.createDate(year, 0, 1);\n\n    // If any date in the year is enabled count the year as enabled.\n    for (let date = firstOfYear; this._dateAdapter.getYear(date) == year;\n      date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the currently-highlighted year based on a model value. */\n  private _setSelectedYear(value: DateRange<D> | D | null) {\n    this._selectedYear = null;\n\n    if (value instanceof DateRange) {\n      const displayValue = value.start || value.end;\n\n      if (displayValue) {\n        this._selectedYear = this._dateAdapter.getYear(displayValue);\n      }\n    } else if (value) {\n      this._selectedYear = this._dateAdapter.getYear(value);\n    }\n  }\n}\n\nexport function isSameMultiYearView<D>(\n  dateAdapter: DateAdapter<D>, date1: D, date2: D, minDate: D | null, maxDate: D | null): boolean {\n  const year1 = dateAdapter.getYear(date1);\n  const year2 = dateAdapter.getYear(date2);\n  const startingYear = getStartingYear(dateAdapter, minDate, maxDate);\n  return Math.floor((year1 - startingYear) / yearsPerPage) ===\n          Math.floor((year2 - startingYear) / yearsPerPage);\n}\n\n/**\n * When the multi-year view is first opened, the active year will be in view.\n * So we compute how many years are between the active year and the *slot* where our\n * \"startingYear\" will render when paged into view.\n */\nexport function getActiveOffset<D>(\n  dateAdapter: DateAdapter<D>, activeDate: D, minDate: D | null, maxDate: D | null): number {\n  const activeYear = dateAdapter.getYear(activeDate);\n  return euclideanModulo((activeYear - getStartingYear(dateAdapter, minDate, maxDate)),\n    yearsPerPage);\n}\n\n/**\n * We pick a \"starting\" year such that either the maximum year would be at the end\n * or the minimum year would be at the beginning of a page.\n */\nfunction getStartingYear<D>(\n  dateAdapter: DateAdapter<D>, minDate: D | null, maxDate: D | null): number {\n  let startingYear = 0;\n  if (maxDate) {\n    const maxYear = dateAdapter.getYear(maxDate);\n    startingYear = maxYear - yearsPerPage + 1;\n  } else if (minDate) {\n    startingYear = dateAdapter.getYear(minDate);\n  }\n  return startingYear;\n}\n\n/** Gets remainder that is non-negative, even if first number is negative */\nfunction euclideanModulo (a: number, b: number): number {\n  return (a % b + b) % b;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  DOWN_ARROW,\n  END,\n  ENTER,\n  HOME,\n  LEFT_ARROW,\n  PAGE_DOWN,\n  PAGE_UP,\n  RIGHT_ARROW,\n  UP_ARROW,\n  SPACE,\n} from '@angular/cdk/keycodes';\nimport {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  Inject,\n  Input,\n  Optional,\n  Output,\n  ViewChild,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport {DateAdapter, MAT_DATE_FORMATS, MatDateFormats} from '@angular/material/core';\nimport {Directionality} from '@angular/cdk/bidi';\nimport {\n  MatCalendarBody,\n  MatCalendarCell,\n  MatCalendarUserEvent,\n  MatCalendarCellClassFunction,\n} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {DateRange} from './date-selection-model';\n\n/**\n * An internal component used to display a single year in the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-year-view',\n  templateUrl: 'year-view.html',\n  exportAs: 'matYearView',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MatYearView<D> implements AfterContentInit, OnDestroy {\n  private _rerenderSubscription = Subscription.EMPTY;\n\n  /** The date to display in this year view (everything other than the year is ignored). */\n  @Input()\n  get activeDate(): D { return this._activeDate; }\n  set activeDate(value: D) {\n    let oldActiveDate = this._activeDate;\n    const validDate =\n      this._dateAdapter.getValidDateOrNull(\n        this._dateAdapter.deserialize(value)\n      ) || this._dateAdapter.today();\n    this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);\n    if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {\n      this._init();\n    }\n  }\n  private _activeDate: D;\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n\n    this._setSelectedMonth(value);\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** A function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to date cells. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Emits when a new month is selected. */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits the selected month. This doesn't imply a change on the selected date */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is activated. */\n  @Output() readonly activeDateChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /** The body of calendar table */\n  @ViewChild(MatCalendarBody) _matCalendarBody: MatCalendarBody;\n\n  /** Grid of calendar cells representing the months of the year. */\n  _months: MatCalendarCell[][];\n\n  /** The label for this year (e.g. \"2017\"). */\n  _yearLabel: string;\n\n  /** The month in this year that today falls on. Null if today is in a different year. */\n  _todayMonth: number | null;\n\n  /**\n   * The month in this year that the selected Date falls on.\n   * Null if the selected Date is in a different year.\n   */\n  _selectedMonth: number | null;\n\n  constructor(private _changeDetectorRef: ChangeDetectorRef,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              @Optional() public _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir?: Directionality) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._activeDate = this._dateAdapter.today();\n  }\n\n  ngAfterContentInit() {\n    this._rerenderSubscription = this._dateAdapter.localeChanges\n      .pipe(startWith(null))\n      .subscribe(() => this._init());\n  }\n\n  ngOnDestroy() {\n    this._rerenderSubscription.unsubscribe();\n  }\n\n  /** Handles when a new month is selected. */\n  _monthSelected(event: MatCalendarUserEvent<number>) {\n    const month = event.value;\n    const normalizedDate =\n          this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n\n    this.monthSelected.emit(normalizedDate);\n\n    const daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);\n\n    this.selectedChange.emit(this._dateAdapter.createDate(\n        this._dateAdapter.getYear(this.activeDate), month,\n        Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));\n  }\n\n  /** Handles keydown events on the calendar body when calendar is in year view. */\n  _handleCalendarBodyKeydown(event: KeyboardEvent): void {\n    // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent\n    // disabled ones from being selected. This may not be ideal, we should look into whether\n    // navigation should skip over disabled dates, and if so, how to implement that efficiently.\n\n    const oldActiveDate = this._activeDate;\n    const isRtl = this._isRtl();\n\n    switch (event.keyCode) {\n      case LEFT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);\n        break;\n      case RIGHT_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);\n        break;\n      case UP_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);\n        break;\n      case DOWN_ARROW:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);\n        break;\n      case HOME:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            -this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case END:\n        this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate,\n            11 - this._dateAdapter.getMonth(this._activeDate));\n        break;\n      case PAGE_UP:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);\n        break;\n      case PAGE_DOWN:\n        this.activeDate =\n            this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);\n        break;\n      case ENTER:\n      case SPACE:\n        this._monthSelected({value: this._dateAdapter.getMonth(this._activeDate), event});\n        break;\n      default:\n        // Don't prevent default or focus active cell on keys that we don't explicitly handle.\n        return;\n    }\n\n    if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {\n      this.activeDateChange.emit(this.activeDate);\n    }\n\n    this._focusActiveCell();\n    // Prevent unexpected default actions such as form submission.\n    event.preventDefault();\n  }\n\n  /** Initializes this year view. */\n  _init() {\n    this._setSelectedMonth(this.selected);\n    this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());\n    this._yearLabel = this._dateAdapter.getYearName(this.activeDate);\n\n    let monthNames = this._dateAdapter.getMonthNames('short');\n    // First row of months only contains 5 elements so we can fit the year label on the same row.\n    this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(row => row.map(\n        month => this._createCellForMonth(month, monthNames[month])));\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Focuses the active cell after the microtask queue is empty. */\n  _focusActiveCell() {\n    this._matCalendarBody._focusActiveCell();\n  }\n\n  /**\n   * Gets the month in this year that the given Date falls on.\n   * Returns null if the given Date is in another year.\n   */\n  private _getMonthInCurrentYear(date: D | null) {\n    return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ?\n        this._dateAdapter.getMonth(date) : null;\n  }\n\n  /** Creates an MatCalendarCell for the given month. */\n  private _createCellForMonth(month: number, monthName: string) {\n    const date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);\n    const ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);\n    const cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;\n\n    return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel,\n        this._shouldEnableMonth(month), cellClasses);\n  }\n\n  /** Whether the given month is enabled. */\n  private _shouldEnableMonth(month: number) {\n\n    const activeYear = this._dateAdapter.getYear(this.activeDate);\n\n    if (month === undefined || month === null ||\n        this._isYearAndMonthAfterMaxDate(activeYear, month) ||\n        this._isYearAndMonthBeforeMinDate(activeYear, month)) {\n      return false;\n    }\n\n    if (!this.dateFilter) {\n      return true;\n    }\n\n    const firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1);\n\n    // If any date in the month is enabled count the month as enabled.\n    for (let date = firstOfMonth; this._dateAdapter.getMonth(date) == month;\n         date = this._dateAdapter.addCalendarDays(date, 1)) {\n      if (this.dateFilter(date)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is after this.maxDate, considering\n   * just the month and year of this.maxDate\n   */\n  private _isYearAndMonthAfterMaxDate(year: number, month: number) {\n    if (this.maxDate) {\n      const maxYear = this._dateAdapter.getYear(this.maxDate);\n      const maxMonth = this._dateAdapter.getMonth(this.maxDate);\n\n      return year > maxYear || (year === maxYear && month > maxMonth);\n    }\n\n    return false;\n  }\n\n  /**\n   * Tests whether the combination month/year is before this.minDate, considering\n   * just the month and year of this.minDate\n   */\n  private _isYearAndMonthBeforeMinDate(year: number, month: number) {\n    if (this.minDate) {\n      const minYear = this._dateAdapter.getYear(this.minDate);\n      const minMonth = this._dateAdapter.getMonth(this.minDate);\n\n      return year < minYear || (year === minYear && month < minMonth);\n    }\n\n    return false;\n  }\n\n  /** Determines whether the user has the RTL layout direction. */\n  private _isRtl() {\n    return this._dir && this._dir.value === 'rtl';\n  }\n\n  /** Sets the currently-selected month based on a model value. */\n  private _setSelectedMonth(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selectedMonth = this._getMonthInCurrentYear(value.start) ||\n                            this._getMonthInCurrentYear(value.end);\n    } else {\n      this._selectedMonth = this._getMonthInCurrentYear(value);\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ComponentPortal, ComponentType, Portal} from '@angular/cdk/portal';\nimport {\n  AfterContentInit,\n  AfterViewChecked,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Inject,\n  Input,\n  OnChanges,\n  OnDestroy,\n  Optional,\n  Output,\n  SimpleChanges,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n} from '@angular/material/core';\nimport {Subject, Subscription} from 'rxjs';\nimport {MatCalendarUserEvent, MatCalendarCellClassFunction} from './calendar-body';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatMonthView} from './month-view';\nimport {\n  getActiveOffset,\n  isSameMultiYearView,\n  MatMultiYearView,\n  yearsPerPage\n} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, DateRange} from './date-selection-model';\n\n/**\n * Possible views for the calendar.\n * @docs-private\n */\nexport type MatCalendarView = 'month' | 'year' | 'multi-year';\n\n/** Default header for MatCalendar */\n@Component({\n  selector: 'mat-calendar-header',\n  templateUrl: 'calendar-header.html',\n  exportAs: 'matCalendarHeader',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatCalendarHeader<D> {\n  constructor(private _intl: MatDatepickerIntl,\n              @Inject(forwardRef(() => MatCalendar)) public calendar: MatCalendar<D>,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    this.calendar.stateChanges.subscribe(() => changeDetectorRef.markForCheck());\n  }\n\n  /** The label for the current calendar view. */\n  get periodButtonText(): string {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter\n          .format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel)\n              .toLocaleUpperCase();\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYearName(this.calendar.activeDate);\n    }\n\n    // The offset from the active year to the \"slot\" for the starting year is the\n    // *actual* first rendered year in the multi-year view, and the last year is\n    // just yearsPerPage - 1 away.\n    const activeYear = this._dateAdapter.getYear(this.calendar.activeDate);\n    const minYearOfPage = activeYear - getActiveOffset(\n      this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);\n    const maxYearOfPage = minYearOfPage + yearsPerPage - 1;\n    const minYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));\n    const maxYearName =\n      this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));\n    return this._intl.formatYearRange(minYearName, maxYearName);\n  }\n\n  get periodButtonLabel(): string {\n    return this.calendar.currentView == 'month' ?\n        this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;\n  }\n\n  /** The label for the previous button. */\n  get prevButtonLabel(): string {\n    return {\n      'month': this._intl.prevMonthLabel,\n      'year': this._intl.prevYearLabel,\n      'multi-year': this._intl.prevMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** The label for the next button. */\n  get nextButtonLabel(): string {\n    return {\n      'month': this._intl.nextMonthLabel,\n      'year': this._intl.nextYearLabel,\n      'multi-year': this._intl.nextMultiYearLabel\n    }[this.calendar.currentView];\n  }\n\n  /** Handles user clicks on the period label. */\n  currentPeriodClicked(): void {\n    this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';\n  }\n\n  /** Handles user clicks on the previous button. */\n  previousClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage\n            );\n  }\n\n  /** Handles user clicks on the next button. */\n  nextClicked(): void {\n    this.calendar.activeDate = this.calendar.currentView == 'month' ?\n        this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) :\n            this._dateAdapter.addCalendarYears(\n                this.calendar.activeDate,\n                    this.calendar.currentView == 'year' ? 1 : yearsPerPage\n            );\n  }\n\n  /** Whether the previous period button is enabled. */\n  previousEnabled(): boolean {\n    if (!this.calendar.minDate) {\n      return true;\n    }\n    return !this.calendar.minDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.minDate);\n  }\n\n  /** Whether the next period button is enabled. */\n  nextEnabled(): boolean {\n    return !this.calendar.maxDate ||\n        !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);\n  }\n\n  /** Whether the two dates represent the same view in the current view mode (month or year). */\n  private _isSameView(date1: D, date2: D): boolean {\n    if (this.calendar.currentView == 'month') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) &&\n          this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);\n    }\n    if (this.calendar.currentView == 'year') {\n      return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);\n    }\n    // Otherwise we are in 'multi-year' view.\n    return isSameMultiYearView(\n      this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);\n  }\n}\n\n/**\n * A calendar that is used as part of the datepicker.\n * @docs-private\n */\n@Component({\n  selector: 'mat-calendar',\n  templateUrl: 'calendar.html',\n  styleUrls: ['calendar.css'],\n  host: {\n    'class': 'mat-calendar',\n  },\n  exportAs: 'matCalendar',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]\n})\nexport class MatCalendar<D> implements AfterContentInit, AfterViewChecked, OnDestroy, OnChanges {\n  /** An input indicating the type of the header component, if set. */\n  @Input() headerComponent: ComponentType<any>;\n\n  /** A portal containing the header component type for this calendar. */\n  _calendarHeaderPortal: Portal<any>;\n\n  private _intlChanges: Subscription;\n\n  /**\n   * Used for scheduling that focus should be moved to the active cell on the next tick.\n   * We need to schedule it, rather than do it immediately, because we have to wait\n   * for Angular to re-evaluate the view children.\n   */\n  private _moveFocusOnNextTick = false;\n\n  /** A date representing the period (month or year) to start the calendar in. */\n  @Input()\n  get startAt(): D | null { return this._startAt; }\n  set startAt(value: D | null) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** Whether the calendar should be started in month or year view. */\n  @Input() startView: MatCalendarView = 'month';\n\n  /** The currently selected date. */\n  @Input()\n  get selected(): DateRange<D> | D | null { return this._selected; }\n  set selected(value: DateRange<D> | D | null) {\n    if (value instanceof DateRange) {\n      this._selected = value;\n    } else {\n      this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n    }\n  }\n  private _selected: DateRange<D> | D | null;\n\n  /** The minimum selectable date. */\n  @Input()\n  get minDate(): D | null { return this._minDate; }\n  set minDate(value: D | null) {\n    this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _minDate: D | null;\n\n  /** The maximum selectable date. */\n  @Input()\n  get maxDate(): D | null { return this._maxDate; }\n  set maxDate(value: D | null) {\n    this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _maxDate: D | null;\n\n  /** Function used to filter which dates are selectable. */\n  @Input() dateFilter: (date: D) => boolean;\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Start of the comparison range. */\n  @Input() comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  @Input() comparisonEnd: D | null;\n\n  /**\n   * Emits when the currently selected date changes.\n   * @breaking-change 11.0.0 Emitted value to change to `D | null`.\n   */\n  @Output() readonly selectedChange: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the year chosen in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits the month chosen in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Emits when any date is selected. */\n  @Output() readonly _userSelection: EventEmitter<MatCalendarUserEvent<D | null>> =\n      new EventEmitter<MatCalendarUserEvent<D | null>>();\n\n  /** Reference to the current month view component. */\n  @ViewChild(MatMonthView) monthView: MatMonthView<D>;\n\n  /** Reference to the current year view component. */\n  @ViewChild(MatYearView) yearView: MatYearView<D>;\n\n  /** Reference to the current multi-year view component. */\n  @ViewChild(MatMultiYearView) multiYearView: MatMultiYearView<D>;\n\n  /**\n   * The current active date. This determines which time period is shown and which date is\n   * highlighted when using keyboard navigation.\n   */\n  get activeDate(): D { return this._clampedActiveDate; }\n  set activeDate(value: D) {\n    this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);\n    this.stateChanges.next();\n    this._changeDetectorRef.markForCheck();\n  }\n  private _clampedActiveDate: D;\n\n  /** Whether the calendar is in month view. */\n  get currentView(): MatCalendarView { return this._currentView; }\n  set currentView(value: MatCalendarView) {\n    this._currentView = value;\n    this._moveFocusOnNextTick = true;\n    this._changeDetectorRef.markForCheck();\n  }\n  private _currentView: MatCalendarView;\n\n  /**\n   * Emits whenever there is a state change that the header may need to respond to.\n   */\n  stateChanges = new Subject<void>();\n\n  constructor(_intl: MatDatepickerIntl,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats,\n              private _changeDetectorRef: ChangeDetectorRef) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    this._intlChanges = _intl.changes.subscribe(() => {\n      _changeDetectorRef.markForCheck();\n      this.stateChanges.next();\n    });\n  }\n\n  ngAfterContentInit() {\n    this._calendarHeaderPortal = new ComponentPortal(this.headerComponent || MatCalendarHeader);\n    this.activeDate = this.startAt || this._dateAdapter.today();\n\n    // Assign to the private property since we don't want to move focus on init.\n    this._currentView = this.startView;\n  }\n\n  ngAfterViewChecked() {\n    if (this._moveFocusOnNextTick) {\n      this._moveFocusOnNextTick = false;\n      this.focusActiveCell();\n    }\n  }\n\n  ngOnDestroy() {\n    this._intlChanges.unsubscribe();\n    this.stateChanges.complete();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const change =\n        changes['minDate'] || changes['maxDate'] || changes['dateFilter'];\n\n    if (change && !change.firstChange) {\n      const view = this._getCurrentViewComponent();\n\n      if (view) {\n        // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are\n        // passed down to the view via data bindings which won't be up-to-date when we call `_init`.\n        this._changeDetectorRef.detectChanges();\n        view._init();\n      }\n    }\n\n    this.stateChanges.next();\n  }\n\n  focusActiveCell() {\n    this._getCurrentViewComponent()._focusActiveCell(false);\n  }\n\n  /** Updates today's date after an update of the active date */\n  updateTodaysDate() {\n    const currentView = this.currentView;\n    let view: MatMonthView<D> | MatYearView<D> | MatMultiYearView<D>;\n\n    if (currentView === 'month') {\n      view = this.monthView;\n    } else if (currentView === 'year') {\n      view = this.yearView;\n    } else {\n      view = this.multiYearView;\n    }\n\n    view._init();\n  }\n\n  /** Handles date selection in the month view. */\n  _dateSelected(event: MatCalendarUserEvent<D | null>): void {\n    const date = event.value;\n\n    if (this.selected instanceof DateRange ||\n        (date && !this._dateAdapter.sameDate(date, this.selected))) {\n      // @breaking-change 11.0.0 remove non-null assertion\n      // once the `selectedChange` is allowed to be null.\n      this.selectedChange.emit(date!);\n    }\n\n    this._userSelection.emit(event);\n  }\n\n  /** Handles year selection in the multiyear view. */\n  _yearSelectedInMultiYearView(normalizedYear: D) {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Handles month selection in the year view. */\n  _monthSelectedInYearView(normalizedMonth: D) {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /** Handles year/month selection in the multi-year/year views. */\n  _goToDateInView(date: D, view: 'month' | 'year' | 'multi-year'): void {\n    this.activeDate = date;\n    this.currentView = view;\n  }\n\n  /** Returns the component instance that corresponds to the current calendar view. */\n  private _getCurrentViewComponent() {\n    return this.monthView || this.yearView || this.multiYearView;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material datepicker.\n * @docs-private\n */\nexport const matDatepickerAnimations: {\n  readonly transformPanel: AnimationTriggerMetadata;\n  readonly fadeInCalendar: AnimationTriggerMetadata;\n} = {\n  /** Transforms the height of the datepicker's calendar. */\n  transformPanel: trigger('transformPanel', [\n    state('void', style({\n      opacity: 0,\n      transform: 'scale(1, 0.8)'\n    })),\n    transition('void => enter',  animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({\n      opacity: 1,\n      transform: 'scale(1, 1)'\n    }))),\n    transition('* => void', animate('100ms linear', style({opacity: 0})))\n  ]),\n\n  /** Fades in the content of the calendar. */\n  fadeInCalendar: trigger('fadeInCalendar', [\n    state('void', style({opacity: 0})),\n    state('enter', style({opacity: 1})),\n\n    // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we\n    // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.\n    transition('void => *', animate('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {ESCAPE, UP_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Overlay,\n  OverlayConfig,\n  OverlayRef,\n  ScrollStrategy,\n  FlexibleConnectedPositionStrategy,\n} from '@angular/cdk/overlay';\nimport {ComponentPortal, ComponentType} from '@angular/cdk/portal';\nimport {DOCUMENT} from '@angular/common';\nimport {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  ComponentRef,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  Output,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  ChangeDetectorRef,\n  Directive,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  DateAdapter,\n  mixinColor,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\nimport {merge, Subject, Observable, Subscription} from 'rxjs';\nimport {filter, take} from 'rxjs/operators';\nimport {MatCalendar} from './calendar';\nimport {matDatepickerAnimations} from './datepicker-animations';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {MatCalendarUserEvent, MatCalendarCellClassFunction} from './calendar-body';\nimport {DateFilterFn} from './datepicker-input-base';\nimport {\n  ExtractDateTypeFromSelection,\n  MatDateSelectionModel,\n  DateRange,\n} from './date-selection-model';\nimport {\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n  MatDateRangeSelectionStrategy,\n} from './date-range-selection-strategy';\n\n/** Used to generate a unique ID for each datepicker instance. */\nlet datepickerUid = 0;\n\n/** Injection token that determines the scroll handling while the calendar is open. */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY =\n    new InjectionToken<() => ScrollStrategy>('mat-datepicker-scroll-strategy');\n\n/** @docs-private */\nexport function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay: Overlay): () => ScrollStrategy {\n  return () => overlay.scrollStrategies.reposition();\n}\n\n/** Possible positions for the datepicker dropdown along the X axis. */\nexport type DatepickerDropdownPositionX = 'start' | 'end';\n\n/** Possible positions for the datepicker dropdown along the Y axis. */\nexport type DatepickerDropdownPositionY = 'above' | 'below';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n  provide: MAT_DATEPICKER_SCROLL_STRATEGY,\n  deps: [Overlay],\n  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n};\n\n// Boilerplate for applying mixins to MatDatepickerContent.\n/** @docs-private */\nclass MatDatepickerContentBase {\n  constructor(public _elementRef: ElementRef) { }\n}\nconst _MatDatepickerContentMixinBase: CanColorCtor & typeof MatDatepickerContentBase =\n    mixinColor(MatDatepickerContentBase);\n\n/**\n * Component used as the content for the datepicker dialog and popup. We use this instead of using\n * MatCalendar directly as the content so we can control the initial focus. This also gives us a\n * place to put additional features of the popup that are not part of the calendar itself in the\n * future. (e.g. confirmation buttons).\n * @docs-private\n */\n@Component({\n  selector: 'mat-datepicker-content',\n  templateUrl: 'datepicker-content.html',\n  styleUrls: ['datepicker-content.css'],\n  host: {\n    'class': 'mat-datepicker-content',\n    '[@transformPanel]': '_animationState',\n    '(@transformPanel.done)': '_animationDone.next()',\n    '[class.mat-datepicker-content-touch]': 'datepicker.touchUi',\n  },\n  animations: [\n    matDatepickerAnimations.transformPanel,\n    matDatepickerAnimations.fadeInCalendar,\n  ],\n  exportAs: 'matDatepickerContent',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  inputs: ['color'],\n})\nexport class MatDatepickerContent<S, D = ExtractDateTypeFromSelection<S>>\n  extends _MatDatepickerContentMixinBase implements AfterViewInit, OnDestroy, CanColor {\n  private _subscriptions = new Subscription();\n\n  /** Reference to the internal calendar component. */\n  @ViewChild(MatCalendar) _calendar: MatCalendar<D>;\n\n  /** Reference to the datepicker that created the overlay. */\n  datepicker: MatDatepickerBase<any, S, D>;\n\n  /** Start of the comparison range. */\n  comparisonStart: D | null;\n\n  /** End of the comparison range. */\n  comparisonEnd: D | null;\n\n  /** Whether the datepicker is above or below the input. */\n  _isAbove: boolean;\n\n  /** Current state of the animation. */\n  _animationState: 'enter' | 'void' = 'enter';\n\n  /** Emits when an animation has finished. */\n  _animationDone = new Subject<void>();\n\n  constructor(\n    elementRef: ElementRef,\n    /**\n     * @deprecated `_changeDetectorRef`, `_model` and `_rangeSelectionStrategy`\n     * parameters to become required.\n     * @breaking-change 11.0.0\n     */\n    private _changeDetectorRef?: ChangeDetectorRef,\n    private _model?: MatDateSelectionModel<S, D>,\n    private _dateAdapter?: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_RANGE_SELECTION_STRATEGY)\n        private _rangeSelectionStrategy?: MatDateRangeSelectionStrategy<D>) {\n    super(elementRef);\n  }\n\n  ngAfterViewInit() {\n    // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef.\n    if (this._changeDetectorRef) {\n      this._subscriptions.add(this.datepicker._stateChanges.subscribe(() => {\n        this._changeDetectorRef!.markForCheck();\n      }));\n    }\n\n    this._calendar.focusActiveCell();\n  }\n\n  ngOnDestroy() {\n    this._subscriptions.unsubscribe();\n    this._animationDone.complete();\n  }\n\n  _handleUserSelection(event: MatCalendarUserEvent<D | null>) {\n    // @breaking-change 11.0.0 Remove null checks for _model,\n    // _rangeSelectionStrategy and _dateAdapter.\n    if (this._model && this._dateAdapter) {\n      const selection = this._model.selection;\n      const value = event.value;\n      const isRange = selection instanceof DateRange;\n\n      // If we're selecting a range and we have a selection strategy, always pass the value through\n      // there. Otherwise don't assign null values to the model, unless we're selecting a range.\n      // A null value when picking a range means that the user cancelled the selection (e.g. by\n      // pressing escape), whereas when selecting a single value it means that the value didn't\n      // change. This isn't very intuitive, but it's here for backwards-compatibility.\n      if (isRange && this._rangeSelectionStrategy) {\n        const newSelection = this._rangeSelectionStrategy.selectionFinished(value,\n            selection as unknown as DateRange<D>, event.event);\n        this._model.updateSelection(newSelection as unknown as S, this);\n      } else if (value && (isRange ||\n                !this._dateAdapter.sameDate(value, selection as unknown as D))) {\n        this._model.add(value);\n      }\n    }\n\n    if (!this._model || this._model.isComplete()) {\n      this.datepicker.close();\n    }\n  }\n\n  _startExitAnimation() {\n    this._animationState = 'void';\n\n    // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.\n    if (this._changeDetectorRef) {\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  _getSelected() {\n    // @breaking-change 11.0.0 Remove null check for `_model`.\n    return this._model ? this._model.selection as unknown as D | DateRange<D> | null : null;\n  }\n}\n\n/** Form control that can be associated with a datepicker. */\nexport interface MatDatepickerControl<D> {\n  getStartValue(): D | null;\n  getThemePalette(): ThemePalette;\n  min: D | null;\n  max: D | null;\n  disabled: boolean;\n  dateFilter: DateFilterFn<D>;\n  getConnectedOverlayOrigin(): ElementRef;\n  stateChanges: Observable<void>;\n}\n\n/** Base class for a datepicker. */\n@Directive()\nexport abstract class MatDatepickerBase<C extends MatDatepickerControl<D>, S,\n  D = ExtractDateTypeFromSelection<S>> implements OnDestroy, OnChanges {\n  private _scrollStrategy: () => ScrollStrategy;\n  private _inputStateChanges = Subscription.EMPTY;\n\n  /** An input indicating the type of the custom header component for the calendar, if set. */\n  @Input() calendarHeaderComponent: ComponentType<any>;\n\n  /** The date to open the calendar to initially. */\n  @Input()\n  get startAt(): D | null {\n    // If an explicit startAt is set we start there, otherwise we start at whatever the currently\n    // selected value is.\n    return this._startAt || (this._datepickerInput ? this._datepickerInput.getStartValue() : null);\n  }\n  set startAt(value: D | null) {\n    this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n  }\n  private _startAt: D | null;\n\n  /** The view that the calendar should start in. */\n  @Input() startView: 'month' | 'year' | 'multi-year' = 'month';\n\n  /** Color palette to use on the datepicker's calendar. */\n  @Input()\n  get color(): ThemePalette {\n    return this._color ||\n        (this._datepickerInput ? this._datepickerInput.getThemePalette() : undefined);\n  }\n  set color(value: ThemePalette) {\n    this._color = value;\n  }\n  _color: ThemePalette;\n\n  /**\n   * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather\n   * than a popup and elements have more padding to allow for bigger touch targets.\n   */\n  @Input()\n  get touchUi(): boolean { return this._touchUi; }\n  set touchUi(value: boolean) {\n    this._touchUi = coerceBooleanProperty(value);\n  }\n  private _touchUi = false;\n\n  /** Whether the datepicker pop-up should be disabled. */\n  @Input()\n  get disabled(): boolean {\n    return this._disabled === undefined && this._datepickerInput ?\n        this._datepickerInput.disabled : !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._disabled) {\n      this._disabled = newValue;\n      this._stateChanges.next(undefined);\n    }\n  }\n  private _disabled: boolean;\n\n  /** Preferred position of the datepicker in the X axis. */\n  @Input()\n  xPosition: DatepickerDropdownPositionX = 'start';\n\n  /** Preferred position of the datepicker in the Y axis. */\n  @Input()\n  yPosition: DatepickerDropdownPositionY = 'below';\n\n  /**\n   * Emits selected year in multiyear view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly yearSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /**\n   * Emits selected month in year view.\n   * This doesn't imply a change on the selected date.\n   */\n  @Output() readonly monthSelected: EventEmitter<D> = new EventEmitter<D>();\n\n  /** Classes to be passed to the date picker panel. Supports the same syntax as `ngClass`. */\n  @Input() panelClass: string | string[];\n\n  /** Function that can be used to add custom CSS classes to dates. */\n  @Input() dateClass: MatCalendarCellClassFunction<D>;\n\n  /** Emits when the datepicker has been opened. */\n  @Output('opened') openedStream: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Emits when the datepicker has been closed. */\n  @Output('closed') closedStream: EventEmitter<void> = new EventEmitter<void>();\n\n\n  /** Whether the calendar is open. */\n  @Input()\n  get opened(): boolean { return this._opened; }\n  set opened(value: boolean) {\n    coerceBooleanProperty(value) ? this.open() : this.close();\n  }\n  private _opened = false;\n\n  /** The id for the datepicker calendar. */\n  id: string = `mat-datepicker-${datepickerUid++}`;\n\n  /** The minimum selectable date. */\n  _getMinDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.min;\n  }\n\n  /** The maximum selectable date. */\n  _getMaxDate(): D | null {\n    return this._datepickerInput && this._datepickerInput.max;\n  }\n\n  _getDateFilter(): DateFilterFn<D> {\n    return this._datepickerInput && this._datepickerInput.dateFilter;\n  }\n\n  /** A reference to the overlay when the calendar is opened as a popup. */\n  private _popupRef: OverlayRef | null;\n\n  /** A reference to the dialog when the calendar is opened as a dialog. */\n  private _dialogRef: MatDialogRef<MatDatepickerContent<S, D>> | null;\n\n  /** Reference to the component instantiated in popup mode. */\n  private _popupComponentRef: ComponentRef<MatDatepickerContent<S, D>> | null;\n\n  /** The element that was focused before the datepicker was opened. */\n  private _focusedElementBeforeOpen: HTMLElement | null = null;\n\n  /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */\n  private _backdropHarnessClass = `${this.id}-backdrop`;\n\n  /** The input element this datepicker is associated with. */\n  _datepickerInput: C;\n\n  /** Emits when the datepicker's state changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  constructor(private _dialog: MatDialog,\n              private _overlay: Overlay,\n              private _ngZone: NgZone,\n              private _viewContainerRef: ViewContainerRef,\n              @Inject(MAT_DATEPICKER_SCROLL_STRATEGY) scrollStrategy: any,\n              @Optional() private _dateAdapter: DateAdapter<D>,\n              @Optional() private _dir: Directionality,\n              @Optional() @Inject(DOCUMENT) private _document: any,\n              private _model: MatDateSelectionModel<S, D>) {\n    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    this._scrollStrategy = scrollStrategy;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const positionChange = changes['xPosition'] || changes['yPosition'];\n\n    if (positionChange && !positionChange.firstChange && this._popupRef) {\n      this._setConnectedPositions(\n          this._popupRef.getConfig().positionStrategy as FlexibleConnectedPositionStrategy);\n\n      if (this.opened) {\n        this._popupRef.updatePosition();\n      }\n    }\n\n    this._stateChanges.next(undefined);\n  }\n\n  ngOnDestroy() {\n    this._destroyPopup();\n    this.close();\n    this._inputStateChanges.unsubscribe();\n    this._stateChanges.complete();\n  }\n\n  /** Selects the given date */\n  select(date: D): void {\n    this._model.add(date);\n  }\n\n  /** Emits the selected year in multiyear view */\n  _selectYear(normalizedYear: D): void {\n    this.yearSelected.emit(normalizedYear);\n  }\n\n  /** Emits selected month in year view */\n  _selectMonth(normalizedMonth: D): void {\n    this.monthSelected.emit(normalizedMonth);\n  }\n\n  /**\n   * Register an input with this datepicker.\n   * @param input The datepicker input to register with this datepicker.\n   * @returns Selection model that the input should hook itself up to.\n   */\n  _registerInput(input: C): MatDateSelectionModel<S, D> {\n    if (this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('A MatDatepicker can only be associated with a single input.');\n    }\n    this._inputStateChanges.unsubscribe();\n    this._datepickerInput = input;\n    this._inputStateChanges =\n        input.stateChanges.subscribe(() => this._stateChanges.next(undefined));\n    return this._model;\n  }\n\n  /** Open the calendar. */\n  open(): void {\n    if (this._opened || this.disabled) {\n      return;\n    }\n    if (!this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('Attempted to open an MatDatepicker with no associated input.');\n    }\n    if (this._document) {\n      this._focusedElementBeforeOpen = this._document.activeElement;\n    }\n\n    this.touchUi ? this._openAsDialog() : this._openAsPopup();\n    this._opened = true;\n    this.openedStream.emit();\n  }\n\n  /** Close the calendar. */\n  close(): void {\n    if (!this._opened) {\n      return;\n    }\n    if (this._popupComponentRef && this._popupRef) {\n      const instance = this._popupComponentRef.instance;\n      instance._startExitAnimation();\n      instance._animationDone.pipe(take(1)).subscribe(() => this._destroyPopup());\n    }\n    if (this._dialogRef) {\n      this._dialogRef.close();\n      this._dialogRef = null;\n    }\n\n    const completeClose = () => {\n      // The `_opened` could've been reset already if\n      // we got two events in quick succession.\n      if (this._opened) {\n        this._opened = false;\n        this.closedStream.emit();\n        this._focusedElementBeforeOpen = null;\n      }\n    };\n\n    if (this._focusedElementBeforeOpen &&\n      typeof this._focusedElementBeforeOpen.focus === 'function') {\n      // Because IE moves focus asynchronously, we can't count on it being restored before we've\n      // marked the datepicker as closed. If the event fires out of sequence and the element that\n      // we're refocusing opens the datepicker on focus, the user could be stuck with not being\n      // able to close the calendar at all. We work around it by making the logic, that marks\n      // the datepicker as closed, async as well.\n      this._focusedElementBeforeOpen.focus();\n      setTimeout(completeClose);\n    } else {\n      completeClose();\n    }\n  }\n\n  /** Open the calendar as a dialog. */\n  private _openAsDialog(): void {\n    // Usually this would be handled by `open` which ensures that we can only have one overlay\n    // open at a time, however since we reset the variables in async handlers some overlays\n    // may slip through if the user opens and closes multiple times in quick succession (e.g.\n    // by holding down the enter key).\n    if (this._dialogRef) {\n      this._dialogRef.close();\n    }\n\n    this._dialogRef = this._dialog.open<MatDatepickerContent<S, D>>(MatDatepickerContent, {\n      direction: this._dir ? this._dir.value : 'ltr',\n      viewContainerRef: this._viewContainerRef,\n      panelClass: 'mat-datepicker-dialog',\n\n      // These values are all the same as the defaults, but we set them explicitly so that the\n      // datepicker dialog behaves consistently even if the user changed the defaults.\n      hasBackdrop: true,\n      disableClose: false,\n      backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],\n      width: '',\n      height: '',\n      minWidth: '',\n      minHeight: '',\n      maxWidth: '80vw',\n      maxHeight: '',\n      position: {},\n      autoFocus: true,\n\n      // `MatDialog` has focus restoration built in, however we want to disable it since the\n      // datepicker also has focus restoration for dropdown mode. We want to do this, in order\n      // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`\n      // restores focus when the animation is finished, but the datepicker does it immediately.\n      // Furthermore, this avoids any conflicts where the datepicker consumer might move focus\n      // inside the `closed` event which is dispatched immediately.\n      restoreFocus: false\n    });\n\n    this._dialogRef.afterClosed().subscribe(() => this.close());\n    this._forwardContentValues(this._dialogRef.componentInstance);\n  }\n\n  /** Open the calendar as a popup. */\n  private _openAsPopup(): void {\n    const portal = new ComponentPortal<MatDatepickerContent<S, D>>(MatDatepickerContent,\n                                                                   this._viewContainerRef);\n\n    this._destroyPopup();\n    this._createPopup();\n    this._popupComponentRef = this._popupRef!.attach(portal);\n    this._forwardContentValues(this._popupComponentRef.instance);\n\n    // Update the position once the calendar has rendered.\n    this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n      this._popupRef!.updatePosition();\n    });\n  }\n\n  /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */\n  protected _forwardContentValues(instance: MatDatepickerContent<S, D>) {\n    instance.datepicker = this;\n    instance.color = this.color;\n  }\n\n  /** Create the popup. */\n  private _createPopup(): void {\n    const positionStrategy = this._overlay.position()\n      .flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin())\n      .withTransformOriginOn('.mat-datepicker-content')\n      .withFlexibleDimensions(false)\n      .withViewportMargin(8)\n      .withLockedPosition();\n\n    const overlayConfig = new OverlayConfig({\n      positionStrategy: this._setConnectedPositions(positionStrategy),\n      hasBackdrop: true,\n      backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],\n      direction: this._dir,\n      scrollStrategy: this._scrollStrategy(),\n      panelClass: 'mat-datepicker-popup',\n    });\n\n    this._popupRef = this._overlay.create(overlayConfig);\n    this._popupRef.overlayElement.setAttribute('role', 'dialog');\n\n    merge(\n      this._popupRef.backdropClick(),\n      this._popupRef.detachments(),\n      this._popupRef.keydownEvents().pipe(filter(event => {\n        // Closing on alt + up is only valid when there's an input associated with the datepicker.\n        return event.keyCode === ESCAPE ||\n               (this._datepickerInput && event.altKey && event.keyCode === UP_ARROW);\n      }))\n    ).subscribe(event => {\n      if (event) {\n        event.preventDefault();\n      }\n\n      this.close();\n    });\n  }\n\n  /** Destroys the current popup overlay. */\n  private _destroyPopup() {\n    if (this._popupRef) {\n      this._popupRef.dispose();\n      this._popupRef = this._popupComponentRef = null;\n    }\n  }\n\n  /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */\n  private _setConnectedPositions(strategy: FlexibleConnectedPositionStrategy) {\n    const primaryX = this.xPosition === 'end' ? 'end' : 'start';\n    const secondaryX = primaryX === 'start' ? 'end' : 'start';\n    const primaryY = this.yPosition === 'above' ? 'bottom' : 'top';\n    const secondaryY = primaryY === 'top' ? 'bottom' : 'top';\n\n    return strategy.withPositions([\n      {\n        originX: primaryX,\n        originY: secondaryY,\n        overlayX: primaryX,\n        overlayY: primaryY\n      },\n      {\n        originX: primaryX,\n        originY: primaryY,\n        overlayX: primaryX,\n        overlayY: secondaryY\n      },\n      {\n        originX: secondaryX,\n        originY: secondaryY,\n        overlayX: secondaryX,\n        overlayY: primaryY\n      },\n      {\n        originX: secondaryX,\n        originY: primaryY,\n        overlayX: secondaryX,\n        overlayY: secondaryY\n      }\n    ]);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_opened: BooleanInput;\n  static ngAcceptInputType_touchUi: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDatepickerBase, MatDatepickerControl} from './datepicker-base';\nimport {MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER} from './date-selection-model';\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDatepicker\"). We can change this to a directive\n// if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the datepicker popup/dialog. */\n@Component({\n  selector: 'mat-datepicker',\n  template: '',\n  exportAs: 'matDatepicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]\n})\nexport class MatDatepicker<D> extends MatDatepickerBase<MatDatepickerControl<D>, D | null, D> {\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {DOWN_ARROW} from '@angular/cdk/keycodes';\nimport {\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  AfterViewInit,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {\n  AbstractControl,\n  ControlValueAccessor,\n  ValidationErrors,\n  Validator,\n  ValidatorFn,\n} from '@angular/forms';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n} from '@angular/material/core';\nimport {Subscription, Subject} from 'rxjs';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {\n  ExtractDateTypeFromSelection,\n  MatDateSelectionModel,\n  DateSelectionModelChange,\n} from './date-selection-model';\n\n/**\n * An event used for datepicker input and change events. We don't always have access to a native\n * input or change event because the event may have been triggered by the user clicking on the\n * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.\n */\nexport class MatDatepickerInputEvent<D, S = unknown> {\n  /** The new value for the target datepicker input. */\n  value: D | null;\n\n  constructor(\n      /** Reference to the datepicker input component that emitted the event. */\n      public target: MatDatepickerInputBase<S, D>,\n      /** Reference to the native input element associated with the datepicker input. */\n      public targetElement: HTMLElement) {\n    this.value = this.target.value;\n  }\n}\n\n/** Function that can be used to filter out dates from a calendar. */\nexport type DateFilterFn<D> = (date: D | null) => boolean;\n\n/** Base class for datepicker inputs. */\n@Directive()\nexport abstract class MatDatepickerInputBase<S, D = ExtractDateTypeFromSelection<S>>\n  implements ControlValueAccessor, AfterViewInit, OnChanges, OnDestroy, Validator {\n\n  /** Whether the component has been initialized. */\n  private _isInitialized: boolean;\n\n  /** The value of the input. */\n  @Input()\n  get value(): D | null {\n    return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;\n  }\n  set value(value: D | null) {\n    value = this._dateAdapter.deserialize(value);\n    this._lastValueValid = this._isValidValue(value);\n    value = this._dateAdapter.getValidDateOrNull(value);\n    const oldDate = this.value;\n    this._assignValue(value);\n    this._formatValue(value);\n\n    if (!this._dateAdapter.sameDate(oldDate, value)) {\n      this._valueChange.emit(value);\n    }\n  }\n  protected _model: MatDateSelectionModel<S, D> | undefined;\n\n  /** Whether the datepicker-input is disabled. */\n  @Input()\n  get disabled(): boolean { return !!this._disabled || this._parentDisabled(); }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n    const element = this._elementRef.nativeElement;\n\n    if (this._disabled !== newValue) {\n      this._disabled = newValue;\n      this.stateChanges.next(undefined);\n    }\n\n    // We need to null check the `blur` method, because it's undefined during SSR.\n    // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.\n    // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the\n    // element has been inserted.\n    if (newValue && this._isInitialized && element.blur) {\n      // Normally, native input elements automatically blur if they turn disabled. This behavior\n      // is problematic, because it would mean that it triggers another change detection cycle,\n      // which then causes a changed after checked error if the input element was focused before.\n      element.blur();\n    }\n  }\n  private _disabled: boolean;\n\n  /** Emits when a `change` event is fired on this `<input>`. */\n  @Output() readonly dateChange: EventEmitter<MatDatepickerInputEvent<D, S>> =\n      new EventEmitter<MatDatepickerInputEvent<D, S>>();\n\n  /** Emits when an `input` event is fired on this `<input>`. */\n  @Output() readonly dateInput: EventEmitter<MatDatepickerInputEvent<D, S>> =\n      new EventEmitter<MatDatepickerInputEvent<D, S>>();\n\n  /** Emits when the value changes (either due to user input or programmatic change). */\n  _valueChange = new EventEmitter<D | null>();\n\n  /** Emits when the internal state has changed */\n  stateChanges = new Subject<void>();\n\n  _onTouched = () => {};\n  _validatorOnChange = () => {};\n\n  protected _cvaOnChange: (value: any) => void = () => {};\n  private _valueChangesSubscription = Subscription.EMPTY;\n  private _localeSubscription = Subscription.EMPTY;\n\n  /**\n   * Since the value is kept on the model which is assigned in an Input,\n   * we might get a value before we have a model. This property keeps track\n   * of the value until we have somewhere to assign it.\n   */\n  private _pendingValue: D | null;\n\n  /** The form control validator for whether the input parses. */\n  private _parseValidator: ValidatorFn = (): ValidationErrors | null => {\n    return this._lastValueValid ?\n        null : {'matDatepickerParse': {'text': this._elementRef.nativeElement.value}};\n  }\n\n  /** The form control validator for the date filter. */\n  private _filterValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    const dateFilter = this._getDateFilter();\n    return !dateFilter || !controlValue || dateFilter(controlValue) ?\n        null : {'matDatepickerFilter': true};\n  }\n\n  /** The form control validator for the min date. */\n  private _minValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    const min = this._getMinDate();\n    return (!min || !controlValue ||\n        this._dateAdapter.compareDate(min, controlValue) <= 0) ?\n        null : {'matDatepickerMin': {'min': min, 'actual': controlValue}};\n  }\n\n  /** The form control validator for the max date. */\n  private _maxValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const controlValue = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    const max = this._getMaxDate();\n    return (!max || !controlValue ||\n        this._dateAdapter.compareDate(max, controlValue) >= 0) ?\n        null : {'matDatepickerMax': {'max': max, 'actual': controlValue}};\n  }\n\n  /** Gets the base validator functions. */\n  protected _getValidators(): ValidatorFn[] {\n    return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];\n  }\n\n  /** Gets the minimum date for the input. Used for validation. */\n  abstract _getMinDate(): D | null;\n\n  /** Gets the maximum date for the input. Used for validation. */\n  abstract _getMaxDate(): D | null;\n\n  /** Gets the date filter function. Used for validation. */\n  protected abstract _getDateFilter(): DateFilterFn<D> | undefined;\n\n  /** Registers a date selection model with the input. */\n  _registerModel(model: MatDateSelectionModel<S, D>): void {\n    this._model = model;\n    this._valueChangesSubscription.unsubscribe();\n\n    if (this._pendingValue) {\n      this._assignValue(this._pendingValue);\n    }\n\n    this._valueChangesSubscription = this._model.selectionChanged.subscribe(event => {\n      if (event.source !== this) {\n        const value = this._getValueFromModel(event.selection);\n        this._lastValueValid = this._isValidValue(value);\n        this._cvaOnChange(value);\n        this._onTouched();\n        this._formatValue(value);\n\n        // Note that we can't wrap the entire block with this logic, because for the range inputs\n        // we want to revalidate whenever either one of the inputs changes and we don't have a\n        // good way of distinguishing it at the moment.\n        if (this._canEmitChangeEvent(event)) {\n          this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n          this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n        }\n\n        if (this._outsideValueChanged) {\n          this._outsideValueChanged();\n        }\n      }\n    });\n  }\n\n  /** Opens the popup associated with the input. */\n  protected abstract _openPopup(): void;\n\n  /** Assigns a value to the input's model. */\n  protected abstract _assignValueToModel(model: D | null): void;\n\n  /** Converts a value from the model into a native value for the input. */\n  protected abstract _getValueFromModel(modelValue: S): D | null;\n\n  /** Combined form control validator for this input. */\n  protected abstract _validator: ValidatorFn | null;\n\n  /**\n   * Callback that'll be invoked when the selection model is changed\n   * from somewhere that's not the current datepicker input.\n   */\n  protected abstract _outsideValueChanged?: () => void;\n\n  /** Predicate that determines whether we're allowed to emit a particular change event. */\n  protected abstract _canEmitChangeEvent(event: DateSelectionModelChange<S>): boolean;\n\n  /** Whether the last value set on the input was valid. */\n  protected _lastValueValid = false;\n\n  constructor(\n      protected _elementRef: ElementRef<HTMLInputElement>,\n      @Optional() public _dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) private _dateFormats: MatDateFormats) {\n\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._dateAdapter) {\n        throw createMissingDateImplError('DateAdapter');\n      }\n      if (!this._dateFormats) {\n        throw createMissingDateImplError('MAT_DATE_FORMATS');\n      }\n    }\n\n    // Update the displayed date when the locale changes.\n    this._localeSubscription = _dateAdapter.localeChanges.subscribe(() => {\n      this.value = this.value;\n    });\n  }\n\n  ngAfterViewInit() {\n    this._isInitialized = true;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n\n  ngOnDestroy() {\n    this._valueChangesSubscription.unsubscribe();\n    this._localeSubscription.unsubscribe();\n    this._valueChange.complete();\n    this.stateChanges.complete();\n  }\n\n  /** @docs-private */\n  registerOnValidatorChange(fn: () => void): void {\n    this._validatorOnChange = fn;\n  }\n\n  /** @docs-private */\n  validate(c: AbstractControl): ValidationErrors | null {\n    return this._validator ? this._validator(c) : null;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value: D): void {\n    this.value = value;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn: (value: any) => void): void {\n    this._cvaOnChange = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn: () => void): void {\n    this._onTouched = fn;\n  }\n\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled: boolean): void {\n    this.disabled = isDisabled;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    const isAltDownArrow = event.altKey && event.keyCode === DOWN_ARROW;\n\n    if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {\n      this._openPopup();\n      event.preventDefault();\n    }\n  }\n\n  _onInput(value: string) {\n    const lastValueWasValid = this._lastValueValid;\n    let date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);\n    this._lastValueValid = this._isValidValue(date);\n    date = this._dateAdapter.getValidDateOrNull(date);\n\n    if (!this._dateAdapter.sameDate(date, this.value)) {\n      this._assignValue(date);\n      this._cvaOnChange(date);\n      this._valueChange.emit(date);\n      this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n    } else {\n      // Call the CVA change handler for invalid values\n      // since this is what marks the control as dirty.\n      if (value && !this.value) {\n        this._cvaOnChange(date);\n      }\n\n      if (lastValueWasValid !== this._lastValueValid) {\n        this._validatorOnChange();\n      }\n    }\n  }\n\n  _onChange() {\n    this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));\n  }\n\n  /** Handles blur events on the input. */\n  _onBlur() {\n    // Reformat the input only if we have a valid value.\n    if (this.value) {\n      this._formatValue(this.value);\n    }\n\n    this._onTouched();\n  }\n\n  /** Formats a value and sets it on the input element. */\n  protected _formatValue(value: D | null) {\n    this._elementRef.nativeElement.value =\n        value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';\n  }\n\n  /** Assigns a value to the model. */\n  private _assignValue(value: D | null) {\n    // We may get some incoming values before the model was\n    // assigned. Save the value so that we can assign it later.\n    if (this._model) {\n      this._assignValueToModel(value);\n      this._pendingValue = null;\n    } else {\n      this._pendingValue = value;\n    }\n  }\n\n  /** Whether a value is considered valid. */\n  private _isValidValue(value: D | null): boolean {\n    return !value || this._dateAdapter.isValid(value);\n  }\n\n  /**\n   * Checks whether a parent control is disabled. This is in place so that it can be overridden\n   * by inputs extending this one which can be placed inside of a group that can be disabled.\n   */\n  protected _parentDisabled() {\n    return false;\n  }\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that\n  // may accept different types.\n  static ngAcceptInputType_value: any;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n/**\n * Checks whether the `SimpleChanges` object from an `ngOnChanges`\n * callback has any changes, accounting for date objects.\n */\nexport function dateInputsHaveChanged(\n  changes: SimpleChanges,\n  adapter: DateAdapter<unknown>): boolean {\n  const keys = Object.keys(changes);\n\n  for (let key of keys) {\n    const {previousValue, currentValue} = changes[key];\n\n    if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {\n      if (!adapter.sameDate(previousValue, currentValue)) {\n        return true;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  return false;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  Optional,\n} from '@angular/core';\nimport {\n  NG_VALIDATORS,\n  NG_VALUE_ACCESSOR,\n  ValidatorFn,\n  Validators,\n} from '@angular/forms';\nimport {\n  DateAdapter,\n  MAT_DATE_FORMATS,\n  MatDateFormats,\n  ThemePalette,\n} from '@angular/material/core';\nimport {MatFormField, MAT_FORM_FIELD} from '@angular/material/form-field';\nimport {MAT_INPUT_VALUE_ACCESSOR} from '@angular/material/input';\nimport {MatDatepicker} from './datepicker';\nimport {MatDatepickerInputBase, DateFilterFn} from './datepicker-input-base';\nimport {MatDatepickerControl} from './datepicker-base';\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** @docs-private */\nexport const MAT_DATEPICKER_VALIDATORS: any = {\n  provide: NG_VALIDATORS,\n  useExisting: forwardRef(() => MatDatepickerInput),\n  multi: true\n};\n\n/** Directive used to connect an input to a MatDatepicker. */\n@Directive({\n  selector: 'input[matDatepicker]',\n  providers: [\n    MAT_DATEPICKER_VALUE_ACCESSOR,\n    MAT_DATEPICKER_VALIDATORS,\n    {provide: MAT_INPUT_VALUE_ACCESSOR, useExisting: MatDatepickerInput},\n  ],\n  host: {\n    'class': 'mat-datepicker-input',\n    '[attr.aria-haspopup]': '_datepicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',\n    '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',\n    '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',\n    // Used by the test harness to tie this input to its calendar. We can't depend on\n    // `aria-owns` for this, because it's only defined while the calendar is open.\n    '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(blur)': '_onBlur()',\n    '(keydown)': '_onKeydown($event)',\n  },\n  exportAs: 'matDatepickerInput',\n})\nexport class MatDatepickerInput<D> extends MatDatepickerInputBase<D | null, D>\n  implements MatDatepickerControl<D | null> {\n  /** The datepicker that this input is associated with. */\n  @Input()\n  set matDatepicker(datepicker: MatDatepicker<D>) {\n    if (datepicker) {\n      this._datepicker = datepicker;\n      this._registerModel(datepicker._registerInput(this));\n    }\n  }\n  _datepicker: MatDatepicker<D>;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._validatorOnChange();\n    }\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._validatorOnChange();\n    }\n  }\n  private _max: D | null;\n\n  /** Function that can be used to filter out dates within the datepicker. */\n  @Input('matDatepickerFilter')\n  get dateFilter() { return this._dateFilter; }\n  set dateFilter(value: DateFilterFn<D | null>) {\n    this._dateFilter = value;\n    this._validatorOnChange();\n  }\n  private _dateFilter: DateFilterFn<D | null>;\n\n  /** The combined form control validator for this input. */\n  protected _validator: ValidatorFn | null;\n\n  constructor(\n      elementRef: ElementRef<HTMLInputElement>,\n      @Optional() dateAdapter: DateAdapter<D>,\n      @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats,\n      @Optional() @Inject(MAT_FORM_FIELD) private _formField: MatFormField) {\n    super(elementRef, dateAdapter, dateFormats);\n    this._validator = Validators.compose(super._getValidators());\n  }\n\n  /**\n   * Gets the element that the datepicker popup should be connected to.\n   * @return The element to connect the popup to.\n   */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  /** Returns the palette used by the input's form field, if any. */\n  getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Gets the value at which the calendar should start. */\n  getStartValue(): D | null {\n    return this.value;\n  }\n\n  /**\n   * @deprecated\n   * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead\n   */\n  getPopupConnectionElementRef(): ElementRef {\n    return this.getConnectedOverlayOrigin();\n  }\n\n  /** Opens the associated datepicker. */\n  protected _openPopup(): void {\n    if (this._datepicker) {\n      this._datepicker.open();\n    }\n  }\n\n  protected _getValueFromModel(modelValue: D | null): D | null {\n    return modelValue;\n  }\n\n  protected _assignValueToModel(value: D | null): void {\n    if (this._model) {\n      this._model.updateSelection(value, this);\n    }\n  }\n\n  /** Gets the input's minimum date. */\n  _getMinDate() {\n    return this._min;\n  }\n\n  /** Gets the input's maximum date. */\n  _getMaxDate() {\n    return this._max;\n  }\n\n  /** Gets the input's date filtering function. */\n  protected _getDateFilter() {\n    return this._dateFilter;\n  }\n\n  protected _canEmitChangeEvent() {\n    return true;\n  }\n\n  // Unnecessary when selecting a single date.\n  protected _outsideValueChanged: undefined;\n\n  // Accept `any` to avoid conflicts with other directives on `<input>` that\n  // may accept different types.\n  static ngAcceptInputType_value: any;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChild,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges,\n  ViewEncapsulation,\n  ViewChild,\n} from '@angular/core';\nimport {MatButton} from '@angular/material/button';\nimport {merge, of as observableOf, Subscription} from 'rxjs';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerBase, MatDatepickerControl} from './datepicker-base';\n\n\n/** Can be used to override the icon of a `matDatepickerToggle`. */\n@Directive({\n  selector: '[matDatepickerToggleIcon]'\n})\nexport class MatDatepickerToggleIcon {}\n\n\n@Component({\n  selector: 'mat-datepicker-toggle',\n  templateUrl: 'datepicker-toggle.html',\n  styleUrls: ['datepicker-toggle.css'],\n  host: {\n    'class': 'mat-datepicker-toggle',\n    // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the\n    // consumer may have provided, while still being able to receive focus.\n    '[attr.tabindex]': 'disabled ? null : -1',\n    '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',\n    '[class.mat-accent]': 'datepicker && datepicker.color === \"accent\"',\n    '[class.mat-warn]': 'datepicker && datepicker.color === \"warn\"',\n    // Used by the test harness to tie this toggle to its datepicker.\n    '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',\n    '(focus)': '_button.focus()',\n  },\n  exportAs: 'matDatepickerToggle',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class MatDatepickerToggle<D> implements AfterContentInit, OnChanges, OnDestroy {\n  private _stateChanges = Subscription.EMPTY;\n\n  /** Datepicker instance that the button will toggle. */\n  @Input('for') datepicker: MatDatepickerBase<MatDatepickerControl<any>, D>;\n\n  /** Tabindex for the toggle. */\n  @Input() tabIndex: number | null;\n\n  /** Whether the toggle button is disabled. */\n  @Input()\n  get disabled(): boolean {\n    if (this._disabled === undefined && this.datepicker) {\n      return this.datepicker.disabled;\n    }\n\n    return !!this._disabled;\n  }\n  set disabled(value: boolean) {\n    this._disabled = coerceBooleanProperty(value);\n  }\n  private _disabled: boolean;\n\n  /** Whether ripples on the toggle should be disabled. */\n  @Input() disableRipple: boolean;\n\n  /** Custom icon set by the consumer. */\n  @ContentChild(MatDatepickerToggleIcon) _customIcon: MatDatepickerToggleIcon;\n\n  /** Underlying button element. */\n  @ViewChild('button') _button: MatButton;\n\n  constructor(\n    public _intl: MatDatepickerIntl,\n    private _changeDetectorRef: ChangeDetectorRef,\n    @Attribute('tabindex') defaultTabIndex: string) {\n\n    const parsedTabIndex = Number(defaultTabIndex);\n    this.tabIndex = (parsedTabIndex || parsedTabIndex === 0) ? parsedTabIndex : null;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['datepicker']) {\n      this._watchStateChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this._stateChanges.unsubscribe();\n  }\n\n  ngAfterContentInit() {\n    this._watchStateChanges();\n  }\n\n  _open(event: Event): void {\n    if (this.datepicker && !this.disabled) {\n      this.datepicker.open();\n      event.stopPropagation();\n    }\n  }\n\n  private _watchStateChanges() {\n    const datepickerStateChanged = this.datepicker ? this.datepicker._stateChanges : observableOf();\n    const inputStateChanged = this.datepicker && this.datepicker._datepickerInput ?\n        this.datepicker._datepickerInput.stateChanges : observableOf();\n    const datepickerToggled = this.datepicker ?\n        merge(this.datepicker.openedStream, this.datepicker.closedStream) :\n        observableOf();\n\n    this._stateChanges.unsubscribe();\n    this._stateChanges = merge(\n      this._intl.changes,\n      datepickerStateChanged,\n      inputStateChanged,\n      datepickerToggled\n    ).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Directive,\n  ElementRef,\n  Optional,\n  InjectionToken,\n  Inject,\n  OnInit,\n  Injector,\n  InjectFlags,\n  DoCheck,\n} from '@angular/core';\nimport {\n  NG_VALUE_ACCESSOR,\n  NG_VALIDATORS,\n  NgForm,\n  FormGroupDirective,\n  NgControl,\n  ValidatorFn,\n  Validators,\n  AbstractControl,\n  ValidationErrors,\n} from '@angular/forms';\nimport {\n  CanUpdateErrorState,\n  CanUpdateErrorStateCtor,\n  mixinErrorState,\n  MAT_DATE_FORMATS,\n  DateAdapter,\n  MatDateFormats,\n  ErrorStateMatcher,\n} from '@angular/material/core';\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {BACKSPACE} from '@angular/cdk/keycodes';\nimport {MatDatepickerInputBase, DateFilterFn} from './datepicker-input-base';\nimport {DateRange, DateSelectionModelChange} from './date-selection-model';\n\n/** Parent component that should be wrapped around `MatStartDate` and `MatEndDate`. */\nexport interface MatDateRangeInputParent<D> {\n  id: string;\n  min: D | null;\n  max: D | null;\n  dateFilter: DateFilterFn<D>;\n  rangePicker: {\n    opened: boolean;\n    id: string;\n  };\n  _startInput: MatDateRangeInputPartBase<D>;\n  _endInput: MatDateRangeInputPartBase<D>;\n  _groupDisabled: boolean;\n  _handleChildValueChange(): void;\n  _openDatepicker(): void;\n}\n\n/**\n * Used to provide the date range input wrapper component\n * to the parts without circular dependencies.\n */\nexport const MAT_DATE_RANGE_INPUT_PARENT =\n    new InjectionToken<MatDateRangeInputParent<unknown>>('MAT_DATE_RANGE_INPUT_PARENT');\n\n/**\n * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.\n */\n@Directive()\nabstract class MatDateRangeInputPartBase<D>\n  extends MatDatepickerInputBase<DateRange<D>> implements OnInit, DoCheck {\n\n  /** @docs-private */\n  ngControl: NgControl;\n\n  /** @docs-private */\n  abstract updateErrorState(): void;\n\n  protected abstract _validator: ValidatorFn | null;\n  protected abstract _assignValueToModel(value: D | null): void;\n  protected abstract _getValueFromModel(modelValue: DateRange<D>): D | null;\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) public _rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    public _defaultErrorStateMatcher: ErrorStateMatcher,\n    private _injector: Injector,\n    @Optional() public _parentForm: NgForm,\n    @Optional() public _parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n    super(elementRef, dateAdapter, dateFormats);\n  }\n\n  ngOnInit() {\n    // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while\n    // injecting its `NgControl` so that the error state is handled correctly. This introduces a\n    // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input\n    // itself. Usually we can work around it for the CVA, but there's no API to do it for the\n    // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after\n    // everything has been resolved.\n    const ngControl = this._injector.get(NgControl, null, InjectFlags.Self);\n\n    if (ngControl) {\n      this.ngControl = ngControl;\n    }\n  }\n\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n\n  /** Gets whether the input is empty. */\n  isEmpty(): boolean {\n    return this._elementRef.nativeElement.value.length === 0;\n  }\n\n  /** Gets the placeholder of the input. */\n  _getPlaceholder() {\n    return this._elementRef.nativeElement.placeholder;\n  }\n\n  /** Focuses the input. */\n  focus(): void {\n    this._elementRef.nativeElement.focus();\n  }\n\n  /** Handles `input` events on the input element. */\n  _onInput(value: string) {\n    super._onInput(value);\n    this._rangeInput._handleChildValueChange();\n  }\n\n  /** Opens the datepicker associated with the input. */\n  protected _openPopup(): void {\n    this._rangeInput._openDatepicker();\n  }\n\n  /** Gets the minimum date from the range input. */\n  _getMinDate() {\n    return this._rangeInput.min;\n  }\n\n  /** Gets the maximum date from the range input. */\n  _getMaxDate() {\n    return this._rangeInput.max;\n  }\n\n  /** Gets the date filter function from the range input. */\n  protected _getDateFilter() {\n    return this._rangeInput.dateFilter;\n  }\n\n  protected _outsideValueChanged = () => {\n    // Whenever the value changes outside the input we need to revalidate, because\n    // the validation state of each of the inputs depends on the other one.\n    this._validatorOnChange();\n  }\n\n  protected _parentDisabled() {\n    return this._rangeInput._groupDisabled;\n  }\n}\n\nconst _MatDateRangeInputBase:\n    CanUpdateErrorStateCtor & typeof MatDateRangeInputPartBase =\n    // Needs to be `as any`, because the base class is abstract.\n    mixinErrorState(MatDateRangeInputPartBase as any);\n\n/** Input for entering the start date in a `mat-date-range-input`. */\n@Directive({\n  selector: 'input[matStartDate]',\n  host: {\n    'class': 'mat-start-date mat-date-range-input-inner',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(keydown)': '_onKeydown($event)',\n    '[attr.id]': '_rangeInput.id',\n    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n    '(blur)': '_onBlur()',\n    'type': 'text',\n  },\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: MatStartDate, multi: true},\n    {provide: NG_VALIDATORS, useExisting: MatStartDate, multi: true}\n  ]\n})\nexport class MatStartDate<D> extends _MatDateRangeInputBase<D> implements CanUpdateErrorState {\n  /** Validator that checks that the start date isn't after the end date. */\n  private _startValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const start = this._dateAdapter.getValidDateOrNull(\n      this._dateAdapter.deserialize(control.value));\n    const end = this._model ? this._model.selection.end : null;\n    return (!start || !end ||\n        this._dateAdapter.compareDate(start, end) <= 0) ?\n        null : {'matStartDateInvalid': {'end': end, 'actual': start}};\n  }\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    defaultErrorStateMatcher: ErrorStateMatcher,\n    injector: Injector,\n    @Optional() parentForm: NgForm,\n    @Optional() parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup,\n        dateAdapter, dateFormats);\n  }\n\n  protected _validator = Validators.compose([...super._getValidators(), this._startValidator]);\n\n  protected _getValueFromModel(modelValue: DateRange<D>) {\n    return modelValue.start;\n  }\n\n  protected _assignValueToModel(value: D | null) {\n    if (this._model) {\n      const range = new DateRange(value, this._model.selection.end);\n      this._model.updateSelection(range, this);\n      this._cvaOnChange(value);\n    }\n  }\n\n  protected _canEmitChangeEvent = (event: DateSelectionModelChange<DateRange<D>>): boolean => {\n    return event.source !== this._rangeInput._endInput;\n  }\n\n  protected _formatValue(value: D | null) {\n    super._formatValue(value);\n\n    // Any time the input value is reformatted we need to tell the parent.\n    this._rangeInput._handleChildValueChange();\n  }\n\n  /** Gets the value that should be used when mirroring the input's size. */\n  getMirrorValue(): string {\n    const element = this._elementRef.nativeElement;\n    const value = element.value;\n    return value.length > 0 ? value : element.placeholder;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n\n\n/** Input for entering the end date in a `mat-date-range-input`. */\n@Directive({\n  selector: 'input[matEndDate]',\n  host: {\n    'class': 'mat-end-date mat-date-range-input-inner',\n    '[disabled]': 'disabled',\n    '(input)': '_onInput($event.target.value)',\n    '(change)': '_onChange()',\n    '(keydown)': '_onKeydown($event)',\n    '[attr.aria-haspopup]': '_rangeInput.rangePicker ? \"dialog\" : null',\n    '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',\n    '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',\n    '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',\n    '(blur)': '_onBlur()',\n    'type': 'text',\n  },\n  providers: [\n    {provide: NG_VALUE_ACCESSOR, useExisting: MatEndDate, multi: true},\n    {provide: NG_VALIDATORS, useExisting: MatEndDate, multi: true}\n  ]\n})\nexport class MatEndDate<D> extends _MatDateRangeInputBase<D> implements CanUpdateErrorState {\n  /** Validator that checks that the end date isn't before the start date. */\n  private _endValidator: ValidatorFn = (control: AbstractControl): ValidationErrors | null => {\n    const end = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(control.value));\n    const start = this._model ? this._model.selection.start : null;\n    return (!end || !start ||\n        this._dateAdapter.compareDate(end, start) >= 0) ?\n        null : {'matEndDateInvalid': {'start': start, 'actual': end}};\n  }\n\n  constructor(\n    @Inject(MAT_DATE_RANGE_INPUT_PARENT) rangeInput: MatDateRangeInputParent<D>,\n    elementRef: ElementRef<HTMLInputElement>,\n    defaultErrorStateMatcher: ErrorStateMatcher,\n    injector: Injector,\n    @Optional() parentForm: NgForm,\n    @Optional() parentFormGroup: FormGroupDirective,\n    @Optional() dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_DATE_FORMATS) dateFormats: MatDateFormats) {\n\n    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to\n    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this\n    // constructor once ViewEngine is removed.\n    super(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup,\n        dateAdapter, dateFormats);\n  }\n\n  protected _validator = Validators.compose([...super._getValidators(), this._endValidator]);\n\n  protected _getValueFromModel(modelValue: DateRange<D>) {\n    return modelValue.end;\n  }\n\n  protected _assignValueToModel(value: D | null) {\n    if (this._model) {\n      const range = new DateRange(this._model.selection.start, value);\n      this._model.updateSelection(range, this);\n      this._cvaOnChange(value);\n    }\n  }\n\n  protected _canEmitChangeEvent = (event: DateSelectionModelChange<DateRange<D>>): boolean => {\n    return event.source !== this._rangeInput._startInput;\n  }\n\n  _onKeydown(event: KeyboardEvent) {\n    // If the user is pressing backspace on an empty end input, move focus back to the start.\n    if (event.keyCode === BACKSPACE && !this._elementRef.nativeElement.value) {\n      this._rangeInput._startInput.focus();\n    }\n\n    super._onKeydown(event);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {ChangeDetectionStrategy, Component, ViewEncapsulation} from '@angular/core';\nimport {MatDatepickerBase, MatDatepickerContent, MatDatepickerControl} from './datepicker-base';\nimport {MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, DateRange} from './date-selection-model';\nimport {MAT_CALENDAR_RANGE_STRATEGY_PROVIDER} from './date-range-selection-strategy';\n\n/**\n * Input that can be associated with a date range picker.\n * @docs-private\n */\nexport interface MatDateRangePickerInput<D> extends MatDatepickerControl<D> {\n  comparisonStart: D|null;\n  comparisonEnd: D|null;\n}\n\n// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit\n// template reference variables (e.g. #d vs #d=\"matDateRangePicker\"). We can change this to a\n// directive if angular adds support for `exportAs: '$implicit'` on directives.\n/** Component responsible for managing the date range picker popup/dialog. */\n@Component({\n  selector: 'mat-date-range-picker',\n  template: '',\n  exportAs: 'matDateRangePicker',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER,\n    MAT_CALENDAR_RANGE_STRATEGY_PROVIDER,\n  ]\n})\nexport class MatDateRangePicker<D> extends MatDatepickerBase<MatDateRangePickerInput<D>,\n  DateRange<D>, D> {\n  protected _forwardContentValues(instance: MatDatepickerContent<DateRange<D>, D>) {\n    super._forwardContentValues(instance);\n\n    const input = this._datepickerInput;\n\n    if (input) {\n      instance.comparisonStart = input.comparisonStart;\n      instance.comparisonEnd = input.comparisonEnd;\n    }\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  ViewEncapsulation,\n  Input,\n  Optional,\n  OnDestroy,\n  ContentChild,\n  AfterContentInit,\n  ChangeDetectorRef,\n  Self,\n  ElementRef,\n  Inject,\n  OnChanges,\n  SimpleChanges,\n} from '@angular/core';\nimport {MatFormFieldControl, MatFormField, MAT_FORM_FIELD} from '@angular/material/form-field';\nimport {ThemePalette, DateAdapter} from '@angular/material/core';\nimport {NgControl, ControlContainer} from '@angular/forms';\nimport {Subject, merge} from 'rxjs';\nimport {coerceBooleanProperty, BooleanInput} from '@angular/cdk/coercion';\nimport {\n  MatStartDate,\n  MatEndDate,\n  MatDateRangeInputParent,\n  MAT_DATE_RANGE_INPUT_PARENT,\n} from './date-range-input-parts';\nimport {MatDatepickerControl} from './datepicker-base';\nimport {createMissingDateImplError} from './datepicker-errors';\nimport {DateFilterFn, dateInputsHaveChanged} from './datepicker-input-base';\nimport {MatDateRangePicker, MatDateRangePickerInput} from './date-range-picker';\nimport {DateRange, MatDateSelectionModel} from './date-selection-model';\n\nlet nextUniqueId = 0;\n\n@Component({\n  selector: 'mat-date-range-input',\n  templateUrl: 'date-range-input.html',\n  styleUrls: ['date-range-input.css'],\n  exportAs: 'matDateRangeInput',\n  host: {\n    'class': 'mat-date-range-input',\n    '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',\n    '[class.mat-date-range-input-required]': 'required',\n    '[attr.id]': 'null',\n    'role': 'group',\n    '[attr.aria-labelledby]': '_getAriaLabelledby()',\n    '[attr.aria-describedby]': '_ariaDescribedBy',\n    // Used by the test harness to tie this input to its calendar. We can't depend on\n    // `aria-owns` for this, because it's only defined while the calendar is open.\n    '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {provide: MatFormFieldControl, useExisting: MatDateRangeInput},\n    {provide: MAT_DATE_RANGE_INPUT_PARENT, useExisting: MatDateRangeInput},\n  ]\n})\nexport class MatDateRangeInput<D> implements MatFormFieldControl<DateRange<D>>,\n  MatDatepickerControl<D>, MatDateRangeInputParent<D>, MatDateRangePickerInput<D>,\n  AfterContentInit, OnChanges, OnDestroy {\n  /** Current value of the range input. */\n  get value() {\n    return this._model ? this._model.selection : null;\n  }\n\n  /** Unique ID for the input. */\n  id = `mat-date-range-input-${nextUniqueId++}`;\n\n  /** Whether the control is focused. */\n  focused = false;\n\n  /** Whether the control's label should float. */\n  get shouldLabelFloat(): boolean {\n    return this.focused || !this.empty;\n  }\n\n  /** Name of the form control. */\n  controlType = 'mat-date-range-input';\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * Set the placeholder attribute on `matStartDate` and `matEndDate`.\n   * @docs-private\n   */\n  get placeholder() {\n    const start = this._startInput?._getPlaceholder() || '';\n    const end = this._endInput?._getPlaceholder() || '';\n    return (start || end) ? `${start} ${this.separator} ${end}` : '';\n  }\n\n  /** The range picker that this input is associated with. */\n  @Input()\n  get rangePicker() { return this._rangePicker; }\n  set rangePicker(rangePicker: MatDateRangePicker<D>) {\n    if (rangePicker) {\n      this._model = rangePicker._registerInput(this);\n      this._rangePicker = rangePicker;\n      this._registerModel(this._model!);\n    }\n  }\n  private _rangePicker: MatDateRangePicker<D>;\n\n  /** Whether the input is required. */\n  @Input()\n  get required(): boolean { return !!this._required; }\n  set required(value: boolean) {\n    this._required = coerceBooleanProperty(value);\n  }\n  private _required: boolean;\n\n  /** Function that can be used to filter out dates within the date range picker. */\n  @Input()\n  get dateFilter() { return this._dateFilter; }\n  set dateFilter(value: DateFilterFn<D>) {\n    this._dateFilter = value;\n    this._revalidate();\n  }\n  private _dateFilter: DateFilterFn<D>;\n\n  /** The minimum valid date. */\n  @Input()\n  get min(): D | null { return this._min; }\n  set min(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._min)) {\n      this._min = validValue;\n      this._revalidate();\n    }\n  }\n  private _min: D | null;\n\n  /** The maximum valid date. */\n  @Input()\n  get max(): D | null { return this._max; }\n  set max(value: D | null) {\n    const validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));\n\n    if (!this._dateAdapter.sameDate(validValue, this._max)) {\n      this._max = validValue;\n      this._revalidate();\n    }\n  }\n  private _max: D | null;\n\n  /** Whether the input is disabled. */\n  @Input()\n  get disabled(): boolean {\n    return (this._startInput && this._endInput) ?\n      (this._startInput.disabled && this._endInput.disabled) :\n      this._groupDisabled;\n  }\n  set disabled(value: boolean) {\n    const newValue = coerceBooleanProperty(value);\n\n    if (newValue !== this._groupDisabled) {\n      this._groupDisabled = newValue;\n      this.stateChanges.next(undefined);\n    }\n  }\n  _groupDisabled = false;\n\n  /** Whether the input is in an error state. */\n  get errorState(): boolean {\n    if (this._startInput && this._endInput) {\n      return this._startInput.errorState || this._endInput.errorState;\n    }\n\n    return false;\n  }\n\n  /** Whether the datepicker input is empty. */\n  get empty(): boolean {\n    const startEmpty = this._startInput ? this._startInput.isEmpty() : false;\n    const endEmpty = this._endInput ? this._endInput.isEmpty() : false;\n    return startEmpty && endEmpty;\n  }\n\n  /** Value for the `aria-describedby` attribute of the inputs. */\n  _ariaDescribedBy: string | null = null;\n\n  /** Date selection model currently registered with the input. */\n  private _model: MatDateSelectionModel<DateRange<D>> | undefined;\n\n  /** Separator text to be shown between the inputs. */\n  @Input() separator = 'â';\n\n  /** Start of the comparison range that should be shown in the calendar. */\n  @Input() comparisonStart: D | null = null;\n\n  /** End of the comparison range that should be shown in the calendar. */\n  @Input() comparisonEnd: D | null = null;\n\n  @ContentChild(MatStartDate) _startInput: MatStartDate<D>;\n  @ContentChild(MatEndDate) _endInput: MatEndDate<D>;\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * TODO(crisbeto): change type to `AbstractControlDirective` after #18206 lands.\n   * @docs-private\n   */\n  ngControl: NgControl | null;\n\n  /** Emits when the input's state has changed. */\n  stateChanges = new Subject<void>();\n\n  constructor(\n    private _changeDetectorRef: ChangeDetectorRef,\n    private _elementRef: ElementRef<HTMLElement>,\n    @Optional() @Self() control: ControlContainer,\n    @Optional() private _dateAdapter: DateAdapter<D>,\n    @Optional() @Inject(MAT_FORM_FIELD) private _formField?: MatFormField) {\n\n    if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw createMissingDateImplError('DateAdapter');\n    }\n\n    // TODO(crisbeto): remove `as any` after #18206 lands.\n    this.ngControl = control as any;\n  }\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  setDescribedByIds(ids: string[]): void {\n    this._ariaDescribedBy = ids.length ? ids.join(' ') : null;\n  }\n\n  /**\n   * Implemented as a part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  onContainerClick(): void {\n    if (!this.focused && !this.disabled) {\n      if (!this._model || !this._model.selection.start) {\n        this._startInput.focus();\n      } else {\n        this._endInput.focus();\n      }\n    }\n  }\n\n  ngAfterContentInit() {\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (!this._startInput) {\n        throw Error('mat-date-range-input must contain a matStartDate input');\n      }\n\n      if (!this._endInput) {\n        throw Error('mat-date-range-input must contain a matEndDate input');\n      }\n    }\n\n    if (this._model) {\n      this._registerModel(this._model);\n    }\n\n    // We don't need to unsubscribe from this, because we\n    // know that the input streams will be completed on destroy.\n    merge(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(() => {\n      this.stateChanges.next(undefined);\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (dateInputsHaveChanged(changes, this._dateAdapter)) {\n      this.stateChanges.next(undefined);\n    }\n  }\n\n  ngOnDestroy() {\n    this.stateChanges.complete();\n  }\n\n  /** Gets the date at which the calendar should start. */\n  getStartValue(): D | null {\n    return this.value ? this.value.start : null;\n  }\n\n  /** Gets the input's theme palette. */\n  getThemePalette(): ThemePalette {\n    return this._formField ? this._formField.color : undefined;\n  }\n\n  /** Gets the element to which the calendar overlay should be attached. */\n  getConnectedOverlayOrigin(): ElementRef {\n    return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;\n  }\n\n  /** Gets the value that is used to mirror the state input. */\n  _getInputMirrorValue() {\n    return this._startInput ? this._startInput.getMirrorValue() : '';\n  }\n\n  /** Whether the input placeholders should be hidden. */\n  _shouldHidePlaceholders() {\n    return this._startInput ? !this._startInput.isEmpty() : false;\n  }\n\n  /** Handles the value in one of the child inputs changing. */\n  _handleChildValueChange() {\n    this.stateChanges.next(undefined);\n    this._changeDetectorRef.markForCheck();\n  }\n\n  /** Opens the date range picker associated with the input. */\n  _openDatepicker() {\n    if (this._rangePicker) {\n      this._rangePicker.open();\n    }\n  }\n\n  /** Whether the separate text should be hidden. */\n  _shouldHideSeparator() {\n    return (!this._formField || this._formField._hideControlPlaceholder()) && this.empty;\n  }\n\n  /** Gets the value for the `aria-labelledby` attribute of the inputs. */\n  _getAriaLabelledby() {\n    const formField = this._formField;\n    return formField && formField._hasFloatingLabel() ? formField._labelId : null;\n  }\n\n  /** Re-runs the validators on the start/end inputs. */\n  private _revalidate() {\n    if (this._startInput) {\n      this._startInput._validatorOnChange();\n    }\n\n    if (this._endInput) {\n      this._endInput._validatorOnChange();\n    }\n  }\n\n  /** Registers the current date selection model with the start/end inputs. */\n  private _registerModel(model: MatDateSelectionModel<DateRange<D>>) {\n    if (this._startInput) {\n      this._startInput._registerModel(model);\n    }\n\n    if (this._endInput) {\n      this._endInput._registerModel(model);\n    }\n  }\n\n  static ngAcceptInputType_required: BooleanInput;\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {CdkScrollableModule} from '@angular/cdk/scrolling';\nimport {MatCalendar, MatCalendarHeader} from './calendar';\nimport {MatCalendarBody} from './calendar-body';\nimport {MatDatepicker} from './datepicker';\nimport {\n  MatDatepickerContent,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n} from './datepicker-base';\nimport {MatDatepickerInput} from './datepicker-input';\nimport {MatDatepickerIntl} from './datepicker-intl';\nimport {MatDatepickerToggle, MatDatepickerToggleIcon} from './datepicker-toggle';\nimport {MatMonthView} from './month-view';\nimport {MatMultiYearView} from './multi-year-view';\nimport {MatYearView} from './year-view';\nimport {MatDateRangeInput} from './date-range-input';\nimport {MatStartDate, MatEndDate} from './date-range-input-parts';\nimport {MatDateRangePicker} from './date-range-picker';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDialogModule,\n    OverlayModule,\n    A11yModule,\n    PortalModule,\n  ],\n  exports: [\n    CdkScrollableModule,\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n    MatDateRangeInput,\n    MatStartDate,\n    MatEndDate,\n    MatDateRangePicker,\n  ],\n  declarations: [\n    MatCalendar,\n    MatCalendarBody,\n    MatDatepicker,\n    MatDatepickerContent,\n    MatDatepickerInput,\n    MatDatepickerToggle,\n    MatDatepickerToggleIcon,\n    MatMonthView,\n    MatYearView,\n    MatMultiYearView,\n    MatCalendarHeader,\n    MatDateRangeInput,\n    MatStartDate,\n    MatEndDate,\n    MatDateRangePicker,\n  ],\n  providers: [\n    MatDatepickerIntl,\n    MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER\n  ],\n  entryComponents: [\n    MatDatepickerContent,\n    MatCalendarHeader,\n  ]\n})\nexport class MatDatepickerModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './datepicker-module';\nexport * from './calendar';\nexport * from './calendar-body';\nexport * from './datepicker';\nexport {\n  MAT_DATE_RANGE_SELECTION_STRATEGY,\n  MatDateRangeSelectionStrategy,\n  DefaultMatCalendarRangeStrategy,\n} from './date-range-selection-strategy';\nexport * from './datepicker-animations';\nexport {\n  MAT_DATEPICKER_SCROLL_STRATEGY,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY,\n  MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER,\n  MatDatepickerContent,\n  DatepickerDropdownPositionX,\n  DatepickerDropdownPositionY,\n} from './datepicker-base';\nexport {MatDatepickerInputEvent, DateFilterFn} from './datepicker-input-base';\nexport {\n  MAT_DATEPICKER_VALUE_ACCESSOR,\n  MAT_DATEPICKER_VALIDATORS,\n  MatDatepickerInput,\n} from './datepicker-input';\nexport * from './datepicker-intl';\nexport * from './datepicker-toggle';\nexport * from './month-view';\nexport * from './year-view';\nexport * from './date-range-input';\nexport {MatDateRangePicker} from './date-range-picker';\nexport * from './date-selection-model';\nexport {MatStartDate, MatEndDate} from './date-range-input-parts';\nexport {MatMultiYearView, yearsPerPage, yearsPerRow} from './multi-year-view';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {MAT_DATE_RANGE_INPUT_PARENT as Éµangular_material_src_material_datepicker_datepicker_e} from './date-range-input-parts';\nexport {MAT_CALENDAR_RANGE_STRATEGY_PROVIDER as Éµangular_material_src_material_datepicker_datepicker_b,MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY as Éµangular_material_src_material_datepicker_datepicker_a} from './date-range-selection-strategy';\nexport {MatDatepickerBase as Éµangular_material_src_material_datepicker_datepicker_c} from './datepicker-base';\nexport {MatDatepickerInputBase as Éµangular_material_src_material_datepicker_datepicker_d} from './datepicker-input-base';","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmFuc2xhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { AfterViewInit, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { AlertifyService } from 'app/core/services/alertify.service';\r\nimport { LookUpService } from 'app/core/services/lookUp.service';\r\nimport { LookUp } from '../../../models/LookUp';\r\nimport { AuthService } from '../login/Services/auth.service';\r\nimport { Translate } from './models/Translate';\r\nimport { TranslateService } from './services/Translate.service';\r\n\r\n\r\ndeclare var jQuery: any;\r\n\r\n@Component({\r\n\tselector: 'app-translate',\r\n\ttemplateUrl: './translate.component.html',\r\n\tstyleUrls: ['./translate.component.scss']\r\n})\r\nexport class TranslateComponent implements  AfterViewInit, OnInit {\r\n\r\n\t@ViewChild(MatPaginator) paginator: MatPaginator;\r\n\t@ViewChild(MatSort) sort: MatSort;\r\n\r\n\ttranslateList: Translate[] = [];\r\n\ttranslate: Translate = new Translate();\r\n\r\n\ttranslateAddForm: FormGroup;\r\n\r\n\tlangugelookUp: LookUp[];\r\n\tdisplayedColumns: string[] = ['id', 'language', 'code', 'value','update','delete'];\r\n\tdataSource: MatTableDataSource<any>;\r\n\r\n\r\n\ttranslateId: number;\r\n\r\n\r\n\tconstructor(private translateService: TranslateService, private lookupService: LookUpService, private alertifyService: AlertifyService, private formBuilder: FormBuilder, private authService: AuthService) { }\r\n\r\n\tngAfterViewInit(): void {\r\n\r\n\t\tthis.getTranslateList();\r\n\t}\r\n\r\n\tapplyFilter(event: Event) {\r\n\t\tconst filterValue = (event.target as HTMLInputElement).value;\r\n\t\tthis.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n\t\tif (this.dataSource.paginator) {\r\n\t\t\tthis.dataSource.paginator.firstPage();\r\n\t\t}\r\n\t}\r\n\r\n\r\n\tngOnInit() {\r\n\t\tthis.lookupService.getLanguageLookup().subscribe(data => {\r\n\t\t\tthis.langugelookUp = data;\r\n\t\t})\r\n\r\n\t\tthis.createTranslateAddForm();\r\n\t}\r\n\r\n\r\n\tgetTranslateList() {\r\n\t\tthis.translateService.getTranslateList().subscribe(data => {\r\n\t\t\tthis.translateList = data;\r\n\t\t\tthis.dataSource = new MatTableDataSource(data);\r\n\t\t\tthis.configDataTable();\r\n\t\t});\r\n\t}\r\n\r\n\tsave() {\r\n\r\n\t\tif (this.translateAddForm.valid) {\r\n\t\t\tthis.translate = Object.assign({}, this.translateAddForm.value)\r\n\r\n\t\t\tif (this.translate.id == 0)\r\n\t\t\t\tthis.addTranslate();\r\n\t\t\telse\r\n\t\t\t\tthis.updateTranslate();\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\taddTranslate() {\r\n\r\n\t\tthis.translateService.addTranslate(this.translate).subscribe(data => {\r\n\t\t\tthis.getTranslateList();\r\n\t\t\tthis.translate = new Translate();\r\n\t\t\tjQuery('#translate').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.translateAddForm);\r\n\r\n\t\t},error=>{\r\n\t\t\tthis.alertifyService.error('Hata oluştu!')\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tupdateTranslate() {\r\n\r\n\t\tthis.translateService.updateTranslate(this.translate).subscribe(data => {\r\n\t\t\tvar index = this.translateList.findIndex(x => x.id == this.translate.id);\r\n\t\t\tthis.translateList[index].code = this.translate.code;\r\n\t\t\tthis.translateList[index].value = this.translate.value;\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.translateList);\r\n\t\t\tthis.configDataTable();\r\n\t\t\tthis.translate = new Translate();\r\n\t\t\tjQuery('#translate').modal('hide');\r\n\t\t\tthis.alertifyService.success(data);\r\n\t\t\tthis.clearFormGroup(this.translateAddForm);\r\n\r\n\t\t})\r\n\r\n\t}\r\n\r\n\tcreateTranslateAddForm() {\r\n\t\tthis.translateAddForm = this.formBuilder.group({\r\n\t\t\tid: [0],\r\n\t\t\tlangId: [0, Validators.required],\r\n\t\t\tcode: [\"\", Validators.required],\r\n\t\t\tvalue: [\"\", Validators.required]\r\n\t\t})\r\n\t}\r\n\r\n\tdeleteTranslate(translateId: number) {\r\n\t\tthis.translateService.deleteTranslate(translateId).subscribe(data => {\r\n\t\t\tthis.alertifyService.success(data.toString());\r\n\t\t\tthis.translateList = this.translateList.filter(x => x.id != translateId);\r\n\t\t\tthis.dataSource = new MatTableDataSource(this.translateList);\r\n\t\t\tthis.configDataTable();\r\n\t\t})\r\n\t}\r\n\r\n\tgetTranslateById(translateId: number) {\r\n\t\tthis.clearFormGroup(this.translateAddForm);\r\n\t\tthis.translateService.getTranslate(translateId).subscribe(data => {\r\n\t\t\tthis.translate = data;\r\n\t\t\tthis.translateAddForm.patchValue(data);\r\n\t\t})\r\n\t}\r\n\r\n\r\n\tclearFormGroup(group: FormGroup) {\r\n\r\n\t\tgroup.markAsUntouched();\r\n\t\tgroup.reset();\r\n\r\n\t\tObject.keys(group.controls).forEach(key => {\r\n\t\t\tgroup.get(key).setErrors(null);\r\n\t\t\tif (key == 'id')\r\n\t\t\t\tgroup.get(key).setValue(0);\r\n\t\t});\r\n\t}\r\n\r\n\tcheckClaim(claim: string): boolean {\r\n\t\treturn this.authService.claimGuard(claim)\r\n\t}\r\n\r\n\tconfigDataTable(): void {\r\n\t\tthis.dataSource.paginator = this.paginator;\r\n\t\tthis.dataSource.sort = this.sort;\r\n\t}\r\n\r\n}\r\n","export default \":host {\\n  display: block;\\n  width: 100%;\\n  height: 100vh;\\n}\\n\\n.login-container {\\n  position: fixed;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  padding: 20px;\\n  box-sizing: border-box;\\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\\n  z-index: 1000;\\n}\\n\\n@media (max-height: 700px) {\\n  .login-container {\\n    overflow-y: auto;\\n    align-items: flex-start;\\n    padding-top: 40px;\\n    padding-bottom: 40px;\\n  }\\n}\\n\\n.login-background {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  background-size: cover;\\n  background-position: center;\\n  opacity: 0.1;\\n  z-index: -1;\\n  pointer-events: none;\\n}\\n\\n.login-card {\\n  width: 100%;\\n  max-width: 380px;\\n  background: rgba(255, 255, 255, 0.95);\\n  border-radius: 20px;\\n  padding: 30px 25px;\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n  -webkit-animation: cardFloat 0.5s ease-out;\\n          animation: cardFloat 0.5s ease-out;\\n}\\n\\n@media (max-width: 480px) {\\n  .login-card {\\n    padding: 25px 20px;\\n    border-radius: 16px;\\n  }\\n}\\n\\n@media (max-height: 700px) {\\n  .login-card {\\n    margin: 0 auto;\\n  }\\n}\\n\\n@-webkit-keyframes cardFloat {\\n  0% {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n@keyframes cardFloat {\\n  0% {\\n    opacity: 0;\\n    transform: translateY(20px);\\n  }\\n  100% {\\n    opacity: 1;\\n    transform: translateY(0);\\n  }\\n}\\n\\n.login-header {\\n  text-align: center;\\n  margin-bottom: 25px;\\n}\\n\\n.login-header .logo-wrapper {\\n  width: 90px;\\n  height: 90px;\\n  margin: 0 auto 15px;\\n  border-radius: 50%;\\n  padding: 12px;\\n  background: white;\\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  transition: transform 0.3s ease;\\n}\\n\\n@media (max-width: 480px) {\\n  .login-header .logo-wrapper {\\n    width: 80px;\\n    height: 80px;\\n    padding: 10px;\\n    margin-bottom: 12px;\\n  }\\n}\\n\\n.login-header .logo-wrapper:hover {\\n  transform: scale(1.05);\\n}\\n\\n.login-header .logo-wrapper .logo {\\n  width: 100%;\\n  height: 100%;\\n  -o-object-fit: contain;\\n     object-fit: contain;\\n}\\n\\n.login-header .title {\\n  font-size: 22px;\\n  font-weight: 600;\\n  color: #2c3345;\\n  margin: 0 0 6px;\\n  letter-spacing: -0.5px;\\n}\\n\\n@media (max-width: 480px) {\\n  .login-header .title {\\n    font-size: 20px;\\n    margin: 0 0 4px;\\n  }\\n}\\n\\n.login-header .subtitle {\\n  color: #6b7280;\\n  font-size: 14px;\\n  font-weight: 500;\\n  margin: 0;\\n  opacity: 0.9;\\n}\\n\\n@media (max-width: 480px) {\\n  .login-header .subtitle {\\n    font-size: 13px;\\n  }\\n}\\n\\n.login-form .form-field {\\n  margin-bottom: 16px;\\n  width: 100%;\\n}\\n\\n.login-form .form-field:last-child {\\n  margin-bottom: 0;\\n}\\n\\n.login-form .form-field ::ng-deep .mat-form-field-wrapper {\\n  margin: 0;\\n}\\n\\n.login-form .form-field ::ng-deep .mat-form-field-outline {\\n  border-radius: 10px;\\n}\\n\\n.login-form .form-field ::ng-deep .mat-form-field-infix {\\n  padding: 0.8em 0;\\n}\\n\\n@media (max-width: 480px) {\\n  .login-form .form-field ::ng-deep .mat-form-field-infix {\\n    padding: 0.7em 0;\\n  }\\n}\\n\\n.login-form .form-field ::ng-deep .mat-form-field-prefix,\\n.login-form .form-field ::ng-deep .mat-form-field-suffix {\\n  color: #64748b;\\n  transition: color 0.3s ease;\\n}\\n\\n.login-form .form-field ::ng-deep .mat-form-field.mat-focused .mat-form-field-prefix,\\n.login-form .form-field ::ng-deep .mat-form-field.mat-focused .mat-form-field-suffix {\\n  color: #1e3c72;\\n}\\n\\n.login-form .form-field ::ng-deep .cursor-pointer {\\n  cursor: pointer;\\n}\\n\\n.login-button {\\n  width: 100%;\\n  height: 46px;\\n  font-size: 15px;\\n  font-weight: 600;\\n  letter-spacing: 0.5px;\\n  border-radius: 10px;\\n  background: linear-gradient(135deg, #e91e63 0%, #f44336 100%);\\n  transition: all 0.3s ease;\\n  margin-top: 12px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  gap: 8px;\\n}\\n\\n@media (max-width: 480px) {\\n  .login-button {\\n    height: 42px;\\n    font-size: 14px;\\n    margin-top: 10px;\\n  }\\n}\\n\\n.login-button:hover {\\n  background: linear-gradient(135deg, #d81b60 0%, #e53935 100%);\\n  transform: translateY(-2px);\\n  box-shadow: 0 6px 16px rgba(233, 30, 99, 0.25);\\n}\\n\\n.login-button:active {\\n  transform: translateY(0);\\n}\\n\\n.login-button mat-icon {\\n  font-size: 18px;\\n  height: 18px;\\n  width: 18px;\\n  margin-right: 4px;\\n}\\n\\n@media (max-width: 480px) {\\n  .login-button mat-icon {\\n    font-size: 16px;\\n    height: 16px;\\n    width: 16px;\\n  }\\n}\\n\\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\\n  color: #e2e8f0;\\n}\\n\\n::ng-deep .mat-form-field.mat-focused .mat-form-field-outline {\\n  color: #1e3c72;\\n}\\n\\n::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\\n  color: #1e3c72;\\n}\\n\\n::ng-deep .mat-form-field-label {\\n  color: #64748b;\\n}\\n\\n::ng-deep .mat-form-field.mat-focused .mat-form-field-label {\\n  color: #1e3c72;\\n}\\n\\n::ng-deep .mat-form-field-prefix, ::ng-deep .mat-form-field-suffix {\\n  color: #64748b;\\n}\\n\\n::ng-deep .mat-form-field.mat-focused .mat-form-field-prefix, ::ng-deep .mat-form-field.mat-focused .mat-form-field-suffix {\\n  color: #1e3c72;\\n}\\n\\n::ng-deep .mat-select-value {\\n  color: #2c3345;\\n}\\n\\n::ng-deep .mat-select-arrow {\\n  color: #64748b;\\n}\\n/*# sourceMappingURL=data:application/json;base64, */\";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { IRetryPolicy, RetryContext } from \"./IRetryPolicy\";\r\n\r\n// 0, 2, 10, 30 second delays before reconnect attempts.\r\nconst DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];\r\n\r\n/** @private */\r\nexport class DefaultReconnectPolicy implements IRetryPolicy {\r\n    private readonly _retryDelays: (number | null)[];\r\n\r\n    constructor(retryDelays?: number[]) {\r\n        this._retryDelays = retryDelays !== undefined ? [...retryDelays, null] : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;\r\n    }\r\n\r\n    public nextRetryDelayInMilliseconds(retryContext: RetryContext): number | null {\r\n        return this._retryDelays[retryContext.previousRetryCount];\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { MultiVisiters } from '../models/MultiVisiters';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MultiVisitersService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  getMultiVisitersList(): Observable<MultiVisiters[]> {\r\n\r\n    return this.httpClient.get<MultiVisiters[]>(environment.getApiUrl + '/multiVisiterses/getall')\r\n  }\r\n\r\n  getMultiVisitersById(id: number): Observable<MultiVisiters> {\r\n    return this.httpClient.get<MultiVisiters>(environment.getApiUrl + '/multiVisiterses/getbyid?id='+id)\r\n  }\r\n\r\n  addMultiVisiters(multiVisiters: MultiVisiters): Observable<any> {\r\n\r\n    return this.httpClient.post(environment.getApiUrl + '/multiVisiterses/', multiVisiters, { responseType: 'text' });\r\n  }\r\n\r\n  updateMultiVisiters(multiVisiters: MultiVisiters): Observable<any> {\r\n    return this.httpClient.put(environment.getApiUrl + '/multiVisiterses/', multiVisiters, { responseType: 'text' });\r\n\r\n  }\r\n\r\n  deleteMultiVisiters(id: string) {\r\n    return this.httpClient.request('delete', environment.getApiUrl + '/multiVisiterses/', { body: { id: id } });\r\n  }\r\n\r\n\r\n}","export default \".pagination-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.pagination {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.pagination .page-item {\\n  margin: 0 2px;\\n}\\n\\n.pagination .page-item.active .page-link {\\n  background-color: #f44336;\\n  border-color: #f44336;\\n  color: white;\\n}\\n\\n.pagination .page-item.disabled .page-link {\\n  color: #6c757d;\\n  pointer-events: none;\\n  background-color: #fff;\\n  border-color: #dee2e6;\\n}\\n\\n.pagination .page-link {\\n  padding: 8px 12px;\\n  color: #f44336;\\n  background-color: #fff;\\n  border: 1px solid #dee2e6;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n}\\n\\n.pagination .page-link:hover {\\n  background-color: #f8f9fa;\\n  border-color: #f44336;\\n}\\n\\n.pagination .page-link.dots {\\n  cursor: default;\\n  background-color: transparent;\\n  border: none;\\n  color: #6c757d;\\n}\\n\\n.pagination .page-link.dots:hover {\\n  background-color: transparent;\\n  border: none;\\n}\\n\\n.float-right {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHZpc2l0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUNFO0VBQ0UsYUFBQTtBQUNKOztBQUNJO0VBQ0UseUJBQUE7RUFDQSxxQkFBQTtFQUNBLFlBQUE7QUFDTjs7QUFFSTtFQUNFLGNBQUE7RUFDQSxvQkFBQTtFQUNBLHNCQUFBO0VBQ0EscUJBQUE7QUFBTjs7QUFJRTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLHNCQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7QUFGSjs7QUFJSTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFGTjs7QUFLSTtFQUNFLGVBQUE7RUFDQSw2QkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBSE47O0FBS007RUFDRSw2QkFBQTtFQUNBLFlBQUE7QUFIUjs7QUFTQTtFQUNFLFlBQUE7QUFORiIsImZpbGUiOiJ2aXNpdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYWdpbmF0aW9uLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnBhZ2luYXRpb24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuXHJcbiAgLnBhZ2UtaXRlbSB7XHJcbiAgICBtYXJnaW46IDAgMnB4O1xyXG5cclxuICAgICYuYWN0aXZlIC5wYWdlLWxpbmsge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgICBib3JkZXItY29sb3I6ICNmNDQzMzY7XHJcbiAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIH1cclxuXHJcbiAgICAmLmRpc2FibGVkIC5wYWdlLWxpbmsge1xyXG4gICAgICBjb2xvcjogIzZjNzU3ZDtcclxuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogI2RlZTJlNjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5wYWdlLWxpbmsge1xyXG4gICAgcGFkZGluZzogOHB4IDEycHg7XHJcbiAgICBjb2xvcjogI2Y0NDMzNjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGVlMmU2O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgfVxyXG5cclxuICAgICYuZG90cyB7XHJcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgY29sb3I6ICM2Yzc1N2Q7XHJcblxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5mbG9hdC1yaWdodCB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbiJdfQ== */\";","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HandshakeProtocol, HandshakeRequestMessage, HandshakeResponseMessage } from \"./HandshakeProtocol\";\r\nimport { IConnection } from \"./IConnection\";\r\nimport { AbortError } from \"./Errors\";\r\nimport { CancelInvocationMessage, CloseMessage, CompletionMessage, IHubProtocol, InvocationMessage, MessageType, StreamInvocationMessage, StreamItemMessage } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStreamResult } from \"./Stream\";\r\nimport { Subject } from \"./Subject\";\r\nimport { Arg, getErrorString, Platform } from \"./Utils\";\r\nimport { MessageBuffer } from \"./MessageBuffer\";\r\n\r\nconst DEFAULT_TIMEOUT_IN_MS: number = 30 * 1000;\r\nconst DEFAULT_PING_INTERVAL_IN_MS: number = 15 * 1000;\r\nconst DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100_000;\r\n\r\n/** Describes the current state of the {@link HubConnection} to the server. */\r\nexport enum HubConnectionState {\r\n    /** The hub connection is disconnected. */\r\n    Disconnected = \"Disconnected\",\r\n    /** The hub connection is connecting. */\r\n    Connecting = \"Connecting\",\r\n    /** The hub connection is connected. */\r\n    Connected = \"Connected\",\r\n    /** The hub connection is disconnecting. */\r\n    Disconnecting = \"Disconnecting\",\r\n    /** The hub connection is reconnecting. */\r\n    Reconnecting = \"Reconnecting\",\r\n}\r\n\r\n/** Represents a connection to a SignalR Hub. */\r\nexport class HubConnection {\r\n    private readonly _cachedPingMessage: string | ArrayBuffer;\r\n    // Needs to not start with _ for tests\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private readonly connection: IConnection;\r\n    private readonly _logger: ILogger;\r\n    private readonly _reconnectPolicy?: IRetryPolicy;\r\n    private readonly _statefulReconnectBufferSize: number;\r\n    private _protocol: IHubProtocol;\r\n    private _handshakeProtocol: HandshakeProtocol;\r\n    private _callbacks: { [invocationId: string]: (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => void };\r\n    private _methods: { [name: string]: (((...args: any[]) => void) | ((...args: any[]) => any))[] };\r\n    private _invocationId: number;\r\n    private _messageBuffer?: MessageBuffer;\r\n\r\n    private _closedCallbacks: ((error?: Error) => void)[];\r\n    private _reconnectingCallbacks: ((error?: Error) => void)[];\r\n    private _reconnectedCallbacks: ((connectionId?: string) => void)[];\r\n\r\n    private _receivedHandshakeResponse: boolean;\r\n    private _handshakeResolver!: (value?: PromiseLike<{}>) => void;\r\n    private _handshakeRejecter!: (reason?: any) => void;\r\n    private _stopDuringStartError?: Error;\r\n\r\n    private _connectionState: HubConnectionState;\r\n    // connectionStarted is tracked independently from connectionState, so we can check if the\r\n    // connection ever did successfully transition from connecting to connected before disconnecting.\r\n    private _connectionStarted: boolean;\r\n    private _startPromise?: Promise<void>;\r\n    private _stopPromise?: Promise<void>;\r\n    private _nextKeepAlive: number = 0;\r\n\r\n    // The type of these a) doesn't matter and b) varies when building in browser and node contexts\r\n    // Since we're building the WebPack bundle directly from the TypeScript, this matters (previously\r\n    // we built the bundle from the compiled JavaScript).\r\n    private _reconnectDelayHandle?: any;\r\n    private _timeoutHandle?: any;\r\n    private _pingServerHandle?: any;\r\n\r\n    private _freezeEventListener = () =>\r\n    {\r\n        this._logger.log(LogLevel.Warning, \"The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep\");\r\n    };\r\n\r\n    /** The server timeout in milliseconds.\r\n     *\r\n     * If this timeout elapses without receiving any messages from the server, the connection will be terminated with an error.\r\n     * The default timeout value is 30,000 milliseconds (30 seconds).\r\n     */\r\n    public serverTimeoutInMilliseconds: number;\r\n\r\n    /** Default interval at which to ping the server.\r\n     *\r\n     * The default value is 15,000 milliseconds (15 seconds).\r\n     * Allows the server to detect hard disconnects (like when a client unplugs their computer).\r\n     * The ping will happen at most as often as the server pings.\r\n     * If the server pings every 5 seconds, a value lower than 5 will ping every 5 seconds.\r\n     */\r\n    public keepAliveIntervalInMilliseconds: number;\r\n\r\n    /** @internal */\r\n    // Using a public static factory method means we can have a private constructor and an _internal_\r\n    // create method that can be used by HubConnectionBuilder. An \"internal\" constructor would just\r\n    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a\r\n    // public parameter-less constructor.\r\n    public static create(\r\n        connection: IConnection,\r\n        logger: ILogger,\r\n        protocol: IHubProtocol,\r\n        reconnectPolicy?: IRetryPolicy,\r\n        serverTimeoutInMilliseconds?: number,\r\n        keepAliveIntervalInMilliseconds?: number,\r\n        statefulReconnectBufferSize?: number): HubConnection {\r\n        return new HubConnection(connection, logger, protocol, reconnectPolicy,\r\n            serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);\r\n    }\r\n\r\n    private constructor(\r\n        connection: IConnection,\r\n        logger: ILogger,\r\n        protocol: IHubProtocol,\r\n        reconnectPolicy?: IRetryPolicy,\r\n        serverTimeoutInMilliseconds?: number,\r\n        keepAliveIntervalInMilliseconds?: number,\r\n        statefulReconnectBufferSize?: number) {\r\n        Arg.isRequired(connection, \"connection\");\r\n        Arg.isRequired(logger, \"logger\");\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds ?? DEFAULT_TIMEOUT_IN_MS;\r\n        this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds ?? DEFAULT_PING_INTERVAL_IN_MS;\r\n\r\n        this._statefulReconnectBufferSize = statefulReconnectBufferSize ?? DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;\r\n\r\n        this._logger = logger;\r\n        this._protocol = protocol;\r\n        this.connection = connection;\r\n        this._reconnectPolicy = reconnectPolicy;\r\n        this._handshakeProtocol = new HandshakeProtocol();\r\n\r\n        this.connection.onreceive = (data: any) => this._processIncomingData(data);\r\n        this.connection.onclose = (error?: Error) => this._connectionClosed(error);\r\n\r\n        this._callbacks = {};\r\n        this._methods = {};\r\n        this._closedCallbacks = [];\r\n        this._reconnectingCallbacks = [];\r\n        this._reconnectedCallbacks = [];\r\n        this._invocationId = 0;\r\n        this._receivedHandshakeResponse = false;\r\n        this._connectionState = HubConnectionState.Disconnected;\r\n        this._connectionStarted = false;\r\n\r\n        this._cachedPingMessage = this._protocol.writeMessage({ type: MessageType.Ping });\r\n    }\r\n\r\n    /** Indicates the state of the {@link HubConnection} to the server. */\r\n    get state(): HubConnectionState {\r\n        return this._connectionState;\r\n    }\r\n\r\n    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either\r\n     *  in the disconnected state or if the negotiation step was skipped.\r\n     */\r\n    get connectionId(): string | null {\r\n        return this.connection ? (this.connection.connectionId || null) : null;\r\n    }\r\n\r\n    /** Indicates the url of the {@link HubConnection} to the server. */\r\n    get baseUrl(): string {\r\n        return this.connection.baseUrl || \"\";\r\n    }\r\n\r\n    /**\r\n     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or\r\n     * Reconnecting states.\r\n     * @param {string} url The url to connect to.\r\n     */\r\n    set baseUrl(url: string) {\r\n        if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {\r\n            throw new Error(\"The HubConnection must be in the Disconnected or Reconnecting state to change the url.\");\r\n        }\r\n\r\n        if (!url) {\r\n            throw new Error(\"The HubConnection url must be a valid url.\");\r\n        }\r\n\r\n        this.connection.baseUrl = url;\r\n    }\r\n\r\n    /** Starts the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.\r\n     */\r\n    public start(): Promise<void> {\r\n        this._startPromise = this._startWithStateTransitions();\r\n        return this._startPromise;\r\n    }\r\n\r\n    private async _startWithStateTransitions(): Promise<void> {\r\n        if (this._connectionState !== HubConnectionState.Disconnected) {\r\n            return Promise.reject(new Error(\"Cannot start a HubConnection that is not in the 'Disconnected' state.\"));\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Connecting;\r\n        this._logger.log(LogLevel.Debug, \"Starting HubConnection.\");\r\n\r\n        try {\r\n            await this._startInternal();\r\n\r\n            if (Platform.isBrowser) {\r\n                // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working\r\n                window.document.addEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n\r\n            this._connectionState = HubConnectionState.Connected;\r\n            this._connectionStarted = true;\r\n            this._logger.log(LogLevel.Debug, \"HubConnection connected successfully.\");\r\n        } catch (e) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._logger.log(LogLevel.Debug, `HubConnection failed to start successfully because of error '${e}'.`);\r\n            return Promise.reject(e);\r\n        }\r\n    }\r\n\r\n    private async _startInternal() {\r\n        this._stopDuringStartError = undefined;\r\n        this._receivedHandshakeResponse = false;\r\n        // Set up the promise before any connection is (re)started otherwise it could race with received messages\r\n        const handshakePromise = new Promise((resolve, reject) => {\r\n            this._handshakeResolver = resolve;\r\n            this._handshakeRejecter = reject;\r\n        });\r\n\r\n        await this.connection.start(this._protocol.transferFormat);\r\n\r\n        try {\r\n            let version = this._protocol.version;\r\n            if (!this.connection.features.reconnect) {\r\n                // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to\r\n                // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.\r\n                version = 1;\r\n            }\r\n\r\n            const handshakeRequest: HandshakeRequestMessage = {\r\n                protocol: this._protocol.name,\r\n                version,\r\n            };\r\n\r\n            this._logger.log(LogLevel.Debug, \"Sending handshake request.\");\r\n\r\n            await this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));\r\n\r\n            this._logger.log(LogLevel.Information, `Using HubProtocol '${this._protocol.name}'.`);\r\n\r\n            // defensively cleanup timeout in case we receive a message from the server before we finish start\r\n            this._cleanupTimeout();\r\n            this._resetTimeoutPeriod();\r\n            this._resetKeepAliveInterval();\r\n\r\n            await handshakePromise;\r\n\r\n            // It's important to check the stopDuringStartError instead of just relying on the handshakePromise\r\n            // being rejected on close, because this continuation can run after both the handshake completed successfully\r\n            // and the connection was closed.\r\n            if (this._stopDuringStartError) {\r\n                // It's important to throw instead of returning a rejected promise, because we don't want to allow any state\r\n                // transitions to occur between now and the calling code observing the exceptions. Returning a rejected promise\r\n                // will cause the calling continuation to get scheduled to run later.\r\n                // eslint-disable-next-line @typescript-eslint/no-throw-literal\r\n                throw this._stopDuringStartError;\r\n            }\r\n\r\n            const useStatefulReconnect = this.connection.features.reconnect || false;\r\n            if (useStatefulReconnect) {\r\n                this._messageBuffer = new MessageBuffer(this._protocol, this.connection, this._statefulReconnectBufferSize);\r\n                this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);\r\n                this.connection.features.resend = () => {\r\n                    if (this._messageBuffer) {\r\n                        return this._messageBuffer._resend();\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!this.connection.features.inherentKeepAlive) {\r\n                await this._sendMessage(this._cachedPingMessage);\r\n            }\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Debug, `Hub handshake failed with error '${e}' during start(). Stopping HubConnection.`);\r\n\r\n            this._cleanupTimeout();\r\n            this._cleanupPingTimer();\r\n\r\n            // HttpConnection.stop() should not complete until after the onclose callback is invoked.\r\n            // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.\r\n            await this.connection.stop(e);\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    /** Stops the connection.\r\n     *\r\n     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.\r\n     */\r\n    public async stop(): Promise<void> {\r\n        // Capture the start promise before the connection might be restarted in an onclose callback.\r\n        const startPromise = this._startPromise;\r\n        this.connection.features.reconnect = false;\r\n\r\n        this._stopPromise = this._stopInternal();\r\n        await this._stopPromise;\r\n\r\n        try {\r\n            // Awaiting undefined continues immediately\r\n            await startPromise;\r\n        } catch (e) {\r\n            // This exception is returned to the user as a rejected Promise from the start method.\r\n        }\r\n    }\r\n\r\n    private _stopInternal(error?: Error): Promise<void> {\r\n        if (this._connectionState === HubConnectionState.Disconnected) {\r\n            this._logger.log(LogLevel.Debug, `Call to HubConnection.stop(${error}) ignored because it is already in the disconnected state.`);\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._logger.log(LogLevel.Debug, `Call to HttpConnection.stop(${error}) ignored because the connection is already in the disconnecting state.`);\r\n            return this._stopPromise!;\r\n        }\r\n\r\n        const state = this._connectionState;\r\n        this._connectionState = HubConnectionState.Disconnecting;\r\n\r\n        this._logger.log(LogLevel.Debug, \"Stopping HubConnection.\");\r\n\r\n        if (this._reconnectDelayHandle) {\r\n            // We're in a reconnect delay which means the underlying connection is currently already stopped.\r\n            // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and\r\n            // fire the onclose callbacks.\r\n            this._logger.log(LogLevel.Debug, \"Connection stopped during reconnect delay. Done reconnecting.\");\r\n\r\n            clearTimeout(this._reconnectDelayHandle);\r\n            this._reconnectDelayHandle = undefined;\r\n\r\n            this._completeClose();\r\n            return Promise.resolve();\r\n        }\r\n\r\n        if (state === HubConnectionState.Connected) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._sendCloseMessage();\r\n        }\r\n\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n        this._stopDuringStartError = error || new AbortError(\"The connection was stopped before the hub handshake could complete.\");\r\n\r\n        // HttpConnection.stop() should not complete until after either HttpConnection.start() fails\r\n        // or the onclose callback is invoked. The onclose callback will transition the HubConnection\r\n        // to the disconnected state if need be before HttpConnection.stop() completes.\r\n        return this.connection.stop(error);\r\n    }\r\n\r\n    private async _sendCloseMessage() {\r\n        try {\r\n            await this._sendWithProtocol(this._createCloseMessage());\r\n        } catch {\r\n            // Ignore, this is a best effort attempt to let the server know the client closed gracefully.\r\n        }\r\n    }\r\n\r\n    /** Invokes a streaming hub method on the server using the specified name and arguments.\r\n     *\r\n     * @typeparam T The type of the items returned by the server.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.\r\n     */\r\n    public stream<T = any>(methodName: string, ...args: any[]): IStreamResult<T> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds);\r\n\r\n        // eslint-disable-next-line prefer-const\r\n        let promiseQueue: Promise<void>;\r\n\r\n        const subject = new Subject<T>();\r\n        subject.cancelCallback = () => {\r\n            const cancelInvocation: CancelInvocationMessage = this._createCancelInvocation(invocationDescriptor.invocationId);\r\n\r\n            delete this._callbacks[invocationDescriptor.invocationId];\r\n\r\n            return promiseQueue.then(() => {\r\n                return this._sendWithProtocol(cancelInvocation);\r\n            });\r\n        };\r\n\r\n        this._callbacks[invocationDescriptor.invocationId] = (invocationEvent: CompletionMessage | StreamItemMessage | null, error?: Error) => {\r\n            if (error) {\r\n                subject.error(error);\r\n                return;\r\n            } else if (invocationEvent) {\r\n                // invocationEvent will not be null when an error is not passed to the callback\r\n                if (invocationEvent.type === MessageType.Completion) {\r\n                    if (invocationEvent.error) {\r\n                        subject.error(new Error(invocationEvent.error));\r\n                    } else {\r\n                        subject.complete();\r\n                    }\r\n                } else {\r\n                    subject.next((invocationEvent.item) as T);\r\n                }\r\n            }\r\n        };\r\n\r\n        promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n            .catch((e) => {\r\n                subject.error(e);\r\n                delete this._callbacks[invocationDescriptor.invocationId];\r\n            });\r\n\r\n        this._launchStreams(streams, promiseQueue);\r\n\r\n        return subject;\r\n    }\r\n\r\n    private _sendMessage(message: any) {\r\n        this._resetKeepAliveInterval();\r\n        return this.connection.send(message);\r\n    }\r\n\r\n    /**\r\n     * Sends a js object to the server.\r\n     * @param message The js object to serialize and send.\r\n     */\r\n    private _sendWithProtocol(message: any) {\r\n        if (this._messageBuffer) {\r\n            return this._messageBuffer._send(message);\r\n        } else {\r\n            return this._sendMessage(this._protocol.writeMessage(message));\r\n        }\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.\r\n     *\r\n     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still\r\n     * be processing the invocation.\r\n     *\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.\r\n     */\r\n    public send(methodName: string, ...args: any[]): Promise<void> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));\r\n\r\n        this._launchStreams(streams, sendPromise);\r\n\r\n        return sendPromise;\r\n    }\r\n\r\n    /** Invokes a hub method on the server using the specified name and arguments.\r\n     *\r\n     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise\r\n     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of\r\n     * resolving the Promise.\r\n     *\r\n     * @typeparam T The expected return type.\r\n     * @param {string} methodName The name of the server method to invoke.\r\n     * @param {any[]} args The arguments used to invoke the server method.\r\n     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.\r\n     */\r\n    public invoke<T = any>(methodName: string, ...args: any[]): Promise<T> {\r\n        const [streams, streamIds] = this._replaceStreamingParams(args);\r\n        const invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);\r\n\r\n        const p = new Promise<any>((resolve, reject) => {\r\n            // invocationId will always have a value for a non-blocking invocation\r\n            this._callbacks[invocationDescriptor.invocationId!] = (invocationEvent: StreamItemMessage | CompletionMessage | null, error?: Error) => {\r\n                if (error) {\r\n                    reject(error);\r\n                    return;\r\n                } else if (invocationEvent) {\r\n                    // invocationEvent will not be null when an error is not passed to the callback\r\n                    if (invocationEvent.type === MessageType.Completion) {\r\n                        if (invocationEvent.error) {\r\n                            reject(new Error(invocationEvent.error));\r\n                        } else {\r\n                            resolve(invocationEvent.result);\r\n                        }\r\n                    } else {\r\n                        reject(new Error(`Unexpected message type: ${invocationEvent.type}`));\r\n                    }\r\n                }\r\n            };\r\n\r\n            const promiseQueue = this._sendWithProtocol(invocationDescriptor)\r\n                .catch((e) => {\r\n                    reject(e);\r\n                    // invocationId will always have a value for a non-blocking invocation\r\n                    delete this._callbacks[invocationDescriptor.invocationId!];\r\n                });\r\n\r\n            this._launchStreams(streams, promiseQueue);\r\n        });\r\n\r\n        return p;\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the hub method with the specified method name is invoked.\r\n     *\r\n     * @param {string} methodName The name of the hub method to define.\r\n     * @param {Function} newMethod The handler that will be raised when the hub method is invoked.\r\n     */\r\n    public on(methodName: string, newMethod: (...args: any[]) => any): void\r\n    public on(methodName: string, newMethod: (...args: any[]) => void): void {\r\n        if (!methodName || !newMethod) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        if (!this._methods[methodName]) {\r\n            this._methods[methodName] = [];\r\n        }\r\n\r\n        // Preventing adding the same handler multiple times.\r\n        if (this._methods[methodName].indexOf(newMethod) !== -1) {\r\n            return;\r\n        }\r\n\r\n        this._methods[methodName].push(newMethod);\r\n    }\r\n\r\n    /** Removes all handlers for the specified hub method.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     */\r\n    public off(methodName: string): void;\r\n\r\n    /** Removes the specified handler for the specified hub method.\r\n     *\r\n     * You must pass the exact same Function instance as was previously passed to {@link @microsoft/signalr.HubConnection.on}. Passing a different instance (even if the function\r\n     * body is the same) will not remove the handler.\r\n     *\r\n     * @param {string} methodName The name of the method to remove handlers for.\r\n     * @param {Function} method The handler to remove. This must be the same Function instance as the one passed to {@link @microsoft/signalr.HubConnection.on}.\r\n     */\r\n    public off(methodName: string, method: (...args: any[]) => void): void;\r\n    public off(methodName: string, method?: (...args: any[]) => void): void {\r\n        if (!methodName) {\r\n            return;\r\n        }\r\n\r\n        methodName = methodName.toLowerCase();\r\n        const handlers = this._methods[methodName];\r\n        if (!handlers) {\r\n            return;\r\n        }\r\n        if (method) {\r\n            const removeIdx = handlers.indexOf(method);\r\n            if (removeIdx !== -1) {\r\n                handlers.splice(removeIdx, 1);\r\n                if (handlers.length === 0) {\r\n                    delete this._methods[methodName];\r\n                }\r\n            }\r\n        } else {\r\n            delete this._methods[methodName];\r\n        }\r\n\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection is closed.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).\r\n     */\r\n    public onclose(callback: (error?: Error) => void): void {\r\n        if (callback) {\r\n            this._closedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection starts reconnecting.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).\r\n     */\r\n    public onreconnecting(callback: (error?: Error) => void): void {\r\n        if (callback) {\r\n            this._reconnectingCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    /** Registers a handler that will be invoked when the connection successfully reconnects.\r\n     *\r\n     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.\r\n     */\r\n    public onreconnected(callback: (connectionId?: string) => void): void {\r\n        if (callback) {\r\n            this._reconnectedCallbacks.push(callback);\r\n        }\r\n    }\r\n\r\n    private _processIncomingData(data: any) {\r\n        this._cleanupTimeout();\r\n\r\n        if (!this._receivedHandshakeResponse) {\r\n            data = this._processHandshakeResponse(data);\r\n            this._receivedHandshakeResponse = true;\r\n        }\r\n\r\n        // Data may have all been read when processing handshake response\r\n        if (data) {\r\n            // Parse the messages\r\n            const messages = this._protocol.parseMessages(data, this._logger);\r\n\r\n            for (const message of messages) {\r\n                if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {\r\n                    // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message\r\n                    continue;\r\n                }\r\n\r\n                switch (message.type) {\r\n                    case MessageType.Invocation:\r\n                        this._invokeClientMethod(message)\r\n                            .catch((e) => {\r\n                                this._logger.log(LogLevel.Error, `Invoke client method threw error: ${getErrorString(e)}`)\r\n                            });\r\n                        break;\r\n                    case MessageType.StreamItem:\r\n                    case MessageType.Completion: {\r\n                        const callback = this._callbacks[message.invocationId];\r\n                        if (callback) {\r\n                            if (message.type === MessageType.Completion) {\r\n                                delete this._callbacks[message.invocationId];\r\n                            }\r\n                            try {\r\n                                callback(message);\r\n                            } catch (e) {\r\n                                this._logger.log(LogLevel.Error, `Stream callback threw error: ${getErrorString(e)}`);\r\n                            }\r\n                        }\r\n                        break;\r\n                    }\r\n                    case MessageType.Ping:\r\n                        // Don't care about pings\r\n                        break;\r\n                    case MessageType.Close: {\r\n                        this._logger.log(LogLevel.Information, \"Close message received from server.\");\r\n\r\n                        const error = message.error ? new Error(\"Server returned an error on close: \" + message.error) : undefined;\r\n\r\n                        if (message.allowReconnect === true) {\r\n                            // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,\r\n                            // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.\r\n\r\n                            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                            this.connection.stop(error);\r\n                        } else {\r\n                            // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.\r\n                            this._stopPromise = this._stopInternal(error);\r\n                        }\r\n\r\n                        break;\r\n                    }\r\n                    case MessageType.Ack:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._ack(message);\r\n                        }\r\n                        break;\r\n                    case MessageType.Sequence:\r\n                        if (this._messageBuffer) {\r\n                            this._messageBuffer._resetSequence(message);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        this._logger.log(LogLevel.Warning, `Invalid message type: ${message.type}.`);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        this._resetTimeoutPeriod();\r\n    }\r\n\r\n    private _processHandshakeResponse(data: any): any {\r\n        let responseMessage: HandshakeResponseMessage;\r\n        let remainingData: any;\r\n\r\n        try {\r\n            [remainingData, responseMessage] = this._handshakeProtocol.parseHandshakeResponse(data);\r\n        } catch (e) {\r\n            const message = \"Error parsing handshake response: \" + e;\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        }\r\n        if (responseMessage.error) {\r\n            const message = \"Server returned handshake error: \" + responseMessage.error;\r\n            this._logger.log(LogLevel.Error, message);\r\n\r\n            const error = new Error(message);\r\n            this._handshakeRejecter(error);\r\n            throw error;\r\n        } else {\r\n            this._logger.log(LogLevel.Debug, \"Server handshake complete.\");\r\n        }\r\n\r\n        this._handshakeResolver();\r\n        return remainingData;\r\n    }\r\n\r\n    private _resetKeepAliveInterval() {\r\n        if (this.connection.features.inherentKeepAlive) {\r\n            return;\r\n        }\r\n\r\n        // Set the time we want the next keep alive to be sent\r\n        // Timer will be setup on next message receive\r\n        this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;\r\n\r\n        this._cleanupPingTimer();\r\n    }\r\n\r\n    private _resetTimeoutPeriod() {\r\n        if (!this.connection.features || !this.connection.features.inherentKeepAlive) {\r\n            // Set the timeout timer\r\n            this._timeoutHandle = setTimeout(() => this.serverTimeout(), this.serverTimeoutInMilliseconds);\r\n\r\n            // Set keepAlive timer if there isn't one\r\n            if (this._pingServerHandle === undefined)\r\n            {\r\n                let nextPing = this._nextKeepAlive - new Date().getTime();\r\n                if (nextPing < 0) {\r\n                    nextPing = 0;\r\n                }\r\n\r\n                // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute\r\n                this._pingServerHandle = setTimeout(async () => {\r\n                    if (this._connectionState === HubConnectionState.Connected) {\r\n                        try {\r\n                            await this._sendMessage(this._cachedPingMessage);\r\n                        } catch {\r\n                            // We don't care about the error. It should be seen elsewhere in the client.\r\n                            // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering\r\n                            this._cleanupPingTimer();\r\n                        }\r\n                    }\r\n                }, nextPing);\r\n            }\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/naming-convention\r\n    private serverTimeout() {\r\n        // The server hasn't talked to us in a while. It doesn't like us anymore ... :(\r\n        // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.\r\n        // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n        this.connection.stop(new Error(\"Server timeout elapsed without receiving a message from the server.\"));\r\n    }\r\n\r\n    private async _invokeClientMethod(invocationMessage: InvocationMessage) {\r\n        const methodName = invocationMessage.target.toLowerCase();\r\n        const methods = this._methods[methodName];\r\n        if (!methods) {\r\n            this._logger.log(LogLevel.Warning, `No client method with the name '${methodName}' found.`);\r\n\r\n            // No handlers provided by client but the server is expecting a response still, so we send an error\r\n            if (invocationMessage.invocationId) {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                await this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, \"Client didn't provide a result.\", null));\r\n            }\r\n            return;\r\n        }\r\n\r\n        // Avoid issues with handlers removing themselves thus modifying the list while iterating through it\r\n        const methodsCopy = methods.slice();\r\n\r\n        // Server expects a response\r\n        const expectsResponse = invocationMessage.invocationId ? true : false;\r\n        // We preserve the last result or exception but still call all handlers\r\n        let res;\r\n        let exception;\r\n        let completionMessage;\r\n        for (const m of methodsCopy) {\r\n            try {\r\n                const prevRes = res;\r\n                res = await m.apply(this, invocationMessage.arguments);\r\n                if (expectsResponse && res && prevRes) {\r\n                    this._logger.log(LogLevel.Error, `Multiple results provided for '${methodName}'. Sending error to server.`);\r\n                    completionMessage = this._createCompletionMessage(invocationMessage.invocationId!, `Client provided multiple results.`, null);\r\n                }\r\n                // Ignore exception if we got a result after, the exception will be logged\r\n                exception = undefined;\r\n            } catch (e) {\r\n                exception = e;\r\n                this._logger.log(LogLevel.Error, `A callback for the method '${methodName}' threw error '${e}'.`);\r\n            }\r\n        }\r\n        if (completionMessage) {\r\n            await this._sendWithProtocol(completionMessage);\r\n        } else if (expectsResponse) {\r\n            // If there is an exception that means either no result was given or a handler after a result threw\r\n            if (exception) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId!, `${exception}`, null);\r\n            } else if (res !== undefined) {\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId!, null, res);\r\n            } else {\r\n                this._logger.log(LogLevel.Warning, `No result given for '${methodName}' method and invocation ID '${invocationMessage.invocationId}'.`);\r\n                // Client didn't provide a result or throw from a handler, server expects a response so we send an error\r\n                completionMessage = this._createCompletionMessage(invocationMessage.invocationId!, \"Client didn't provide a result.\", null);\r\n            }\r\n            await this._sendWithProtocol(completionMessage);\r\n        } else {\r\n            if (res) {\r\n                this._logger.log(LogLevel.Error, `Result given for '${methodName}' method but server is not expecting a result.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _connectionClosed(error?: Error) {\r\n        this._logger.log(LogLevel.Debug, `HubConnection.connectionClosed(${error}) called while in state ${this._connectionState}.`);\r\n\r\n        // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.\r\n        this._stopDuringStartError = this._stopDuringStartError || error || new AbortError(\"The underlying connection was closed before the hub handshake could complete.\");\r\n\r\n        // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.\r\n        // If it has already completed, this should just noop.\r\n        if (this._handshakeResolver) {\r\n            this._handshakeResolver();\r\n        }\r\n\r\n        this._cancelCallbacksWithError(error || new Error(\"Invocation canceled due to the underlying connection being closed.\"));\r\n\r\n        this._cleanupTimeout();\r\n        this._cleanupPingTimer();\r\n\r\n        if (this._connectionState === HubConnectionState.Disconnecting) {\r\n            this._completeClose(error);\r\n        } else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {\r\n            // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n            this._reconnect(error);\r\n        } else if (this._connectionState === HubConnectionState.Connected) {\r\n            this._completeClose(error);\r\n        }\r\n\r\n        // If none of the above if conditions were true were called the HubConnection must be in either:\r\n        // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.\r\n        // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt\r\n        //    and potentially continue the reconnect() loop.\r\n        // 3. The Disconnected state in which case we're already done.\r\n    }\r\n\r\n    private _completeClose(error?: Error) {\r\n        if (this._connectionStarted) {\r\n            this._connectionState = HubConnectionState.Disconnected;\r\n            this._connectionStarted = false;\r\n            if (this._messageBuffer) {\r\n                this._messageBuffer._dispose(error ?? new Error(\"Connection closed.\"));\r\n                this._messageBuffer = undefined;\r\n            }\r\n\r\n            if (Platform.isBrowser) {\r\n                window.document.removeEventListener(\"freeze\", this._freezeEventListener);\r\n            }\r\n\r\n            try {\r\n                this._closedCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onclose callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n        }\r\n    }\r\n\r\n    private async _reconnect(error?: Error) {\r\n        const reconnectStartTime = Date.now();\r\n        let previousReconnectAttempts = 0;\r\n        let retryError = error !== undefined ? error : new Error(\"Attempting to reconnect due to a unknown error.\");\r\n\r\n        let nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);\r\n\r\n        if (nextRetryDelay === null) {\r\n            this._logger.log(LogLevel.Debug, \"Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.\");\r\n            this._completeClose(error);\r\n            return;\r\n        }\r\n\r\n        this._connectionState = HubConnectionState.Reconnecting;\r\n\r\n        if (error) {\r\n            this._logger.log(LogLevel.Information, `Connection reconnecting because of error '${error}'.`);\r\n        } else {\r\n            this._logger.log(LogLevel.Information, \"Connection reconnecting.\");\r\n        }\r\n\r\n        if (this._reconnectingCallbacks.length !== 0) {\r\n            try {\r\n                this._reconnectingCallbacks.forEach((c) => c.apply(this, [error]));\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Error, `An onreconnecting callback called with error '${error}' threw error '${e}'.`);\r\n            }\r\n\r\n            // Exit early if an onreconnecting callback called connection.stop().\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state in onreconnecting callback. Done reconnecting.\");\r\n                return;\r\n            }\r\n        }\r\n\r\n        while (nextRetryDelay !== null) {\r\n            this._logger.log(LogLevel.Information, `Reconnect attempt number ${previousReconnectAttempts} will start in ${nextRetryDelay} ms.`);\r\n\r\n            await new Promise((resolve) => {\r\n                this._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay!);\r\n            });\r\n            this._reconnectDelayHandle = undefined;\r\n\r\n            if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                this._logger.log(LogLevel.Debug, \"Connection left the reconnecting state during reconnect delay. Done reconnecting.\");\r\n                return;\r\n            }\r\n\r\n            try {\r\n                await this._startInternal();\r\n\r\n                this._connectionState = HubConnectionState.Connected;\r\n                this._logger.log(LogLevel.Information, \"HubConnection reconnected successfully.\");\r\n\r\n                if (this._reconnectedCallbacks.length !== 0) {\r\n                    try {\r\n                        this._reconnectedCallbacks.forEach((c) => c.apply(this, [this.connection.connectionId]));\r\n                    } catch (e) {\r\n                        this._logger.log(LogLevel.Error, `An onreconnected callback called with connectionId '${this.connection.connectionId}; threw error '${e}'.`);\r\n                    }\r\n                }\r\n\r\n                return;\r\n            } catch (e) {\r\n                this._logger.log(LogLevel.Information, `Reconnect attempt failed because of error '${e}'.`);\r\n\r\n                if (this._connectionState !== HubConnectionState.Reconnecting) {\r\n                    this._logger.log(LogLevel.Debug, `Connection moved to the '${this._connectionState}' from the reconnecting state during reconnect attempt. Done reconnecting.`);\r\n                    // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.\r\n                    if (this._connectionState as any === HubConnectionState.Disconnecting) {\r\n                        this._completeClose();\r\n                    }\r\n                    return;\r\n                }\r\n\r\n                retryError = e instanceof Error ? e : new Error((e as any).toString());\r\n                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);\r\n            }\r\n        }\r\n\r\n        this._logger.log(LogLevel.Information, `Reconnect retries have been exhausted after ${Date.now() - reconnectStartTime} ms and ${previousReconnectAttempts} failed attempts. Connection disconnecting.`);\r\n\r\n        this._completeClose();\r\n    }\r\n\r\n    private _getNextRetryDelay(previousRetryCount: number, elapsedMilliseconds: number, retryReason: Error) {\r\n        try {\r\n            return this._reconnectPolicy!.nextRetryDelayInMilliseconds({\r\n                elapsedMilliseconds,\r\n                previousRetryCount,\r\n                retryReason,\r\n            });\r\n        } catch (e) {\r\n            this._logger.log(LogLevel.Error, `IRetryPolicy.nextRetryDelayInMilliseconds(${previousRetryCount}, ${elapsedMilliseconds}) threw error '${e}'.`);\r\n            return null;\r\n        }\r\n    }\r\n\r\n    private _cancelCallbacksWithError(error: Error) {\r\n        const callbacks = this._callbacks;\r\n        this._callbacks = {};\r\n\r\n        Object.keys(callbacks)\r\n            .forEach((key) => {\r\n                const callback = callbacks[key];\r\n                try {\r\n                    callback(null, error);\r\n                } catch (e) {\r\n                    this._logger.log(LogLevel.Error, `Stream 'error' callback called with '${error}' threw error: ${getErrorString(e)}`);\r\n                }\r\n            });\r\n    }\r\n\r\n    private _cleanupPingTimer(): void {\r\n        if (this._pingServerHandle) {\r\n            clearTimeout(this._pingServerHandle);\r\n            this._pingServerHandle = undefined;\r\n        }\r\n    }\r\n\r\n    private _cleanupTimeout(): void {\r\n        if (this._timeoutHandle) {\r\n            clearTimeout(this._timeoutHandle);\r\n        }\r\n    }\r\n\r\n    private _createInvocation(methodName: string, args: any[], nonblocking: boolean, streamIds: string[]): InvocationMessage {\r\n        if (nonblocking) {\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        } else {\r\n            const invocationId = this._invocationId;\r\n            this._invocationId++;\r\n\r\n            if (streamIds.length !== 0) {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    streamIds,\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            } else {\r\n                return {\r\n                    arguments: args,\r\n                    invocationId: invocationId.toString(),\r\n                    target: methodName,\r\n                    type: MessageType.Invocation,\r\n                };\r\n            }\r\n        }\r\n    }\r\n\r\n    private _launchStreams(streams: IStreamResult<any>[], promiseQueue: Promise<void>): void {\r\n        if (streams.length === 0) {\r\n            return;\r\n        }\r\n\r\n        // Synchronize stream data so they arrive in-order on the server\r\n        if (!promiseQueue) {\r\n            promiseQueue = Promise.resolve();\r\n        }\r\n\r\n        // We want to iterate over the keys, since the keys are the stream ids\r\n        // eslint-disable-next-line guard-for-in\r\n        for (const streamId in streams) {\r\n            streams[streamId].subscribe({\r\n                complete: () => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId)));\r\n                },\r\n                error: (err) => {\r\n                    let message: string;\r\n                    if (err instanceof Error) {\r\n                        message = err.message;\r\n                    } else if (err && err.toString) {\r\n                        message = err.toString();\r\n                    } else {\r\n                        message = \"Unknown error\";\r\n                    }\r\n\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createCompletionMessage(streamId, message)));\r\n                },\r\n                next: (item) => {\r\n                    promiseQueue = promiseQueue.then(() => this._sendWithProtocol(this._createStreamItemMessage(streamId, item)));\r\n                },\r\n            });\r\n        }\r\n    }\r\n\r\n    private _replaceStreamingParams(args: any[]): [IStreamResult<any>[], string[]] {\r\n        const streams: IStreamResult<any>[] = [];\r\n        const streamIds: string[] = [];\r\n        for (let i = 0; i < args.length; i++) {\r\n            const argument = args[i];\r\n            if (this._isObservable(argument)) {\r\n                const streamId = this._invocationId;\r\n                this._invocationId++;\r\n                // Store the stream for later use\r\n                streams[streamId] = argument;\r\n                streamIds.push(streamId.toString());\r\n\r\n                // remove stream from args\r\n                args.splice(i, 1);\r\n            }\r\n        }\r\n\r\n        return [streams, streamIds];\r\n    }\r\n\r\n    private _isObservable(arg: any): arg is IStreamResult<any> {\r\n        // This allows other stream implementations to just work (like rxjs)\r\n        return arg && arg.subscribe && typeof arg.subscribe === \"function\";\r\n    }\r\n\r\n    private _createStreamInvocation(methodName: string, args: any[], streamIds: string[]): StreamInvocationMessage {\r\n        const invocationId = this._invocationId;\r\n        this._invocationId++;\r\n\r\n        if (streamIds.length !== 0) {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                streamIds,\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        } else {\r\n            return {\r\n                arguments: args,\r\n                invocationId: invocationId.toString(),\r\n                target: methodName,\r\n                type: MessageType.StreamInvocation,\r\n            };\r\n        }\r\n    }\r\n\r\n    private _createCancelInvocation(id: string): CancelInvocationMessage {\r\n        return {\r\n            invocationId: id,\r\n            type: MessageType.CancelInvocation,\r\n        };\r\n    }\r\n\r\n    private _createStreamItemMessage(id: string, item: any): StreamItemMessage {\r\n        return {\r\n            invocationId: id,\r\n            item,\r\n            type: MessageType.StreamItem,\r\n        };\r\n    }\r\n\r\n    private _createCompletionMessage(id: string, error?: any, result?: any): CompletionMessage {\r\n        if (error) {\r\n            return {\r\n                error,\r\n                invocationId: id,\r\n                type: MessageType.Completion,\r\n            };\r\n        }\r\n\r\n        return {\r\n            invocationId: id,\r\n            result,\r\n            type: MessageType.Completion,\r\n        };\r\n    }\r\n\r\n    private _createCloseMessage(): CloseMessage {\r\n        return { type: MessageType.Close };\r\n    }\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"card\\\" style=\\\"margin-top: 15px;\\\">\\r\\n      <div class=\\\"card-header bg-white d-flex justify-content-between align-items-center\\\">\\r\\n        <h5 class=\\\"card-title mb-0\\\">Filtreleme</h5>\\r\\n        <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"createPdf()\\\">\\r\\n          <i class=\\\"fas fa-file-pdf\\\"></i>\\r\\n          PDF Oluştur\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"card-body py-2\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n              <mat-label>Başlangıç</mat-label>\\r\\n              <input matInput [matDatepicker]=\\\"startDatePicker\\\" [(ngModel)]=\\\"startDate\\\" (dateChange)=\\\"onStartDateChange()\\\" placeholder=\\\"Seçiniz\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <button *ngIf=\\\"startDate\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"startDate=null;formattedStartDate=''\\\">\\r\\n              Filtreyi Temizle\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n              <mat-label>Bitiş</mat-label>\\r\\n              <input matInput [matDatepicker]=\\\"endDatePicker\\\" [(ngModel)]=\\\"endDate\\\" (dateChange)=\\\"onEndDateChange()\\\" placeholder=\\\"Seçiniz\\\">\\r\\n              <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n              <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n            </mat-form-field>\\r\\n            <button *ngIf=\\\"endDate\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"endDate=null;formattedEndDate=''\\\">\\r\\n              Filtreyi Temizle\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n              <mat-label>İsim</mat-label>\\r\\n              <input matInput [(ngModel)]=\\\"searchName\\\" (keyup)=\\\"page=1\\\" placeholder=\\\"İsim giriniz\\\">\\r\\n            </mat-form-field>\\r\\n            <button *ngIf=\\\"searchName\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"searchName=''\\\">\\r\\n              Filtreyi Temizle\\r\\n            </button>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n            <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n              <mat-label>İşlem</mat-label>\\r\\n              <mat-select (selectionChange)=\\\"page=1\\\" [(ngModel)]=\\\"selectedProcessType\\\">\\r\\n                <mat-option value=\\\"Ziyaret Talebi\\\">Ziyaret</mat-option>\\r\\n                <mat-option value=\\\"Güvenlik Onay\\\">Güvenlik Onay</mat-option>\\r\\n                <mat-option value=\\\"Güvenlik Red\\\">Güvenlik Red</mat-option>\\r\\n                <mat-option value=\\\"Rapor Oluşturma\\\">Rapor Oluşturma</mat-option>\\r\\n              </mat-select>\\r\\n            </mat-form-field>\\r\\n            <button *ngIf=\\\"selectedProcessType\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"selectedProcessType=''\\\">\\r\\n              Filtreyi Temizle\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"row\\\" *ngIf=\\\"formattedEndDate||formattedStartDate||selectedProcessType||searchName\\\">\\r\\n          <div class=\\\"col-md-12 text-center\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSearch()\\\">\\r\\n              <i class=\\\"fas fa-search\\\"></i>\\r\\n              Ara\\r\\n            </button>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 style=\\\"padding-bottom: 30px;\\\" class=\\\"card-title \\\">{{'BanuLogList'| translate}}</h4>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"filteredAllResult\\\">\\r\\n                <div style=\\\"font-weight: bold;\\\" class=\\\"col-md-4\\\" *ngIf=\\\"filteredAllResult\\\">\\r\\n                  {{filteredAllResult.totalItemCount}} kayıt arasından {{filteredAllResult.data.length}} kayıt listeleniyor\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <div class=\\\"pagination-container\\\" *ngIf=\\\"pageCount.length > 0\\\">\\r\\n                    <nav aria-label=\\\"Page navigation\\\">\\r\\n                      <ul class=\\\"pagination\\\">\\r\\n                        <li class=\\\"page-item\\\" [class.disabled]=\\\"page === 1\\\">\\r\\n                          <a class=\\\"page-link\\\" (click)=\\\"onPageChange(page - 1)\\\" aria-label=\\\"Previous\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                          </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"page-item\\\" *ngFor=\\\"let p of getVisiblePages()\\\" [class.active]=\\\"p === page\\\">\\r\\n                          <a class=\\\"page-link\\\" *ngIf=\\\"p !== -1\\\" (click)=\\\"onPageChange(p)\\\">{{p}}</a>\\r\\n                          <span class=\\\"page-link dots\\\" *ngIf=\\\"p === -1\\\">...</span>\\r\\n                        </li>\\r\\n                        <li class=\\\"page-item\\\" [class.disabled]=\\\"page === pageCount.length\\\">\\r\\n                          <a class=\\\"page-link\\\" (click)=\\\"onPageChange(page + 1)\\\" aria-label=\\\"Next\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                          </a>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                    </nav>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <mat-form-field class=\\\"float-right\\\">\\r\\n                    <mat-label>Filter</mat-label>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row\\\" *ngIf=\\\"allResult&&!filteredAllResult\\\">\\r\\n                <div style=\\\"font-weight: bold;\\\" class=\\\"col-md-4\\\" *ngIf=\\\"allResult\\\">\\r\\n                  {{allResult.totalItemCount}} kayıt arasından {{allResult.data.length}} kayıt listeleniyor\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <div class=\\\"pagination-container\\\" *ngIf=\\\"allPageCount.length > 0\\\">\\r\\n                    <nav aria-label=\\\"Page navigation\\\">\\r\\n                      <ul class=\\\"pagination\\\">\\r\\n                        <li class=\\\"page-item\\\" [class.disabled]=\\\"basePageIndex === 1\\\">\\r\\n                          <a class=\\\"page-link\\\" (click)=\\\"onAllPageChange(basePageIndex - 1)\\\" aria-label=\\\"Previous\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                          </a>\\r\\n                        </li>\\r\\n                        <li class=\\\"page-item\\\" *ngFor=\\\"let p of getAllVisiblePages()\\\" [class.active]=\\\"p === basePageIndex\\\">\\r\\n                          <a class=\\\"page-link\\\" *ngIf=\\\"p !== -1\\\" (click)=\\\"onAllPageChange(p)\\\">{{p}}</a>\\r\\n                          <span class=\\\"page-link dots\\\" *ngIf=\\\"p === -1\\\">...</span>\\r\\n                        </li>\\r\\n                        <li class=\\\"page-item\\\" [class.disabled]=\\\"basePageIndex === allPageCount.length\\\">\\r\\n                          <a class=\\\"page-link\\\" (click)=\\\"onAllPageChange(basePageIndex + 1)\\\" aria-label=\\\"Next\\\">\\r\\n                            <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                          </a>\\r\\n                        </li>\\r\\n                      </ul>\\r\\n                    </nav>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-4\\\">\\r\\n                  <mat-form-field class=\\\"float-right\\\">\\r\\n                    <mat-label>Filter</mat-label>\\r\\n                    <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n\\t\\t\\t\\t\\t\\t\\t<table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t\\r\\n                   <ng-container matColumnDef=\\\"id\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.id}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"createdDate\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.createdDate|date:'dd/MM/yyyy'}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"transactorFullName\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorFullName'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactorFullName}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"transactorId\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorId'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactorId}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"transactionsDescription\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionsDescription'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactionsDescription}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\t\\r\\n                   <ng-container matColumnDef=\\\"transactionType\\\">\\r\\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionType'|translate}}</th>\\r\\n                     <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactionType}}</td>\\r\\n\\t\\t\\t\\t   </ng-container>\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\t\\t\\t\\t\\t\\t\\t\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                </tr>\\r\\n\\t\\t\\t\\t\\t\\t\\t</table>\\r\\n\\t\\t\\t\\t\\t\\t\\r\\n\\t\\t\\t\\t\\t\\t\\t</div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"banulog\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(banuLogAddForm)\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n           {{'BanuLogForm'| translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n        <form *ngIf=\\\"banuLogAddForm\\\" [formGroup]=\\\"banuLogAddForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n          \\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"createdDate\\\" type=\\\"date\\\" id=\\\"createdDate\\\" name=\\\"createdDate\\\"\\r\\n                       formControlName=\\\"createdDate\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"banuLogAddForm.get('createdDate')!.hasError('createdDate') && banuLogAddForm.get('createdDate')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"transactorFullName\\\" type=\\\"text\\\" id=\\\"transactorFullName\\\" name=\\\"transactorFullName\\\"\\r\\n                       formControlName=\\\"transactorFullName\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"banuLogAddForm.get('transactorFullName')!.hasError('transactorFullName') && banuLogAddForm.get('transactorFullName')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n\\t\\t\\t\\t\\t\\t<div class=\\\"col-md-12\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t<select class=\\\"browser-default custom-select\\\" formControlName=\\\"transactorId\\\">\\r\\n\\t\\t\\t\\t\\t\\t\\t\\t<option *ngFor=\\\"let item of banuLoglookUp\\\" [value]=\\\"item.id\\\"> {{item.label}}</option>\\r\\n\\t\\t\\t\\t\\t\\t\\t</select>\\r\\n\\t\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t</div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"transactionsDescription\\\" type=\\\"text\\\" id=\\\"transactionsDescription\\\" name=\\\"transactionsDescription\\\"\\r\\n                       formControlName=\\\"transactionsDescription\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"banuLogAddForm.get('transactionsDescription')!.hasError('transactionsDescription') && banuLogAddForm.get('transactionsDescription')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\t\\t\\t\\t\\t<div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"transactionType\\\" type=\\\"text\\\" id=\\\"transactionType\\\" name=\\\"transactionType\\\"\\r\\n                       formControlName=\\\"transactionType\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                     *ngIf=\\\"banuLogAddForm.get('transactionType')!.hasError('transactionType') && banuLogAddForm.get('transactionType')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n                   \\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save'|translate}}</button>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon = \\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n\\t[confirmButtonText] = \\\"'OK'\\\"[cancelButtonText] = \\\"'Cancel'\\\" >\\r\\n</swal>\\r\\n\\r\\n\";","export default \".pagination-container {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.pagination {\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n.pagination .page-item {\\n  margin: 0 2px;\\n}\\n\\n.pagination .page-item.active .page-link {\\n  background-color: #f44336;\\n  border-color: #f44336;\\n  color: white;\\n}\\n\\n.pagination .page-item.disabled .page-link {\\n  color: #6c757d;\\n  pointer-events: none;\\n  background-color: #fff;\\n  border-color: #dee2e6;\\n}\\n\\n.pagination .page-link {\\n  padding: 8px 12px;\\n  color: #f44336;\\n  background-color: #fff;\\n  border: 1px solid #dee2e6;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n}\\n\\n.pagination .page-link:hover {\\n  background-color: #f8f9fa;\\n  border-color: #f44336;\\n}\\n\\n.pagination .page-link.dots {\\n  cursor: default;\\n  background-color: transparent;\\n  border: none;\\n  color: #6c757d;\\n}\\n\\n.pagination .page-link.dots:hover {\\n  background-color: transparent;\\n  border: none;\\n}\\n\\n.float-right {\\n  float: right;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGJhbnVMb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBQ0U7RUFDRSxhQUFBO0FBQ0o7O0FBQ0k7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsWUFBQTtBQUNOOztBQUVJO0VBQ0UsY0FBQTtFQUNBLG9CQUFBO0VBQ0Esc0JBQUE7RUFDQSxxQkFBQTtBQUFOOztBQUlFO0VBQ0UsaUJBQUE7RUFDQSxjQUFBO0VBQ0Esc0JBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtBQUZKOztBQUlJO0VBQ0UseUJBQUE7RUFDQSxxQkFBQTtBQUZOOztBQUtJO0VBQ0UsZUFBQTtFQUNBLDZCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFITjs7QUFLTTtFQUNFLDZCQUFBO0VBQ0EsWUFBQTtBQUhSOztBQVNBO0VBQ0UsWUFBQTtBQU5GIiwiZmlsZSI6ImJhbnVMb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnaW5hdGlvbi1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdpbmF0aW9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgXHJcbiAgLnBhZ2UtaXRlbSB7XHJcbiAgICBtYXJnaW46IDAgMnB4O1xyXG4gICAgXHJcbiAgICAmLmFjdGl2ZSAucGFnZS1saW5rIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYuZGlzYWJsZWQgLnBhZ2UtbGluayB7XHJcbiAgICAgIGNvbG9yOiAjNmM3NTdkO1xyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjZGVlMmU2O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnBhZ2UtbGluayB7XHJcbiAgICBwYWRkaW5nOiA4cHggMTJweDtcclxuICAgIGNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZWUyZTY7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xyXG4gICAgICBib3JkZXItY29sb3I6ICNmNDQzMzY7XHJcbiAgICB9XHJcblxyXG4gICAgJi5kb3RzIHtcclxuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBjb2xvcjogIzZjNzU3ZDtcclxuICAgICAgXHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmZsb2F0LXJpZ2h0IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuIl19 */\";","export default \"<div class=\\\"main-content\\\">\\r\\n  <div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-12\\\">\\r\\n        <div class=\\\"card\\\">\\r\\n          <div class=\\\"card-header card-header-danger\\\">\\r\\n            <h4 class=\\\"card-title \\\">{{'OperationClaimList'|translate}}</h4>\\r\\n          </div>\\r\\n          <div class=\\\"card-body\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n\\r\\n              <div class=\\\"col-md-4 pull-right\\\">\\r\\n                <mat-form-field>\\r\\n                  <mat-label>{{'Filter' |translate}}</mat-label>\\r\\n                  <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n\\r\\n              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n                <ng-container matColumnDef=\\\"id\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"name\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Name'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"alias\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Alias'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.alias}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"description\\\">\\r\\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Description'|translate}} </th>\\r\\n                  <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <ng-container matColumnDef=\\\"update\\\" >\\r\\n                  <th mat-header-cell *matHeaderCellDef></th>\\r\\n                  <td style=\\\"width: 25px;\\\" mat-cell *matCellDef=\\\"let element\\\">\\r\\n                    <a *ngIf=\\\"checkClaim('UpdateOperationClaimCommand')\\\" data-toggle=\\\"modal\\\" data-target=\\\"#operationclaim\\\" (click)=\\\"getOperationClaimById(element.id)\\\"><i\\r\\n                      title=\\\"{{'Update' | translate}}\\\"  style=\\\"color:#ff5722;\\\" class=\\\"far fa-edit\\\"></i></a>\\r\\n                  </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n\\r\\n                <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                  <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                </tr>\\r\\n              </table>\\r\\n              <mat-paginator [pageSizeOptions]=\\\"[10, 25,50,100]\\\"></mat-paginator>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"modal modal-angular fade\\\" id=\\\"operationclaim\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n  <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n    <div class=\\\"modal-content\\\">\\r\\n      <div class=\\\"modal-body text-center\\\">\\r\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n          (click)=\\\"clearFormGroup(operationClaimAddForm)\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n        <h4 class=\\\"margin-top\\\">\\r\\n          {{'OperationClaimForm'| translate}}\\r\\n        </h4>\\r\\n        <div class=\\\"separator\\\"></div>\\r\\n        <form *ngIf=\\\"operationClaimAddForm\\\" [formGroup]=\\\"operationClaimAddForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"{{'Alias'|translate}}\\\" type=\\\"text\\\" id=\\\"alias\\\" name=\\\"alias\\\"\\r\\n                  formControlName=\\\"alias\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                  *ngIf=\\\"operationClaimAddForm.get('alias')!.hasError('alias') && operationClaimAddForm.get('alias')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col col-md-12\\\">\\r\\n              <mat-form-field class=\\\"example-full-width\\\">\\r\\n                <input matInput placeholder=\\\"{{'Description'|translate}}\\\" type=\\\"text\\\" id=\\\"description\\\"\\r\\n                  name=\\\"description\\\" formControlName=\\\"description\\\" />\\r\\n                <div class=\\\"alert alert-danger\\\"\\r\\n                  *ngIf=\\\"operationClaimAddForm.get('description')!.hasError('description') && operationClaimAddForm.get('description')!.dirty\\\">\\r\\n                </div>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </div>\\r\\n\\r\\n          <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save' |translate}}</button>\\r\\n          <div class=\\\"clearfix\\\"></div>\\r\\n        </form>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\";","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { PrivPagingResult } from 'app/core/models/privPaging';\r\nimport { Filter } from 'app/core/search-settings/global-filter';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { BanuLog } from '../models/BanuLog';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BanuLogService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  getBanuLogList(): Observable<BanuLog[]> {\r\n\r\n    return this.httpClient.get<BanuLog[]>(environment.getApiUrl + '/BanuLogs/getall')\r\n  }\r\n\r\n  getBanuLogByPagingList(page:number,pageSize:number): Observable<PrivPagingResult<BanuLog>> {\r\n\r\n    return this.httpClient.get<PrivPagingResult<BanuLog>>(environment.getApiUrl + '/BanuLogs/getbypaging?page='+page+'&pageSize='+pageSize)\r\n  }\r\n  getBanuLogByPagingListSecurity(page:number,pageSize:number): Observable<PrivPagingResult<BanuLog>> {\r\n\r\n    return this.httpClient.get<PrivPagingResult<BanuLog>>(environment.getApiUrl + '/BanuLogs/getbypagingsecurity?page='+page+'&pageSize='+pageSize)\r\n  }\r\n  getBanuLogGlobalFilterList(filters:any,page:number,pageSize:number): Observable<PrivPagingResult<BanuLog>> {\r\n\r\n    return this.httpClient.post<PrivPagingResult<BanuLog>>(environment.getApiUrl + `/BanuLogs/getGlobalFilterList?page=${page}&pageSize=${pageSize}`,filters)\r\n  }\r\n  getBanuLogGlobalFilterListSecurity(filters:any,page:number,pageSize:number): Observable<PrivPagingResult<BanuLog>> {\r\n\r\n    return this.httpClient.post<PrivPagingResult<BanuLog>>(environment.getApiUrl + `/BanuLogs/getGlobalFilterListSecurity?page=${page}&pageSize=${pageSize}`,filters)\r\n  }\r\n  getBanuLogListToPdf(logList: any[]): Observable<Blob> {\r\n    return this.httpClient.post<Blob>(`${environment.getApiUrl}/BanuLogs/getbylisttopdf`, logList, { responseType: 'blob' as 'json' });\r\n  }\r\n  getBanuLogFilterListToPdf(filters: Filter[]): Observable<HttpResponse<Blob>> {\r\n    return this.httpClient.post<Blob>(\r\n      `${environment.getApiUrl}/BanuLogs/getbyglobalpdf`, \r\n      filters, \r\n      {\r\n        responseType: 'blob' as 'json', // Yanıtı blob olarak al\r\n        observe: 'response' // Yanıt başlıklarını da al\r\n      }\r\n    );\r\n  }\r\n  getBanuLogFilterListToPdfSecurity(filters: Filter[]): Observable<HttpResponse<Blob>> {\r\n    return this.httpClient.post<Blob>(\r\n      `${environment.getApiUrl}/BanuLogs/getbyglobalpdfforSecurity`, \r\n      filters, \r\n      {\r\n        responseType: 'blob' as 'json', // Yanıtı blob olarak al\r\n        observe: 'response' // Yanıt başlıklarını da al\r\n      }\r\n    );\r\n  }\r\n  getBanuLogById(id: number): Observable<BanuLog> {\r\n    return this.httpClient.get<BanuLog>(environment.getApiUrl + '/BanuLogs/getbyid?id='+id)\r\n  }\r\n\r\n  addBanuLog(banuLog: BanuLog): Observable<any> {\r\n\r\n    return this.httpClient.post(environment.getApiUrl + '/BanuLogs/', banuLog, { responseType: 'text' });\r\n  }\r\n\r\n  updateBanuLog(banuLog: BanuLog): Observable<any> {\r\n    return this.httpClient.put(environment.getApiUrl + '/BanuLogs/', banuLog, { responseType: 'text' });\r\n\r\n  }\r\n\r\n  deleteBanuLog(id: string) {\r\n    return this.httpClient.request('delete', environment.getApiUrl + '/BanuLogs/', { body: { id: id } });\r\n  }\r\n\r\n\r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\n// This will be treated as a bit flag in the future, so we keep it using power-of-two values.\r\n/** Specifies a specific HTTP transport type. */\r\nexport enum HttpTransportType {\r\n    /** Specifies no transport preference. */\r\n    None = 0,\r\n    /** Specifies the WebSockets transport. */\r\n    WebSockets = 1,\r\n    /** Specifies the Server-Sent Events transport. */\r\n    ServerSentEvents = 2,\r\n    /** Specifies the Long Polling transport. */\r\n    LongPolling = 4,\r\n}\r\n\r\n/** Specifies the transfer format for a connection. */\r\nexport enum TransferFormat {\r\n    /** Specifies that only text data will be transmitted over the connection. */\r\n    Text = 1,\r\n    /** Specifies that binary data will be transmitted over the connection. */\r\n    Binary = 2,\r\n}\r\n\r\n/** An abstraction over the behavior of transports. This is designed to support the framework and not intended for use by applications. */\r\nexport interface ITransport {\r\n    connect(url: string, transferFormat: TransferFormat): Promise<void>;\r\n    send(data: any): Promise<void>;\r\n    stop(): Promise<void>;\r\n    onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    onclose: ((error?: Error) => void) | null;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { HttpClient } from \"./HttpClient\";\r\nimport { MessageHeaders } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { ITransport, TransferFormat } from \"./ITransport\";\r\nimport { Arg, getDataDetail, getUserAgentHeader, Platform, sendMessage } from \"./Utils\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\n\r\n/** @private */\r\nexport class ServerSentEventsTransport implements ITransport {\r\n    private readonly _httpClient: HttpClient;\r\n    private readonly _accessToken: string | undefined;\r\n    private readonly _logger: ILogger;\r\n    private readonly _options: IHttpConnectionOptions;\r\n    private _eventSource?: EventSource;\r\n    private _url?: string;\r\n\r\n    public onreceive: ((data: string | ArrayBuffer) => void) | null;\r\n    public onclose: ((error?: Error | unknown) => void) | null;\r\n\r\n    constructor(httpClient: HttpClient, accessToken: string | undefined, logger: ILogger,\r\n                options: IHttpConnectionOptions) {\r\n        this._httpClient = httpClient;\r\n        this._accessToken = accessToken;\r\n        this._logger = logger;\r\n        this._options = options;\r\n\r\n        this.onreceive = null;\r\n        this.onclose = null;\r\n    }\r\n\r\n    public async connect(url: string, transferFormat: TransferFormat): Promise<void> {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isRequired(transferFormat, \"transferFormat\");\r\n        Arg.isIn(transferFormat, TransferFormat, \"transferFormat\");\r\n\r\n        this._logger.log(LogLevel.Trace, \"(SSE transport) Connecting.\");\r\n\r\n        // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send\r\n        this._url = url;\r\n\r\n        if (this._accessToken) {\r\n            url += (url.indexOf(\"?\") < 0 ? \"?\" : \"&\") + `access_token=${encodeURIComponent(this._accessToken)}`;\r\n        }\r\n\r\n        return new Promise<void>((resolve, reject) => {\r\n            let opened = false;\r\n            if (transferFormat !== TransferFormat.Text) {\r\n                reject(new Error(\"The Server-Sent Events transport only supports the 'Text' transfer format\"));\r\n                return;\r\n            }\r\n\r\n            let eventSource: EventSource;\r\n            if (Platform.isBrowser || Platform.isWebWorker) {\r\n                eventSource = new this._options.EventSource!(url, { withCredentials: this._options.withCredentials });\r\n            } else {\r\n                // Non-browser passes cookies via the dictionary\r\n                const cookies = this._httpClient.getCookieString(url);\r\n                const headers: MessageHeaders = {};\r\n                headers.Cookie = cookies;\r\n                const [name, value] = getUserAgentHeader();\r\n                headers[name] = value;\r\n\r\n                eventSource = new this._options.EventSource!(url, { withCredentials: this._options.withCredentials, headers: { ...headers, ...this._options.headers} } as EventSourceInit);\r\n            }\r\n\r\n            try {\r\n                eventSource.onmessage = (e: MessageEvent) => {\r\n                    if (this.onreceive) {\r\n                        try {\r\n                            this._logger.log(LogLevel.Trace, `(SSE transport) data received. ${getDataDetail(e.data, this._options.logMessageContent!)}.`);\r\n                            this.onreceive(e.data);\r\n                        } catch (error) {\r\n                            this._close(error);\r\n                            return;\r\n                        }\r\n                    }\r\n                };\r\n\r\n                // @ts-ignore: not using event on purpose\r\n                eventSource.onerror = (e: Event) => {\r\n                    // EventSource doesn't give any useful information about server side closes.\r\n                    if (opened) {\r\n                        this._close();\r\n                    } else {\r\n                        reject(new Error(\"EventSource failed to connect. The connection could not be found on the server,\"\r\n                        + \" either the connection ID is not present on the server, or a proxy is refusing/buffering the connection.\"\r\n                        + \" If you have multiple servers check that sticky sessions are enabled.\"));\r\n                    }\r\n                };\r\n\r\n                eventSource.onopen = () => {\r\n                    this._logger.log(LogLevel.Information, `SSE connected to ${this._url}`);\r\n                    this._eventSource = eventSource;\r\n                    opened = true;\r\n                    resolve();\r\n                };\r\n            } catch (e) {\r\n                reject(e);\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    public async send(data: any): Promise<void> {\r\n        if (!this._eventSource) {\r\n            return Promise.reject(new Error(\"Cannot send until the transport is connected\"));\r\n        }\r\n        return sendMessage(this._logger, \"SSE\", this._httpClient, this._url!, data, this._options);\r\n    }\r\n\r\n    public stop(): Promise<void> {\r\n        this._close();\r\n        return Promise.resolve();\r\n    }\r\n\r\n    private _close(e?: Error | unknown) {\r\n        if (this._eventSource) {\r\n            this._eventSource.close();\r\n            this._eventSource = undefined;\r\n\r\n            if (this.onclose) {\r\n                this.onclose(e);\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { LogDto } from '../models/LogDto';\r\nimport { environment } from 'environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LogDtoService {\r\n\r\n  constructor(private readonly _httpClient: HttpClient) { }\r\n\r\n\r\n  getLogDtoList(): Observable<LogDto[]> {\r\n\r\n    return this._httpClient.get<LogDto[]>(environment.getApiUrl + '/logs/')\r\n  }\r\n\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LookUp } from 'app/core/models/LookUp'; //hata olursa bak\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../../../../../environments/environment';\r\nimport { PasswordDto } from '../models/passwordDto';\r\nimport { User } from '../models/user';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getUserList(): Observable<User[]> {\r\n\r\n    return this.httpClient.get<User[]>(environment.getApiUrl + \"/users/\");\r\n\r\n  }\r\n\r\n  getUserById(id: number): Observable<User> {\r\n\r\n    return this.httpClient.get<User>(environment.getApiUrl + `/users/${id}`);\r\n  }\r\n\r\n\r\n  addUser(user: User): Observable<any> {\r\n\r\n    var result = this.httpClient.post(environment.getApiUrl + \"/users/\", user, { responseType: 'text' });\r\n    return result;\r\n  }\r\n  requestLimitIncrease(userId: number, reqLimit: number): Observable<any> {\r\n    return this.httpClient.post(\r\n      `${environment.getApiUrl}/users/reqLimitIncrease?userId=${userId}&reqNumber=${reqLimit}`,\r\n      {},\r\n      { responseType: 'text' }\r\n    );\r\n  }\r\n  updateUser(user:User):Observable<any> {\r\n    var result = this.httpClient.put(environment.getApiUrl + \"/users/\", user, { responseType: 'text' });\r\n    return result;\r\n  }\r\n\r\n  deleteUser(id: number) {\r\n    return this.httpClient.request('delete', environment.getApiUrl + `/users/${id}`);\r\n  }\r\n\r\n  getUserGroupPermissions(userId:number):Observable<LookUp[]>{\r\n    return this.httpClient.get<LookUp[]>(environment.getApiUrl + `/user-groups/users/${userId}/groups`);\r\n  }\r\n\r\n  getUserClaims(userId:number){\r\n     return this.httpClient.get<LookUp[]>(environment.getApiUrl + `/user-claims/users/${userId}`);\r\n  }\r\n\r\n  saveUserClaims(userId:number,claims:number[] ):Observable<any> {\r\n\r\n    var result = this.httpClient.put(environment.getApiUrl + \"/user-claims/\", {UserId:userId, ClaimIds:claims }, { responseType: 'text' });\r\n    return result;\r\n\r\n  }\r\n\r\n  saveUserGroupPermissions(userId:number, groups:number[]):Observable<any> {\r\n    var result = this.httpClient.put(environment.getApiUrl + \"/user-groups/\", {UserId:userId, GroupId:groups }, { responseType: 'text' });\r\n    return result;\r\n\r\n  }\r\n\r\n  saveUserPassword(command:PasswordDto):Observable<any>{\r\n    var result = this.httpClient.put(environment.getApiUrl + \"/Auth/user-password\", command, { responseType: 'text' });\r\n    return result;\r\n  }\r\n\r\n}\r\n","export default \"<div class=\\\"main-content\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"card\\\" style=\\\"margin-top: 15px;\\\">\\r\\n        <div class=\\\"card-header bg-white d-flex justify-content-between align-items-center\\\">\\r\\n          <h5 class=\\\"card-title mb-0\\\">Filtreleme</h5>\\r\\n          <button mat-raised-button color=\\\"primary\\\"  (click)=\\\"createPdf()\\\">\\r\\n            <i class=\\\"fas fa-file-pdf\\\"></i>\\r\\n            PDF Oluştur\\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"card-body py-2\\\">\\r\\n          <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>Başlangıç</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"startDatePicker\\\" [(ngModel)]=\\\"startDate\\\" (dateChange)=\\\"onStartDateChange()\\\" placeholder=\\\"Seçiniz\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"startDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #startDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"startDate\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"startDate=null;formattedStartDate=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>Bitiş</mat-label>\\r\\n                <input matInput [matDatepicker]=\\\"endDatePicker\\\" [(ngModel)]=\\\"endDate\\\" (dateChange)=\\\"onEndDateChange()\\\" placeholder=\\\"Seçiniz\\\">\\r\\n                <mat-datepicker-toggle matSuffix [for]=\\\"endDatePicker\\\"></mat-datepicker-toggle>\\r\\n                <mat-datepicker #endDatePicker></mat-datepicker>\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"endDate\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"endDate=null;formattedEndDate=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>İsim</mat-label>\\r\\n                <input matInput [(ngModel)]=\\\"searchName\\\" (keyup)=\\\"page=1\\\" placeholder=\\\"İsim giriniz\\\">\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"searchName\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"searchName=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-3\\\">\\r\\n              <mat-form-field appearance=\\\"outline\\\" style=\\\"width: 100%;\\\">\\r\\n                <mat-label>İşlem</mat-label>\\r\\n                <mat-select (selectionChange)=\\\"page=1\\\" [(ngModel)]=\\\"selectedProcessType\\\">\\r\\n                  <mat-option value=\\\"Güvenlik Onay\\\">Güvenlik Onay</mat-option>\\r\\n                  <mat-option value=\\\"Güvenlik Red\\\">Güvenlik Red</mat-option>\\r\\n                  <mat-option value=\\\"Güvenlik Pdf Rapor Oluşturma\\\">Rapor Oluşturma</mat-option>\\r\\n                </mat-select>\\r\\n              </mat-form-field>\\r\\n              <button *ngIf=\\\"selectedProcessType\\\" style=\\\"color:red; border:none; background:none; margin-top:-15px\\\" (click)=\\\"selectedProcessType=''\\\">\\r\\n                Filtreyi Temizle\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n          <div class=\\\"row\\\" *ngIf=\\\"formattedEndDate||formattedStartDate||selectedProcessType||searchName\\\">\\r\\n            <div class=\\\"col-md-12 text-center\\\">\\r\\n              <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onSearch()\\\">\\r\\n                <i class=\\\"fas fa-search\\\"></i>\\r\\n                Ara\\r\\n              </button>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12\\\">\\r\\n          <div class=\\\"card\\\">\\r\\n            <div class=\\\"card-header card-header-danger\\\">\\r\\n              <h4 style=\\\"padding-bottom: 30px;\\\" class=\\\"card-title \\\">{{'BanuLogList'| translate}}</h4>\\r\\n            </div>\\r\\n            <div class=\\\"card-body\\\">\\r\\n              <div class=\\\"table-responsive\\\">\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"filteredAllResult\\\">\\r\\n                  <div style=\\\"font-weight: bold;\\\" class=\\\"col-md-4\\\" *ngIf=\\\"filteredAllResult\\\">\\r\\n                    {{filteredAllResult.totalItemCount}} kayıt arasından {{filteredAllResult.data.length}} kayıt listeleniyor\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"pagination-container\\\" *ngIf=\\\"pageCount.length > 0\\\">\\r\\n                      <nav aria-label=\\\"Page navigation\\\">\\r\\n                        <ul class=\\\"pagination\\\">\\r\\n                          <li class=\\\"page-item\\\" [class.disabled]=\\\"page === 1\\\">\\r\\n                            <a class=\\\"page-link\\\" (click)=\\\"onPageChange(page - 1)\\\" aria-label=\\\"Previous\\\">\\r\\n                              <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                            </a>\\r\\n                          </li>\\r\\n                          <li class=\\\"page-item\\\" *ngFor=\\\"let p of getVisiblePages()\\\" [class.active]=\\\"p === page\\\">\\r\\n                            <a class=\\\"page-link\\\" *ngIf=\\\"p !== -1\\\" (click)=\\\"onPageChange(p)\\\">{{p}}</a>\\r\\n                            <span class=\\\"page-link dots\\\" *ngIf=\\\"p === -1\\\">...</span>\\r\\n                          </li>\\r\\n                          <li class=\\\"page-item\\\" [class.disabled]=\\\"page === pageCount.length\\\">\\r\\n                            <a class=\\\"page-link\\\" (click)=\\\"onPageChange(page + 1)\\\" aria-label=\\\"Next\\\">\\r\\n                              <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                            </a>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </nav>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <mat-form-field class=\\\"float-right\\\">\\r\\n                      <mat-label>Filter</mat-label>\\r\\n                      <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                <div class=\\\"row\\\" *ngIf=\\\"allResult&&!filteredAllResult\\\">\\r\\n                  <div style=\\\"font-weight: bold;\\\" class=\\\"col-md-4\\\" *ngIf=\\\"allResult\\\">\\r\\n                    {{allResult.totalItemCount}} kayıt arasından {{allResult.data.length}} kayıt listeleniyor\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <div class=\\\"pagination-container\\\" *ngIf=\\\"allPageCount.length > 0\\\">\\r\\n                      <nav aria-label=\\\"Page navigation\\\">\\r\\n                        <ul class=\\\"pagination\\\">\\r\\n                          <li class=\\\"page-item\\\" [class.disabled]=\\\"basePageIndex === 1\\\">\\r\\n                            <a class=\\\"page-link\\\" (click)=\\\"onAllPageChange(basePageIndex - 1)\\\" aria-label=\\\"Previous\\\">\\r\\n                              <span aria-hidden=\\\"true\\\">&laquo;</span>\\r\\n                            </a>\\r\\n                          </li>\\r\\n                          <li class=\\\"page-item\\\" *ngFor=\\\"let p of getAllVisiblePages()\\\" [class.active]=\\\"p === basePageIndex\\\">\\r\\n                            <a class=\\\"page-link\\\" *ngIf=\\\"p !== -1\\\" (click)=\\\"onAllPageChange(p)\\\">{{p}}</a>\\r\\n                            <span class=\\\"page-link dots\\\" *ngIf=\\\"p === -1\\\">...</span>\\r\\n                          </li>\\r\\n                          <li class=\\\"page-item\\\" [class.disabled]=\\\"basePageIndex === allPageCount.length\\\">\\r\\n                            <a class=\\\"page-link\\\" (click)=\\\"onAllPageChange(basePageIndex + 1)\\\" aria-label=\\\"Next\\\">\\r\\n                              <span aria-hidden=\\\"true\\\">&raquo;</span>\\r\\n                            </a>\\r\\n                          </li>\\r\\n                        </ul>\\r\\n                      </nav>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"col-md-4\\\">\\r\\n                    <mat-form-field class=\\\"float-right\\\">\\r\\n                      <mat-label>Filter</mat-label>\\r\\n                      <input matInput (keyup)=\\\"applyFilter($event)\\\" placeholder=\\\"\\\" #input>\\r\\n                    </mat-form-field>\\r\\n                  </div>\\r\\n                </div>\\r\\n                              <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\r\\n  \\r\\n  \\r\\n                                  \\r\\n                     <ng-container matColumnDef=\\\"id\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.id}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"createdDate\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.createdDate|date:'dd/MM/yyyy'}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactorFullName\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorFullName'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactorFullName}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactorId\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorId'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactorId}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactionsDescription\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionsDescription'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactionsDescription}}</td>\\r\\n                     </ng-container>\\r\\n      \\r\\n                     <ng-container matColumnDef=\\\"transactionType\\\">\\r\\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionType'|translate}}</th>\\r\\n                       <td mat-cell *matCellDef=\\\"let element\\\">{{element.transactionType}}</td>\\r\\n                     </ng-container>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \\r\\n                              \\r\\n  \\r\\n                  <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                  <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  \\r\\n                  <tr class=\\\"mat-row\\\" *matNoDataRow style=\\\"text-align: center;\\\">\\r\\n                    <td class=\\\"mat-cell\\\" colspan=\\\"4\\\">{{'NoRecordsFound' |translate}} \\\"{{input.value}}\\\"</td>\\r\\n                  </tr>\\r\\n                              </table>\\r\\n                          \\r\\n                              </div>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  <div class=\\\"modal modal-angular fade\\\" id=\\\"banulog\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\r\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\r\\n      <div class=\\\"modal-content\\\">\\r\\n        <div class=\\\"modal-body text-center\\\">\\r\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" aria-label=\\\"Close\\\"\\r\\n            (click)=\\\"clearFormGroup(banuLogAddForm)\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\r\\n          <h4 class=\\\"margin-top\\\">\\r\\n             {{'BanuLogForm'| translate}}\\r\\n          </h4>\\r\\n          <div class=\\\"separator\\\"></div>\\r\\n          <form *ngIf=\\\"banuLogAddForm\\\" [formGroup]=\\\"banuLogAddForm\\\" (ngSubmit)=\\\"save()\\\">\\r\\n            \\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"createdDate\\\" type=\\\"date\\\" id=\\\"createdDate\\\" name=\\\"createdDate\\\"\\r\\n                         formControlName=\\\"createdDate\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('createdDate')!.hasError('createdDate') && banuLogAddForm.get('createdDate')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"transactorFullName\\\" type=\\\"text\\\" id=\\\"transactorFullName\\\" name=\\\"transactorFullName\\\"\\r\\n                         formControlName=\\\"transactorFullName\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('transactorFullName')!.hasError('transactorFullName') && banuLogAddForm.get('transactorFullName')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n                          <div class=\\\"col-md-12\\\">\\r\\n                              <select class=\\\"browser-default custom-select\\\" formControlName=\\\"transactorId\\\">\\r\\n                                  <option *ngFor=\\\"let item of banuLoglookUp\\\" [value]=\\\"item.id\\\"> {{item.label}}</option>\\r\\n                              </select>\\r\\n                          </div>\\r\\n                      </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"transactionsDescription\\\" type=\\\"text\\\" id=\\\"transactionsDescription\\\" name=\\\"transactionsDescription\\\"\\r\\n                         formControlName=\\\"transactionsDescription\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('transactionsDescription')!.hasError('transactionsDescription') && banuLogAddForm.get('transactionsDescription')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                      <div class=\\\"row\\\">\\r\\n              <div class=\\\"col col-md-12\\\">\\r\\n                <mat-form-field class=\\\"example-full-width\\\">\\r\\n                  <input matInput placeholder=\\\"transactionType\\\" type=\\\"text\\\" id=\\\"transactionType\\\" name=\\\"transactionType\\\"\\r\\n                         formControlName=\\\"transactionType\\\" />\\r\\n                  <div class=\\\"alert alert-danger\\\"\\r\\n                       *ngIf=\\\"banuLogAddForm.get('transactionType')!.hasError('transactionType') && banuLogAddForm.get('transactionType')!.dirty\\\">\\r\\n                  </div>\\r\\n                </mat-form-field>\\r\\n              </div>\\r\\n            </div>\\r\\n                     \\r\\n            <button mat-raised-button type=\\\"submit\\\" class=\\\"btn btn-danger pull-right\\\">{{'Save'|translate}}</button>\\r\\n            <div class=\\\"clearfix\\\"></div>\\r\\n          </form>\\r\\n        </div>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  <swal #deleteSwal title=\\\"{{'DeleteConfirm' | translate}}\\\" icon = \\\"error\\\" [showCancelButton]=\\\"true\\\"\\r\\n      [confirmButtonText] = \\\"'OK'\\\"[cancelButtonText] = \\\"'Cancel'\\\" >\\r\\n  </swal>\\r\\n  \\r\\n  \";","export class LoginUser\r\n{\r\n    email:string;\r\n    password:string;\r\n    lang:string\r\n}","(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module unless amdModuleId is set\n    define('Chartist', [], function () {\n      return (root['Chartist'] = factory());\n    });\n  } else if (typeof module === 'object' && module.exports) {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist'] = factory();\n  }\n}(this, function () {\n\n/* Chartist.js 0.11.4\n * Copyright © 2019 Gion Kunz\n * Free to use under either the WTFPL license or the MIT license.\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL\n * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT\n */\n/**\n * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.\n *\n * @module Chartist.Core\n */\nvar Chartist = {\n  version: '0.11.4'\n};\n\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * This object contains all namespaces used within Chartist.\n   *\n   * @memberof Chartist.Core\n   * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}\n   */\n  Chartist.namespaces = {\n    svg: 'http://www.w3.org/2000/svg',\n    xmlns: 'http://www.w3.org/2000/xmlns/',\n    xhtml: 'http://www.w3.org/1999/xhtml',\n    xlink: 'http://www.w3.org/1999/xlink',\n    ct: 'http://gionkunz.github.com/chartist-js/ct'\n  };\n\n  /**\n   * Helps to simplify functional style code\n   *\n   * @memberof Chartist.Core\n   * @param {*} n This exact value will be returned by the noop function\n   * @return {*} The same value that was provided to the n parameter\n   */\n  Chartist.noop = function (n) {\n    return n;\n  };\n\n  /**\n   * Generates a-z from a number 0 to 26\n   *\n   * @memberof Chartist.Core\n   * @param {Number} n A number from 0 to 26 that will result in a letter a-z\n   * @return {String} A character from a-z based on the input number n\n   */\n  Chartist.alphaNumerate = function (n) {\n    // Limit to a-z\n    return String.fromCharCode(97 + n % 26);\n  };\n\n  /**\n   * Simple recursive object extend\n   *\n   * @memberof Chartist.Core\n   * @param {Object} target Target object where the source will be merged into\n   * @param {Object...} sources This object (objects) will be merged into target and then target is returned\n   * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source\n   */\n  Chartist.extend = function (target) {\n    var i, source, sourceProp;\n    target = target || {};\n\n    for (i = 1; i < arguments.length; i++) {\n      source = arguments[i];\n      for (var prop in source) {\n        sourceProp = source[prop];\n        if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {\n          target[prop] = Chartist.extend(target[prop], sourceProp);\n        } else {\n          target[prop] = sourceProp;\n        }\n      }\n    }\n\n    return target;\n  };\n\n  /**\n   * Replaces all occurrences of subStr in str with newSubStr and returns a new string.\n   *\n   * @memberof Chartist.Core\n   * @param {String} str\n   * @param {String} subStr\n   * @param {String} newSubStr\n   * @return {String}\n   */\n  Chartist.replaceAll = function(str, subStr, newSubStr) {\n    return str.replace(new RegExp(subStr, 'g'), newSubStr);\n  };\n\n  /**\n   * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value\n   * @param {String} unit\n   * @return {String} Returns the passed number value with unit.\n   */\n  Chartist.ensureUnit = function(value, unit) {\n    if(typeof value === 'number') {\n      value = value + unit;\n    }\n\n    return value;\n  };\n\n  /**\n   * Converts a number or string to a quantity object.\n   *\n   * @memberof Chartist.Core\n   * @param {String|Number} input\n   * @return {Object} Returns an object containing the value as number and the unit as string.\n   */\n  Chartist.quantity = function(input) {\n    if (typeof input === 'string') {\n      var match = (/^(\\d+)\\s*(.*)$/g).exec(input);\n      return {\n        value : +match[1],\n        unit: match[2] || undefined\n      };\n    }\n    return { value: input };\n  };\n\n  /**\n   * This is a wrapper around document.querySelector that will return the query if it's already of type Node\n   *\n   * @memberof Chartist.Core\n   * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly\n   * @return {Node}\n   */\n  Chartist.querySelector = function(query) {\n    return query instanceof Node ? query : document.querySelector(query);\n  };\n\n  /**\n   * Functional style helper to produce array with given length initialized with undefined values\n   *\n   * @memberof Chartist.Core\n   * @param length\n   * @return {Array}\n   */\n  Chartist.times = function(length) {\n    return Array.apply(null, new Array(length));\n  };\n\n  /**\n   * Sum helper to be used in reduce functions\n   *\n   * @memberof Chartist.Core\n   * @param previous\n   * @param current\n   * @return {*}\n   */\n  Chartist.sum = function(previous, current) {\n    return previous + (current ? current : 0);\n  };\n\n  /**\n   * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} factor\n   * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array\n   */\n  Chartist.mapMultiply = function(factor) {\n    return function(num) {\n      return num * factor;\n    };\n  };\n\n  /**\n   * Add helper to be used in `Array.map` for adding a addend to each value of an array.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} addend\n   * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array\n   */\n  Chartist.mapAdd = function(addend) {\n    return function(num) {\n      return num + addend;\n    };\n  };\n\n  /**\n   * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).\n   *\n   * @memberof Chartist.Core\n   * @param arr\n   * @param cb\n   * @return {Array}\n   */\n  Chartist.serialMap = function(arr, cb) {\n    var result = [],\n        length = Math.max.apply(null, arr.map(function(e) {\n          return e.length;\n        }));\n\n    Chartist.times(length).forEach(function(e, index) {\n      var args = arr.map(function(e) {\n        return e[index];\n      });\n\n      result[index] = cb.apply(null, args);\n    });\n\n    return result;\n  };\n\n  /**\n   * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value that should be rounded with precision\n   * @param {Number} [digits] The number of digits after decimal used to do the rounding\n   * @returns {number} Rounded value\n   */\n  Chartist.roundWithPrecision = function(value, digits) {\n    var precision = Math.pow(10, digits || Chartist.precision);\n    return Math.round(value * precision) / precision;\n  };\n\n  /**\n   * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.\n   *\n   * @memberof Chartist.Core\n   * @type {number}\n   */\n  Chartist.precision = 8;\n\n  /**\n   * A map with characters to escape for strings to be safely used as attribute values.\n   *\n   * @memberof Chartist.Core\n   * @type {Object}\n   */\n  Chartist.escapingMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    '\\'': '&#039;'\n  };\n\n  /**\n   * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.\n   * If called with null or undefined the function will return immediately with null or undefined.\n   *\n   * @memberof Chartist.Core\n   * @param {Number|String|Object} data\n   * @return {String}\n   */\n  Chartist.serialize = function(data) {\n    if(data === null || data === undefined) {\n      return data;\n    } else if(typeof data === 'number') {\n      data = ''+data;\n    } else if(typeof data === 'object') {\n      data = JSON.stringify({data: data});\n    }\n\n    return Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);\n    }, data);\n  };\n\n  /**\n   * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.\n   *\n   * @memberof Chartist.Core\n   * @param {String} data\n   * @return {String|Number|Object}\n   */\n  Chartist.deserialize = function(data) {\n    if(typeof data !== 'string') {\n      return data;\n    }\n\n    data = Object.keys(Chartist.escapingMap).reduce(function(result, key) {\n      return Chartist.replaceAll(result, Chartist.escapingMap[key], key);\n    }, data);\n\n    try {\n      data = JSON.parse(data);\n      data = data.data !== undefined ? data.data : data;\n    } catch(e) {}\n\n    return data;\n  };\n\n  /**\n   * Create or reinitialize the SVG element for the chart\n   *\n   * @memberof Chartist.Core\n   * @param {Node} container The containing DOM Node object that will be used to plant the SVG element\n   * @param {String} width Set the width of the SVG element. Default is 100%\n   * @param {String} height Set the height of the SVG element. Default is 100%\n   * @param {String} className Specify a class to be added to the SVG element\n   * @return {Object} The created/reinitialized SVG element\n   */\n  Chartist.createSvg = function (container, width, height, className) {\n    var svg;\n\n    width = width || '100%';\n    height = height || '100%';\n\n    // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it\n    // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/\n    Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {\n      return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');\n    }).forEach(function removePreviousElement(svg) {\n      container.removeChild(svg);\n    });\n\n    // Create svg object with width and height or use 100% as default\n    svg = new Chartist.Svg('svg').attr({\n      width: width,\n      height: height\n    }).addClass(className);\n\n    svg._node.style.width = width;\n    svg._node.style.height = height;\n\n    // Add the DOM node to our container\n    container.appendChild(svg._node);\n\n    return svg;\n  };\n\n  /**\n   * Ensures that the data object passed as second argument to the charts is present and correctly initialized.\n   *\n   * @param  {Object} data The data object that is passed as second argument to the charts\n   * @return {Object} The normalized data object\n   */\n  Chartist.normalizeData = function(data, reverse, multi) {\n    var labelCount;\n    var output = {\n      raw: data,\n      normalized: {}\n    };\n\n    // Check if we should generate some labels based on existing series data\n    output.normalized.series = Chartist.getDataArray({\n      series: data.series || []\n    }, reverse, multi);\n\n    // If all elements of the normalized data array are arrays we're dealing with\n    // multi series data and we need to find the largest series if they are un-even\n    if (output.normalized.series.every(function(value) {\n        return value instanceof Array;\n      })) {\n      // Getting the series with the the most elements\n      labelCount = Math.max.apply(null, output.normalized.series.map(function(series) {\n        return series.length;\n      }));\n    } else {\n      // We're dealing with Pie data so we just take the normalized array length\n      labelCount = output.normalized.series.length;\n    }\n\n    output.normalized.labels = (data.labels || []).slice();\n    // Padding the labels to labelCount with empty strings\n    Array.prototype.push.apply(\n      output.normalized.labels,\n      Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function() {\n        return '';\n      })\n    );\n\n    if(reverse) {\n      Chartist.reverseData(output.normalized);\n    }\n\n    return output;\n  };\n\n  /**\n   * This function safely checks if an objects has an owned property.\n   *\n   * @param {Object} object The object where to check for a property\n   * @param {string} property The property name\n   * @returns {boolean} Returns true if the object owns the specified property\n   */\n  Chartist.safeHasProperty = function(object, property) {\n    return object !== null &&\n      typeof object === 'object' &&\n      object.hasOwnProperty(property);\n  };\n\n  /**\n   * Checks if a value is considered a hole in the data series.\n   *\n   * @param {*} value\n   * @returns {boolean} True if the value is considered a data hole\n   */\n  Chartist.isDataHoleValue = function(value) {\n    return value === null ||\n      value === undefined ||\n      (typeof value === 'number' && isNaN(value));\n  };\n\n  /**\n   * Reverses the series, labels and series data arrays.\n   *\n   * @memberof Chartist.Core\n   * @param data\n   */\n  Chartist.reverseData = function(data) {\n    data.labels.reverse();\n    data.series.reverse();\n    for (var i = 0; i < data.series.length; i++) {\n      if(typeof(data.series[i]) === 'object' && data.series[i].data !== undefined) {\n        data.series[i].data.reverse();\n      } else if(data.series[i] instanceof Array) {\n        data.series[i].reverse();\n      }\n    }\n  };\n\n  /**\n   * Convert data series into plain array\n   *\n   * @memberof Chartist.Core\n   * @param {Object} data The series object that contains the data to be visualized in the chart\n   * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.\n   * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.\n   * @return {Array} A plain array that contains the data to be visualized in the chart\n   */\n  Chartist.getDataArray = function(data, reverse, multi) {\n    // Recursively walks through nested arrays and convert string values to numbers and objects with value properties\n    // to values. Check the tests in data core -> data normalization for a detailed specification of expected values\n    function recursiveConvert(value) {\n      if(Chartist.safeHasProperty(value, 'value')) {\n        // We are dealing with value object notation so we need to recurse on value property\n        return recursiveConvert(value.value);\n      } else if(Chartist.safeHasProperty(value, 'data')) {\n        // We are dealing with series object notation so we need to recurse on data property\n        return recursiveConvert(value.data);\n      } else if(value instanceof Array) {\n        // Data is of type array so we need to recurse on the series\n        return value.map(recursiveConvert);\n      } else if(Chartist.isDataHoleValue(value)) {\n        // We're dealing with a hole in the data and therefore need to return undefined\n        // We're also returning undefined for multi value output\n        return undefined;\n      } else {\n        // We need to prepare multi value output (x and y data)\n        if(multi) {\n          var multiValue = {};\n\n          // Single series value arrays are assumed to specify the Y-Axis value\n          // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]\n          // If multi is a string then it's assumed that it specified which dimension should be filled as default\n          if(typeof multi === 'string') {\n            multiValue[multi] = Chartist.getNumberOrUndefined(value);\n          } else {\n            multiValue.y = Chartist.getNumberOrUndefined(value);\n          }\n\n          multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;\n          multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;\n\n          return multiValue;\n\n        } else {\n          // We can return simple data\n          return Chartist.getNumberOrUndefined(value);\n        }\n      }\n    }\n\n    return data.series.map(recursiveConvert);\n  };\n\n  /**\n   * Converts a number into a padding object.\n   *\n   * @memberof Chartist.Core\n   * @param {Object|Number} padding\n   * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed\n   * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.\n   */\n  Chartist.normalizePadding = function(padding, fallback) {\n    fallback = fallback || 0;\n\n    return typeof padding === 'number' ? {\n      top: padding,\n      right: padding,\n      bottom: padding,\n      left: padding\n    } : {\n      top: typeof padding.top === 'number' ? padding.top : fallback,\n      right: typeof padding.right === 'number' ? padding.right : fallback,\n      bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,\n      left: typeof padding.left === 'number' ? padding.left : fallback\n    };\n  };\n\n  Chartist.getMetaData = function(series, index) {\n    var value = series.data ? series.data[index] : series[index];\n    return value ? value.meta : undefined;\n  };\n\n  /**\n   * Calculate the order of magnitude for the chart scale\n   *\n   * @memberof Chartist.Core\n   * @param {Number} value The value Range of the chart\n   * @return {Number} The order of magnitude\n   */\n  Chartist.orderOfMagnitude = function (value) {\n    return Math.floor(Math.log(Math.abs(value)) / Math.LN10);\n  };\n\n  /**\n   * Project a data length into screen coordinates (pixels)\n   *\n   * @memberof Chartist.Core\n   * @param {Object} axisLength The svg element for the chart\n   * @param {Number} length Single data value from a series array\n   * @param {Object} bounds All the values to set the bounds of the chart\n   * @return {Number} The projected data length in pixels\n   */\n  Chartist.projectLength = function (axisLength, length, bounds) {\n    return length / bounds.range * axisLength;\n  };\n\n  /**\n   * Get the height of the area in the chart for the data series\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @return {Number} The height of the area in the chart for the data series\n   */\n  Chartist.getAvailableHeight = function (svg, options) {\n    return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top +  options.chartPadding.bottom) - options.axisX.offset, 0);\n  };\n\n  /**\n   * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.\n   *\n   * @memberof Chartist.Core\n   * @param {Array} data The array that contains the data to be visualized in the chart\n   * @param {Object} options The Object that contains the chart options\n   * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration\n   * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.\n   */\n  Chartist.getHighLow = function (data, options, dimension) {\n    // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred\n    options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});\n\n    var highLow = {\n        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,\n        low: options.low === undefined ? Number.MAX_VALUE : +options.low\n      };\n    var findHigh = options.high === undefined;\n    var findLow = options.low === undefined;\n\n    // Function to recursively walk through arrays and find highest and lowest number\n    function recursiveHighLow(data) {\n      if(data === undefined) {\n        return undefined;\n      } else if(data instanceof Array) {\n        for (var i = 0; i < data.length; i++) {\n          recursiveHighLow(data[i]);\n        }\n      } else {\n        var value = dimension ? +data[dimension] : +data;\n\n        if (findHigh && value > highLow.high) {\n          highLow.high = value;\n        }\n\n        if (findLow && value < highLow.low) {\n          highLow.low = value;\n        }\n      }\n    }\n\n    // Start to find highest and lowest number recursively\n    if(findHigh || findLow) {\n      recursiveHighLow(data);\n    }\n\n    // Overrides of high / low based on reference value, it will make sure that the invisible reference value is\n    // used to generate the chart. This is useful when the chart always needs to contain the position of the\n    // invisible reference value in the view i.e. for bipolar scales.\n    if (options.referenceValue || options.referenceValue === 0) {\n      highLow.high = Math.max(options.referenceValue, highLow.high);\n      highLow.low = Math.min(options.referenceValue, highLow.low);\n    }\n\n    // If high and low are the same because of misconfiguration or flat data (only the same value) we need\n    // to set the high or low to 0 depending on the polarity\n    if (highLow.high <= highLow.low) {\n      // If both values are 0 we set high to 1\n      if (highLow.low === 0) {\n        highLow.high = 1;\n      } else if (highLow.low < 0) {\n        // If we have the same negative value for the bounds we set bounds.high to 0\n        highLow.high = 0;\n      } else if (highLow.high > 0) {\n        // If we have the same positive value for the bounds we set bounds.low to 0\n        highLow.low = 0;\n      } else {\n        // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors\n        highLow.high = 1;\n        highLow.low = 0;\n      }\n    }\n\n    return highLow;\n  };\n\n  /**\n   * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {Boolean}\n   */\n  Chartist.isNumeric = function(value) {\n    return value === null ? false : isFinite(value);\n  };\n\n  /**\n   * Returns true on all falsey values except the numeric value 0.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {boolean}\n   */\n  Chartist.isFalseyButZero = function(value) {\n    return !value && value !== 0;\n  };\n\n  /**\n   * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @returns {*}\n   */\n  Chartist.getNumberOrUndefined = function(value) {\n    return Chartist.isNumeric(value) ? +value : undefined;\n  };\n\n  /**\n   * Checks if provided value object is multi value (contains x or y properties)\n   *\n   * @memberof Chartist.Core\n   * @param value\n   */\n  Chartist.isMultiValue = function(value) {\n    return typeof value === 'object' && ('x' in value || 'y' in value);\n  };\n\n  /**\n   * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.\n   *\n   * @memberof Chartist.Core\n   * @param value\n   * @param dimension\n   * @param defaultValue\n   * @returns {*}\n   */\n  Chartist.getMultiValue = function(value, dimension) {\n    if(Chartist.isMultiValue(value)) {\n      return Chartist.getNumberOrUndefined(value[dimension || 'y']);\n    } else {\n      return Chartist.getNumberOrUndefined(value);\n    }\n  };\n\n  /**\n   * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.\n   *\n   * @memberof Chartist.Core\n   * @param {Number} num An integer number where the smallest factor should be searched for\n   * @returns {Number} The smallest integer factor of the parameter num.\n   */\n  Chartist.rho = function(num) {\n    if(num === 1) {\n      return num;\n    }\n\n    function gcd(p, q) {\n      if (p % q === 0) {\n        return q;\n      } else {\n        return gcd(q, p % q);\n      }\n    }\n\n    function f(x) {\n      return x * x + 1;\n    }\n\n    var x1 = 2, x2 = 2, divisor;\n    if (num % 2 === 0) {\n      return 2;\n    }\n\n    do {\n      x1 = f(x1) % num;\n      x2 = f(f(x2)) % num;\n      divisor = gcd(Math.abs(x1 - x2), num);\n    } while (divisor === 1);\n\n    return divisor;\n  };\n\n  /**\n   * Calculate and retrieve all the bounds for the chart and return them in one array\n   *\n   * @memberof Chartist.Core\n   * @param {Number} axisLength The length of the Axis used for\n   * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.\n   * @param {Number} scaleMinSpace The minimum projected length a step should result in\n   * @param {Boolean} onlyInteger\n   * @return {Object} All the values to set the bounds of the chart\n   */\n  Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {\n    var i,\n      optimizationCounter = 0,\n      newMin,\n      newMax,\n      bounds = {\n        high: highLow.high,\n        low: highLow.low\n      };\n\n    bounds.valueRange = bounds.high - bounds.low;\n    bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);\n    bounds.step = Math.pow(10, bounds.oom);\n    bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;\n    bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;\n    bounds.range = bounds.max - bounds.min;\n    bounds.numberOfSteps = Math.round(bounds.range / bounds.step);\n\n    // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace\n    // If we are already below the scaleMinSpace value we will scale up\n    var length = Chartist.projectLength(axisLength, bounds.step, bounds);\n    var scaleUp = length < scaleMinSpace;\n    var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0;\n\n    // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1\n    if(onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {\n      bounds.step = 1;\n    } else if(onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {\n      // If step 1 was too small, we can try the smallest factor of range\n      // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor\n      // is larger than the scaleMinSpace we should go for it.\n      bounds.step = smallestFactor;\n    } else {\n      // Trying to divide or multiply by 2 and find the best step value\n      while (true) {\n        if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {\n          bounds.step *= 2;\n        } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {\n          bounds.step /= 2;\n          if(onlyInteger && bounds.step % 1 !== 0) {\n            bounds.step *= 2;\n            break;\n          }\n        } else {\n          break;\n        }\n\n        if(optimizationCounter++ > 1000) {\n          throw new Error('Exceeded maximum number of iterations while optimizing scale step!');\n        }\n      }\n    }\n\n    var EPSILON = 2.221E-16;\n    bounds.step = Math.max(bounds.step, EPSILON);\n    function safeIncrement(value, increment) {\n      // If increment is too small use *= (1+EPSILON) as a simple nextafter\n      if (value === (value += increment)) {\n      \tvalue *= (1 + (increment > 0 ? EPSILON : -EPSILON));\n      }\n      return value;\n    }\n\n    // Narrow min and max based on new step\n    newMin = bounds.min;\n    newMax = bounds.max;\n    while (newMin + bounds.step <= bounds.low) {\n    \tnewMin = safeIncrement(newMin, bounds.step);\n    }\n    while (newMax - bounds.step >= bounds.high) {\n    \tnewMax = safeIncrement(newMax, -bounds.step);\n    }\n    bounds.min = newMin;\n    bounds.max = newMax;\n    bounds.range = bounds.max - bounds.min;\n\n    var values = [];\n    for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {\n      var value = Chartist.roundWithPrecision(i);\n      if (value !== values[values.length - 1]) {\n        values.push(value);\n      }\n    }\n    bounds.values = values;\n    return bounds;\n  };\n\n  /**\n   * Calculate cartesian coordinates of polar coordinates\n   *\n   * @memberof Chartist.Core\n   * @param {Number} centerX X-axis coordinates of center point of circle segment\n   * @param {Number} centerY X-axis coordinates of center point of circle segment\n   * @param {Number} radius Radius of circle segment\n   * @param {Number} angleInDegrees Angle of circle segment in degrees\n   * @return {{x:Number, y:Number}} Coordinates of point on circumference\n   */\n  Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {\n    var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;\n\n    return {\n      x: centerX + (radius * Math.cos(angleInRadians)),\n      y: centerY + (radius * Math.sin(angleInRadians))\n    };\n  };\n\n  /**\n   * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right\n   *\n   * @memberof Chartist.Core\n   * @param {Object} svg The svg element for the chart\n   * @param {Object} options The Object that contains all the optional values for the chart\n   * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used\n   * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements\n   */\n  Chartist.createChartRect = function (svg, options, fallbackPadding) {\n    var hasAxis = !!(options.axisX || options.axisY);\n    var yAxisOffset = hasAxis ? options.axisY.offset : 0;\n    var xAxisOffset = hasAxis ? options.axisX.offset : 0;\n    // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0\n    var width = svg.width() || Chartist.quantity(options.width).value || 0;\n    var height = svg.height() || Chartist.quantity(options.height).value || 0;\n    var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding);\n\n    // If settings were to small to cope with offset (legacy) and padding, we'll adjust\n    width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);\n    height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);\n\n    var chartRect = {\n      padding: normalizedPadding,\n      width: function () {\n        return this.x2 - this.x1;\n      },\n      height: function () {\n        return this.y1 - this.y2;\n      }\n    };\n\n    if(hasAxis) {\n      if (options.axisX.position === 'start') {\n        chartRect.y2 = normalizedPadding.top + xAxisOffset;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n      } else {\n        chartRect.y2 = normalizedPadding.top;\n        chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);\n      }\n\n      if (options.axisY.position === 'start') {\n        chartRect.x1 = normalizedPadding.left + yAxisOffset;\n        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      } else {\n        chartRect.x1 = normalizedPadding.left;\n        chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);\n      }\n    } else {\n      chartRect.x1 = normalizedPadding.left;\n      chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);\n      chartRect.y2 = normalizedPadding.top;\n      chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);\n    }\n\n    return chartRect;\n  };\n\n  /**\n   * Creates a grid line based on a projected value.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param index\n   * @param axis\n   * @param offset\n   * @param length\n   * @param group\n   * @param classes\n   * @param eventEmitter\n   */\n  Chartist.createGrid = function(position, index, axis, offset, length, group, classes, eventEmitter) {\n    var positionalData = {};\n    positionalData[axis.units.pos + '1'] = position;\n    positionalData[axis.units.pos + '2'] = position;\n    positionalData[axis.counterUnits.pos + '1'] = offset;\n    positionalData[axis.counterUnits.pos + '2'] = offset + length;\n\n    var gridElement = group.elem('line', positionalData, classes.join(' '));\n\n    // Event for grid draw\n    eventEmitter.emit('draw',\n      Chartist.extend({\n        type: 'grid',\n        axis: axis,\n        index: index,\n        group: group,\n        element: gridElement\n      }, positionalData)\n    );\n  };\n\n  /**\n   * Creates a grid background rect and emits the draw event.\n   *\n   * @memberof Chartist.Core\n   * @param gridGroup\n   * @param chartRect\n   * @param className\n   * @param eventEmitter\n   */\n  Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {\n    var gridBackground = gridGroup.elem('rect', {\n        x: chartRect.x1,\n        y: chartRect.y2,\n        width: chartRect.width(),\n        height: chartRect.height(),\n      }, className, true);\n\n      // Event for grid background draw\n      eventEmitter.emit('draw', {\n        type: 'gridBackground',\n        group: gridGroup,\n        element: gridBackground\n      });\n  };\n\n  /**\n   * Creates a label based on a projected value and an axis.\n   *\n   * @memberof Chartist.Core\n   * @param position\n   * @param length\n   * @param index\n   * @param labels\n   * @param axis\n   * @param axisOffset\n   * @param labelOffset\n   * @param group\n   * @param classes\n   * @param useForeignObject\n   * @param eventEmitter\n   */\n  Chartist.createLabel = function(position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {\n    var labelElement;\n    var positionalData = {};\n\n    positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];\n    positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];\n    positionalData[axis.units.len] = length;\n    positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);\n\n    if(useForeignObject) {\n      // We need to set width and height explicitly to px as span will not expand with width and height being\n      // 100% in all browsers\n      var content = document.createElement('span');\n      content.className = classes.join(' ');\n      content.setAttribute('xmlns', Chartist.namespaces.xhtml);\n      content.innerText = labels[index];\n      content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';\n      content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';\n\n      labelElement = group.foreignObject(content, Chartist.extend({\n        style: 'overflow: visible;'\n      }, positionalData));\n    } else {\n      labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);\n    }\n\n    eventEmitter.emit('draw', Chartist.extend({\n      type: 'label',\n      axis: axis,\n      index: index,\n      group: group,\n      element: labelElement,\n      text: labels[index]\n    }, positionalData));\n  };\n\n  /**\n   * Helper to read series specific options from options object. It automatically falls back to the global option if\n   * there is no option in the series options.\n   *\n   * @param {Object} series Series object\n   * @param {Object} options Chartist options object\n   * @param {string} key The options key that should be used to obtain the options\n   * @returns {*}\n   */\n  Chartist.getSeriesOption = function(series, options, key) {\n    if(series.name && options.series && options.series[series.name]) {\n      var seriesOptions = options.series[series.name];\n      return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];\n    } else {\n      return options[key];\n    }\n  };\n\n  /**\n   * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches\n   *\n   * @memberof Chartist.Core\n   * @param {Object} options Options set by user\n   * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart\n   * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events\n   * @return {Object} The consolidated options object from the defaults, base and matching responsive options\n   */\n  Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {\n    var baseOptions = Chartist.extend({}, options),\n      currentOptions,\n      mediaQueryListeners = [],\n      i;\n\n    function updateCurrentOptions(mediaEvent) {\n      var previousOptions = currentOptions;\n      currentOptions = Chartist.extend({}, baseOptions);\n\n      if (responsiveOptions) {\n        for (i = 0; i < responsiveOptions.length; i++) {\n          var mql = window.matchMedia(responsiveOptions[i][0]);\n          if (mql.matches) {\n            currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);\n          }\n        }\n      }\n\n      if(eventEmitter && mediaEvent) {\n        eventEmitter.emit('optionsChanged', {\n          previousOptions: previousOptions,\n          currentOptions: currentOptions\n        });\n      }\n    }\n\n    function removeMediaQueryListeners() {\n      mediaQueryListeners.forEach(function(mql) {\n        mql.removeListener(updateCurrentOptions);\n      });\n    }\n\n    if (!window.matchMedia) {\n      throw 'window.matchMedia not found! Make sure you\\'re using a polyfill.';\n    } else if (responsiveOptions) {\n\n      for (i = 0; i < responsiveOptions.length; i++) {\n        var mql = window.matchMedia(responsiveOptions[i][0]);\n        mql.addListener(updateCurrentOptions);\n        mediaQueryListeners.push(mql);\n      }\n    }\n    // Execute initially without an event argument so we get the correct options\n    updateCurrentOptions();\n\n    return {\n      removeMediaQueryListeners: removeMediaQueryListeners,\n      getCurrentOptions: function getCurrentOptions() {\n        return Chartist.extend({}, currentOptions);\n      }\n    };\n  };\n\n\n  /**\n   * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates\n   * valueData property describing the segment.\n   *\n   * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any\n   * points with undefined values are discarded.\n   *\n   * **Options**\n   * The following options are used to determine how segments are formed\n   * ```javascript\n   * var options = {\n   *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.\n   *   fillHoles: false,\n   *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.\n   *   increasingX: false\n   * };\n   * ```\n   *\n   * @memberof Chartist.Core\n   * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]\n   * @param {Array} values List of associated point values in the form [v1, v2 .. vn]\n   * @param {Object} options Options set by user\n   * @return {Array} List of segments, each containing a pathCoordinates and valueData property.\n   */\n  Chartist.splitIntoSegments = function(pathCoordinates, valueData, options) {\n    var defaultOptions = {\n      increasingX: false,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var segments = [];\n    var hole = true;\n\n    for(var i = 0; i < pathCoordinates.length; i += 2) {\n      // If this value is a \"hole\" we set the hole flag\n      if(Chartist.getMultiValue(valueData[i / 2].value) === undefined) {\n      // if(valueData[i / 2].value === undefined) {\n        if(!options.fillHoles) {\n          hole = true;\n        }\n      } else {\n        if(options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i-2]) {\n          // X is not increasing, so we need to make sure we start a new segment\n          hole = true;\n        }\n\n\n        // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment\n        if(hole) {\n          segments.push({\n            pathCoordinates: [],\n            valueData: []\n          });\n          // As we have a valid value now, we are not in a \"hole\" anymore\n          hole = false;\n        }\n\n        // Add to the segment pathCoordinates and valueData\n        segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);\n        segments[segments.length - 1].valueData.push(valueData[i / 2]);\n      }\n    }\n\n    return segments;\n  };\n}(this || global, Chartist));\n;/**\n * Chartist path interpolation functions.\n *\n * @module Chartist.Interpolation\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.Interpolation = {};\n\n  /**\n   * This interpolation function does not smooth the path and the result is only containing lines and no curves.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.none({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @return {Function}\n   */\n  Chartist.Interpolation.none = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n    return function none(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var hole = true;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        if(Chartist.getMultiValue(currData.value) !== undefined) {\n\n          if(hole) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.line(currX, currY, false, currData);\n          }\n\n          hole = false;\n        } else if(!options.fillHoles) {\n          hole = true;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.\n   *\n   * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.simple({\n   *     divisor: 2,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the simple interpolation factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.simple = function(options) {\n    var defaultOptions = {\n      divisor: 2,\n      fillHoles: false\n    };\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var d = 1 / Math.max(1, options.divisor);\n\n    return function simple(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n      var prevX, prevY, prevData;\n\n      for(var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var length = (currX - prevX) * d;\n        var currData = valueData[i / 2];\n\n        if(currData.value !== undefined) {\n\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            path.curve(\n              prevX + length,\n              prevY,\n              currX - length,\n              currY,\n              currX,\n              currY,\n              false,\n              currData\n            );\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = currX = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n  /**\n   * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.\n   *\n   * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 1,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the cardinal factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.cardinal = function(options) {\n    var defaultOptions = {\n      tension: 1,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    var t = Math.min(1, Math.max(0, options.tension)),\n      c = 1 - t;\n\n    return function cardinal(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the cardinal function\n        segments.forEach(function(segment) {\n          paths.push(cardinal(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than two points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),\n          z;\n\n        for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {\n          var p = [\n            {x: +pathCoordinates[i - 2], y: +pathCoordinates[i - 1]},\n            {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]},\n            {x: +pathCoordinates[i + 2], y: +pathCoordinates[i + 3]},\n            {x: +pathCoordinates[i + 4], y: +pathCoordinates[i + 5]}\n          ];\n          if (z) {\n            if (!i) {\n              p[0] = {x: +pathCoordinates[iLen - 2], y: +pathCoordinates[iLen - 1]};\n            } else if (iLen - 4 === i) {\n              p[3] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n            } else if (iLen - 2 === i) {\n              p[2] = {x: +pathCoordinates[0], y: +pathCoordinates[1]};\n              p[3] = {x: +pathCoordinates[2], y: +pathCoordinates[3]};\n            }\n          } else {\n            if (iLen - 4 === i) {\n              p[3] = p[2];\n            } else if (!i) {\n              p[0] = {x: +pathCoordinates[i], y: +pathCoordinates[i + 1]};\n            }\n          }\n\n          path.curve(\n            (t * (-p[0].x + 6 * p[1].x + p[2].x) / 6) + (c * p[2].x),\n            (t * (-p[0].y + 6 * p[1].y + p[2].y) / 6) + (c * p[2].y),\n            (t * (p[1].x + 6 * p[2].x - p[3].x) / 6) + (c * p[2].x),\n            (t * (p[1].y + 6 * p[2].y - p[3].y) / 6) + (c * p[2].y),\n            p[2].x,\n            p[2].y,\n            false,\n            valueData[(i + 2) / 2]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.\n   *\n   * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.\n   *\n   * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.monotoneCubic({\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param {Object} options The options of the monotoneCubic factory function.\n   * @return {Function}\n   */\n  Chartist.Interpolation.monotoneCubic = function(options) {\n    var defaultOptions = {\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function monotoneCubic(pathCoordinates, valueData) {\n      // First we try to split the coordinates into segments\n      // This is necessary to treat \"holes\" in line charts\n      var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {\n        fillHoles: options.fillHoles,\n        increasingX: true\n      });\n\n      if(!segments.length) {\n        // If there were no segments return 'Chartist.Interpolation.none'\n        return Chartist.Interpolation.none()([]);\n      } else if(segments.length > 1) {\n        // If the split resulted in more that one segment we need to interpolate each segment individually and join them\n        // afterwards together into a single path.\n          var paths = [];\n        // For each segment we will recurse the monotoneCubic fn function\n        segments.forEach(function(segment) {\n          paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));\n        });\n        // Join the segment path data into a single path and return\n        return Chartist.Svg.Path.join(paths);\n      } else {\n        // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first\n        // segment\n        pathCoordinates = segments[0].pathCoordinates;\n        valueData = segments[0].valueData;\n\n        // If less than three points we need to fallback to no smoothing\n        if(pathCoordinates.length <= 4) {\n          return Chartist.Interpolation.none()(pathCoordinates, valueData);\n        }\n\n        var xs = [],\n          ys = [],\n          i,\n          n = pathCoordinates.length / 2,\n          ms = [],\n          ds = [], dys = [], dxs = [],\n          path;\n\n        // Populate x and y coordinates into separate arrays, for readability\n\n        for(i = 0; i < n; i++) {\n          xs[i] = pathCoordinates[i * 2];\n          ys[i] = pathCoordinates[i * 2 + 1];\n        }\n\n        // Calculate deltas and derivative\n\n        for(i = 0; i < n - 1; i++) {\n          dys[i] = ys[i + 1] - ys[i];\n          dxs[i] = xs[i + 1] - xs[i];\n          ds[i] = dys[i] / dxs[i];\n        }\n\n        // Determine desired slope (m) at each point using Fritsch-Carlson method\n        // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation\n\n        ms[0] = ds[0];\n        ms[n - 1] = ds[n - 2];\n\n        for(i = 1; i < n - 1; i++) {\n          if(ds[i] === 0 || ds[i - 1] === 0 || (ds[i - 1] > 0) !== (ds[i] > 0)) {\n            ms[i] = 0;\n          } else {\n            ms[i] = 3 * (dxs[i - 1] + dxs[i]) / (\n              (2 * dxs[i] + dxs[i - 1]) / ds[i - 1] +\n              (dxs[i] + 2 * dxs[i - 1]) / ds[i]);\n\n            if(!isFinite(ms[i])) {\n              ms[i] = 0;\n            }\n          }\n        }\n\n        // Now build a path from the slopes\n\n        path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);\n\n        for(i = 0; i < n - 1; i++) {\n          path.curve(\n            // First control point\n            xs[i] + dxs[i] / 3,\n            ys[i] + ms[i] * dxs[i] / 3,\n            // Second control point\n            xs[i + 1] - dxs[i] / 3,\n            ys[i + 1] - ms[i + 1] * dxs[i] / 3,\n            // End point\n            xs[i + 1],\n            ys[i + 1],\n\n            false,\n            valueData[i + 1]\n          );\n        }\n\n        return path;\n      }\n    };\n  };\n\n  /**\n   * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.\n   *\n   * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.\n   *\n   * @example\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [[1, 2, 8, 1, 7]]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.step({\n   *     postpone: true,\n   *     fillHoles: false\n   *   })\n   * });\n   *\n   * @memberof Chartist.Interpolation\n   * @param options\n   * @returns {Function}\n   */\n  Chartist.Interpolation.step = function(options) {\n    var defaultOptions = {\n      postpone: true,\n      fillHoles: false\n    };\n\n    options = Chartist.extend({}, defaultOptions, options);\n\n    return function step(pathCoordinates, valueData) {\n      var path = new Chartist.Svg.Path();\n\n      var prevX, prevY, prevData;\n\n      for (var i = 0; i < pathCoordinates.length; i += 2) {\n        var currX = pathCoordinates[i];\n        var currY = pathCoordinates[i + 1];\n        var currData = valueData[i / 2];\n\n        // If the current point is also not a hole we can draw the step lines\n        if(currData.value !== undefined) {\n          if(prevData === undefined) {\n            path.move(currX, currY, false, currData);\n          } else {\n            if(options.postpone) {\n              // If postponed we should draw the step line with the value of the previous value\n              path.line(currX, prevY, false, prevData);\n            } else {\n              // If not postponed we should draw the step line with the value of the current value\n              path.line(prevX, currY, false, currData);\n            }\n            // Line to the actual point (this should only be a Y-Axis movement\n            path.line(currX, currY, false, currData);\n          }\n\n          prevX = currX;\n          prevY = currY;\n          prevData = currData;\n        } else if(!options.fillHoles) {\n          prevX = prevY = prevData = undefined;\n        }\n      }\n\n      return path;\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * A very basic event module that helps to generate and catch events.\n *\n * @module Chartist.Event\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  Chartist.EventEmitter = function () {\n    var handlers = [];\n\n    /**\n     * Add an event handler for a specific event\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name\n     * @param {Function} handler A event handler function\n     */\n    function addEventHandler(event, handler) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    }\n\n    /**\n     * Remove an event handler of a specific event name or remove all event handlers for a specific event.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name where a specific or all handlers should be removed\n     * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.\n     */\n    function removeEventHandler(event, handler) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        // If handler is set we will look for a specific handler and only remove this\n        if(handler) {\n          handlers[event].splice(handlers[event].indexOf(handler), 1);\n          if(handlers[event].length === 0) {\n            delete handlers[event];\n          }\n        } else {\n          // If no handler is specified we remove all handlers for this event\n          delete handlers[event];\n        }\n      }\n    }\n\n    /**\n     * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.\n     *\n     * @memberof Chartist.Event\n     * @param {String} event The event name that should be triggered\n     * @param {*} data Arbitrary data that will be passed to the event handler callback functions\n     */\n    function emit(event, data) {\n      // Only do something if there are event handlers with this name existing\n      if(handlers[event]) {\n        handlers[event].forEach(function(handler) {\n          handler(data);\n        });\n      }\n\n      // Emit event to star event handlers\n      if(handlers['*']) {\n        handlers['*'].forEach(function(starHandler) {\n          starHandler(event, data);\n        });\n      }\n    }\n\n    return {\n      addEventHandler: addEventHandler,\n      removeEventHandler: removeEventHandler,\n      emit: emit\n    };\n  };\n\n}(this || global, Chartist));\n;/**\n * This module provides some basic prototype inheritance utilities.\n *\n * @module Chartist.Class\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  function listToArray(list) {\n    var arr = [];\n    if (list.length) {\n      for (var i = 0; i < list.length; i++) {\n        arr.push(list[i]);\n      }\n    }\n    return arr;\n  }\n\n  /**\n   * Method to extend from current prototype.\n   *\n   * @memberof Chartist.Class\n   * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.\n   * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.\n   * @return {Function} Constructor function of the new class\n   *\n   * @example\n   * var Fruit = Class.extend({\n     * color: undefined,\n     *   sugar: undefined,\n     *\n     *   constructor: function(color, sugar) {\n     *     this.color = color;\n     *     this.sugar = sugar;\n     *   },\n     *\n     *   eat: function() {\n     *     this.sugar = 0;\n     *     return this;\n     *   }\n     * });\n   *\n   * var Banana = Fruit.extend({\n     *   length: undefined,\n     *\n     *   constructor: function(length, sugar) {\n     *     Banana.super.constructor.call(this, 'Yellow', sugar);\n     *     this.length = length;\n     *   }\n     * });\n   *\n   * var banana = new Banana(20, 40);\n   * console.log('banana instanceof Fruit', banana instanceof Fruit);\n   * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));\n   * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);\n   * console.log(banana.sugar);\n   * console.log(banana.eat().sugar);\n   * console.log(banana.color);\n   */\n  function extend(properties, superProtoOverride) {\n    var superProto = superProtoOverride || this.prototype || Chartist.Class;\n    var proto = Object.create(superProto);\n\n    Chartist.Class.cloneDefinitions(proto, properties);\n\n    var constr = function() {\n      var fn = proto.constructor || function () {},\n        instance;\n\n      // If this is linked to the Chartist namespace the constructor was not called with new\n      // To provide a fallback we will instantiate here and return the instance\n      instance = this === Chartist ? Object.create(proto) : this;\n      fn.apply(instance, Array.prototype.slice.call(arguments, 0));\n\n      // If this constructor was not called with new we need to return the instance\n      // This will not harm when the constructor has been called with new as the returned value is ignored\n      return instance;\n    };\n\n    constr.prototype = proto;\n    constr.super = superProto;\n    constr.extend = this.extend;\n\n    return constr;\n  }\n\n  // Variable argument list clones args > 0 into args[0] and retruns modified args[0]\n  function cloneDefinitions() {\n    var args = listToArray(arguments);\n    var target = args[0];\n\n    args.splice(1, args.length - 1).forEach(function (source) {\n      Object.getOwnPropertyNames(source).forEach(function (propName) {\n        // If this property already exist in target we delete it first\n        delete target[propName];\n        // Define the property with the descriptor from source\n        Object.defineProperty(target, propName,\n          Object.getOwnPropertyDescriptor(source, propName));\n      });\n    });\n\n    return target;\n  }\n\n  Chartist.Class = {\n    extend: extend,\n    cloneDefinitions: cloneDefinitions\n  };\n\n}(this || global, Chartist));\n;/**\n * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.\n *\n * @module Chartist.Base\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n\n  // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.\n  // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not\n  // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.\n  // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html\n  // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj\n  // The problem is with the label offsets that can't be converted into percentage and affecting the chart container\n  /**\n   * Updates the chart which currently does a full reconstruction of the SVG DOM\n   *\n   * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.\n   * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.\n   * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base\n   * @memberof Chartist.Base\n   */\n  function update(data, options, override) {\n    if(data) {\n      this.data = data || {};\n      this.data.labels = this.data.labels || [];\n      this.data.series = this.data.series || [];\n      // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n      this.eventEmitter.emit('data', {\n        type: 'update',\n        data: this.data\n      });\n    }\n\n    if(options) {\n      this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options);\n\n      // If chartist was not initialized yet, we just set the options and leave the rest to the initialization\n      // Otherwise we re-create the optionsProvider at this point\n      if(!this.initializeTimeoutId) {\n        this.optionsProvider.removeMediaQueryListeners();\n        this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n      }\n    }\n\n    // Only re-created the chart if it has been initialized yet\n    if(!this.initializeTimeoutId) {\n      this.createChart(this.optionsProvider.getCurrentOptions());\n    }\n\n    // Return a reference to the chart object to chain up calls\n    return this;\n  }\n\n  /**\n   * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.\n   *\n   * @memberof Chartist.Base\n   */\n  function detach() {\n    // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore\n    // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout\n    if(!this.initializeTimeoutId) {\n      window.removeEventListener('resize', this.resizeListener);\n      this.optionsProvider.removeMediaQueryListeners();\n    } else {\n      window.clearTimeout(this.initializeTimeoutId);\n    }\n\n    return this;\n  }\n\n  /**\n   * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event. Check the examples for supported events.\n   * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.\n   */\n  function on(event, handler) {\n    this.eventEmitter.addEventHandler(event, handler);\n    return this;\n  }\n\n  /**\n   * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.\n   *\n   * @memberof Chartist.Base\n   * @param {String} event Name of the event for which a handler should be removed\n   * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.\n   */\n  function off(event, handler) {\n    this.eventEmitter.removeEventHandler(event, handler);\n    return this;\n  }\n\n  function initialize() {\n    // Add window resize listener that re-creates the chart\n    window.addEventListener('resize', this.resizeListener);\n\n    // Obtain current options based on matching media queries (if responsive options are given)\n    // This will also register a listener that is re-creating the chart based on media changes\n    this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);\n    // Register options change listener that will trigger a chart update\n    this.eventEmitter.addEventHandler('optionsChanged', function() {\n      this.update();\n    }.bind(this));\n\n    // Before the first chart creation we need to register us with all plugins that are configured\n    // Initialize all relevant plugins with our chart object and the plugin options specified in the config\n    if(this.options.plugins) {\n      this.options.plugins.forEach(function(plugin) {\n        if(plugin instanceof Array) {\n          plugin[0](this, plugin[1]);\n        } else {\n          plugin(this);\n        }\n      }.bind(this));\n    }\n\n    // Event for data transformation that allows to manipulate the data before it gets rendered in the charts\n    this.eventEmitter.emit('data', {\n      type: 'initial',\n      data: this.data\n    });\n\n    // Create the first chart\n    this.createChart(this.optionsProvider.getCurrentOptions());\n\n    // As chart is initialized from the event loop now we can reset our timeout reference\n    // This is important if the chart gets initialized on the same element twice\n    this.initializeTimeoutId = undefined;\n  }\n\n  /**\n   * Constructor of chart base class.\n   *\n   * @param query\n   * @param data\n   * @param defaultOptions\n   * @param options\n   * @param responsiveOptions\n   * @constructor\n   */\n  function Base(query, data, defaultOptions, options, responsiveOptions) {\n    this.container = Chartist.querySelector(query);\n    this.data = data || {};\n    this.data.labels = this.data.labels || [];\n    this.data.series = this.data.series || [];\n    this.defaultOptions = defaultOptions;\n    this.options = options;\n    this.responsiveOptions = responsiveOptions;\n    this.eventEmitter = Chartist.EventEmitter();\n    this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');\n    this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');\n    this.resizeListener = function resizeListener(){\n      this.update();\n    }.bind(this);\n\n    if(this.container) {\n      // If chartist was already initialized in this container we are detaching all event listeners first\n      if(this.container.__chartist__) {\n        this.container.__chartist__.detach();\n      }\n\n      this.container.__chartist__ = this;\n    }\n\n    // Using event loop for first draw to make it possible to register event listeners in the same call stack where\n    // the chart was created.\n    this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);\n  }\n\n  // Creating the chart base class\n  Chartist.Base = Chartist.Class.extend({\n    constructor: Base,\n    optionsProvider: undefined,\n    container: undefined,\n    svg: undefined,\n    eventEmitter: undefined,\n    createChart: function() {\n      throw new Error('Base chart type can\\'t be instantiated!');\n    },\n    update: update,\n    detach: detach,\n    on: on,\n    off: off,\n    version: Chartist.version,\n    supportsForeignObject: false\n  });\n\n}(this || global, Chartist));\n;/**\n * Chartist SVG module for simple SVG DOM abstraction\n *\n * @module Chartist.Svg\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var document = globalRoot.document;\n\n  /**\n   * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.\n   *\n   * @memberof Chartist.Svg\n   * @constructor\n   * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg\n   * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} className This class or class list will be added to the SVG element\n   * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child\n   * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   */\n  function Svg(name, attributes, className, parent, insertFirst) {\n    // If Svg is getting called with an SVG element we just return the wrapper\n    if(name instanceof Element) {\n      this._node = name;\n    } else {\n      this._node = document.createElementNS(Chartist.namespaces.svg, name);\n\n      // If this is an SVG element created then custom namespace\n      if(name === 'svg') {\n        this.attr({\n          'xmlns:ct': Chartist.namespaces.ct\n        });\n      }\n    }\n\n    if(attributes) {\n      this.attr(attributes);\n    }\n\n    if(className) {\n      this.addClass(className);\n    }\n\n    if(parent) {\n      if (insertFirst && parent._node.firstChild) {\n        parent._node.insertBefore(this._node, parent._node.firstChild);\n      } else {\n        parent._node.appendChild(this._node);\n      }\n    }\n  }\n\n  /**\n   * Set attributes on the current SVG element of the wrapper you're currently working on.\n   *\n   * @memberof Chartist.Svg\n   * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.\n   * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.\n   * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.\n   */\n  function attr(attributes, ns) {\n    if(typeof attributes === 'string') {\n      if(ns) {\n        return this._node.getAttributeNS(ns, attributes);\n      } else {\n        return this._node.getAttribute(attributes);\n      }\n    }\n\n    Object.keys(attributes).forEach(function(key) {\n      // If the attribute value is undefined we can skip this one\n      if(attributes[key] === undefined) {\n        return;\n      }\n\n      if (key.indexOf(':') !== -1) {\n        var namespacedAttribute = key.split(':');\n        this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);\n      } else {\n        this._node.setAttribute(key, attributes[key]);\n      }\n    }.bind(this));\n\n    return this;\n  }\n\n  /**\n   * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper\n   * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data\n   */\n  function elem(name, attributes, className, insertFirst) {\n    return new Chartist.Svg(name, attributes, className, this, insertFirst);\n  }\n\n  /**\n   * Returns the parent Chartist.SVG wrapper object\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.\n   */\n  function parent() {\n    return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;\n  }\n\n  /**\n   * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element\n   */\n  function root() {\n    var node = this._node;\n    while(node.nodeName !== 'svg') {\n      node = node.parentNode;\n    }\n    return new Chartist.Svg(node);\n  }\n\n  /**\n   * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found\n   */\n  function querySelector(selector) {\n    var foundNode = this._node.querySelector(selector);\n    return foundNode ? new Chartist.Svg(foundNode) : null;\n  }\n\n  /**\n   * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} selector A CSS selector that is used to query for child SVG elements\n   * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found\n   */\n  function querySelectorAll(selector) {\n    var foundNodes = this._node.querySelectorAll(selector);\n    return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;\n  }\n\n  /**\n   * Returns the underlying SVG node for the current element.\n   *\n   * @memberof Chartist.Svg\n   * @returns {Node}\n   */\n  function getNode() {\n    return this._node;\n  }\n\n  /**\n   * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject\n   * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.\n   * @param {String} [className] This class or class list will be added to the SVG element\n   * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child\n   * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element\n   */\n  function foreignObject(content, attributes, className, insertFirst) {\n    // If content is string then we convert it to DOM\n    // TODO: Handle case where content is not a string nor a DOM Node\n    if(typeof content === 'string') {\n      var container = document.createElement('div');\n      container.innerHTML = content;\n      content = container.firstChild;\n    }\n\n    // Adding namespace to content element\n    content.setAttribute('xmlns', Chartist.namespaces.xmlns);\n\n    // Creating the foreignObject without required extension attribute (as described here\n    // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)\n    var fnObj = this.elem('foreignObject', attributes, className, insertFirst);\n\n    // Add content to foreignObjectElement\n    fnObj._node.appendChild(content);\n\n    return fnObj;\n  }\n\n  /**\n   * This method adds a new text element to the current Chartist.Svg wrapper.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} t The text that should be added to the text element that is created\n   * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element\n   */\n  function text(t) {\n    this._node.appendChild(document.createTextNode(t));\n    return this;\n  }\n\n  /**\n   * This method will clear all child nodes of the current wrapper object.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The same wrapper object that got emptied\n   */\n  function empty() {\n    while (this._node.firstChild) {\n      this._node.removeChild(this._node.firstChild);\n    }\n\n    return this;\n  }\n\n  /**\n   * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The parent wrapper object of the element that got removed\n   */\n  function remove() {\n    this._node.parentNode.removeChild(this._node);\n    return this.parent();\n  }\n\n  /**\n   * This method will replace the element with a new element that can be created outside of the current DOM.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object\n   * @return {Chartist.Svg} The wrapper of the new element\n   */\n  function replace(newElement) {\n    this._node.parentNode.replaceChild(newElement._node, this._node);\n    return newElement;\n  }\n\n  /**\n   * This method will append an element to the current element as a child.\n   *\n   * @memberof Chartist.Svg\n   * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child\n   * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child\n   * @return {Chartist.Svg} The wrapper of the appended object\n   */\n  function append(element, insertFirst) {\n    if(insertFirst && this._node.firstChild) {\n      this._node.insertBefore(element._node, this._node.firstChild);\n    } else {\n      this._node.appendChild(element._node);\n    }\n\n    return this;\n  }\n\n  /**\n   * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.\n   *\n   * @memberof Chartist.Svg\n   * @return {Array} A list of classes or an empty array if there are no classes on the current element\n   */\n  function classes() {\n    return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\\s+/) : [];\n  }\n\n  /**\n   * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function addClass(names) {\n    this._node.setAttribute('class',\n      this.classes(this._node)\n        .concat(names.trim().split(/\\s+/))\n        .filter(function(elem, pos, self) {\n          return self.indexOf(elem) === pos;\n        }).join(' ')\n    );\n\n    return this;\n  }\n\n  /**\n   * Removes one or a space separated list of classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} names A white space separated list of class names\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeClass(names) {\n    var removedClasses = names.trim().split(/\\s+/);\n\n    this._node.setAttribute('class', this.classes(this._node).filter(function(name) {\n      return removedClasses.indexOf(name) === -1;\n    }).join(' '));\n\n    return this;\n  }\n\n  /**\n   * Removes all classes from the current element.\n   *\n   * @memberof Chartist.Svg\n   * @return {Chartist.Svg} The wrapper of the current element\n   */\n  function removeAllClasses() {\n    this._node.setAttribute('class', '');\n\n    return this;\n  }\n\n  /**\n   * Get element height using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Svg\n   * @return {Number} The elements height in pixels\n   */\n  function height() {\n    return this._node.getBoundingClientRect().height;\n  }\n\n  /**\n   * Get element width using `getBoundingClientRect`\n   *\n   * @memberof Chartist.Core\n   * @return {Number} The elements width in pixels\n   */\n  function width() {\n    return this._node.getBoundingClientRect().width;\n  }\n\n  /**\n   * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.\n   * **An animations object could look like this:**\n   * ```javascript\n   * element.animate({\n   *   opacity: {\n   *     dur: 1000,\n   *     from: 0,\n   *     to: 1\n   *   },\n   *   x1: {\n   *     dur: '1000ms',\n   *     from: 100,\n   *     to: 200,\n   *     easing: 'easeOutQuart'\n   *   },\n   *   y1: {\n   *     dur: '2s',\n   *     from: 0,\n   *     to: 100\n   *   }\n   * });\n   * ```\n   * **Automatic unit conversion**\n   * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.\n   * **Guided mode**\n   * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill=\"freeze\"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.\n   * If guided mode is enabled the following behavior is added:\n   * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation\n   * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)\n   * - The animate element will be forced to use `fill=\"freeze\"`\n   * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.\n   * - After the animation the element attribute value will be set to the `to` value of the animation\n   * - The animate element is deleted from the DOM\n   *\n   * @memberof Chartist.Svg\n   * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.\n   * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.\n   * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.\n   * @return {Chartist.Svg} The current element where the animation was added\n   */\n  function animate(animations, guided, eventEmitter) {\n    if(guided === undefined) {\n      guided = true;\n    }\n\n    Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {\n\n      function createAnimate(animationDefinition, guided) {\n        var attributeProperties = {},\n          animate,\n          timeout,\n          easing;\n\n        // Check if an easing is specified in the definition object and delete it from the object as it will not\n        // be part of the animate element attributes.\n        if(animationDefinition.easing) {\n          // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object\n          easing = animationDefinition.easing instanceof Array ?\n            animationDefinition.easing :\n            Chartist.Svg.Easing[animationDefinition.easing];\n          delete animationDefinition.easing;\n        }\n\n        // If numeric dur or begin was provided we assume milli seconds\n        animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');\n        animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');\n\n        if(easing) {\n          animationDefinition.calcMode = 'spline';\n          animationDefinition.keySplines = easing.join(' ');\n          animationDefinition.keyTimes = '0;1';\n        }\n\n        // Adding \"fill: freeze\" if we are in guided mode and set initial attribute values\n        if(guided) {\n          animationDefinition.fill = 'freeze';\n          // Animated property on our element should already be set to the animation from value in guided mode\n          attributeProperties[attribute] = animationDefinition.from;\n          this.attr(attributeProperties);\n\n          // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin\n          // which needs to be in ms aside\n          timeout = Chartist.quantity(animationDefinition.begin || 0).value;\n          animationDefinition.begin = 'indefinite';\n        }\n\n        animate = this.elem('animate', Chartist.extend({\n          attributeName: attribute\n        }, animationDefinition));\n\n        if(guided) {\n          // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout\n          setTimeout(function() {\n            // If beginElement fails we set the animated attribute to the end position and remove the animate element\n            // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in\n            // the browser. (Currently FF 34 does not support animate elements in foreignObjects)\n            try {\n              animate._node.beginElement();\n            } catch(err) {\n              // Set animated attribute to current animated value\n              attributeProperties[attribute] = animationDefinition.to;\n              this.attr(attributeProperties);\n              // Remove the animate element as it's no longer required\n              animate.remove();\n            }\n          }.bind(this), timeout);\n        }\n\n        if(eventEmitter) {\n          animate._node.addEventListener('beginEvent', function handleBeginEvent() {\n            eventEmitter.emit('animationBegin', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }.bind(this));\n        }\n\n        animate._node.addEventListener('endEvent', function handleEndEvent() {\n          if(eventEmitter) {\n            eventEmitter.emit('animationEnd', {\n              element: this,\n              animate: animate._node,\n              params: animationDefinition\n            });\n          }\n\n          if(guided) {\n            // Set animated attribute to current animated value\n            attributeProperties[attribute] = animationDefinition.to;\n            this.attr(attributeProperties);\n            // Remove the animate element as it's no longer required\n            animate.remove();\n          }\n        }.bind(this));\n      }\n\n      // If current attribute is an array of definition objects we create an animate for each and disable guided mode\n      if(animations[attribute] instanceof Array) {\n        animations[attribute].forEach(function(animationDefinition) {\n          createAnimate.bind(this)(animationDefinition, false);\n        }.bind(this));\n      } else {\n        createAnimate.bind(this)(animations[attribute], guided);\n      }\n\n    }.bind(this));\n\n    return this;\n  }\n\n  Chartist.Svg = Chartist.Class.extend({\n    constructor: Svg,\n    attr: attr,\n    elem: elem,\n    parent: parent,\n    root: root,\n    querySelector: querySelector,\n    querySelectorAll: querySelectorAll,\n    getNode: getNode,\n    foreignObject: foreignObject,\n    text: text,\n    empty: empty,\n    remove: remove,\n    replace: replace,\n    append: append,\n    classes: classes,\n    addClass: addClass,\n    removeClass: removeClass,\n    removeAllClasses: removeAllClasses,\n    height: height,\n    width: width,\n    animate: animate\n  });\n\n  /**\n   * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.\n   *\n   * @memberof Chartist.Svg\n   * @param {String} feature The SVG 1.1 feature that should be checked for support.\n   * @return {Boolean} True of false if the feature is supported or not\n   */\n  Chartist.Svg.isSupported = function(feature) {\n    return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');\n  };\n\n  /**\n   * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.\n   *\n   * @memberof Chartist.Svg\n   */\n  var easingCubicBeziers = {\n    easeInSine: [0.47, 0, 0.745, 0.715],\n    easeOutSine: [0.39, 0.575, 0.565, 1],\n    easeInOutSine: [0.445, 0.05, 0.55, 0.95],\n    easeInQuad: [0.55, 0.085, 0.68, 0.53],\n    easeOutQuad: [0.25, 0.46, 0.45, 0.94],\n    easeInOutQuad: [0.455, 0.03, 0.515, 0.955],\n    easeInCubic: [0.55, 0.055, 0.675, 0.19],\n    easeOutCubic: [0.215, 0.61, 0.355, 1],\n    easeInOutCubic: [0.645, 0.045, 0.355, 1],\n    easeInQuart: [0.895, 0.03, 0.685, 0.22],\n    easeOutQuart: [0.165, 0.84, 0.44, 1],\n    easeInOutQuart: [0.77, 0, 0.175, 1],\n    easeInQuint: [0.755, 0.05, 0.855, 0.06],\n    easeOutQuint: [0.23, 1, 0.32, 1],\n    easeInOutQuint: [0.86, 0, 0.07, 1],\n    easeInExpo: [0.95, 0.05, 0.795, 0.035],\n    easeOutExpo: [0.19, 1, 0.22, 1],\n    easeInOutExpo: [1, 0, 0, 1],\n    easeInCirc: [0.6, 0.04, 0.98, 0.335],\n    easeOutCirc: [0.075, 0.82, 0.165, 1],\n    easeInOutCirc: [0.785, 0.135, 0.15, 0.86],\n    easeInBack: [0.6, -0.28, 0.735, 0.045],\n    easeOutBack: [0.175, 0.885, 0.32, 1.275],\n    easeInOutBack: [0.68, -0.55, 0.265, 1.55]\n  };\n\n  Chartist.Svg.Easing = easingCubicBeziers;\n\n  /**\n   * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.\n   * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.\n   *\n   * @memberof Chartist.Svg\n   * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)\n   * @constructor\n   */\n  function SvgList(nodeList) {\n    var list = this;\n\n    this.svgElements = [];\n    for(var i = 0; i < nodeList.length; i++) {\n      this.svgElements.push(new Chartist.Svg(nodeList[i]));\n    }\n\n    // Add delegation methods for Chartist.Svg\n    Object.keys(Chartist.Svg.prototype).filter(function(prototypeProperty) {\n      return ['constructor',\n          'parent',\n          'querySelector',\n          'querySelectorAll',\n          'replace',\n          'append',\n          'classes',\n          'height',\n          'width'].indexOf(prototypeProperty) === -1;\n    }).forEach(function(prototypeProperty) {\n      list[prototypeProperty] = function() {\n        var args = Array.prototype.slice.call(arguments, 0);\n        list.svgElements.forEach(function(element) {\n          Chartist.Svg.prototype[prototypeProperty].apply(element, args);\n        });\n        return list;\n      };\n    });\n  }\n\n  Chartist.Svg.List = Chartist.Class.extend({\n    constructor: SvgList\n  });\n}(this || global, Chartist));\n;/**\n * Chartist SVG path module for SVG path description creation and modification.\n *\n * @module Chartist.Svg.Path\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  /**\n   * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var elementDescriptions = {\n    m: ['x', 'y'],\n    l: ['x', 'y'],\n    c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],\n    a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']\n  };\n\n  /**\n   * Default options for newly created SVG path objects.\n   *\n   * @memberof Chartist.Svg.Path\n   * @type {Object}\n   */\n  var defaultOptions = {\n    // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.\n    accuracy: 3\n  };\n\n  function element(command, params, pathElements, pos, relative, data) {\n    var pathElement = Chartist.extend({\n      command: relative ? command.toLowerCase() : command.toUpperCase()\n    }, params, data ? { data: data } : {} );\n\n    pathElements.splice(pos, 0, pathElement);\n  }\n\n  function forEachParam(pathElements, cb) {\n    pathElements.forEach(function(pathElement, pathElementIndex) {\n      elementDescriptions[pathElement.command.toLowerCase()].forEach(function(paramName, paramIndex) {\n        cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      });\n    });\n  }\n\n  /**\n   * Used to construct a new path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)\n   * @param {Object} options Options object that overrides the default objects. See default options for more details.\n   * @constructor\n   */\n  function SvgPath(close, options) {\n    this.pathElements = [];\n    this.pos = 0;\n    this.close = close;\n    this.options = Chartist.extend({}, defaultOptions, options);\n  }\n\n  /**\n   * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.\n   * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.\n   */\n  function position(pos) {\n    if(pos !== undefined) {\n      this.pos = Math.max(0, Math.min(this.pathElements.length, pos));\n      return this;\n    } else {\n      return this.pos;\n    }\n  }\n\n  /**\n   * Removes elements from the path starting at the current position.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} count Number of path elements that should be removed from the current position.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function remove(count) {\n    this.pathElements.splice(this.pos, count);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new move SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the move element.\n   * @param {Number} y The y coordinate for the move element.\n   * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function move(x, y, relative, data) {\n    element('M', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new line SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The x coordinate for the line element.\n   * @param {Number} y The y coordinate for the line element.\n   * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function line(x, y, relative, data) {\n    element('L', {\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x1 The x coordinate for the first control point of the bezier curve.\n   * @param {Number} y1 The y coordinate for the first control point of the bezier curve.\n   * @param {Number} x2 The x coordinate for the second control point of the bezier curve.\n   * @param {Number} y2 The y coordinate for the second control point of the bezier curve.\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function curve(x1, y1, x2, y2, x, y, relative, data) {\n    element('C', {\n      x1: +x1,\n      y1: +y1,\n      x2: +x2,\n      y2: +y2,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Use this function to add a new non-bezier curve SVG path element.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} rx The radius to be used for the x-axis of the arc.\n   * @param {Number} ry The radius to be used for the y-axis of the arc.\n   * @param {Number} xAr Defines the orientation of the arc\n   * @param {Number} lAf Large arc flag\n   * @param {Number} sf Sweep flag\n   * @param {Number} x The x coordinate for the target point of the curve element.\n   * @param {Number} y The y coordinate for the target point of the curve element.\n   * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)\n   * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {\n    element('A', {\n      rx: +rx,\n      ry: +ry,\n      xAr: +xAr,\n      lAf: +lAf,\n      sf: +sf,\n      x: +x,\n      y: +y\n    }, this.pathElements, this.pos++, relative, data);\n    return this;\n  }\n\n  /**\n   * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function parse(path) {\n    // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]\n    var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2')\n      .replace(/([0-9])([A-Za-z])/g, '$1 $2')\n      .split(/[\\s,]+/)\n      .reduce(function(result, element) {\n        if(element.match(/[A-Za-z]/)) {\n          result.push([]);\n        }\n\n        result[result.length - 1].push(element);\n        return result;\n      }, []);\n\n    // If this is a closed path we remove the Z at the end because this is determined by the close option\n    if(chunks[chunks.length - 1][0].toUpperCase() === 'Z') {\n      chunks.pop();\n    }\n\n    // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters\n    // For example {command: 'M', x: '10', y: '10'}\n    var elements = chunks.map(function(chunk) {\n        var command = chunk.shift(),\n          description = elementDescriptions[command.toLowerCase()];\n\n        return Chartist.extend({\n          command: command\n        }, description.reduce(function(result, paramName, index) {\n          result[paramName] = +chunk[index];\n          return result;\n        }, {}));\n      });\n\n    // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position\n    var spliceArgs = [this.pos, 0];\n    Array.prototype.push.apply(spliceArgs, elements);\n    Array.prototype.splice.apply(this.pathElements, spliceArgs);\n    // Increase the internal position by the element count\n    this.pos += elements.length;\n\n    return this;\n  }\n\n  /**\n   * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.\n   *\n   * @memberof Chartist.Svg.Path\n   * @return {String}\n   */\n  function stringify() {\n    var accuracyMultiplier = Math.pow(10, this.options.accuracy);\n\n    return this.pathElements.reduce(function(path, pathElement) {\n        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function(paramName) {\n          return this.options.accuracy ?\n            (Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier) :\n            pathElement[paramName];\n        }.bind(this));\n\n        return path + pathElement.command + params.join(',');\n      }.bind(this), '') + (this.close ? 'Z' : '');\n  }\n\n  /**\n   * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function scale(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] *= paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.\n   * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function translate(x, y) {\n    forEachParam(this.pathElements, function(pathElement, paramName) {\n      pathElement[paramName] += paramName[0] === 'x' ? x : y;\n    });\n    return this;\n  }\n\n  /**\n   * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.\n   * The method signature of the callback function looks like this:\n   * ```javascript\n   * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)\n   * ```\n   * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.\n   * @return {Chartist.Svg.Path} The current path object for easy call chaining.\n   */\n  function transform(transformFnc) {\n    forEachParam(this.pathElements, function(pathElement, paramName, pathElementIndex, paramIndex, pathElements) {\n      var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);\n      if(transformed || transformed === 0) {\n        pathElement[paramName] = transformed;\n      }\n    });\n    return this;\n  }\n\n  /**\n   * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.\n   * @return {Chartist.Svg.Path}\n   */\n  function clone(close) {\n    var c = new Chartist.Svg.Path(close || this.close);\n    c.pos = this.pos;\n    c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {\n      return Chartist.extend({}, pathElement);\n    });\n    c.options = Chartist.extend({}, this.options);\n    return c;\n  }\n\n  /**\n   * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {String} command The command you'd like to use to split the path\n   * @return {Array<Chartist.Svg.Path>}\n   */\n  function splitByCommand(command) {\n    var split = [\n      new Chartist.Svg.Path()\n    ];\n\n    this.pathElements.forEach(function(pathElement) {\n      if(pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {\n        split.push(new Chartist.Svg.Path());\n      }\n\n      split[split.length - 1].pathElements.push(pathElement);\n    });\n\n    return split;\n  }\n\n  /**\n   * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.\n   *\n   * @memberof Chartist.Svg.Path\n   * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.\n   * @param {boolean} close If the newly created path should be a closed path\n   * @param {Object} options Path options for the newly created path.\n   * @return {Chartist.Svg.Path}\n   */\n\n  function join(paths, close, options) {\n    var joinedPath = new Chartist.Svg.Path(close, options);\n    for(var i = 0; i < paths.length; i++) {\n      var path = paths[i];\n      for(var j = 0; j < path.pathElements.length; j++) {\n        joinedPath.pathElements.push(path.pathElements[j]);\n      }\n    }\n    return joinedPath;\n  }\n\n  Chartist.Svg.Path = Chartist.Class.extend({\n    constructor: SvgPath,\n    position: position,\n    remove: remove,\n    move: move,\n    line: line,\n    curve: curve,\n    arc: arc,\n    scale: scale,\n    translate: translate,\n    transform: transform,\n    parse: parse,\n    stringify: stringify,\n    clone: clone,\n    splitByCommand: splitByCommand\n  });\n\n  Chartist.Svg.Path.elementDescriptions = elementDescriptions;\n  Chartist.Svg.Path.join = join;\n}(this || global, Chartist));\n;/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  var axisUnits = {\n    x: {\n      pos: 'x',\n      len: 'width',\n      dir: 'horizontal',\n      rectStart: 'x1',\n      rectEnd: 'x2',\n      rectOffset: 'y2'\n    },\n    y: {\n      pos: 'y',\n      len: 'height',\n      dir: 'vertical',\n      rectStart: 'y2',\n      rectEnd: 'y1',\n      rectOffset: 'x1'\n    }\n  };\n\n  function Axis(units, chartRect, ticks, options) {\n    this.units = units;\n    this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;\n    this.chartRect = chartRect;\n    this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];\n    this.gridOffset = chartRect[units.rectOffset];\n    this.ticks = ticks;\n    this.options = options;\n  }\n\n  function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {\n    var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];\n    var projectedValues = this.ticks.map(this.projectValue.bind(this));\n    var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);\n\n    projectedValues.forEach(function(projectedValue, index) {\n      var labelOffset = {\n        x: 0,\n        y: 0\n      };\n\n      // TODO: Find better solution for solving this problem\n      // Calculate how much space we have available for the label\n      var labelLength;\n      if(projectedValues[index + 1]) {\n        // If we still have one label ahead, we can calculate the distance to the next tick / label\n        labelLength = projectedValues[index + 1] - projectedValue;\n      } else {\n        // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to\n        // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will\n        // still be visible inside of the chart padding.\n        labelLength = Math.max(this.axisLength - projectedValue, 30);\n      }\n\n      // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)\n      if(Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {\n        return;\n      }\n\n      // Transform to global coordinates using the chartRect\n      // We also need to set the label offset for the createLabel function\n      if(this.units.pos === 'x') {\n        projectedValue = this.chartRect.x1 + projectedValue;\n        labelOffset.x = chartOptions.axisX.labelOffset.x;\n\n        // If the labels should be positioned in start position (top side for vertical axis) we need to set a\n        // different offset as for positioned with end (bottom)\n        if(chartOptions.axisX.position === 'start') {\n          labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        } else {\n          labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);\n        }\n      } else {\n        projectedValue = this.chartRect.y1 - projectedValue;\n        labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0);\n\n        // If the labels should be positioned in start position (left side for horizontal axis) we need to set a\n        // different offset as for positioned with end (right side)\n        if(chartOptions.axisY.position === 'start') {\n          labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;\n        } else {\n          labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;\n        }\n      }\n\n      if(axisOptions.showGrid) {\n        Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [\n          chartOptions.classNames.grid,\n          chartOptions.classNames[this.units.dir]\n        ], eventEmitter);\n      }\n\n      if(axisOptions.showLabel) {\n        Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [\n          chartOptions.classNames.label,\n          chartOptions.classNames[this.units.dir],\n          (axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end'])\n        ], useForeignObject, eventEmitter);\n      }\n    }.bind(this));\n  }\n\n  Chartist.Axis = Chartist.Class.extend({\n    constructor: Axis,\n    createGridAndLabels: createGridAndLabels,\n    projectValue: function(value, index, data) {\n      throw new Error('Base axis can\\'t be instantiated!');\n    }\n  });\n\n  Chartist.Axis.units = axisUnits;\n\n}(this || global, Chartist));\n;/**\n * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).\n *   scaleMinSpace: 20,\n *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.\n *   onlyInteger: true,\n *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.\n *   referenceValue: 5\n * };\n * ```\n *\n * @module Chartist.AutoScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function AutoScaleAxis(axisUnit, data, chartRect, options) {\n    // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);\n    this.range = {\n      min: this.bounds.min,\n      max: this.bounds.max\n    };\n\n    Chartist.AutoScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.bounds.values,\n      options);\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;\n  }\n\n  Chartist.AutoScaleAxis = Chartist.Axis.extend({\n    constructor: AutoScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored\n *   high: 100,\n *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored\n *   low: 0,\n *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.\n *   divisor: 4,\n *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.\n *   ticks: [1, 10, 20, 30]\n * };\n * ```\n *\n * @module Chartist.FixedScaleAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function FixedScaleAxis(axisUnit, data, chartRect, options) {\n    var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);\n    this.divisor = options.divisor || 1;\n    this.ticks = options.ticks || Chartist.times(this.divisor).map(function(value, index) {\n      return highLow.low + (highLow.high - highLow.low) / this.divisor * index;\n    }.bind(this));\n    this.ticks.sort(function(a, b) {\n      return a - b;\n    });\n    this.range = {\n      min: highLow.low,\n      max: highLow.high\n    };\n\n    Chartist.FixedScaleAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      this.ticks,\n      options);\n\n    this.stepLength = this.axisLength / this.divisor;\n  }\n\n  function projectValue(value) {\n    return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);\n  }\n\n  Chartist.FixedScaleAxis = Chartist.Axis.extend({\n    constructor: FixedScaleAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.\n * **Options**\n * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.\n * ```javascript\n * var options = {\n *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.\n *   ticks: ['One', 'Two', 'Three'],\n *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.\n *   stretch: true\n * };\n * ```\n *\n * @module Chartist.StepAxis\n */\n/* global Chartist */\n(function (globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  function StepAxis(axisUnit, data, chartRect, options) {\n    Chartist.StepAxis.super.constructor.call(this,\n      axisUnit,\n      chartRect,\n      options.ticks,\n      options);\n\n    var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));\n    this.stepLength = this.axisLength / calc;\n  }\n\n  function projectValue(value, index) {\n    return this.stepLength * index;\n  }\n\n  Chartist.StepAxis = Chartist.Axis.extend({\n    constructor: StepAxis,\n    projectValue: projectValue\n  });\n\n}(this || global, Chartist));\n;/**\n * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.\n *\n * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.\n *\n * @module Chartist.Line\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Line\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the labels to the chart area\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the labels to the chart area\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.\n      type: undefined,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // If the line should be drawn or not\n    showLine: true,\n    // If dots should be drawn or not\n    showPoint: true,\n    // If the line chart should draw an area\n    showArea: false,\n    // The base for the area chart that will be used to close the area shape (is normally 0)\n    areaBase: 0,\n    // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.\n    lineSmooth: true,\n    // If the line chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.\n    fullWidth: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-line',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      line: 'ct-line',\n      point: 'ct-point',\n      area: 'ct-area',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data, options.reverseData, true);\n\n    // Create new svg object\n    this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart);\n    // Create groups for labels, grid and series\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    var axisX, axisY;\n\n    if(options.axisX.type === undefined) {\n      axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n        ticks: data.normalized.labels,\n        stretch: options.fullWidth\n      }));\n    } else {\n      axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n    }\n\n    if(options.axisY.type === undefined) {\n      axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n        high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,\n        low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low\n      }));\n    } else {\n      axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n    }\n\n    axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      var seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      var pathCoordinates = [],\n        pathData = [];\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var p = {\n          x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),\n          y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])\n        };\n        pathCoordinates.push(p.x, p.y);\n        pathData.push({\n          value: value,\n          valueIndex: valueIndex,\n          meta: Chartist.getMetaData(series, valueIndex)\n        });\n      }.bind(this));\n\n      var seriesOptions = {\n        lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),\n        showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),\n        showLine: Chartist.getSeriesOption(series, options, 'showLine'),\n        showArea: Chartist.getSeriesOption(series, options, 'showArea'),\n        areaBase: Chartist.getSeriesOption(series, options, 'areaBase')\n      };\n\n      var smoothing = typeof seriesOptions.lineSmooth === 'function' ?\n        seriesOptions.lineSmooth : (seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none());\n      // Interpolating path where pathData will be used to annotate each path element so we can trace back the original\n      // index, value and meta data\n      var path = smoothing(pathCoordinates, pathData);\n\n      // If we should show points we need to create them now to avoid secondary loop\n      // Points are drawn from the pathElements returned by the interpolation function\n      // Small offset for Firefox to render squares correctly\n      if (seriesOptions.showPoint) {\n\n        path.pathElements.forEach(function(pathElement) {\n          var point = seriesElement.elem('line', {\n            x1: pathElement.x,\n            y1: pathElement.y,\n            x2: pathElement.x + 0.01,\n            y2: pathElement.y\n          }, options.classNames.point).attr({\n            'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),\n            'ct:meta': Chartist.serialize(pathElement.data.meta)\n          });\n\n          this.eventEmitter.emit('draw', {\n            type: 'point',\n            value: pathElement.data.value,\n            index: pathElement.data.valueIndex,\n            meta: pathElement.data.meta,\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            group: seriesElement,\n            element: point,\n            x: pathElement.x,\n            y: pathElement.y\n          });\n        }.bind(this));\n      }\n\n      if(seriesOptions.showLine) {\n        var line = seriesElement.elem('path', {\n          d: path.stringify()\n        }, options.classNames.line, true);\n\n        this.eventEmitter.emit('draw', {\n          type: 'line',\n          values: data.normalized.series[seriesIndex],\n          path: path.clone(),\n          chartRect: chartRect,\n          index: seriesIndex,\n          series: series,\n          seriesIndex: seriesIndex,\n          seriesMeta: series.meta,\n          axisX: axisX,\n          axisY: axisY,\n          group: seriesElement,\n          element: line\n        });\n      }\n\n      // Area currently only works with axes that support a range!\n      if(seriesOptions.showArea && axisY.range) {\n        // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that\n        // the area is not drawn outside the chart area.\n        var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min);\n\n        // We project the areaBase value into screen coordinates\n        var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase);\n\n        // In order to form the area we'll first split the path by move commands so we can chunk it up into segments\n        path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {\n          // We filter only \"solid\" segments that contain more than one point. Otherwise there's no need for an area\n          return pathSegment.pathElements.length > 1;\n        }).map(function convertToArea(solidPathSegments) {\n          // Receiving the filtered solid path segments we can now convert those segments into fill areas\n          var firstElement = solidPathSegments.pathElements[0];\n          var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1];\n\n          // Cloning the solid path segment with closing option and removing the first move command from the clone\n          // We then insert a new move that should start at the area base and draw a straight line up or down\n          // at the end of the path we add an additional straight line to the projected area base value\n          // As the closing option is set our path will be automatically closed\n          return solidPathSegments.clone(true)\n            .position(0)\n            .remove(1)\n            .move(firstElement.x, areaBaseProjected)\n            .line(firstElement.x, firstElement.y)\n            .position(solidPathSegments.pathElements.length + 1)\n            .line(lastElement.x, areaBaseProjected);\n\n        }).forEach(function createArea(areaPath) {\n          // For each of our newly created area paths, we'll now create path elements by stringifying our path objects\n          // and adding the created DOM elements to the correct series group\n          var area = seriesElement.elem('path', {\n            d: areaPath.stringify()\n          }, options.classNames.area, true);\n\n          // Emit an event for each area that was drawn\n          this.eventEmitter.emit('draw', {\n            type: 'area',\n            values: data.normalized.series[seriesIndex],\n            path: areaPath.clone(),\n            series: series,\n            seriesIndex: seriesIndex,\n            axisX: axisX,\n            axisY: axisY,\n            chartRect: chartRect,\n            index: seriesIndex,\n            group: seriesElement,\n            element: area\n          });\n        }.bind(this));\n      }\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: axisY.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new line chart.\n   *\n   * @memberof Chartist.Line\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple line chart\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // As options we currently only set a static size of 300x200 px\n   * var options = {\n   *   width: '300px',\n   *   height: '200px'\n   * };\n   *\n   * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options\n   * new Chartist.Line('.ct-chart', data, options);\n   *\n   * @example\n   * // Use specific interpolation function with configuration from the Chartist.Interpolation module\n   *\n   * var chart = new Chartist.Line('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5],\n   *   series: [\n   *     [1, 1, 8, 1, 7]\n   *   ]\n   * }, {\n   *   lineSmooth: Chartist.Interpolation.cardinal({\n   *     tension: 0.2\n   *   })\n   * });\n   *\n   * @example\n   * // Create a line chart with responsive options\n   *\n   * var data = {\n   *   // A labels array that can contain any sort of values\n   *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],\n   *   // Our series array that contains series objects or in this case series data arrays\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.\n   * var responsiveOptions = [\n   *   ['screen and (min-width: 641px) and (max-width: 1024px)', {\n   *     showPoint: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return Mon, Tue, Wed etc. on medium screens\n   *         return value.slice(0, 3);\n   *       }\n   *     }\n   *   }],\n   *   ['screen and (max-width: 640px)', {\n   *     showLine: false,\n   *     axisX: {\n   *       labelInterpolationFnc: function(value) {\n   *         // Will return M, T, W etc. on small screens\n   *         return value[0];\n   *       }\n   *     }\n   *   }]\n   * ];\n   *\n   * new Chartist.Line('.ct-chart', data, null, responsiveOptions);\n   *\n   */\n  function Line(query, data, options, responsiveOptions) {\n    Chartist.Line.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating line chart type in Chartist namespace\n  Chartist.Line = Chartist.Base.extend({\n    constructor: Line,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.\n *\n * @module Chartist.Bar\n */\n/* global Chartist */\n(function(globalRoot, Chartist){\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in bar charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Bar\n   */\n  var defaultOptions = {\n    // Options for X-Axis\n    axisX: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 30,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'end',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum width in pixel of the scale steps\n      scaleMinSpace: 30,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Options for Y-Axis\n    axisY: {\n      // The offset of the chart drawing area to the border of the container\n      offset: 40,\n      // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.\n      position: 'start',\n      // Allows you to correct label positioning on this axis by positive or negative x and y offset.\n      labelOffset: {\n        x: 0,\n        y: 0\n      },\n      // If labels should be shown or not\n      showLabel: true,\n      // If the axis grid should be drawn or not\n      showGrid: true,\n      // Interpolation function that allows you to intercept the value from the axis label\n      labelInterpolationFnc: Chartist.noop,\n      // This value specifies the minimum height in pixel of the scale steps\n      scaleMinSpace: 20,\n      // Use only integer values (whole numbers) for the scale steps\n      onlyInteger: false\n    },\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value\n    high: undefined,\n    // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value\n    low: undefined,\n    // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.\n    referenceValue: 0,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: {\n      top: 15,\n      right: 15,\n      bottom: 5,\n      left: 10\n    },\n    // Specify the distance in pixel of bars in a group\n    seriesBarDistance: 15,\n    // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.\n    stackBars: false,\n    // If set to 'overlap' this property will force the stacked bars to draw from the zero line.\n    // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.\n    stackMode: 'accumulate',\n    // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.\n    horizontalBars: false,\n    // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.\n    distributeSeries: false,\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If the bar chart should add a background fill to the .ct-grids group.\n    showGridBackground: false,\n    // Override the class names that get used to generate the SVG structure of the chart\n    classNames: {\n      chart: 'ct-chart-bar',\n      horizontalBars: 'ct-horizontal-bars',\n      label: 'ct-label',\n      labelGroup: 'ct-labels',\n      series: 'ct-series',\n      bar: 'ct-bar',\n      grid: 'ct-grid',\n      gridGroup: 'ct-grids',\n      gridBackground: 'ct-grid-background',\n      vertical: 'ct-vertical',\n      horizontal: 'ct-horizontal',\n      start: 'ct-start',\n      end: 'ct-end'\n    }\n  };\n\n  /**\n   * Creates a new chart\n   *\n   */\n  function createChart(options) {\n    var data;\n    var highLow;\n\n    if(options.distributeSeries) {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n      data.normalized.series = data.normalized.series.map(function(value) {\n        return [value];\n      });\n    } else {\n      data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Create new svg element\n    this.svg = Chartist.createSvg(\n      this.container,\n      options.width,\n      options.height,\n      options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')\n    );\n\n    // Drawing groups in correct order\n    var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);\n    var seriesGroup = this.svg.elem('g');\n    var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);\n\n    if(options.stackBars && data.normalized.series.length !== 0) {\n\n      // If stacked bars we need to calculate the high low from stacked values from each series\n      var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {\n        return Array.prototype.slice.call(arguments).map(function(value) {\n          return value;\n        }).reduce(function(prev, curr) {\n          return {\n            x: prev.x + (curr && curr.x) || 0,\n            y: prev.y + (curr && curr.y) || 0\n          };\n        }, {x: 0, y: 0});\n      });\n\n      highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');\n\n    } else {\n\n      highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');\n    }\n\n    // Overrides of high / low from settings\n    highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);\n    highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);\n\n    var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n\n    var valueAxis,\n      labelAxisTicks,\n      labelAxis,\n      axisX,\n      axisY;\n\n    // We need to set step count based on some options combinations\n    if(options.distributeSeries && options.stackBars) {\n      // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should\n      // use only the first label for the step axis\n      labelAxisTicks = data.normalized.labels.slice(0, 1);\n    } else {\n      // If distributed series are enabled but stacked bars aren't, we should use the series labels\n      // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array\n      // as the bars are normalized\n      labelAxisTicks = data.normalized.labels;\n    }\n\n    // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.\n    if(options.horizontalBars) {\n      if(options.axisX.type === undefined) {\n        valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n\n      if(options.axisY.type === undefined) {\n        labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);\n      }\n    } else {\n      if(options.axisX.type === undefined) {\n        labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {\n          ticks: labelAxisTicks\n        });\n      } else {\n        labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);\n      }\n\n      if(options.axisY.type === undefined) {\n        valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      } else {\n        valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {\n          highLow: highLow,\n          referenceValue: 0\n        }));\n      }\n    }\n\n    // Projected 0 point\n    var zeroPoint = options.horizontalBars ? (chartRect.x1 + valueAxis.projectValue(0)) : (chartRect.y1 - valueAxis.projectValue(0));\n    // Used to track the screen coordinates of stacked bars\n    var stackedBarValues = [];\n\n    labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n    valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);\n\n    if (options.showGridBackground) {\n      Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);\n    }\n\n    // Draw the series\n    data.raw.series.forEach(function(series, seriesIndex) {\n      // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.\n      var biPol = seriesIndex - (data.raw.series.length - 1) / 2;\n      // Half of the period width between vertical grid lines used to position bars\n      var periodHalfLength;\n      // Current series SVG element\n      var seriesElement;\n\n      // We need to set periodHalfLength based on some options combinations\n      if(options.distributeSeries && !options.stackBars) {\n        // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array\n        // which is the series count and divide by 2\n        periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;\n      } else if(options.distributeSeries && options.stackBars) {\n        // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis\n        // length by 2\n        periodHalfLength = labelAxis.axisLength / 2;\n      } else {\n        // On regular bar charts we should just use the series length\n        periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;\n      }\n\n      // Adding the series group to the series element\n      seriesElement = seriesGroup.elem('g');\n\n      // Write attributes to series group element. If series name or meta is undefined the attributes will not be written\n      seriesElement.attr({\n        'ct:series-name': series.name,\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesElement.addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex))\n      ].join(' '));\n\n      data.normalized.series[seriesIndex].forEach(function(value, valueIndex) {\n        var projected,\n          bar,\n          previousStack,\n          labelAxisValueIndex;\n\n        // We need to set labelAxisValueIndex based on some options combinations\n        if(options.distributeSeries && !options.stackBars) {\n          // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection\n          // on the step axis for label positioning\n          labelAxisValueIndex = seriesIndex;\n        } else if(options.distributeSeries && options.stackBars) {\n          // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use\n          // 0 for projection on the label step axis\n          labelAxisValueIndex = 0;\n        } else {\n          // On regular bar charts we just use the value index to project on the label step axis\n          labelAxisValueIndex = valueIndex;\n        }\n\n        // We need to transform coordinates differently based on the chart layout\n        if(options.horizontalBars) {\n          projected = {\n            x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])\n          };\n        } else {\n          projected = {\n            x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),\n            y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])\n          }\n        }\n\n        // If the label axis is a step based axis we will offset the bar into the middle of between two steps using\n        // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using\n        // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not\n        // add any automated positioning.\n        if(labelAxis instanceof Chartist.StepAxis) {\n          // Offset to center bar between grid lines, but only if the step axis is not stretched\n          if(!labelAxis.options.stretch) {\n            projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);\n          }\n          // Using bi-polar offset for multiple series if no stacked bars or series distribution is used\n          projected[labelAxis.units.pos] += (options.stackBars || options.distributeSeries) ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);\n        }\n\n        // Enter value in stacked bar values used to remember previous screen value for stacking up bars\n        previousStack = stackedBarValues[valueIndex] || zeroPoint;\n        stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]);\n\n        // Skip if value is undefined\n        if(value === undefined) {\n          return;\n        }\n\n        var positions = {};\n        positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];\n        positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];\n\n        if(options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {\n          // Stack mode: accumulate (default)\n          // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line\n          // We want backwards compatibility, so the expected fallback without the 'stackMode' option\n          // to be the original behaviour (accumulate)\n          positions[labelAxis.counterUnits.pos + '1'] = previousStack;\n          positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];\n        } else {\n          // Draw from the zero line normally\n          // This is also the same code for Stack mode: overlap\n          positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;\n          positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];\n        }\n\n        // Limit x and y so that they are within the chart rect\n        positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);\n        positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);\n        positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);\n        positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);\n\n        var metaData = Chartist.getMetaData(series, valueIndex);\n\n        // Create bar element\n        bar = seriesElement.elem('line', positions, options.classNames.bar).attr({\n          'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),\n          'ct:meta': Chartist.serialize(metaData)\n        });\n\n        this.eventEmitter.emit('draw', Chartist.extend({\n          type: 'bar',\n          value: value,\n          index: valueIndex,\n          meta: metaData,\n          series: series,\n          seriesIndex: seriesIndex,\n          axisX: axisX,\n          axisY: axisY,\n          chartRect: chartRect,\n          group: seriesElement,\n          element: bar\n        }, positions));\n      }.bind(this));\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      bounds: valueAxis.bounds,\n      chartRect: chartRect,\n      axisX: axisX,\n      axisY: axisY,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new bar chart and returns API object that you can use for later changes.\n   *\n   * @memberof Chartist.Bar\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object that needs to consist of a labels and a series array\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object which exposes the API for the created chart\n   *\n   * @example\n   * // Create a simple bar chart\n   * var data = {\n   *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],\n   *   series: [\n   *     [5, 2, 4, 2, 0]\n   *   ]\n   * };\n   *\n   * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.\n   * new Chartist.Bar('.ct-chart', data);\n   *\n   * @example\n   * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10\n   * new Chartist.Bar('.ct-chart', {\n   *   labels: [1, 2, 3, 4, 5, 6, 7],\n   *   series: [\n   *     [1, 3, 2, -5, -3, 1, -6],\n   *     [-5, -2, -4, -1, 2, -3, 1]\n   *   ]\n   * }, {\n   *   seriesBarDistance: 12,\n   *   low: -10,\n   *   high: 10\n   * });\n   *\n   */\n  function Bar(query, data, options, responsiveOptions) {\n    Chartist.Bar.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating bar chart type in Chartist namespace\n  Chartist.Bar = Chartist.Base.extend({\n    constructor: Bar,\n    createChart: createChart\n  });\n\n}(this || global, Chartist));\n;/**\n * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts\n *\n * @module Chartist.Pie\n */\n/* global Chartist */\n(function(globalRoot, Chartist) {\n  'use strict';\n\n  var window = globalRoot.window;\n  var document = globalRoot.document;\n\n  /**\n   * Default options in line charts. Expand the code view to see a detailed list of options with comments.\n   *\n   * @memberof Chartist.Pie\n   */\n  var defaultOptions = {\n    // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')\n    width: undefined,\n    // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')\n    height: undefined,\n    // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}\n    chartPadding: 5,\n    // Override the class names that are used to generate the SVG structure of the chart\n    classNames: {\n      chartPie: 'ct-chart-pie',\n      chartDonut: 'ct-chart-donut',\n      series: 'ct-series',\n      slicePie: 'ct-slice-pie',\n      sliceDonut: 'ct-slice-donut',\n      sliceDonutSolid: 'ct-slice-donut-solid',\n      label: 'ct-label'\n    },\n    // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.\n    startAngle: 0,\n    // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.\n    total: undefined,\n    // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.\n    donut: false,\n    // If specified the donut segments will be drawn as shapes instead of strokes.\n    donutSolid: false,\n    // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.\n    // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').\n    donutWidth: 60,\n    // If a label should be shown or not\n    showLabel: true,\n    // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.\n    labelOffset: 0,\n    // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.\n    labelPosition: 'inside',\n    // An interpolation function for the label value\n    labelInterpolationFnc: Chartist.noop,\n    // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.\n    labelDirection: 'neutral',\n    // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.\n    reverseData: false,\n    // If true empty values will be ignored to avoid drawing unncessary slices and labels\n    ignoreEmptyValues: false\n  };\n\n  /**\n   * Determines SVG anchor position based on direction and center parameter\n   *\n   * @param center\n   * @param label\n   * @param direction\n   * @return {string}\n   */\n  function determineAnchorPosition(center, label, direction) {\n    var toTheRight = label.x > center.x;\n\n    if(toTheRight && direction === 'explode' ||\n      !toTheRight && direction === 'implode') {\n      return 'start';\n    } else if(toTheRight && direction === 'implode' ||\n      !toTheRight && direction === 'explode') {\n      return 'end';\n    } else {\n      return 'middle';\n    }\n  }\n\n  /**\n   * Creates the pie chart\n   *\n   * @param options\n   */\n  function createChart(options) {\n    var data = Chartist.normalizeData(this.data);\n    var seriesGroups = [],\n      labelsGroup,\n      chartRect,\n      radius,\n      labelRadius,\n      totalDataSum,\n      startAngle = options.startAngle;\n\n    // Create SVG.js draw\n    this.svg = Chartist.createSvg(this.container, options.width, options.height,options.donut ? options.classNames.chartDonut : options.classNames.chartPie);\n    // Calculate charting rect\n    chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);\n    // Get biggest circle radius possible within chartRect\n    radius = Math.min(chartRect.width() / 2, chartRect.height() / 2);\n    // Calculate total of all series to get reference value or use total reference from optional options\n    totalDataSum = options.total || data.normalized.series.reduce(function(previousValue, currentValue) {\n      return previousValue + currentValue;\n    }, 0);\n\n    var donutWidth = Chartist.quantity(options.donutWidth);\n    if (donutWidth.unit === '%') {\n      donutWidth.value *= radius / 100;\n    }\n\n    // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside\n    // Unfortunately this is not possible with the current SVG Spec\n    // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html\n    radius -= options.donut && !options.donutSolid ? donutWidth.value / 2  : 0;\n\n    // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,\n    // if regular pie chart it's half of the radius\n    if(options.labelPosition === 'outside' || options.donut && !options.donutSolid) {\n      labelRadius = radius;\n    } else if(options.labelPosition === 'center') {\n      // If labelPosition is center we start with 0 and will later wait for the labelOffset\n      labelRadius = 0;\n    } else if(options.donutSolid) {\n      labelRadius = radius - donutWidth.value / 2;\n    } else {\n      // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie\n      // slice\n      labelRadius = radius / 2;\n    }\n    // Add the offset to the labelRadius where a negative offset means closed to the center of the chart\n    labelRadius += options.labelOffset;\n\n    // Calculate end angle based on total sum and current data value and offset with padding\n    var center = {\n      x: chartRect.x1 + chartRect.width() / 2,\n      y: chartRect.y2 + chartRect.height() / 2\n    };\n\n    // Check if there is only one non-zero value in the series array.\n    var hasSingleValInSeries = data.raw.series.filter(function(val) {\n      return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;\n    }).length === 1;\n\n    // Creating the series groups\n    data.raw.series.forEach(function(series, index) {\n      seriesGroups[index] = this.svg.elem('g', null, null);\n    }.bind(this));\n    //if we need to show labels we create the label group now\n    if(options.showLabel) {\n      labelsGroup = this.svg.elem('g', null, null);\n    }\n\n    // Draw the series\n    // initialize series groups\n    data.raw.series.forEach(function(series, index) {\n      // If current value is zero and we are ignoring empty values then skip to next value\n      if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return;\n\n      // If the series is an object and contains a name or meta data we add a custom attribute\n      seriesGroups[index].attr({\n        'ct:series-name': series.name\n      });\n\n      // Use series class from series data or if not set generate one\n      seriesGroups[index].addClass([\n        options.classNames.series,\n        (series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index))\n      ].join(' '));\n\n      // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.\n      var endAngle = (totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0);\n\n      // Use slight offset so there are no transparent hairline issues\n      var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n\n      // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle\n      // with Z and use 359.99 degrees\n      if(endAngle - overlappigStartAngle >= 359.99) {\n        endAngle = overlappigStartAngle + 359.99;\n      }\n\n      var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),\n        end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);\n\n      var innerStart,\n        innerEnd,\n        donutSolidRadius;\n\n      // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke\n      var path = new Chartist.Svg.Path(!options.donut || options.donutSolid)\n        .move(end.x, end.y)\n        .arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y);\n\n      // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie\n      if(!options.donut) {\n        path.line(center.x, center.y);\n      } else if (options.donutSolid) {\n        donutSolidRadius = radius - donutWidth.value;\n        innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));\n        innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);\n        path.line(innerStart.x, innerStart.y);\n        path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle  > 180, 1, innerEnd.x, innerEnd.y);\n      }\n\n      // Create the SVG path\n      // If this is a donut chart we add the donut class, otherwise just a regular slice\n      var pathClassName = options.classNames.slicePie;\n      if (options.donut) {\n        pathClassName = options.classNames.sliceDonut;\n        if (options.donutSolid) {\n          pathClassName = options.classNames.sliceDonutSolid;\n        }\n      }\n      var pathElement = seriesGroups[index].elem('path', {\n        d: path.stringify()\n      }, pathClassName);\n\n      // Adding the pie series value to the path\n      pathElement.attr({\n        'ct:value': data.normalized.series[index],\n        'ct:meta': Chartist.serialize(series.meta)\n      });\n\n      // If this is a donut, we add the stroke-width as style attribute\n      if(options.donut && !options.donutSolid) {\n        pathElement._node.style.strokeWidth = donutWidth.value + 'px';\n      }\n\n      // Fire off draw event\n      this.eventEmitter.emit('draw', {\n        type: 'slice',\n        value: data.normalized.series[index],\n        totalDataSum: totalDataSum,\n        index: index,\n        meta: series.meta,\n        series: series,\n        group: seriesGroups[index],\n        element: pathElement,\n        path: path.clone(),\n        center: center,\n        radius: radius,\n        startAngle: startAngle,\n        endAngle: endAngle\n      });\n\n      // If we need to show labels we need to add the label for this slice now\n      if(options.showLabel) {\n        var labelPosition;\n        if(data.raw.series.length === 1) {\n          // If we have only 1 series, we can position the label in the center of the pie\n          labelPosition = {\n            x: center.x,\n            y: center.y\n          };\n        } else {\n          // Position at the labelRadius distance from center and between start and end angle\n          labelPosition = Chartist.polarToCartesian(\n            center.x,\n            center.y,\n            labelRadius,\n            startAngle + (endAngle - startAngle) / 2\n          );\n        }\n\n        var rawValue;\n        if(data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {\n          rawValue = data.normalized.labels[index];\n        } else {\n          rawValue = data.normalized.series[index];\n        }\n\n        var interpolatedValue = options.labelInterpolationFnc(rawValue, index);\n\n        if(interpolatedValue || interpolatedValue === 0) {\n          var labelElement = labelsGroup.elem('text', {\n            dx: labelPosition.x,\n            dy: labelPosition.y,\n            'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)\n          }, options.classNames.label).text('' + interpolatedValue);\n\n          // Fire off draw event\n          this.eventEmitter.emit('draw', {\n            type: 'label',\n            index: index,\n            group: labelsGroup,\n            element: labelElement,\n            text: '' + interpolatedValue,\n            x: labelPosition.x,\n            y: labelPosition.y\n          });\n        }\n      }\n\n      // Set next startAngle to current endAngle.\n      // (except for last slice)\n      startAngle = endAngle;\n    }.bind(this));\n\n    this.eventEmitter.emit('created', {\n      chartRect: chartRect,\n      svg: this.svg,\n      options: options\n    });\n  }\n\n  /**\n   * This method creates a new pie chart and returns an object that can be used to redraw the chart.\n   *\n   * @memberof Chartist.Pie\n   * @param {String|Node} query A selector query string or directly a DOM element\n   * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.\n   * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.\n   * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]\n   * @return {Object} An object with a version and an update method to manually redraw the chart\n   *\n   * @example\n   * // Simple pie chart example with four series\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * });\n   *\n   * @example\n   * // Drawing a donut chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [10, 2, 4, 3]\n   * }, {\n   *   donut: true\n   * });\n   *\n   * @example\n   * // Using donut, startAngle and total to draw a gauge chart\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   donut: true,\n   *   donutWidth: 20,\n   *   startAngle: 270,\n   *   total: 200\n   * });\n   *\n   * @example\n   * // Drawing a pie chart with padding and labels that are outside the pie\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [20, 10, 30, 40]\n   * }, {\n   *   chartPadding: 30,\n   *   labelOffset: 50,\n   *   labelDirection: 'explode'\n   * });\n   *\n   * @example\n   * // Overriding the class names for individual series as well as a name and meta data.\n   * // The name will be written as ct:series-name attribute and the meta data will be serialized and written\n   * // to a ct:meta attribute.\n   * new Chartist.Pie('.ct-chart', {\n   *   series: [{\n   *     value: 20,\n   *     name: 'Series 1',\n   *     className: 'my-custom-class-one',\n   *     meta: 'Meta One'\n   *   }, {\n   *     value: 10,\n   *     name: 'Series 2',\n   *     className: 'my-custom-class-two',\n   *     meta: 'Meta Two'\n   *   }, {\n   *     value: 70,\n   *     name: 'Series 3',\n   *     className: 'my-custom-class-three',\n   *     meta: 'Meta Three'\n   *   }]\n   * });\n   */\n  function Pie(query, data, options, responsiveOptions) {\n    Chartist.Pie.super.constructor.call(this,\n      query,\n      data,\n      defaultOptions,\n      Chartist.extend({}, defaultOptions, options),\n      responsiveOptions);\n  }\n\n  // Creating pie chart type in Chartist namespace\n  Chartist.Pie = Chartist.Base.extend({\n    constructor: Pie,\n    createChart: createChart,\n    determineAnchorPosition: determineAnchorPosition\n  });\n\n}(this || global, Chartist));\n\nreturn Chartist;\n\n}));\n","import { FormGroup } from '@angular/forms';\r\n\r\n// custom validator to check that two fields match\r\nexport function MustMatch(controlName: string, matchingControlName: string) {\r\n    return (formGroup: FormGroup) => {\r\n        const control = formGroup.controls[controlName];\r\n        const matchingControl = formGroup.controls[matchingControlName];\r\n\r\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\r\n            // return if another validator has already found an error on the matchingControl\r\n            return;\r\n        }\r\n\r\n        // set error on matchingControl if validation fails\r\n        if (control.value !== matchingControl.value) {\r\n            matchingControl.setErrors({ mustMatch: true });\r\n        } else {\r\n            matchingControl.setErrors(null);\r\n        }\r\n    }\r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { DefaultReconnectPolicy } from \"./DefaultReconnectPolicy\";\r\nimport { HttpConnection } from \"./HttpConnection\";\r\nimport { HubConnection } from \"./HubConnection\";\r\nimport { IHttpConnectionOptions } from \"./IHttpConnectionOptions\";\r\nimport { IHubProtocol } from \"./IHubProtocol\";\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\nimport { IRetryPolicy } from \"./IRetryPolicy\";\r\nimport { IStatefulReconnectOptions } from \"./IStatefulReconnectOptions\";\r\nimport { HttpTransportType } from \"./ITransport\";\r\nimport { JsonHubProtocol } from \"./JsonHubProtocol\";\r\nimport { NullLogger } from \"./Loggers\";\r\nimport { Arg, ConsoleLogger } from \"./Utils\";\r\n\r\nconst LogLevelNameMapping: {[k: string]: LogLevel} = {\r\n    trace: LogLevel.Trace,\r\n    debug: LogLevel.Debug,\r\n    info: LogLevel.Information,\r\n    information: LogLevel.Information,\r\n    warn: LogLevel.Warning,\r\n    warning: LogLevel.Warning,\r\n    error: LogLevel.Error,\r\n    critical: LogLevel.Critical,\r\n    none: LogLevel.None,\r\n};\r\n\r\nfunction parseLogLevel(name: string): LogLevel {\r\n    // Case-insensitive matching via lower-casing\r\n    // Yes, I know case-folding is a complicated problem in Unicode, but we only support\r\n    // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.\r\n    const mapping = LogLevelNameMapping[name.toLowerCase()];\r\n    if (typeof mapping !== \"undefined\") {\r\n        return mapping;\r\n    } else {\r\n        throw new Error(`Unknown log level: ${name}`);\r\n    }\r\n}\r\n\r\n/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */\r\nexport class HubConnectionBuilder {\r\n    private _serverTimeoutInMilliseconds?: number;\r\n    private _keepAliveIntervalInMilliseconds ?: number;\r\n\r\n    /** @internal */\r\n    public protocol?: IHubProtocol;\r\n    /** @internal */\r\n    public httpConnectionOptions?: IHttpConnectionOptions;\r\n    /** @internal */\r\n    public url?: string;\r\n    /** @internal */\r\n    public logger?: ILogger;\r\n\r\n    /** If defined, this indicates the client should automatically attempt to reconnect if the connection is lost. */\r\n    /** @internal */\r\n    public reconnectPolicy?: IRetryPolicy;\r\n\r\n    private _statefulReconnectBufferSize?: number;\r\n\r\n    /** Configures console logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel} logLevel The minimum level of messages to log. Anything at this level, or a more severe level, will be logged.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logLevel: LogLevel): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {ILogger} logger An object implementing the {@link @microsoft/signalr.ILogger} interface, which will be used to write all log messages.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logger: ILogger): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {string} logLevel A string representing a LogLevel setting a minimum level of messages to log.\r\n     *    See {@link https://learn.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     */\r\n    public configureLogging(logLevel: string): HubConnectionBuilder;\r\n\r\n    /** Configures custom logging for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @param {LogLevel | string | ILogger} logging A {@link @microsoft/signalr.LogLevel}, a string representing a LogLevel, or an object implementing the {@link @microsoft/signalr.ILogger} interface.\r\n     *    See {@link https://learn.microsoft.com/aspnet/core/signalr/configuration#configure-logging|the documentation for client logging configuration} for more details.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder;\r\n    public configureLogging(logging: LogLevel | string | ILogger): HubConnectionBuilder {\r\n        Arg.isRequired(logging, \"logging\");\r\n\r\n        if (isLogger(logging)) {\r\n            this.logger = logging;\r\n        } else if (typeof logging === \"string\") {\r\n            const logLevel = parseLogLevel(logging);\r\n            this.logger = new ConsoleLogger(logLevel);\r\n        } else {\r\n            this.logger = new ConsoleLogger(logging);\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * The transport will be selected automatically based on what the server and client support.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified HTTP-based transport to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {HttpTransportType} transportType The specific transport to use.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, transportType: HttpTransportType): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use HTTP-based transports to connect to the specified URL.\r\n     *\r\n     * @param {string} url The URL the connection will use.\r\n     * @param {IHttpConnectionOptions} options An options object used to configure the connection.\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withUrl(url: string, options: IHttpConnectionOptions): HubConnectionBuilder;\r\n    public withUrl(url: string, transportTypeOrOptions?: IHttpConnectionOptions | HttpTransportType): HubConnectionBuilder {\r\n        Arg.isRequired(url, \"url\");\r\n        Arg.isNotEmpty(url, \"url\");\r\n\r\n        this.url = url;\r\n\r\n        // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed\r\n        // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.\r\n        if (typeof transportTypeOrOptions === \"object\") {\r\n            this.httpConnectionOptions = { ...this.httpConnectionOptions, ...transportTypeOrOptions };\r\n        } else {\r\n            this.httpConnectionOptions = {\r\n                ...this.httpConnectionOptions,\r\n                transport: transportTypeOrOptions,\r\n            };\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.\r\n     *\r\n     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.\r\n     */\r\n    public withHubProtocol(protocol: IHubProtocol): HubConnectionBuilder {\r\n        Arg.isRequired(protocol, \"protocol\");\r\n\r\n        this.protocol = protocol;\r\n        return this;\r\n    }\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     * By default, the client will wait 0, 2, 10 and 30 seconds respectively before trying up to 4 reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {number[]} retryDelays An array containing the delays in milliseconds before trying each reconnect attempt.\r\n     * The length of the array represents how many failed reconnect attempts it takes before the client will stop attempting to reconnect.\r\n     */\r\n    public withAutomaticReconnect(retryDelays: number[]): HubConnectionBuilder;\r\n\r\n    /** Configures the {@link @microsoft/signalr.HubConnection} to automatically attempt to reconnect if the connection is lost.\r\n     *\r\n     * @param {IRetryPolicy} reconnectPolicy An {@link @microsoft/signalR.IRetryPolicy} that controls the timing and number of reconnect attempts.\r\n     */\r\n    public withAutomaticReconnect(reconnectPolicy: IRetryPolicy): HubConnectionBuilder;\r\n    public withAutomaticReconnect(retryDelaysOrReconnectPolicy?: number[] | IRetryPolicy): HubConnectionBuilder {\r\n        if (this.reconnectPolicy) {\r\n            throw new Error(\"A reconnectPolicy has already been set.\");\r\n        }\r\n\r\n        if (!retryDelaysOrReconnectPolicy) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy();\r\n        } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {\r\n            this.reconnectPolicy = new DefaultReconnectPolicy(retryDelaysOrReconnectPolicy);\r\n        } else {\r\n            this.reconnectPolicy = retryDelaysOrReconnectPolicy;\r\n        }\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withServerTimeout(milliseconds: number): HubConnectionBuilder {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n\r\n        this._serverTimeoutInMilliseconds = milliseconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withKeepAliveInterval(milliseconds: number): HubConnectionBuilder {\r\n        Arg.isRequired(milliseconds, \"milliseconds\");\r\n\r\n        this._keepAliveIntervalInMilliseconds = milliseconds;\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Enables and configures options for the Stateful Reconnect feature.\r\n     *\r\n     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.\r\n     */\r\n    public withStatefulReconnect(options?: IStatefulReconnectOptions): HubConnectionBuilder {\r\n        if (this.httpConnectionOptions === undefined) {\r\n            this.httpConnectionOptions = {};\r\n        }\r\n        this.httpConnectionOptions._useStatefulReconnect = true;\r\n\r\n        this._statefulReconnectBufferSize = options?.bufferSize;\r\n\r\n        return this;\r\n    }\r\n\r\n    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.\r\n     *\r\n     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.\r\n     */\r\n    public build(): HubConnection {\r\n        // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one\r\n        // provided to configureLogger\r\n        const httpConnectionOptions = this.httpConnectionOptions || {};\r\n\r\n        // If it's 'null', the user **explicitly** asked for null, don't mess with it.\r\n        if (httpConnectionOptions.logger === undefined) {\r\n            // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.\r\n            httpConnectionOptions.logger = this.logger;\r\n        }\r\n\r\n        // Now create the connection\r\n        if (!this.url) {\r\n            throw new Error(\"The 'HubConnectionBuilder.withUrl' method must be called before building the connection.\");\r\n        }\r\n        const connection = new HttpConnection(this.url, httpConnectionOptions);\r\n\r\n        return HubConnection.create(\r\n            connection,\r\n            this.logger || NullLogger.instance,\r\n            this.protocol || new JsonHubProtocol(),\r\n            this.reconnectPolicy,\r\n            this._serverTimeoutInMilliseconds,\r\n            this._keepAliveIntervalInMilliseconds,\r\n            this._statefulReconnectBufferSize);\r\n    }\r\n}\r\n\r\nfunction isLogger(logger: any): logger is ILogger {\r\n    return logger.log !== undefined;\r\n}\r\n","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { ILogger, LogLevel } from \"./ILogger\";\r\n\r\n/** A logger that does nothing when log messages are sent to it. */\r\nexport class NullLogger implements ILogger {\r\n    /** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */\r\n    public static instance: ILogger = new NullLogger();\r\n\r\n    private constructor() {}\r\n\r\n    /** @inheritDoc */\r\n    // eslint-disable-next-line\r\n    public log(_logLevel: LogLevel, _message: string): void {\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { PrivPagingResult } from 'app/core/models/privPaging';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Visit } from '../models/Visit';\r\nimport { MergeMultiVisit } from '../models/mergeMultiVisit';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VisitService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n\r\n  getVisitList(): Observable<Visit[]> {\r\n\r\n    return this.httpClient.get<Visit[]>(environment.getApiUrl + '/Visits/getall')\r\n  }\r\n  getVisitListByPaging(page: number, pageSize: number): Observable<PrivPagingResult<Visit>> {\r\n\r\n    return this.httpClient.get<PrivPagingResult<Visit>>(environment.getApiUrl + '/Visits/getVisitsByPagingQuery?page='+page+'&pageSize='+pageSize)\r\n  }\r\n  getVisitMergeMultiVisitList(date:string): Observable<MergeMultiVisit[]> {\r\n\r\n    return this.httpClient.get<MergeMultiVisit[]>(environment.getApiUrl + '/Visits/GetVisitsWithMultiVisits'+'?date='+date)\r\n  }\r\n  getVisitById(id: number): Observable<Visit> {\r\n    return this.httpClient.get<Visit>(environment.getApiUrl + '/Visits/getbyid?id='+id)\r\n  }\r\n  getPersonnelVisitList(): Observable<Visit> {\r\n    return this.httpClient.get<Visit>(environment.getApiUrl + '/Visits/getpersonnelvisitlist')\r\n  }\r\n  addVisit(visit: Visit): Observable<any> {\r\n\r\n    return this.httpClient.post(environment.getApiUrl + '/Visits/', visit, { responseType: 'text' });\r\n  }\r\n\r\n  pedestrianEntrance(visit: Visit): Observable<any> {\r\n    return this.httpClient.post(environment.getApiUrl + '/Visits/pedestrianEntrance', visit, { responseType: 'text' });\r\n  }\r\n  vehicleEntrance(visit: Visit): Observable<any> {\r\n    return this.httpClient.post(environment.getApiUrl + '/Visits/vehicleEntrance', visit, { responseType: 'text' });\r\n  }\r\n\r\n  updateVisit(visit: Visit): Observable<any> {\r\n    return this.httpClient.put(environment.getApiUrl + '/Visits/', visit, { responseType: 'text' });\r\n\r\n  }\r\n\r\n  deleteVisit(id: string) {\r\n    return this.httpClient.request('delete', environment.getApiUrl + '/Visits/', { body: { id: id } });\r\n  }\r\n\r\n  rejectVisit(id: string, reasonForRejection: string) {\r\n    const apiUrl = `${environment.getApiUrl}/Visits/rejectvisit`;\r\n    const body = { id, reasonForRejection };\r\n  \r\n    return this.httpClient.put(apiUrl, body, { responseType: 'text' });\r\n  }\r\n  confirmVisit(id: string) {\r\n    return this.httpClient.put(`${environment.getApiUrl}/VisitConfirms/confirmVisit?visitId=` + id, {}, { responseType: 'text' });\r\n}\r\n\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpTransportType, HubConnection, HubConnectionBuilder, LogLevel } from '@microsoft/signalr';\r\nimport { LocalStorageService } from 'app/core/services/local-storage.service';\r\nimport { environment } from 'environments/environment';\r\nimport { MergeMultiVisit } from '../../visit/models/mergeMultiVisit';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SignalRService {\r\n\r\n  hubConnection: HubConnection;\r\n  private isConnected: boolean = false;  \r\n\r\n  constructor(private storageService: LocalStorageService) { }\r\n\r\n  public startConnection(): void {\r\n    if (this.isConnected) {\r\n      return; \r\n    }\r\n\r\n    const token = this.storageService.getToken();\r\n    if (!token) {\r\n      return;\r\n    }\r\n\r\n    // API URL'den SignalR hub URL'sini oluştur\r\n    const hubUrl = environment.getApiUrl.replace('/api/v1', '/d_o10_sig_r');\r\n\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(hubUrl, {\r\n        transport: HttpTransportType.WebSockets,\r\n        accessTokenFactory: () => token,\r\n        skipNegotiation: true\r\n      })\r\n      .configureLogging(environment.production ? LogLevel.Error : LogLevel.Debug)\r\n      .withAutomaticReconnect([0, 2000, 5000, 10000])\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => {\r\n        this.isConnected = true;\r\n        \r\n        // Bağlantı başarılı olduğunda mevcut connection ID'yi logla\r\n      })\r\n      .catch(err => {\r\n        this.isConnected = false;\r\n        \r\n        // Hata detaylarını logla\r\n        if (err.statusCode) {\r\n        }\r\n        if (err.message) {\r\n        }\r\n      });\r\n\r\n    // Bağlantı durumu değişikliklerini dinle\r\n    this.hubConnection.onclose((error) => {\r\n      this.isConnected = false;\r\n    });\r\n\r\n    this.hubConnection.onreconnecting((error) => {\r\n      console.warn('SignalR Reconnecting:', error);\r\n      this.isConnected = false;\r\n    });\r\n\r\n    this.hubConnection.onreconnected((connectionId) => {\r\n      this.isConnected = true;\r\n    });\r\n  }\r\n\r\n  public addVisitAddedListener(callback: (visit: MergeMultiVisit) => void): void {\r\n    if (!this.hubConnection) {\r\n      console.error('Hub connection is not initialized');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      this.hubConnection.on(\"VisitAdded\", (visit: MergeMultiVisit) => {\r\n        callback(visit);\r\n      });\r\n    } catch (error) {\r\n      console.error('Error adding VisitAdded listener:', error);\r\n    }\r\n  }\r\n\r\n  public stopConnection(): void {\r\n    if (this.hubConnection) {\r\n      this.hubConnection.stop()\r\n        .then(() => {\r\n          this.isConnected = false;\r\n        })\r\n        .catch(err => {\r\n          console.error('Error while stopping SignalR:', err);\r\n        });\r\n    }\r\n  }\r\n}\r\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, ElementRef, Inject, InjectionToken, NgZone, Optional} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/**\n * Interface for a a MatInkBar positioner method, defining the positioning and width of the ink\n * bar in a set of tabs.\n */\nexport interface _MatInkBarPositioner {\n  (element: HTMLElement): { left: string, width: string };\n}\n\n/** Injection token for the MatInkBar's Positioner. */\nexport const _MAT_INK_BAR_POSITIONER =\n  new InjectionToken<_MatInkBarPositioner>('MatInkBarPositioner', {\n    providedIn: 'root',\n    factory: _MAT_INK_BAR_POSITIONER_FACTORY\n  });\n\n/**\n * The default positioner function for the MatInkBar.\n * @docs-private\n */\nexport function _MAT_INK_BAR_POSITIONER_FACTORY(): _MatInkBarPositioner {\n  const method = (element: HTMLElement) => ({\n    left: element ? (element.offsetLeft || 0) + 'px' : '0',\n    width: element ? (element.offsetWidth || 0) + 'px' : '0',\n  });\n\n  return method;\n}\n\n/**\n * The ink-bar is used to display and animate the line underneath the current active tab label.\n * @docs-private\n */\n@Directive({\n  selector: 'mat-ink-bar',\n  host: {\n    'class': 'mat-ink-bar',\n    '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n  },\n})\nexport class MatInkBar {\n  constructor(\n    private _elementRef: ElementRef<HTMLElement>,\n    private _ngZone: NgZone,\n    @Inject(_MAT_INK_BAR_POSITIONER) private _inkBarPositioner: _MatInkBarPositioner,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) { }\n\n  /**\n   * Calculates the styles from the provided element in order to align the ink-bar to that element.\n   * Shows the ink bar if previously set as hidden.\n   * @param element\n   */\n  alignToElement(element: HTMLElement) {\n    this.show();\n\n    if (typeof requestAnimationFrame !== 'undefined') {\n      this._ngZone.runOutsideAngular(() => {\n        requestAnimationFrame(() => this._setStyles(element));\n      });\n    } else {\n      this._setStyles(element);\n    }\n  }\n\n  /** Shows the ink bar. */\n  show(): void {\n    this._elementRef.nativeElement.style.visibility = 'visible';\n  }\n\n  /** Hides the ink bar. */\n  hide(): void {\n    this._elementRef.nativeElement.style.visibility = 'hidden';\n  }\n\n  /**\n   * Sets the proper styles to the ink bar element.\n   * @param element\n   */\n  private _setStyles(element: HTMLElement) {\n    const positions = this._inkBarPositioner(element);\n    const inkBar: HTMLElement = this._elementRef.nativeElement;\n\n    inkBar.style.left = positions.left;\n    inkBar.style.width = positions.width;\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken, TemplateRef} from '@angular/core';\n\n/**\n * Injection token that can be used to reference instances of `MatTabContent`. It serves as\n * alternative token to the actual `MatTabContent` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_TAB_CONTENT = new InjectionToken<MatTabContent>('MatTabContent');\n\n/** Decorates the `ng-template` tags and reads out the template from it. */\n@Directive({\n  selector: '[matTabContent]',\n  providers: [{provide: MAT_TAB_CONTENT, useExisting: MatTabContent}],\n})\nexport class MatTabContent {\n  constructor(public template: TemplateRef<any>) { }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directive, InjectionToken} from '@angular/core';\nimport {CdkPortal} from '@angular/cdk/portal';\n\n/**\n * Injection token that can be used to reference instances of `MatTabLabel`. It serves as\n * alternative token to the actual `MatTabLabel` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nexport const MAT_TAB_LABEL = new InjectionToken<MatTabLabel>('MatTabLabel');\n\n/** Used to flag tab labels for use with the portal directive */\n@Directive({\n  selector: '[mat-tab-label], [matTabLabel]',\n  providers: [{provide: MAT_TAB_LABEL, useExisting: MatTabLabel}],\n})\nexport class MatTabLabel extends CdkPortal {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {TemplatePortal} from '@angular/cdk/portal';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  ContentChild,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  SimpleChanges,\n  TemplateRef,\n  ViewChild,\n  ViewContainerRef,\n  ViewEncapsulation,\n  InjectionToken,\n  Inject,\n  Optional,\n} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\nimport {Subject} from 'rxjs';\nimport {MAT_TAB_CONTENT} from './tab-content';\nimport {MAT_TAB_LABEL, MatTabLabel} from './tab-label';\n\n\n// Boilerplate for applying mixins to MatTab.\n/** @docs-private */\nclass MatTabBase {}\nconst _MatTabMixinBase: CanDisableCtor & typeof MatTabBase =\n    mixinDisabled(MatTabBase);\n\n/**\n * Used to provide a tab group to a tab without causing a circular dependency.\n * @docs-private\n */\nexport const MAT_TAB_GROUP = new InjectionToken<any>('MAT_TAB_GROUP');\n\n@Component({\n  selector: 'mat-tab',\n  templateUrl: 'tab.html',\n  inputs: ['disabled'],\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  encapsulation: ViewEncapsulation.None,\n  exportAs: 'matTab',\n})\nexport class MatTab extends _MatTabMixinBase implements OnInit, CanDisable, OnChanges, OnDestroy {\n  /** Content for the tab label given by `<ng-template mat-tab-label>`. */\n  @ContentChild(MAT_TAB_LABEL)\n  get templateLabel(): MatTabLabel { return this._templateLabel; }\n  set templateLabel(value: MatTabLabel) { this._setTemplateLabelInput(value); }\n  protected _templateLabel: MatTabLabel;\n\n  /**\n   * Template provided in the tab content that will be used if present, used to enable lazy-loading\n   */\n  @ContentChild(MAT_TAB_CONTENT, {read: TemplateRef, static: true})\n  _explicitContent: TemplateRef<any>;\n\n  /** Template inside the MatTab view that contains an `<ng-content>`. */\n  @ViewChild(TemplateRef, {static: true}) _implicitContent: TemplateRef<any>;\n\n  /** Plain text label for the tab, used when there is no template label. */\n  @Input('label') textLabel: string = '';\n\n  /** Aria label for the tab. */\n  @Input('aria-label') ariaLabel: string;\n\n  /**\n   * Reference to the element that the tab is labelled by.\n   * Will be cleared if `aria-label` is set at the same time.\n   */\n  @Input('aria-labelledby') ariaLabelledby: string;\n\n  /** Portal that will be the hosted content of the tab */\n  private _contentPortal: TemplatePortal | null = null;\n\n  /** @docs-private */\n  get content(): TemplatePortal | null {\n    return this._contentPortal;\n  }\n\n  /** Emits whenever the internal state of the tab changes. */\n  readonly _stateChanges = new Subject<void>();\n\n  /**\n   * The relatively indexed position where 0 represents the center, negative is left, and positive\n   * represents the right.\n   */\n  position: number | null = null;\n\n  /**\n   * The initial relatively index origin of the tab if it was created and selected after there\n   * was already a selected tab. Provides context of what position the tab should originate from.\n   */\n  origin: number | null = null;\n\n  /**\n   * Whether the tab is currently active.\n   */\n  isActive = false;\n\n  constructor(\n    private _viewContainerRef: ViewContainerRef,\n    /**\n     * @deprecated `_closestTabGroup` parameter to become required.\n     * @breaking-change 10.0.0\n     */\n    @Optional() @Inject(MAT_TAB_GROUP) public _closestTabGroup?: any) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {\n      this._stateChanges.next();\n    }\n  }\n\n  ngOnDestroy(): void {\n    this._stateChanges.complete();\n  }\n\n  ngOnInit(): void {\n    this._contentPortal = new TemplatePortal(\n        this._explicitContent || this._implicitContent, this._viewContainerRef);\n  }\n\n  /**\n   * This has been extracted to a util because of TS 4 and VE.\n   * View Engine doesn't support property rename inheritance.\n   * TS 4.0 doesn't allow properties to override accessors or vice-versa.\n   * @docs-private\n   */\n  protected _setTemplateLabelInput(value: MatTabLabel) {\n    // Only update the templateLabel via query if there is actually\n    // a MatTabLabel found. This works around an issue where a user may have\n    // manually set `templateLabel` during creation mode, which would then get clobbered\n    // by `undefined` when this query resolves.\n    if (value) {\n      this._templateLabel = value;\n    }\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {\n  animate,\n  state,\n  style,\n  transition,\n  trigger,\n  AnimationTriggerMetadata,\n} from '@angular/animations';\n\n/**\n * Animations used by the Material tabs.\n * @docs-private\n */\nexport const matTabsAnimations: {\n  readonly translateTab: AnimationTriggerMetadata;\n} = {\n  /** Animation translates a tab along the X axis. */\n  translateTab: trigger('translateTab', [\n    // Note: transitions to `none` instead of 0, because some browsers might blur the content.\n    state('center, void, left-origin-center, right-origin-center', style({transform: 'none'})),\n\n    // If the tab is either on the left or right, we additionally add a `min-height` of 1px\n    // in order to ensure that the element has a height before its state changes. This is\n    // necessary because Chrome does seem to skip the transition in RTL mode if the element does\n    // not have a static height and is not rendered. See related issue: #9465\n    state('left', style({transform: 'translate3d(-100%, 0, 0)', minHeight: '1px'})),\n    state('right', style({transform: 'translate3d(100%, 0, 0)', minHeight: '1px'})),\n\n    transition('* => left, * => right, left => center, right => center',\n        animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')),\n    transition('void => left-origin-center', [\n      style({transform: 'translate3d(-100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ]),\n    transition('void => right-origin-center', [\n      style({transform: 'translate3d(100%, 0, 0)'}),\n      animate('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')\n    ])\n  ])\n};\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  Component,\n  ChangeDetectorRef,\n  Input,\n  Inject,\n  Output,\n  EventEmitter,\n  OnDestroy,\n  OnInit,\n  ElementRef,\n  Directive,\n  Optional,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  forwardRef,\n  ViewChild,\n} from '@angular/core';\nimport {AnimationEvent} from '@angular/animations';\nimport {TemplatePortal, CdkPortalOutlet, PortalHostDirective} from '@angular/cdk/portal';\nimport {Directionality, Direction} from '@angular/cdk/bidi';\nimport {DOCUMENT} from '@angular/common';\nimport {Subscription, Subject} from 'rxjs';\nimport {matTabsAnimations} from './tabs-animations';\nimport {startWith, distinctUntilChanged} from 'rxjs/operators';\n\n/**\n * These position states are used internally as animation states for the tab body. Setting the\n * position state to left, right, or center will transition the tab body from its current\n * position to its respective state. If there is not current position (void, in the case of a new\n * tab body), then there will be no transition animation to its state.\n *\n * In the case of a new tab body that should immediately be centered with an animating transition,\n * then left-origin-center or right-origin-center can be used, which will use left or right as its\n * psuedo-prior state.\n */\nexport type MatTabBodyPositionState =\n    'left' | 'center' | 'right' | 'left-origin-center' | 'right-origin-center';\n\n/**\n * The origin state is an internally used state that is set on a new tab body indicating if it\n * began to the left or right of the prior selected index. For example, if the selected index was\n * set to 1, and a new tab is created and selected at index 2, then the tab body would have an\n * origin of right because its index was greater than the prior selected index.\n */\nexport type MatTabBodyOriginState = 'left' | 'right';\n\n/**\n * The portal host directive for the contents of the tab.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabBodyHost]'\n})\nexport class MatTabBodyPortal extends CdkPortalOutlet implements OnInit, OnDestroy {\n  /** Subscription to events for when the tab body begins centering. */\n  private _centeringSub = Subscription.EMPTY;\n  /** Subscription to events for when the tab body finishes leaving from center position. */\n  private _leavingSub = Subscription.EMPTY;\n\n  constructor(\n    componentFactoryResolver: ComponentFactoryResolver,\n    viewContainerRef: ViewContainerRef,\n    @Inject(forwardRef(() => MatTabBody)) private _host: MatTabBody,\n    /**\n     * @deprecated `_document` parameter to be made required.\n     * @breaking-change 9.0.0\n     */\n    @Inject(DOCUMENT) _document?: any) {\n    super(componentFactoryResolver, viewContainerRef, _document);\n  }\n\n  /** Set initial visibility or set up subscription for changing visibility. */\n  ngOnInit(): void {\n    super.ngOnInit();\n\n    this._centeringSub = this._host._beforeCentering\n      .pipe(startWith(this._host._isCenterPosition(this._host._position)))\n      .subscribe((isCentering: boolean) => {\n        if (isCentering && !this.hasAttached()) {\n          this.attach(this._host._content);\n        }\n      });\n\n    this._leavingSub = this._host._afterLeavingCenter.subscribe(() => {\n      this.detach();\n    });\n  }\n\n  /** Clean up centering subscription. */\n  ngOnDestroy(): void {\n    super.ngOnDestroy();\n    this._centeringSub.unsubscribe();\n    this._leavingSub.unsubscribe();\n  }\n}\n\n/**\n * Base class with all of the `MatTabBody` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabBodyBase implements OnInit, OnDestroy {\n  /** Current position of the tab-body in the tab-group. Zero means that the tab is visible. */\n  private _positionIndex: number;\n\n  /** Subscription to the directionality change observable. */\n  private _dirChangeSubscription = Subscription.EMPTY;\n\n  /** Tab body position state. Used by the animation trigger for the current state. */\n  _position: MatTabBodyPositionState;\n\n  /** Emits when an animation on the tab is complete. */\n  _translateTabComplete = new Subject<AnimationEvent>();\n\n  /** Event emitted when the tab begins to animate towards the center as the active tab. */\n  @Output() readonly _onCentering: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _beforeCentering: EventEmitter<boolean> = new EventEmitter<boolean>();\n\n  /** Event emitted before the centering of the tab begins. */\n  @Output() readonly _afterLeavingCenter: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab completes its animation towards the center. */\n  @Output() readonly _onCentered: EventEmitter<void> = new EventEmitter<void>(true);\n\n   /** The portal host inside of this container into which the tab body content will be loaded. */\n  abstract _portalHost: PortalHostDirective;\n\n  /** The tab body content to display. */\n  @Input('content') _content: TemplatePortal;\n\n  /** Position that will be used when the tab is immediately becoming visible after creation. */\n  @Input() origin: number | null;\n\n  // Note that the default value will always be overwritten by `MatTabBody`, but we need one\n  // anyway to prevent the animations module from throwing an error if the body is used on its own.\n  /** Duration for the tab's animation. */\n  @Input() animationDuration: string = '500ms';\n\n  /** The shifted index position of the tab body, where zero represents the active center tab. */\n  @Input()\n  set position(position: number) {\n    this._positionIndex = position;\n    this._computePositionAnimationState();\n  }\n\n  constructor(private _elementRef: ElementRef<HTMLElement>,\n              @Optional() private _dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n\n    if (_dir) {\n      this._dirChangeSubscription = _dir.change.subscribe((dir: Direction) => {\n        this._computePositionAnimationState(dir);\n        changeDetectorRef.markForCheck();\n      });\n    }\n\n    // Ensure that we get unique animation events, because the `.done` callback can get\n    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.\n    this._translateTabComplete.pipe(distinctUntilChanged((x, y) => {\n      return x.fromState === y.fromState && x.toState === y.toState;\n    })).subscribe(event => {\n      // If the transition to the center is complete, emit an event.\n      if (this._isCenterPosition(event.toState) && this._isCenterPosition(this._position)) {\n        this._onCentered.emit();\n      }\n\n      if (this._isCenterPosition(event.fromState) && !this._isCenterPosition(this._position)) {\n        this._afterLeavingCenter.emit();\n      }\n    });\n  }\n\n  /**\n   * After initialized, check if the content is centered and has an origin. If so, set the\n   * special position states that transition the tab from the left or right before centering.\n   */\n  ngOnInit() {\n    if (this._position == 'center' && this.origin != null) {\n      this._position = this._computePositionFromOrigin(this.origin);\n    }\n  }\n\n  ngOnDestroy() {\n    this._dirChangeSubscription.unsubscribe();\n    this._translateTabComplete.complete();\n  }\n\n  _onTranslateTabStarted(event: AnimationEvent): void {\n    const isCentering = this._isCenterPosition(event.toState);\n    this._beforeCentering.emit(isCentering);\n    if (isCentering) {\n      this._onCentering.emit(this._elementRef.nativeElement.clientHeight);\n    }\n  }\n\n  /** The text direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Whether the provided position state is considered center, regardless of origin. */\n  _isCenterPosition(position: MatTabBodyPositionState|string): boolean {\n    return position == 'center' ||\n        position == 'left-origin-center' ||\n        position == 'right-origin-center';\n  }\n\n  /** Computes the position state that will be used for the tab-body animation trigger. */\n  private _computePositionAnimationState(dir: Direction = this._getLayoutDirection()) {\n    if (this._positionIndex < 0) {\n      this._position = dir == 'ltr' ? 'left' : 'right';\n    } else if (this._positionIndex > 0) {\n      this._position = dir == 'ltr' ? 'right' : 'left';\n    } else {\n      this._position = 'center';\n    }\n  }\n\n  /**\n   * Computes the position state based on the specified origin position. This is used if the\n   * tab is becoming visible immediately after creation.\n   */\n  private _computePositionFromOrigin(origin: number): MatTabBodyPositionState {\n    const dir = this._getLayoutDirection();\n\n    if ((dir == 'ltr' && origin <= 0) || (dir == 'rtl' && origin > 0)) {\n      return 'left-origin-center';\n    }\n\n    return 'right-origin-center';\n  }\n}\n\n/**\n * Wrapper for the contents of a tab.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-body',\n  templateUrl: 'tab-body.html',\n  styleUrls: ['tab-body.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  animations: [matTabsAnimations.translateTab],\n  host: {\n    'class': 'mat-tab-body',\n  }\n})\nexport class MatTabBody extends _MatTabBodyBase {\n  @ViewChild(PortalHostDirective) _portalHost: PortalHostDirective;\n\n  constructor(elementRef: ElementRef<HTMLElement>,\n              @Optional() dir: Directionality,\n              changeDetectorRef: ChangeDetectorRef) {\n    super(elementRef, dir, changeDetectorRef);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {InjectionToken} from '@angular/core';\n\n/** Object that can be used to configure the default options for the tabs module. */\nexport interface MatTabsConfig {\n  /** Duration for the tab animation. Must be a valid CSS value (e.g. 600ms). */\n  animationDuration?: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  disablePagination?: boolean;\n\n  /**\n   * Whether the ink bar should fit its width to the size of the tab label content.\n   * This only applies to the MDC-based tabs.\n   */\n  fitInkBarToContent?: boolean;\n}\n\n/** Injection token that can be used to provide the default options the tabs module. */\nexport const MAT_TABS_CONFIG = new InjectionToken<MatTabsConfig>('MAT_TABS_CONFIG');\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  BooleanInput,\n  coerceBooleanProperty,\n  coerceNumberProperty,\n  NumberInput\n} from '@angular/cdk/coercion';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  Input,\n  OnDestroy,\n  Optional,\n  Output,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n} from '@angular/core';\nimport {\n  CanColor,\n  CanColorCtor,\n  CanDisableRipple,\n  CanDisableRippleCtor,\n  mixinColor,\n  mixinDisableRipple,\n  ThemePalette,\n} from '@angular/material/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {merge, Subscription} from 'rxjs';\nimport {startWith} from 'rxjs/operators';\nimport {MAT_TAB_GROUP, MatTab} from './tab';\nimport {MAT_TABS_CONFIG, MatTabsConfig} from './tab-config';\n\n\n/** Used to generate unique ID's for each tab component */\nlet nextId = 0;\n\n/** A simple change event emitted on focus or selection changes. */\nexport class MatTabChangeEvent {\n  /** Index of the currently-selected tab. */\n  index: number;\n  /** Reference to the currently-selected tab. */\n  tab: MatTab;\n}\n\n/** Possible positions for the tab header. */\nexport type MatTabHeaderPosition = 'above' | 'below';\n\n// Boilerplate for applying mixins to MatTabGroup.\n/** @docs-private */\nclass MatTabGroupMixinBase {\n  constructor(public _elementRef: ElementRef) {}\n}\nconst _MatTabGroupMixinBase: CanColorCtor & CanDisableRippleCtor & typeof MatTabGroupMixinBase =\n    mixinColor(mixinDisableRipple(MatTabGroupMixinBase), 'primary');\n\ninterface MatTabGroupBaseHeader {\n  _alignInkBarToSelectedTab: () => void;\n  focusIndex: number;\n}\n\n/**\n * Base class with all of the `MatTabGroupBase` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabGroupBase extends _MatTabGroupMixinBase implements AfterContentInit,\n    AfterContentChecked, OnDestroy, CanColor, CanDisableRipple {\n\n  /**\n   * All tabs inside the tab group. This includes tabs that belong to groups that are nested\n   * inside the current one. We filter out only the tabs that belong to this group in `_tabs`.\n   */\n  abstract _allTabs: QueryList<MatTab>;\n  abstract _tabBodyWrapper: ElementRef;\n  abstract _tabHeader: MatTabGroupBaseHeader;\n\n  /** All of the tabs that belong to the group. */\n  _tabs: QueryList<MatTab> = new QueryList<MatTab>();\n\n  /** The tab index that should be selected after the content has been checked. */\n  private _indexToSelect: number | null = 0;\n\n  /** Snapshot of the height of the tab body wrapper before another tab is activated. */\n  private _tabBodyWrapperHeight: number = 0;\n\n  /** Subscription to tabs being added/removed. */\n  private _tabsSubscription = Subscription.EMPTY;\n\n  /** Subscription to changes in the tab labels. */\n  private _tabLabelSubscription = Subscription.EMPTY;\n\n  /** Whether the tab group should grow to the size of the active tab. */\n  @Input()\n  get dynamicHeight(): boolean { return this._dynamicHeight; }\n  set dynamicHeight(value: boolean) { this._dynamicHeight = coerceBooleanProperty(value); }\n  private _dynamicHeight: boolean = false;\n\n  /** The index of the active tab. */\n  @Input()\n  get selectedIndex(): number | null { return this._selectedIndex; }\n  set selectedIndex(value: number | null) {\n    this._indexToSelect = coerceNumberProperty(value, null);\n  }\n  private _selectedIndex: number | null = null;\n\n  /** Position of the tab header. */\n  @Input() headerPosition: MatTabHeaderPosition = 'above';\n\n  /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */\n  @Input()\n  get animationDuration(): string { return this._animationDuration; }\n  set animationDuration(value: string) {\n    this._animationDuration = /^\\d+$/.test(value) ? value + 'ms' : value;\n  }\n  private _animationDuration: string;\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean;\n\n  /** Background color of the tab group. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const nativeElement: HTMLElement = this._elementRef.nativeElement;\n\n    nativeElement.classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      nativeElement.classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Output to enable support for two-way binding on `[(selectedIndex)]` */\n  @Output() readonly selectedIndexChange: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when focus has changed within a tab group. */\n  @Output() readonly focusChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>();\n\n  /** Event emitted when the body animation has completed */\n  @Output() readonly animationDone: EventEmitter<void> = new EventEmitter<void>();\n\n  /** Event emitted when the tab selection has changed. */\n  @Output() readonly selectedTabChange: EventEmitter<MatTabChangeEvent> =\n      new EventEmitter<MatTabChangeEvent>(true);\n\n  private _groupId: number;\n\n  constructor(elementRef: ElementRef,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n    super(elementRef);\n    this._groupId = nextId++;\n    this.animationDuration = defaultConfig && defaultConfig.animationDuration ?\n        defaultConfig.animationDuration : '500ms';\n    this.disablePagination = defaultConfig && defaultConfig.disablePagination != null ?\n        defaultConfig.disablePagination : false;\n  }\n\n  /**\n   * After the content is checked, this component knows what tabs have been defined\n   * and what the selected index should be. This is where we can know exactly what position\n   * each tab should be in according to the new selected index, and additionally we know how\n   * a new selected tab should transition in (from the left or right).\n   */\n  ngAfterContentChecked() {\n    // Don't clamp the `indexToSelect` immediately in the setter because it can happen that\n    // the amount of tabs changes before the actual change detection runs.\n    const indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n    // If there is a change in selected index, emit a change event. Should not trigger if\n    // the selected index has not yet been initialized.\n    if (this._selectedIndex != indexToSelect) {\n      const isFirstRun = this._selectedIndex == null;\n\n      if (!isFirstRun) {\n        this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));\n      }\n\n      // Changing these values after change detection has run\n      // since the checked content may contain references to them.\n      Promise.resolve().then(() => {\n        this._tabs.forEach((tab, index) => tab.isActive = index === indexToSelect);\n\n        if (!isFirstRun) {\n          this.selectedIndexChange.emit(indexToSelect);\n        }\n      });\n    }\n\n    // Setup the position for each tab and optionally setup an origin on the next selected tab.\n    this._tabs.forEach((tab: MatTab, index: number) => {\n      tab.position = index - indexToSelect;\n\n      // If there is already a selected tab, then set up an origin for the next selected tab\n      // if it doesn't have one already.\n      if (this._selectedIndex != null && tab.position == 0 && !tab.origin) {\n        tab.origin = indexToSelect - this._selectedIndex;\n      }\n    });\n\n    if (this._selectedIndex !== indexToSelect) {\n      this._selectedIndex = indexToSelect;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngAfterContentInit() {\n    this._subscribeToAllTabChanges();\n    this._subscribeToTabLabels();\n\n    // Subscribe to changes in the amount of tabs, in order to be\n    // able to re-render the content as new tabs are added or removed.\n    this._tabsSubscription = this._tabs.changes.subscribe(() => {\n      const indexToSelect = this._clampTabIndex(this._indexToSelect);\n\n      // Maintain the previously-selected tab if a new tab is added or removed and there is no\n      // explicit change that selects a different tab.\n      if (indexToSelect === this._selectedIndex) {\n        const tabs = this._tabs.toArray();\n\n        for (let i = 0; i < tabs.length; i++) {\n          if (tabs[i].isActive) {\n            // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed\n            // event, otherwise the consumer may end up in an infinite loop in some edge cases like\n            // adding a tab within the `selectedIndexChange` event.\n            this._indexToSelect = this._selectedIndex = i;\n            break;\n          }\n        }\n      }\n\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n\n  /** Listens to changes in all of the tabs. */\n  private _subscribeToAllTabChanges() {\n    // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching\n    // some that are inside of nested tab groups. We filter them out manually by checking that\n    // the closest group to the tab is the current one.\n    this._allTabs.changes\n      .pipe(startWith(this._allTabs))\n      .subscribe((tabs: QueryList<MatTab>) => {\n        this._tabs.reset(tabs.filter(tab => {\n          // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`\n          // once it becomes a required parameter in MatTab.\n          return !tab._closestTabGroup || tab._closestTabGroup === this;\n        }));\n        this._tabs.notifyOnChanges();\n      });\n  }\n\n  ngOnDestroy() {\n    this._tabs.destroy();\n    this._tabsSubscription.unsubscribe();\n    this._tabLabelSubscription.unsubscribe();\n  }\n\n  /** Re-aligns the ink bar to the selected tab element. */\n  realignInkBar() {\n    if (this._tabHeader) {\n      this._tabHeader._alignInkBarToSelectedTab();\n    }\n  }\n\n  _focusChanged(index: number) {\n    this.focusChange.emit(this._createChangeEvent(index));\n  }\n\n  private _createChangeEvent(index: number): MatTabChangeEvent {\n    const event = new MatTabChangeEvent;\n    event.index = index;\n    if (this._tabs && this._tabs.length) {\n      event.tab = this._tabs.toArray()[index];\n    }\n    return event;\n  }\n\n  /**\n   * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is\n   * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the\n   * binding to be updated, we need to subscribe to changes in it and trigger change detection\n   * manually.\n   */\n  private _subscribeToTabLabels() {\n    if (this._tabLabelSubscription) {\n      this._tabLabelSubscription.unsubscribe();\n    }\n\n    this._tabLabelSubscription = merge(...this._tabs.map(tab => tab._stateChanges))\n      .subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n\n  /** Clamps the given index to the bounds of 0 and the tabs length. */\n  private _clampTabIndex(index: number | null): number {\n    // Note the `|| 0`, which ensures that values like NaN can't get through\n    // and which would otherwise throw the component into an infinite loop\n    // (since Math.max(NaN, 0) === NaN).\n    return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));\n  }\n\n  /** Returns a unique id for each tab label element */\n  _getTabLabelId(i: number): string {\n    return `mat-tab-label-${this._groupId}-${i}`;\n  }\n\n  /** Returns a unique id for each tab content element */\n  _getTabContentId(i: number): string {\n    return `mat-tab-content-${this._groupId}-${i}`;\n  }\n\n  /**\n   * Sets the height of the body wrapper to the height of the activating tab if dynamic\n   * height property is true.\n   */\n  _setTabBodyWrapperHeight(tabHeight: number): void {\n    if (!this._dynamicHeight || !this._tabBodyWrapperHeight) { return; }\n\n    const wrapper: HTMLElement = this._tabBodyWrapper.nativeElement;\n\n    wrapper.style.height = this._tabBodyWrapperHeight + 'px';\n\n    // This conditional forces the browser to paint the height so that\n    // the animation to the new height can have an origin.\n    if (this._tabBodyWrapper.nativeElement.offsetHeight) {\n      wrapper.style.height = tabHeight + 'px';\n    }\n  }\n\n  /** Removes the height of the tab body wrapper. */\n  _removeTabBodyWrapperHeight(): void {\n    const wrapper = this._tabBodyWrapper.nativeElement;\n    this._tabBodyWrapperHeight = wrapper.clientHeight;\n    wrapper.style.height = '';\n    this.animationDone.emit();\n  }\n\n  /** Handle click events, setting new selected index if appropriate. */\n  _handleClick(tab: MatTab, tabHeader: MatTabGroupBaseHeader, index: number) {\n    if (!tab.disabled) {\n      this.selectedIndex = tabHeader.focusIndex = index;\n    }\n  }\n\n  /** Retrieves the tabindex for the tab. */\n  _getTabIndex(tab: MatTab, idx: number): number | null {\n    if (tab.disabled) {\n      return null;\n    }\n    return this.selectedIndex === idx ? 0 : -1;\n  }\n\n  static ngAcceptInputType_dynamicHeight: BooleanInput;\n  static ngAcceptInputType_animationDuration: NumberInput;\n  static ngAcceptInputType_selectedIndex: NumberInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n/**\n * Material design tab-group component. Supports basic tab pairs (label + content) and includes\n * animated ink-bar, keyboard navigation, and screen reader.\n * See: https://material.io/design/components/tabs.html\n */\n@Component({\n  selector: 'mat-tab-group',\n  exportAs: 'matTabGroup',\n  templateUrl: 'tab-group.html',\n  styleUrls: ['tab-group.css'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  inputs: ['color', 'disableRipple'],\n  providers: [{\n    provide: MAT_TAB_GROUP,\n    useExisting: MatTabGroup\n  }],\n  host: {\n    'class': 'mat-tab-group',\n    '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',\n    '[class.mat-tab-group-inverted-header]': 'headerPosition === \"below\"',\n  },\n})\nexport class MatTabGroup extends _MatTabGroupBase {\n  @ContentChildren(MatTab, {descendants: true}) _allTabs: QueryList<MatTab>;\n  @ViewChild('tabBodyWrapper') _tabBodyWrapper: ElementRef;\n  @ViewChild('tabHeader') _tabHeader: MatTabGroupBaseHeader;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              @Inject(MAT_TABS_CONFIG) @Optional() defaultConfig?: MatTabsConfig,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, defaultConfig, animationMode);\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {BooleanInput} from '@angular/cdk/coercion';\nimport {Directive, ElementRef} from '@angular/core';\nimport {CanDisable, CanDisableCtor, mixinDisabled} from '@angular/material/core';\n\n\n// Boilerplate for applying mixins to MatTabLabelWrapper.\n/** @docs-private */\nclass MatTabLabelWrapperBase {}\nconst _MatTabLabelWrapperMixinBase: CanDisableCtor & typeof MatTabLabelWrapperBase =\n    mixinDisabled(MatTabLabelWrapperBase);\n\n/**\n * Used in the `mat-tab-group` view to display tab labels.\n * @docs-private\n */\n@Directive({\n  selector: '[matTabLabelWrapper]',\n  inputs: ['disabled'],\n  host: {\n    '[class.mat-tab-disabled]': 'disabled',\n    '[attr.aria-disabled]': '!!disabled',\n  }\n})\nexport class MatTabLabelWrapper extends _MatTabLabelWrapperMixinBase implements CanDisable {\n  constructor(public elementRef: ElementRef) {\n    super();\n  }\n\n  /** Sets focus on the wrapper element */\n  focus(): void {\n    this.elementRef.nativeElement.focus();\n  }\n\n  getOffsetLeft(): number {\n    return this.elementRef.nativeElement.offsetLeft;\n  }\n\n  getOffsetWidth(): number {\n    return this.elementRef.nativeElement.offsetWidth;\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {\n  ChangeDetectorRef,\n  ElementRef,\n  NgZone,\n  Optional,\n  QueryList,\n  EventEmitter,\n  AfterContentChecked,\n  AfterContentInit,\n  AfterViewInit,\n  OnDestroy,\n  Directive,\n  Inject,\n  Input,\n} from '@angular/core';\nimport {Direction, Directionality} from '@angular/cdk/bidi';\nimport {coerceNumberProperty, NumberInput} from '@angular/cdk/coercion';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {FocusKeyManager, FocusableOption} from '@angular/cdk/a11y';\nimport {ENTER, SPACE, hasModifierKey} from '@angular/cdk/keycodes';\nimport {merge, of as observableOf, Subject, timer, fromEvent} from 'rxjs';\nimport {takeUntil} from 'rxjs/operators';\nimport {Platform, normalizePassiveListenerOptions} from '@angular/cdk/platform';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\n\n\n/** Config used to bind passive event listeners */\nconst passiveEventListenerOptions =\n    normalizePassiveListenerOptions({passive: true}) as EventListenerOptions;\n\n/**\n * The directions that scrolling can go in when the header's tabs exceed the header width. 'After'\n * will scroll the header towards the end of the tabs list and 'before' will scroll towards the\n * beginning of the list.\n */\nexport type ScrollDirection = 'after' | 'before';\n\n/**\n * The distance in pixels that will be overshot when scrolling a tab label into view. This helps\n * provide a small affordance to the label next to it.\n */\nconst EXAGGERATED_OVERSCROLL = 60;\n\n/**\n * Amount of milliseconds to wait before starting to scroll the header automatically.\n * Set a little conservatively in order to handle fake events dispatched on touch devices.\n */\nconst HEADER_SCROLL_DELAY = 650;\n\n/**\n * Interval in milliseconds at which to scroll the header\n * while the user is holding their pointer.\n */\nconst HEADER_SCROLL_INTERVAL = 100;\n\n/** Item inside a paginated tab header. */\nexport type MatPaginatedTabHeaderItem = FocusableOption & {elementRef: ElementRef};\n\n/**\n * Base class for a tab header that supported pagination.\n * @docs-private\n */\n@Directive()\nexport abstract class MatPaginatedTabHeader implements AfterContentChecked, AfterContentInit,\n  AfterViewInit, OnDestroy {\n  abstract _items: QueryList<MatPaginatedTabHeaderItem>;\n  abstract _inkBar: {hide: () => void, alignToElement: (element: HTMLElement) => void};\n  abstract _tabListContainer: ElementRef<HTMLElement>;\n  abstract _tabList: ElementRef<HTMLElement>;\n  abstract _nextPaginator: ElementRef<HTMLElement>;\n  abstract _previousPaginator: ElementRef<HTMLElement>;\n\n  /** The distance in pixels that the tab labels should be translated to the left. */\n  private _scrollDistance = 0;\n\n  /** Whether the header should scroll to the selected index after the view has been checked. */\n  private _selectedIndexChanged = false;\n\n  /** Emits when the component is destroyed. */\n  protected readonly _destroyed = new Subject<void>();\n\n  /** Whether the controls for pagination should be displayed */\n  _showPaginationControls = false;\n\n  /** Whether the tab list can be scrolled more towards the end of the tab label list. */\n  _disableScrollAfter = true;\n\n  /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */\n  _disableScrollBefore = true;\n\n  /**\n   * The number of tab labels that are displayed on the header. When this changes, the header\n   * should re-evaluate the scroll position.\n   */\n  private _tabLabelCount: number;\n\n  /** Whether the scroll distance has changed and should be applied after the view is checked. */\n  private _scrollDistanceChanged: boolean;\n\n  /** Used to manage focus between the tabs. */\n  private _keyManager: FocusKeyManager<MatPaginatedTabHeaderItem>;\n\n  /** Cached text content of the header. */\n  private _currentTextContent: string;\n\n  /** Stream that will stop the automated scrolling. */\n  private _stopScrolling = new Subject<void>();\n\n  /**\n   * Whether pagination should be disabled. This can be used to avoid unnecessary\n   * layout recalculations if it's known that pagination won't be required.\n   */\n  @Input()\n  disablePagination: boolean = false;\n\n  /** The index of the active tab. */\n  get selectedIndex(): number { return this._selectedIndex; }\n  set selectedIndex(value: number) {\n    value = coerceNumberProperty(value);\n\n    if (this._selectedIndex != value) {\n      this._selectedIndexChanged = true;\n      this._selectedIndex = value;\n\n      if (this._keyManager) {\n        this._keyManager.updateActiveItem(value);\n      }\n    }\n  }\n  private _selectedIndex: number = 0;\n\n  /** Event emitted when the option is selected. */\n  readonly selectFocusedIndex: EventEmitter<number> = new EventEmitter<number>();\n\n  /** Event emitted when a label is focused. */\n  readonly indexFocused: EventEmitter<number> = new EventEmitter<number>();\n\n  constructor(protected _elementRef: ElementRef<HTMLElement>,\n              protected _changeDetectorRef: ChangeDetectorRef,\n              private _viewportRuler: ViewportRuler,\n              @Optional() private _dir: Directionality,\n              private _ngZone: NgZone,\n              /**\n               * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`\n               * parameters to become required.\n               */\n              private _platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) public _animationMode?: string) {\n\n    // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.\n    _ngZone.runOutsideAngular(() => {\n      fromEvent(_elementRef.nativeElement, 'mouseleave')\n        .pipe(takeUntil(this._destroyed))\n        .subscribe(() => {\n          this._stopInterval();\n        });\n    });\n  }\n\n  /** Called when the user has selected an item via the keyboard. */\n  protected abstract _itemSelected(event: KeyboardEvent): void;\n\n  ngAfterViewInit() {\n    // We need to handle these events manually, because we want to bind passive event listeners.\n    fromEvent(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('before');\n      });\n\n    fromEvent(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions)\n      .pipe(takeUntil(this._destroyed))\n      .subscribe(() => {\n        this._handlePaginatorPress('after');\n      });\n  }\n\n  ngAfterContentInit() {\n    const dirChange = this._dir ? this._dir.change : observableOf(null);\n    const resize = this._viewportRuler.change(150);\n    const realign = () => {\n      this.updatePagination();\n      this._alignInkBarToSelectedTab();\n    };\n\n    this._keyManager = new FocusKeyManager<MatPaginatedTabHeaderItem>(this._items)\n      .withHorizontalOrientation(this._getLayoutDirection())\n      .withHomeAndEnd()\n      .withWrap();\n\n    this._keyManager.updateActiveItem(this._selectedIndex);\n\n    // Defer the first call in order to allow for slower browsers to lay out the elements.\n    // This helps in cases where the user lands directly on a page with paginated tabs.\n    typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign();\n\n    // On dir change or window resize, realign the ink bar and update the orientation of\n    // the key manager if the direction has changed.\n    merge(dirChange, resize, this._items.changes).pipe(takeUntil(this._destroyed)).subscribe(() => {\n      // We need to defer this to give the browser some time to recalculate the element dimensions.\n      Promise.resolve().then(realign);\n      this._keyManager.withHorizontalOrientation(this._getLayoutDirection());\n    });\n\n    // If there is a change in the focus key manager we need to emit the `indexFocused`\n    // event in order to provide a public event that notifies about focus changes. Also we realign\n    // the tabs container by scrolling the new focused tab into the visible section.\n    this._keyManager.change.pipe(takeUntil(this._destroyed)).subscribe(newFocusIndex => {\n      this.indexFocused.emit(newFocusIndex);\n      this._setTabFocus(newFocusIndex);\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    // If the number of tab labels have changed, check if scrolling should be enabled\n    if (this._tabLabelCount != this._items.length) {\n      this.updatePagination();\n      this._tabLabelCount = this._items.length;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the selected index has changed, scroll to the label and check if the scrolling controls\n    // should be disabled.\n    if (this._selectedIndexChanged) {\n      this._scrollToLabel(this._selectedIndex);\n      this._checkScrollingControls();\n      this._alignInkBarToSelectedTab();\n      this._selectedIndexChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n\n    // If the scroll distance has been changed (tab selected, focused, scroll controls activated),\n    // then translate the header to reflect this.\n    if (this._scrollDistanceChanged) {\n      this._updateTabScrollPosition();\n      this._scrollDistanceChanged = false;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  ngOnDestroy() {\n    this._destroyed.next();\n    this._destroyed.complete();\n    this._stopScrolling.complete();\n  }\n\n  /** Handles keyboard events on the header. */\n  _handleKeydown(event: KeyboardEvent) {\n    // We don't handle any key bindings with a modifier key.\n    if (hasModifierKey(event)) {\n      return;\n    }\n\n    switch (event.keyCode) {\n      case ENTER:\n      case SPACE:\n        if (this.focusIndex !== this.selectedIndex) {\n          this.selectFocusedIndex.emit(this.focusIndex);\n          this._itemSelected(event);\n        }\n        break;\n      default:\n        this._keyManager.onKeydown(event);\n    }\n  }\n\n  /**\n   * Callback for when the MutationObserver detects that the content has changed.\n   */\n  _onContentChanges() {\n    const textContent = this._elementRef.nativeElement.textContent;\n\n    // We need to diff the text content of the header, because the MutationObserver callback\n    // will fire even if the text content didn't change which is inefficient and is prone\n    // to infinite loops if a poorly constructed expression is passed in (see #14249).\n    if (textContent !== this._currentTextContent) {\n      this._currentTextContent = textContent || '';\n\n      // The content observer runs outside the `NgZone` by default, which\n      // means that we need to bring the callback back in ourselves.\n      this._ngZone.run(() => {\n        this.updatePagination();\n        this._alignInkBarToSelectedTab();\n        this._changeDetectorRef.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * Updates the view whether pagination should be enabled or not.\n   *\n   * WARNING: Calling this method can be very costly in terms of performance. It should be called\n   * as infrequently as possible from outside of the Tabs component as it causes a reflow of the\n   * page.\n   */\n  updatePagination() {\n    this._checkPaginationEnabled();\n    this._checkScrollingControls();\n    this._updateTabScrollPosition();\n  }\n\n  /** Tracks which element has focus; used for keyboard navigation */\n  get focusIndex(): number {\n    return this._keyManager ? this._keyManager.activeItemIndex! : 0;\n  }\n\n  /** When the focus index is set, we must manually send focus to the correct label */\n  set focusIndex(value: number) {\n    if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {\n      return;\n    }\n\n    this._keyManager.setActiveItem(value);\n  }\n\n  /**\n   * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is\n   * providing a valid index and return true.\n   */\n  _isValidIndex(index: number): boolean {\n    if (!this._items) { return true; }\n\n    const tab = this._items ? this._items.toArray()[index] : null;\n    return !!tab && !tab.disabled;\n  }\n\n  /**\n   * Sets focus on the HTML element for the label wrapper and scrolls it into the view if\n   * scrolling is enabled.\n   */\n  _setTabFocus(tabIndex: number) {\n    if (this._showPaginationControls) {\n      this._scrollToLabel(tabIndex);\n    }\n\n    if (this._items && this._items.length) {\n      this._items.toArray()[tabIndex].focus();\n\n      // Do not let the browser manage scrolling to focus the element, this will be handled\n      // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width\n      // should be the full width minus the offset width.\n      const containerEl = this._tabListContainer.nativeElement;\n      const dir = this._getLayoutDirection();\n\n      if (dir == 'ltr') {\n        containerEl.scrollLeft = 0;\n      } else {\n        containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;\n      }\n    }\n  }\n\n  /** The layout direction of the containing app. */\n  _getLayoutDirection(): Direction {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n\n  /** Performs the CSS transformation on the tab list that will cause the list to scroll. */\n  _updateTabScrollPosition() {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const scrollDistance = this.scrollDistance;\n    const platform = this._platform;\n    const translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance;\n\n    // Don't use `translate3d` here because we don't want to create a new layer. A new layer\n    // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar\n    // and ripples will exceed the boundaries of the visible tab bar.\n    // See: https://github.com/angular/components/issues/10276\n    // We round the `transform` here, because transforms with sub-pixel precision cause some\n    // browsers to blur the content of the element.\n    this._tabList.nativeElement.style.transform = `translateX(${Math.round(translateX)}px)`;\n\n    // Setting the `transform` on IE will change the scroll offset of the parent, causing the\n    // position to be thrown off in some cases. We have to reset it ourselves to ensure that\n    // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing\n    // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).\n    // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.\n    if (platform && (platform.TRIDENT || platform.EDGE)) {\n      this._tabListContainer.nativeElement.scrollLeft = 0;\n    }\n  }\n\n  /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */\n  get scrollDistance(): number { return this._scrollDistance; }\n  set scrollDistance(value: number) {\n    this._scrollTo(value);\n  }\n\n  /**\n   * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or\n   * the end of the list, respectively). The distance to scroll is computed to be a third of the\n   * length of the tab list view window.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollHeader(direction: ScrollDirection) {\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n\n    // Move the scroll distance one-third the length of the tab list's viewport.\n    const scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;\n\n    return this._scrollTo(this._scrollDistance + scrollAmount);\n  }\n\n  /** Handles click events on the pagination arrows. */\n  _handlePaginatorClick(direction: ScrollDirection) {\n    this._stopInterval();\n    this._scrollHeader(direction);\n  }\n\n  /**\n   * Moves the tab list such that the desired tab label (marked by index) is moved into view.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _scrollToLabel(labelIndex: number) {\n    if (this.disablePagination) {\n      return;\n    }\n\n    const selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;\n\n    if (!selectedLabel) {\n      return;\n    }\n\n    // The view length is the visible width of the tab labels.\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    const {offsetLeft, offsetWidth} = selectedLabel.elementRef.nativeElement;\n\n    let labelBeforePos: number, labelAfterPos: number;\n    if (this._getLayoutDirection() == 'ltr') {\n      labelBeforePos = offsetLeft;\n      labelAfterPos = labelBeforePos + offsetWidth;\n    } else {\n      labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;\n      labelBeforePos = labelAfterPos - offsetWidth;\n    }\n\n    const beforeVisiblePos = this.scrollDistance;\n    const afterVisiblePos = this.scrollDistance + viewLength;\n\n    if (labelBeforePos < beforeVisiblePos) {\n      // Scroll header to move label to the before direction\n      this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;\n    } else if (labelAfterPos > afterVisiblePos) {\n      // Scroll header to move label to the after direction\n      this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;\n    }\n  }\n\n  /**\n   * Evaluate whether the pagination controls should be displayed. If the scroll width of the\n   * tab list is wider than the size of the header container, then the pagination controls should\n   * be shown.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkPaginationEnabled() {\n    if (this.disablePagination) {\n      this._showPaginationControls = false;\n    } else {\n      const isEnabled =\n          this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;\n\n      if (!isEnabled) {\n        this.scrollDistance = 0;\n      }\n\n      if (isEnabled !== this._showPaginationControls) {\n        this._changeDetectorRef.markForCheck();\n      }\n\n      this._showPaginationControls = isEnabled;\n    }\n  }\n\n  /**\n   * Evaluate whether the before and after controls should be enabled or disabled.\n   * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the\n   * before button. If the header is at the end of the list (scroll distance is equal to the\n   * maximum distance we can scroll), then disable the after button.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _checkScrollingControls() {\n    if (this.disablePagination) {\n      this._disableScrollAfter = this._disableScrollBefore = true;\n    } else {\n      // Check if the pagination arrows should be activated.\n      this._disableScrollBefore = this.scrollDistance == 0;\n      this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n\n  /**\n   * Determines what is the maximum length in pixels that can be set for the scroll distance. This\n   * is equal to the difference in width between the tab list container and tab header container.\n   *\n   * This is an expensive call that forces a layout reflow to compute box and scroll metrics and\n   * should be called sparingly.\n   */\n  _getMaxScrollDistance(): number {\n    const lengthOfTabList = this._tabList.nativeElement.scrollWidth;\n    const viewLength = this._tabListContainer.nativeElement.offsetWidth;\n    return (lengthOfTabList - viewLength) || 0;\n  }\n\n  /** Tells the ink-bar to align itself to the current label wrapper */\n  _alignInkBarToSelectedTab(): void {\n    const selectedItem = this._items && this._items.length ?\n        this._items.toArray()[this.selectedIndex] : null;\n    const selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;\n\n    if (selectedLabelWrapper) {\n      this._inkBar.alignToElement(selectedLabelWrapper);\n    } else {\n      this._inkBar.hide();\n    }\n  }\n\n  /** Stops the currently-running paginator interval.  */\n  _stopInterval() {\n    this._stopScrolling.next();\n  }\n\n  /**\n   * Handles the user pressing down on one of the paginators.\n   * Starts scrolling the header after a certain amount of time.\n   * @param direction In which direction the paginator should be scrolled.\n   */\n  _handlePaginatorPress(direction: ScrollDirection, mouseEvent?: MouseEvent) {\n    // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to\n    // null check the `button`, but we do it so we don't break tests that use fake events.\n    if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {\n      return;\n    }\n\n    // Avoid overlapping timers.\n    this._stopInterval();\n\n    // Start a timer after the delay and keep firing based on the interval.\n    timer(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL)\n      // Keep the timer going until something tells it to stop or the component is destroyed.\n      .pipe(takeUntil(merge(this._stopScrolling, this._destroyed)))\n      .subscribe(() => {\n        const {maxScrollDistance, distance} = this._scrollHeader(direction);\n\n        // Stop the timer if we've reached the start or the end.\n        if (distance === 0 || distance >= maxScrollDistance) {\n          this._stopInterval();\n        }\n      });\n  }\n\n  /**\n   * Scrolls the header to a given position.\n   * @param position Position to which to scroll.\n   * @returns Information on the current scroll distance and the maximum.\n   */\n  private _scrollTo(position: number) {\n    if (this.disablePagination) {\n      return {maxScrollDistance: 0, distance: 0};\n    }\n\n    const maxScrollDistance = this._getMaxScrollDistance();\n    this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position));\n\n    // Mark that the scroll distance has changed so that after the view is checked, the CSS\n    // transformation can move the header.\n    this._scrollDistanceChanged = true;\n    this._checkScrollingControls();\n\n    return {maxScrollDistance, distance: this._scrollDistance};\n  }\n\n  static ngAcceptInputType_selectedIndex: NumberInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {Directionality} from '@angular/cdk/bidi';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  ElementRef,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n  Input,\n  Inject,\n  Directive,\n} from '@angular/core';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {BooleanInput, coerceBooleanProperty} from '@angular/cdk/coercion';\nimport {MatInkBar} from './ink-bar';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {Platform} from '@angular/cdk/platform';\nimport {MatPaginatedTabHeader} from './paginated-tab-header';\n\n/**\n * Base class with all of the `MatTabHeader` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabHeaderBase extends MatPaginatedTabHeader implements\n  AfterContentChecked, AfterContentInit, AfterViewInit, OnDestroy {\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected(event: KeyboardEvent) {\n    event.preventDefault();\n  }\n}\n\n/**\n * The header of the tab group which displays a list of all the tabs in the tab group. Includes\n * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the\n * width of the header container, then arrows will be displayed to allow the user to scroll\n * left and right across the header.\n * @docs-private\n */\n@Component({\n  selector: 'mat-tab-header',\n  templateUrl: 'tab-header.html',\n  styleUrls: ['tab-header.css'],\n  inputs: ['selectedIndex'],\n  outputs: ['selectFocusedIndex', 'indexFocused'],\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n  host: {\n    'class': 'mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n  },\n})\nexport class MatTabHeader extends _MatTabHeaderBase {\n  @ContentChildren(MatTabLabelWrapper, {descendants: false}) _items: QueryList<MatTabLabelWrapper>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              platform: Platform,\n              // @breaking-change 9.0.0 `_animationMode` parameter to be made required.\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {Directionality} from '@angular/cdk/bidi';\nimport {Platform} from '@angular/cdk/platform';\nimport {ViewportRuler} from '@angular/cdk/scrolling';\nimport {\n  AfterContentChecked,\n  AfterContentInit,\n  Attribute,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ContentChildren,\n  Directive,\n  ElementRef,\n  forwardRef,\n  Inject,\n  Input,\n  NgZone,\n  OnDestroy,\n  Optional,\n  QueryList,\n  ViewChild,\n  ViewEncapsulation,\n  AfterViewInit,\n} from '@angular/core';\nimport {\n  CanDisable, CanDisableCtor,\n  CanDisableRipple, CanDisableRippleCtor,\n  HasTabIndex, HasTabIndexCtor,\n  MAT_RIPPLE_GLOBAL_OPTIONS,\n  mixinDisabled,\n  mixinDisableRipple,\n  mixinTabIndex, RippleConfig,\n  RippleGlobalOptions,\n  RippleRenderer,\n  RippleTarget,\n  ThemePalette,\n} from '@angular/material/core';\nimport {BooleanInput, coerceBooleanProperty, NumberInput} from '@angular/cdk/coercion';\nimport {FocusMonitor, FocusableOption} from '@angular/cdk/a11y';\nimport {ANIMATION_MODULE_TYPE} from '@angular/platform-browser/animations';\nimport {MatInkBar} from '../ink-bar';\nimport {MatPaginatedTabHeader, MatPaginatedTabHeaderItem} from '../paginated-tab-header';\nimport {startWith, takeUntil} from 'rxjs/operators';\n\n/**\n * Base class with all of the `MatTabNav` functionality.\n * @docs-private\n */\n@Directive()\nexport abstract class _MatTabNavBase extends MatPaginatedTabHeader implements AfterContentChecked,\n  AfterContentInit, OnDestroy {\n\n  /** Query list of all tab links of the tab navigation. */\n  abstract _items: QueryList<MatPaginatedTabHeaderItem & {active: boolean}>;\n\n  /** Background color of the tab nav. */\n  @Input()\n  get backgroundColor(): ThemePalette { return this._backgroundColor; }\n  set backgroundColor(value: ThemePalette) {\n    const classList = this._elementRef.nativeElement.classList;\n    classList.remove(`mat-background-${this.backgroundColor}`);\n\n    if (value) {\n      classList.add(`mat-background-${value}`);\n    }\n\n    this._backgroundColor = value;\n  }\n  private _backgroundColor: ThemePalette;\n\n  /** Whether the ripple effect is disabled or not. */\n  @Input()\n  get disableRipple() { return this._disableRipple; }\n  set disableRipple(value: any) { this._disableRipple = coerceBooleanProperty(value); }\n  private _disableRipple: boolean = false;\n\n  /** Theme color of the nav bar. */\n  @Input() color: ThemePalette = 'primary';\n\n  constructor(elementRef: ElementRef,\n              @Optional() dir: Directionality,\n              ngZone: NgZone,\n              changeDetectorRef: ChangeDetectorRef,\n              viewportRuler: ViewportRuler,\n              /**\n               * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n               */\n              platform?: Platform,\n              @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);\n  }\n\n  protected _itemSelected() {\n    // noop\n  }\n\n  ngAfterContentInit() {\n    // We need this to run before the `changes` subscription in parent to ensure that the\n    // selectedIndex is up-to-date by the time the super class starts looking for it.\n    this._items.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      this.updateActiveLink();\n    });\n\n    super.ngAfterContentInit();\n  }\n\n  /**\n   * Notifies the component that the active link has been changed.\n   * @breaking-change 8.0.0 `element` parameter to be removed.\n   */\n  updateActiveLink(_element?: ElementRef) {\n    if (!this._items) {\n      return;\n    }\n\n    const items = this._items.toArray();\n\n    for (let i = 0; i < items.length; i++) {\n      if (items[i].active) {\n        this.selectedIndex = i;\n        this._changeDetectorRef.markForCheck();\n        return;\n      }\n    }\n\n    // The ink bar should hide itself if no items are active.\n    this.selectedIndex = -1;\n    this._inkBar.hide();\n  }\n}\n\n\n/**\n * Navigation component matching the styles of the tab group header.\n * Provides anchored navigation with animated ink bar.\n */\n@Component({\n  selector: '[mat-tab-nav-bar]',\n  exportAs: 'matTabNavBar, matTabNav',\n  inputs: ['color'],\n  templateUrl: 'tab-nav-bar.html',\n  styleUrls: ['tab-nav-bar.css'],\n  host: {\n    'class': 'mat-tab-nav-bar mat-tab-header',\n    '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',\n    '[class.mat-tab-header-rtl]': \"_getLayoutDirection() == 'rtl'\",\n    '[class.mat-primary]': 'color !== \"warn\" && color !== \"accent\"',\n    '[class.mat-accent]': 'color === \"accent\"',\n    '[class.mat-warn]': 'color === \"warn\"',\n  },\n  encapsulation: ViewEncapsulation.None,\n  // tslint:disable-next-line:validate-decorators\n  changeDetection: ChangeDetectionStrategy.Default,\n})\nexport class MatTabNav extends _MatTabNavBase {\n  @ContentChildren(forwardRef(() => MatTabLink), {descendants: true}) _items: QueryList<MatTabLink>;\n  @ViewChild(MatInkBar, {static: true}) _inkBar: MatInkBar;\n  @ViewChild('tabListContainer', {static: true}) _tabListContainer: ElementRef;\n  @ViewChild('tabList', {static: true}) _tabList: ElementRef;\n  @ViewChild('nextPaginator') _nextPaginator: ElementRef<HTMLElement>;\n  @ViewChild('previousPaginator') _previousPaginator: ElementRef<HTMLElement>;\n\n  constructor(elementRef: ElementRef,\n    @Optional() dir: Directionality,\n    ngZone: NgZone,\n    changeDetectorRef: ChangeDetectorRef,\n    viewportRuler: ViewportRuler,\n    /**\n     * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.\n     */\n    platform?: Platform,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);\n  }\n\n  static ngAcceptInputType_disableRipple: BooleanInput;\n}\n\n// Boilerplate for applying mixins to MatTabLink.\nclass MatTabLinkMixinBase {}\nconst _MatTabLinkMixinBase:\n    HasTabIndexCtor & CanDisableRippleCtor & CanDisableCtor & typeof MatTabLinkMixinBase =\n        mixinTabIndex(mixinDisableRipple(mixinDisabled(MatTabLinkMixinBase)));\n\n/** Base class with all of the `MatTabLink` functionality. */\n@Directive()\nexport class _MatTabLinkBase extends _MatTabLinkMixinBase implements AfterViewInit, OnDestroy,\n  CanDisable, CanDisableRipple, HasTabIndex, RippleTarget, FocusableOption {\n\n  /** Whether the tab link is active or not. */\n  protected _isActive: boolean = false;\n\n  /** Whether the link is active. */\n  @Input()\n  get active(): boolean { return this._isActive; }\n  set active(value: boolean) {\n    if (value !== this._isActive) {\n      this._isActive = value;\n      this._tabNavBar.updateActiveLink(this.elementRef);\n    }\n  }\n\n  /**\n   * Ripple configuration for ripples that are launched on pointer down. The ripple config\n   * is set to the global ripple options since we don't have any configurable options for\n   * the tab link ripples.\n   * @docs-private\n   */\n  rippleConfig: RippleConfig & RippleGlobalOptions;\n\n  /**\n   * Whether ripples are disabled on interaction.\n   * @docs-private\n   */\n  get rippleDisabled(): boolean {\n    return this.disabled || this.disableRipple || this._tabNavBar.disableRipple ||\n      !!this.rippleConfig.disabled;\n  }\n\n  constructor(\n      private _tabNavBar: _MatTabNavBase, public elementRef: ElementRef,\n      @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n      @Attribute('tabindex') tabIndex: string, private _focusMonitor: FocusMonitor,\n      @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super();\n\n    this.rippleConfig = globalRippleOptions || {};\n    this.tabIndex = parseInt(tabIndex) || 0;\n\n    if (animationMode === 'NoopAnimations') {\n      this.rippleConfig.animation = {enterDuration: 0, exitDuration: 0};\n    }\n  }\n\n  focus() {\n    this.elementRef.nativeElement.focus();\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.monitor(this.elementRef);\n  }\n\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this.elementRef);\n  }\n\n  static ngAcceptInputType_disabled: BooleanInput;\n  static ngAcceptInputType_disableRipple: BooleanInput;\n  static ngAcceptInputType_tabIndex: NumberInput;\n}\n\n\n/**\n * Link inside of a `mat-tab-nav-bar`.\n */\n@Directive({\n  selector: '[mat-tab-link], [matTabLink]',\n  exportAs: 'matTabLink',\n  inputs: ['disabled', 'disableRipple', 'tabIndex'],\n  host: {\n    'class': 'mat-tab-link mat-focus-indicator',\n    '[attr.aria-current]': 'active ? \"page\" : null',\n    '[attr.aria-disabled]': 'disabled',\n    '[attr.tabIndex]': 'tabIndex',\n    '[class.mat-tab-disabled]': 'disabled',\n    '[class.mat-tab-label-active]': 'active',\n  }\n})\nexport class MatTabLink extends _MatTabLinkBase implements OnDestroy {\n  /** Reference to the RippleRenderer for the tab-link. */\n  private _tabLinkRipple: RippleRenderer;\n\n  constructor(\n    tabNavBar: MatTabNav, elementRef: ElementRef, ngZone: NgZone,\n    platform: Platform,\n    @Optional() @Inject(MAT_RIPPLE_GLOBAL_OPTIONS) globalRippleOptions: RippleGlobalOptions|null,\n    @Attribute('tabindex') tabIndex: string, focusMonitor: FocusMonitor,\n    @Optional() @Inject(ANIMATION_MODULE_TYPE) animationMode?: string) {\n    super(tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);\n    this._tabLinkRipple = new RippleRenderer(this, ngZone, elementRef, platform);\n    this._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this._tabLinkRipple._removeTriggerEvents();\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ObserversModule} from '@angular/cdk/observers';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {CommonModule} from '@angular/common';\nimport {NgModule} from '@angular/core';\nimport {MatCommonModule, MatRippleModule} from '@angular/material/core';\nimport {MatInkBar} from './ink-bar';\nimport {MatTab} from './tab';\nimport {MatTabBody, MatTabBodyPortal} from './tab-body';\nimport {MatTabContent} from './tab-content';\nimport {MatTabGroup} from './tab-group';\nimport {MatTabHeader} from './tab-header';\nimport {MatTabLabel} from './tab-label';\nimport {MatTabLabelWrapper} from './tab-label-wrapper';\nimport {MatTabLink, MatTabNav} from './tab-nav-bar/tab-nav-bar';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatCommonModule,\n    PortalModule,\n    MatRippleModule,\n    ObserversModule,\n    A11yModule,\n  ],\n  // Don't export all components because some are only to be used internally.\n  exports: [\n    MatCommonModule,\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatTabNav,\n    MatTabLink,\n    MatTabContent,\n  ],\n  declarations: [\n    MatTabGroup,\n    MatTabLabel,\n    MatTab,\n    MatInkBar,\n    MatTabLabelWrapper,\n    MatTabNav,\n    MatTabLink,\n    MatTabBody,\n    MatTabBodyPortal,\n    MatTabHeader,\n    MatTabContent,\n  ],\n})\nexport class MatTabsModule {}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport * from './tab-nav-bar';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport {MatTabsModule} from './tabs-module';\nexport * from './tab-group';\nexport {MatInkBar, _MatInkBarPositioner, _MAT_INK_BAR_POSITIONER} from './ink-bar';\nexport {\n  MatTabBody,\n  _MatTabBodyBase,\n  MatTabBodyOriginState,\n  MatTabBodyPositionState,\n  MatTabBodyPortal\n} from './tab-body';\nexport {MatTabHeader, _MatTabHeaderBase} from './tab-header';\nexport {MatTabLabelWrapper} from './tab-label-wrapper';\nexport {MatTab, MAT_TAB_GROUP} from './tab';\nexport {MatTabLabel} from './tab-label';\nexport {MatTabNav, MatTabLink, _MatTabNavBase, _MatTabLinkBase} from './tab-nav-bar/index';\nexport {MatTabContent} from './tab-content';\nexport {ScrollDirection} from './paginated-tab-header';\nexport * from './tabs-animations';\nexport {MAT_TABS_CONFIG, MatTabsConfig} from './tab-config';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {_MAT_INK_BAR_POSITIONER_FACTORY as Éµangular_material_src_material_tabs_tabs_a} from './ink-bar';\nexport {MatPaginatedTabHeader as Éµangular_material_src_material_tabs_tabs_d} from './paginated-tab-header';\nexport {MAT_TAB_CONTENT as Éµangular_material_src_material_tabs_tabs_c} from './tab-content';\nexport {MAT_TAB_LABEL as Éµangular_material_src_material_tabs_tabs_b} from './tab-label';","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpEntityRepositoryService } from 'app/core/services/http-entity-repository.service';\r\nimport { environment } from 'environments/environment';\r\nimport { Observable } from 'rxjs';\r\nimport { Language } from '../models/language';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LanguageService {\r\n\r\n  constructor(private service: HttpEntityRepositoryService<any>,\r\n    private readonly _httpClient: HttpClient) { }\r\n\r\n  getLanguageList(): Observable<Language[]> {\r\n    return this._httpClient.get<Language[]>(environment.getApiUrl +'/languages/');\r\n  }\r\n\r\n  getLanguage(id: number): Observable<Language> {\r\n    return this._httpClient.get<Language>(environment.getApiUrl +`/languages/${id}`);\r\n  }\r\n\r\n  addLanguage(language: Language): Observable<any> {\r\n    return this._httpClient.post(environment.getApiUrl +\"/languages/\", language, { responseType: 'text' });\r\n  }\r\n\r\n  updateLanguage(language: Language): Observable<any> {\r\n    return this._httpClient.put(environment.getApiUrl +\"/languages/\", language, { responseType: 'text' });\r\n  }\r\n\r\n  deleteLanguage(id: number) {\r\n    return this._httpClient.delete(environment.getApiUrl +`/languages/${id}`);\r\n  }\r\n}","// Licensed to the .NET Foundation under one or more agreements.\r\n// The .NET Foundation licenses this file to you under the MIT license.\r\n\r\nimport { IStreamResult, IStreamSubscriber, ISubscription } from \"./Stream\";\r\nimport { SubjectSubscription } from \"./Utils\";\r\n\r\n/** Stream implementation to stream items to the server. */\r\nexport class Subject<T> implements IStreamResult<T> {\r\n    /** @internal */\r\n    public observers: IStreamSubscriber<T>[];\r\n\r\n    /** @internal */\r\n    public cancelCallback?: () => Promise<void>;\r\n\r\n    constructor() {\r\n        this.observers = [];\r\n    }\r\n\r\n    public next(item: T): void {\r\n        for (const observer of this.observers) {\r\n            observer.next(item);\r\n        }\r\n    }\r\n\r\n    public error(err: any): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.error) {\r\n                observer.error(err);\r\n            }\r\n        }\r\n    }\r\n\r\n    public complete(): void {\r\n        for (const observer of this.observers) {\r\n            if (observer.complete) {\r\n                observer.complete();\r\n            }\r\n        }\r\n    }\r\n\r\n    public subscribe(observer: IStreamSubscriber<T>): ISubscription<T> {\r\n        this.observers.push(observer);\r\n        return new SubjectSubscription(this, observer);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}