(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["core-modules-admin-layout-module"],{

/***/ "++1n":
/*!******************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/IHubProtocol.js ***!
  \******************************************************************/
/*! exports provided: MessageType */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageType", function() { return MessageType; });
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

/** Defines the type of a Hub Message. */
var MessageType;

(function (MessageType) {
  /** Indicates the message is an Invocation message and implements the {@link @microsoft/signalr.InvocationMessage} interface. */
  MessageType[MessageType["Invocation"] = 1] = "Invocation";
  /** Indicates the message is a StreamItem message and implements the {@link @microsoft/signalr.StreamItemMessage} interface. */

  MessageType[MessageType["StreamItem"] = 2] = "StreamItem";
  /** Indicates the message is a Completion message and implements the {@link @microsoft/signalr.CompletionMessage} interface. */

  MessageType[MessageType["Completion"] = 3] = "Completion";
  /** Indicates the message is a Stream Invocation message and implements the {@link @microsoft/signalr.StreamInvocationMessage} interface. */

  MessageType[MessageType["StreamInvocation"] = 4] = "StreamInvocation";
  /** Indicates the message is a Cancel Invocation message and implements the {@link @microsoft/signalr.CancelInvocationMessage} interface. */

  MessageType[MessageType["CancelInvocation"] = 5] = "CancelInvocation";
  /** Indicates the message is a Ping message and implements the {@link @microsoft/signalr.PingMessage} interface. */

  MessageType[MessageType["Ping"] = 6] = "Ping";
  /** Indicates the message is a Close message and implements the {@link @microsoft/signalr.CloseMessage} interface. */

  MessageType[MessageType["Close"] = 7] = "Close";
  MessageType[MessageType["Ack"] = 8] = "Ack";
  MessageType[MessageType["Sequence"] = 9] = "Sequence";
})(MessageType || (MessageType = {}));

/***/ }),

/***/ "+0xr":
/*!***********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/table.js ***!
  \***********************************************************************/
/*! exports provided: MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCell", function() { return MatCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCellDef", function() { return MatCellDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatColumnDef", function() { return MatColumnDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatFooterCell", function() { return MatFooterCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatFooterCellDef", function() { return MatFooterCellDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatFooterRow", function() { return MatFooterRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatFooterRowDef", function() { return MatFooterRowDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatHeaderCell", function() { return MatHeaderCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatHeaderCellDef", function() { return MatHeaderCellDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatHeaderRow", function() { return MatHeaderRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatHeaderRowDef", function() { return MatHeaderRowDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatNoDataRow", function() { return MatNoDataRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatRow", function() { return MatRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatRowDef", function() { return MatRowDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTable", function() { return MatTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTableDataSource", function() { return MatTableDataSource; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTableModule", function() { return MatTableModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTextColumn", function() { return MatTextColumn; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/table */ "f6nW");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/collections */ "0EQZ");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs/operators */ "kU1M");














/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Wrapper for the CdkTable with Material design styles.
 */



var _c0 = [[["caption"]], [["colgroup"], ["col"]]];
var _c1 = ["caption", "colgroup, col"];

function MatTextColumn_th_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "th", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵstyleProp"]("text-align", ctx_r0.justify);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" ", ctx_r0.headerText, " ");
  }
}

function MatTextColumn_td_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "td", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var data_r2 = ctx.$implicit;
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵstyleProp"]("text-align", ctx_r1.justify);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" ", ctx_r1.dataAccessor(data_r2, ctx_r1.name), " ");
  }
}

var MatTable = /*#__PURE__*/function (_CdkTable) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTable, _CdkTable);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatTable);

  function MatTable() {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatTable);

    _this = _super.apply(this, arguments);
    /** Overrides the sticky CSS class set by the `CdkTable`. */

    _this.stickyCssClass = 'mat-table-sticky';
    /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */

    _this.needsPositionStickyOnElement = false;
    return _this;
  }

  return MatTable;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkTable"]);

MatTable.ɵfac = function MatTable_Factory(t) {
  return ɵMatTable_BaseFactory(t || MatTable);
};

MatTable.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatTable,
  selectors: [["mat-table"], ["table", "mat-table", ""]],
  hostAttrs: [1, "mat-table"],
  exportAs: ["matTable"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([// TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code
  //  is only included in the build if used.
  {
    provide: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_9__["_VIEW_REPEATER_STRATEGY"],
    useClass: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_9__["_DisposeViewRepeaterStrategy"]
  }, {
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkTable"],
    useExisting: MatTable
  }, {
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CDK_TABLE"],
    useExisting: MatTable
  }, {
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["_COALESCED_STYLE_SCHEDULER"],
    useClass: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["_CoalescedStyleScheduler"]
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c1,
  decls: 6,
  vars: 0,
  consts: [["headerRowOutlet", ""], ["rowOutlet", ""], ["noDataRowOutlet", ""], ["footerRowOutlet", ""]],
  template: function MatTable_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojectionDef"](_c0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](1, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainer"](2, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainer"](3, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainer"](4, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainer"](5, 3);
    }
  },
  directives: [_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["HeaderRowOutlet"], _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["DataRowOutlet"], _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["NoDataRowOutlet"], _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["FooterRowOutlet"]],
  styles: ["mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\"\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky;position:sticky}\n"],
  encapsulation: 2
});
var ɵMatTable_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatTable);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatTable, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-table, table[mat-table]',
      exportAs: 'matTable',
      template: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CDK_TABLE_TEMPLATE"],
      host: {
        'class': 'mat-table'
      },
      providers: [// TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code
      //  is only included in the build if used.
      {
        provide: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_9__["_VIEW_REPEATER_STRATEGY"],
        useClass: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_9__["_DisposeViewRepeaterStrategy"]
      }, {
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkTable"],
        useExisting: MatTable
      }, {
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CDK_TABLE"],
        useExisting: MatTable
      }, {
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["_COALESCED_STYLE_SCHEDULER"],
        useClass: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["_CoalescedStyleScheduler"]
      }],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      // See note on CdkTable for explanation on why this uses the default change detection strategy.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].Default,
      styles: ["mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-row::after,mat-header-row::after,mat-footer-row::after{display:inline-block;min-height:inherit;content:\"\"}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:-webkit-sticky;position:sticky}\n"]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Cell definition for the mat-table.
 * Captures the template of a column's data row cell as well as cell-specific properties.
 */


var MatCellDef = /*#__PURE__*/function (_CdkCellDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatCellDef, _CdkCellDef);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatCellDef);

  function MatCellDef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatCellDef);

    return _super2.apply(this, arguments);
  }

  return MatCellDef;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkCellDef"]);

MatCellDef.ɵfac = function MatCellDef_Factory(t) {
  return ɵMatCellDef_BaseFactory(t || MatCellDef);
};

MatCellDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatCellDef,
  selectors: [["", "matCellDef", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkCellDef"],
    useExisting: MatCellDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatCellDef_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatCellDef);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatCellDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matCellDef]',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkCellDef"],
        useExisting: MatCellDef
      }]
    }]
  }], null, null);
})();
/**
 * Header cell definition for the mat-table.
 * Captures the template of a column's header cell and as well as cell-specific properties.
 */


var MatHeaderCellDef = /*#__PURE__*/function (_CdkHeaderCellDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatHeaderCellDef, _CdkHeaderCellDef);

  var _super3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatHeaderCellDef);

  function MatHeaderCellDef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatHeaderCellDef);

    return _super3.apply(this, arguments);
  }

  return MatHeaderCellDef;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderCellDef"]);

MatHeaderCellDef.ɵfac = function MatHeaderCellDef_Factory(t) {
  return ɵMatHeaderCellDef_BaseFactory(t || MatHeaderCellDef);
};

MatHeaderCellDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatHeaderCellDef,
  selectors: [["", "matHeaderCellDef", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderCellDef"],
    useExisting: MatHeaderCellDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatHeaderCellDef_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatHeaderCellDef);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatHeaderCellDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matHeaderCellDef]',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderCellDef"],
        useExisting: MatHeaderCellDef
      }]
    }]
  }], null, null);
})();
/**
 * Footer cell definition for the mat-table.
 * Captures the template of a column's footer cell and as well as cell-specific properties.
 */


var MatFooterCellDef = /*#__PURE__*/function (_CdkFooterCellDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatFooterCellDef, _CdkFooterCellDef);

  var _super4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatFooterCellDef);

  function MatFooterCellDef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFooterCellDef);

    return _super4.apply(this, arguments);
  }

  return MatFooterCellDef;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterCellDef"]);

MatFooterCellDef.ɵfac = function MatFooterCellDef_Factory(t) {
  return ɵMatFooterCellDef_BaseFactory(t || MatFooterCellDef);
};

MatFooterCellDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatFooterCellDef,
  selectors: [["", "matFooterCellDef", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterCellDef"],
    useExisting: MatFooterCellDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatFooterCellDef_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatFooterCellDef);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatFooterCellDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matFooterCellDef]',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterCellDef"],
        useExisting: MatFooterCellDef
      }]
    }]
  }], null, null);
})();
/**
 * Column definition for the mat-table.
 * Defines a set of cells available for a table column.
 */


var MatColumnDef = /*#__PURE__*/function (_CdkColumnDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatColumnDef, _CdkColumnDef);

  var _super5 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatColumnDef);

  function MatColumnDef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatColumnDef);

    return _super5.apply(this, arguments);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatColumnDef, [{
    key: "name",
    get:
    /** Unique name for this column. */
    function get() {
      return this._name;
    },
    set: function set(name) {
      this._setNameInput(name);
    }
    /**
     * Add "mat-column-" prefix in addition to "cdk-column-" prefix.
     * In the future, this will only add "mat-column-" and columnCssClassName
     * will change from type string[] to string.
     * @docs-private
     */

  }, {
    key: "_updateColumnCssClassName",
    value: function _updateColumnCssClassName() {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatColumnDef.prototype), "_updateColumnCssClassName", this).call(this);

      this._columnCssClassName.push("mat-column-".concat(this.cssClassFriendlyName));
    }
  }]);

  return MatColumnDef;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkColumnDef"]);

MatColumnDef.ɵfac = function MatColumnDef_Factory(t) {
  return ɵMatColumnDef_BaseFactory(t || MatColumnDef);
};

MatColumnDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatColumnDef,
  selectors: [["", "matColumnDef", ""]],
  inputs: {
    sticky: "sticky",
    name: ["matColumnDef", "name"]
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkColumnDef"],
    useExisting: MatColumnDef
  }, {
    provide: 'MAT_SORT_HEADER_COLUMN_DEF',
    useExisting: MatColumnDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
MatColumnDef.propDecorators = {
  name: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matColumnDef']
  }]
};
var ɵMatColumnDef_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatColumnDef);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatColumnDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matColumnDef]',
      inputs: ['sticky'],
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkColumnDef"],
        useExisting: MatColumnDef
      }, {
        provide: 'MAT_SORT_HEADER_COLUMN_DEF',
        useExisting: MatColumnDef
      }]
    }]
  }], null, {
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matColumnDef']
    }]
  });
})();
/** Header cell template container that adds the right classes and role. */


var MatHeaderCell = /*#__PURE__*/function (_CdkHeaderCell) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatHeaderCell, _CdkHeaderCell);

  var _super6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatHeaderCell);

  function MatHeaderCell() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatHeaderCell);

    return _super6.apply(this, arguments);
  }

  return MatHeaderCell;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderCell"]);

MatHeaderCell.ɵfac = function MatHeaderCell_Factory(t) {
  return ɵMatHeaderCell_BaseFactory(t || MatHeaderCell);
};

MatHeaderCell.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatHeaderCell,
  selectors: [["mat-header-cell"], ["th", "mat-header-cell", ""]],
  hostAttrs: ["role", "columnheader", 1, "mat-header-cell"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatHeaderCell_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatHeaderCell);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatHeaderCell, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-header-cell, th[mat-header-cell]',
      host: {
        'class': 'mat-header-cell',
        'role': 'columnheader'
      }
    }]
  }], null, null);
})();
/** Footer cell template container that adds the right classes and role. */


var MatFooterCell = /*#__PURE__*/function (_CdkFooterCell) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatFooterCell, _CdkFooterCell);

  var _super7 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatFooterCell);

  function MatFooterCell() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFooterCell);

    return _super7.apply(this, arguments);
  }

  return MatFooterCell;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterCell"]);

MatFooterCell.ɵfac = function MatFooterCell_Factory(t) {
  return ɵMatFooterCell_BaseFactory(t || MatFooterCell);
};

MatFooterCell.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatFooterCell,
  selectors: [["mat-footer-cell"], ["td", "mat-footer-cell", ""]],
  hostAttrs: ["role", "gridcell", 1, "mat-footer-cell"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatFooterCell_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatFooterCell);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatFooterCell, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-footer-cell, td[mat-footer-cell]',
      host: {
        'class': 'mat-footer-cell',
        'role': 'gridcell'
      }
    }]
  }], null, null);
})();
/** Cell template container that adds the right classes and role. */


var MatCell = /*#__PURE__*/function (_CdkCell) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatCell, _CdkCell);

  var _super8 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatCell);

  function MatCell() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatCell);

    return _super8.apply(this, arguments);
  }

  return MatCell;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkCell"]);

MatCell.ɵfac = function MatCell_Factory(t) {
  return ɵMatCell_BaseFactory(t || MatCell);
};

MatCell.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatCell,
  selectors: [["mat-cell"], ["td", "mat-cell", ""]],
  hostAttrs: ["role", "gridcell", 1, "mat-cell"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatCell_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatCell);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatCell, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-cell, td[mat-cell]',
      host: {
        'class': 'mat-cell',
        'role': 'gridcell'
      }
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Header row definition for the mat-table.
 * Captures the header row's template and other header properties such as the columns to display.
 */


var MatHeaderRowDef = /*#__PURE__*/function (_CdkHeaderRowDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatHeaderRowDef, _CdkHeaderRowDef);

  var _super9 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatHeaderRowDef);

  function MatHeaderRowDef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatHeaderRowDef);

    return _super9.apply(this, arguments);
  }

  return MatHeaderRowDef;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderRowDef"]);

MatHeaderRowDef.ɵfac = function MatHeaderRowDef_Factory(t) {
  return ɵMatHeaderRowDef_BaseFactory(t || MatHeaderRowDef);
};

MatHeaderRowDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatHeaderRowDef,
  selectors: [["", "matHeaderRowDef", ""]],
  inputs: {
    columns: ["matHeaderRowDef", "columns"],
    sticky: ["matHeaderRowDefSticky", "sticky"]
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderRowDef"],
    useExisting: MatHeaderRowDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatHeaderRowDef_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatHeaderRowDef);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatHeaderRowDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matHeaderRowDef]',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderRowDef"],
        useExisting: MatHeaderRowDef
      }],
      inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky']
    }]
  }], null, null);
})();
/**
 * Footer row definition for the mat-table.
 * Captures the footer row's template and other footer properties such as the columns to display.
 */


var MatFooterRowDef = /*#__PURE__*/function (_CdkFooterRowDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatFooterRowDef, _CdkFooterRowDef);

  var _super10 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatFooterRowDef);

  function MatFooterRowDef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFooterRowDef);

    return _super10.apply(this, arguments);
  }

  return MatFooterRowDef;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterRowDef"]);

MatFooterRowDef.ɵfac = function MatFooterRowDef_Factory(t) {
  return ɵMatFooterRowDef_BaseFactory(t || MatFooterRowDef);
};

MatFooterRowDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatFooterRowDef,
  selectors: [["", "matFooterRowDef", ""]],
  inputs: {
    columns: ["matFooterRowDef", "columns"],
    sticky: ["matFooterRowDefSticky", "sticky"]
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterRowDef"],
    useExisting: MatFooterRowDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatFooterRowDef_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatFooterRowDef);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatFooterRowDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matFooterRowDef]',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterRowDef"],
        useExisting: MatFooterRowDef
      }],
      inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky']
    }]
  }], null, null);
})();
/**
 * Data row definition for the mat-table.
 * Captures the data row's template and other properties such as the columns to display and
 * a when predicate that describes when this row should be used.
 */


var MatRowDef = /*#__PURE__*/function (_CdkRowDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatRowDef, _CdkRowDef);

  var _super11 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatRowDef);

  function MatRowDef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatRowDef);

    return _super11.apply(this, arguments);
  }

  return MatRowDef;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkRowDef"]);

MatRowDef.ɵfac = function MatRowDef_Factory(t) {
  return ɵMatRowDef_BaseFactory(t || MatRowDef);
};

MatRowDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatRowDef,
  selectors: [["", "matRowDef", ""]],
  inputs: {
    columns: ["matRowDefColumns", "columns"],
    when: ["matRowDefWhen", "when"]
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkRowDef"],
    useExisting: MatRowDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatRowDef_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatRowDef);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatRowDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matRowDef]',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkRowDef"],
        useExisting: MatRowDef
      }],
      inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen']
    }]
  }], null, null);
})();
/** Header template container that contains the cell outlet. Adds the right class and role. */


var MatHeaderRow = /*#__PURE__*/function (_CdkHeaderRow) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatHeaderRow, _CdkHeaderRow);

  var _super12 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatHeaderRow);

  function MatHeaderRow() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatHeaderRow);

    return _super12.apply(this, arguments);
  }

  return MatHeaderRow;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderRow"]);

MatHeaderRow.ɵfac = function MatHeaderRow_Factory(t) {
  return ɵMatHeaderRow_BaseFactory(t || MatHeaderRow);
};

MatHeaderRow.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatHeaderRow,
  selectors: [["mat-header-row"], ["tr", "mat-header-row", ""]],
  hostAttrs: ["role", "row", 1, "mat-header-row"],
  exportAs: ["matHeaderRow"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderRow"],
    useExisting: MatHeaderRow
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  decls: 1,
  vars: 0,
  consts: [["cdkCellOutlet", ""]],
  template: function MatHeaderRow_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainer"](0, 0);
    }
  },
  directives: [_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkCellOutlet"]],
  encapsulation: 2
});
var ɵMatHeaderRow_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatHeaderRow);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatHeaderRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-header-row, tr[mat-header-row]',
      template: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CDK_ROW_TEMPLATE"],
      host: {
        'class': 'mat-header-row',
        'role': 'row'
      },
      // See note on CdkTable for explanation on why this uses the default change detection strategy.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      exportAs: 'matHeaderRow',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkHeaderRow"],
        useExisting: MatHeaderRow
      }]
    }]
  }], null, null);
})();
/** Footer template container that contains the cell outlet. Adds the right class and role. */


var MatFooterRow = /*#__PURE__*/function (_CdkFooterRow) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatFooterRow, _CdkFooterRow);

  var _super13 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatFooterRow);

  function MatFooterRow() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatFooterRow);

    return _super13.apply(this, arguments);
  }

  return MatFooterRow;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterRow"]);

MatFooterRow.ɵfac = function MatFooterRow_Factory(t) {
  return ɵMatFooterRow_BaseFactory(t || MatFooterRow);
};

MatFooterRow.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatFooterRow,
  selectors: [["mat-footer-row"], ["tr", "mat-footer-row", ""]],
  hostAttrs: ["role", "row", 1, "mat-footer-row"],
  exportAs: ["matFooterRow"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterRow"],
    useExisting: MatFooterRow
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  decls: 1,
  vars: 0,
  consts: [["cdkCellOutlet", ""]],
  template: function MatFooterRow_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainer"](0, 0);
    }
  },
  directives: [_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkCellOutlet"]],
  encapsulation: 2
});
var ɵMatFooterRow_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatFooterRow);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatFooterRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-footer-row, tr[mat-footer-row]',
      template: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CDK_ROW_TEMPLATE"],
      host: {
        'class': 'mat-footer-row',
        'role': 'row'
      },
      // See note on CdkTable for explanation on why this uses the default change detection strategy.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      exportAs: 'matFooterRow',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkFooterRow"],
        useExisting: MatFooterRow
      }]
    }]
  }], null, null);
})();
/** Data row template container that contains the cell outlet. Adds the right class and role. */


var MatRow = /*#__PURE__*/function (_CdkRow) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatRow, _CdkRow);

  var _super14 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatRow);

  function MatRow() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatRow);

    return _super14.apply(this, arguments);
  }

  return MatRow;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkRow"]);

MatRow.ɵfac = function MatRow_Factory(t) {
  return ɵMatRow_BaseFactory(t || MatRow);
};

MatRow.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatRow,
  selectors: [["mat-row"], ["tr", "mat-row", ""]],
  hostAttrs: ["role", "row", 1, "mat-row"],
  exportAs: ["matRow"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkRow"],
    useExisting: MatRow
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  decls: 1,
  vars: 0,
  consts: [["cdkCellOutlet", ""]],
  template: function MatRow_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainer"](0, 0);
    }
  },
  directives: [_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkCellOutlet"]],
  encapsulation: 2
});
var ɵMatRow_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatRow);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-row, tr[mat-row]',
      template: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CDK_ROW_TEMPLATE"],
      host: {
        'class': 'mat-row',
        'role': 'row'
      },
      // See note on CdkTable for explanation on why this uses the default change detection strategy.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      exportAs: 'matRow',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkRow"],
        useExisting: MatRow
      }]
    }]
  }], null, null);
})();
/** Row that can be used to display a message when no data is shown in the table. */


var MatNoDataRow = /*#__PURE__*/function (_CdkNoDataRow) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatNoDataRow, _CdkNoDataRow);

  var _super15 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatNoDataRow);

  function MatNoDataRow() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatNoDataRow);

    return _super15.apply(this, arguments);
  }

  return MatNoDataRow;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkNoDataRow"]);

MatNoDataRow.ɵfac = function MatNoDataRow_Factory(t) {
  return ɵMatNoDataRow_BaseFactory(t || MatNoDataRow);
};

MatNoDataRow.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatNoDataRow,
  selectors: [["ng-template", "matNoDataRow", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkNoDataRow"],
    useExisting: MatNoDataRow
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatNoDataRow_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatNoDataRow);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatNoDataRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'ng-template[matNoDataRow]',
      providers: [{
        provide: _angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkNoDataRow"],
        useExisting: MatNoDataRow
      }]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Column that simply shows text content for the header and row cells. Assumes that the table
 * is using the native table implementation (`<table>`).
 *
 * By default, the name of this column will be the header text and data property accessor.
 * The header text can be overridden with the `headerText` input. Cell values can be overridden with
 * the `dataAccessor` input. Change the text justification to the start or end using the `justify`
 * input.
 */


var MatTextColumn = /*#__PURE__*/function (_CdkTextColumn) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTextColumn, _CdkTextColumn);

  var _super16 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatTextColumn);

  function MatTextColumn() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatTextColumn);

    return _super16.apply(this, arguments);
  }

  return MatTextColumn;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkTextColumn"]);

MatTextColumn.ɵfac = function MatTextColumn_Factory(t) {
  return ɵMatTextColumn_BaseFactory(t || MatTextColumn);
};

MatTextColumn.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatTextColumn,
  selectors: [["mat-text-column"]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  decls: 3,
  vars: 0,
  consts: [["matColumnDef", ""], ["mat-header-cell", "", 3, "text-align", 4, "matHeaderCellDef"], ["mat-cell", "", 3, "text-align", 4, "matCellDef"], ["mat-header-cell", ""], ["mat-cell", ""]],
  template: function MatTextColumn_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainerStart"](0, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](1, MatTextColumn_th_1_Template, 2, 3, "th", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](2, MatTextColumn_td_2_Template, 2, 3, "td", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementContainerEnd"]();
    }
  },
  directives: [MatColumnDef, MatHeaderCellDef, MatCellDef, MatHeaderCell, MatCell],
  encapsulation: 2
});
var ɵMatTextColumn_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetInheritedFactory"](MatTextColumn);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatTextColumn, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-text-column',
      template: "\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  ",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      // Change detection is intentionally not set to OnPush. This component's template will be provided
      // to the table to be inserted into its view. This is problematic when change detection runs since
      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which
      // mean's the template in the table's view will not have the updated value (and in fact will cause
      // an ExpressionChangedAfterItHasBeenCheckedError).
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].Default
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var EXPORTED_DECLARATIONS = [// Table
MatTable, // Template defs
MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, // Cell directives
MatHeaderCell, MatCell, MatFooterCell, // Row directives
MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn];

var MatTableModule = function MatTableModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatTableModule);
};

MatTableModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatTableModule
});
MatTableModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatTableModule_Factory(t) {
    return new (t || MatTableModule)();
  },
  imports: [[_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkTableModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatTableModule, {
    declarations: function declarations() {
      return [MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn];
    },
    imports: function imports() {
      return [_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkTableModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MatCommonModule"]];
    },
    exports: function exports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MatCommonModule"], MatTable, MatHeaderCellDef, MatHeaderRowDef, MatColumnDef, MatCellDef, MatRowDef, MatFooterCellDef, MatFooterRowDef, MatHeaderCell, MatCell, MatFooterCell, MatHeaderRow, MatRow, MatFooterRow, MatNoDataRow, MatTextColumn];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatTableModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["CdkTableModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MatCommonModule"]],
      exports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_10__["MatCommonModule"], EXPORTED_DECLARATIONS],
      declarations: EXPORTED_DECLARATIONS
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to
 * flaky browser support and the value not being defined in Closure's typings.
 */


var MAX_SAFE_INTEGER = 9007199254740991;
/**
 * Data source that accepts a client-side data array and includes native support of filtering,
 * sorting (using MatSort), and pagination (using MatPaginator).
 *
 * Allows for sort customization by overriding sortingDataAccessor, which defines how data
 * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,
 * which defines how row data is converted to a string for filter matching.
 *
 * **Note:** This class is meant to be a simple data source to help you get started. As such
 * it isn't equipped to handle some more advanced cases like robust i18n support or server-side
 * interactions. If your app needs to support more advanced use cases, consider implementing your
 * own `DataSource`.
 */

var MatTableDataSource = /*#__PURE__*/function (_DataSource) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTableDataSource, _DataSource);

  var _super17 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(MatTableDataSource);

  function MatTableDataSource() {
    var _this2;

    var initialData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatTableDataSource);

    _this2 = _super17.call(this);
    /** Stream emitting render data to the table (depends on ordered data changes). */

    _this2._renderData = new rxjs__WEBPACK_IMPORTED_MODULE_12__["BehaviorSubject"]([]);
    /** Stream that emits when a new filter string is set on the data source. */

    _this2._filter = new rxjs__WEBPACK_IMPORTED_MODULE_12__["BehaviorSubject"]('');
    /** Used to react to internal changes of the paginator that are made by the data source itself. */

    _this2._internalPageChanges = new rxjs__WEBPACK_IMPORTED_MODULE_12__["Subject"]();
    /**
     * Subscription to the changes that should trigger an update to the table's rendered rows, such
     * as filtering, sorting, pagination, or base data changes.
     */

    _this2._renderChangesSubscription = rxjs__WEBPACK_IMPORTED_MODULE_12__["Subscription"].EMPTY;
    /**
     * Data accessor function that is used for accessing data properties for sorting through
     * the default sortData function.
     * This default function assumes that the sort header IDs (which defaults to the column name)
     * matches the data's properties (e.g. column Xyz represents data['Xyz']).
     * May be set to a custom function for different behavior.
     * @param data Data object that is being accessed.
     * @param sortHeaderId The name of the column that represents the data.
     */

    _this2.sortingDataAccessor = function (data, sortHeaderId) {
      var value = data[sortHeaderId];

      if (Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_11__["_isNumberValue"])(value)) {
        var numberValue = Number(value); // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we
        // leave them as strings. For more info: https://goo.gl/y5vbSg

        return numberValue < MAX_SAFE_INTEGER ? numberValue : value;
      }

      return value;
    };
    /**
     * Gets a sorted copy of the data array based on the state of the MatSort. Called
     * after changes are made to the filtered data or when sort changes are emitted from MatSort.
     * By default, the function retrieves the active sort and its direction and compares data
     * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation
     * of data ordering.
     * @param data The array of data that should be sorted.
     * @param sort The connected MatSort that holds the current sort state.
     */


    _this2.sortData = function (data, sort) {
      var active = sort.active;
      var direction = sort.direction;

      if (!active || direction == '') {
        return data;
      }

      return data.sort(function (a, b) {
        var valueA = _this2.sortingDataAccessor(a, active);

        var valueB = _this2.sortingDataAccessor(b, active); // If there are data in the column that can be converted to a number,
        // it must be ensured that the rest of the data
        // is of the same type so as not to order incorrectly.


        var valueAType = typeof valueA;
        var valueBType = typeof valueB;

        if (valueAType !== valueBType) {
          if (valueAType === 'number') {
            valueA += '';
          }

          if (valueBType === 'number') {
            valueB += '';
          }
        } // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if
        // one value exists while the other doesn't. In this case, existing value should come last.
        // This avoids inconsistent results when comparing values to undefined/null.
        // If neither value exists, return 0 (equal).


        var comparatorResult = 0;

        if (valueA != null && valueB != null) {
          // Check if one value is greater than the other; if equal, comparatorResult should remain 0.
          if (valueA > valueB) {
            comparatorResult = 1;
          } else if (valueA < valueB) {
            comparatorResult = -1;
          }
        } else if (valueA != null) {
          comparatorResult = 1;
        } else if (valueB != null) {
          comparatorResult = -1;
        }

        return comparatorResult * (direction == 'asc' ? 1 : -1);
      });
    };
    /**
     * Checks if a data object matches the data source's filter string. By default, each data object
     * is converted to a string of its properties and returns true if the filter has
     * at least one occurrence in that string. By default, the filter string has its whitespace
     * trimmed and the match is case-insensitive. May be overridden for a custom implementation of
     * filter matching.
     * @param data Data object used to check against the filter.
     * @param filter Filter string that has been set on the data source.
     * @returns Whether the filter matches against the data
     */


    _this2.filterPredicate = function (data, filter) {
      // Transform the data into a lowercase string of all property values.
      var dataStr = Object.keys(data).reduce(function (currentTerm, key) {
        // Use an obscure Unicode character to delimit the words in the concatenated string.
        // This avoids matches where the values of two columns combined will match the user's query
        // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something
        // that has a very low chance of being typed in by somebody in a text field. This one in
        // particular is "White up-pointing triangle with dot" from
        // https://en.wikipedia.org/wiki/List_of_Unicode_characters
        return currentTerm + data[key] + '◬';
      }, '').toLowerCase(); // Transform the filter by converting it to lowercase and removing whitespace.

      var transformedFilter = filter.trim().toLowerCase();
      return dataStr.indexOf(transformedFilter) != -1;
    };

    _this2._data = new rxjs__WEBPACK_IMPORTED_MODULE_12__["BehaviorSubject"](initialData);

    _this2._updateChangeSubscription();

    return _this2;
  }
  /** Array of data that should be rendered by the table, where each object represents one row. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatTableDataSource, [{
    key: "data",
    get: function get() {
      return this._data.value;
    },
    set: function set(data) {
      this._data.next(data);
    }
    /**
     * Filter term that should be used to filter out objects from the data array. To override how
     * data objects match to this filter string, provide a custom function for filterPredicate.
     */

  }, {
    key: "filter",
    get: function get() {
      return this._filter.value;
    },
    set: function set(filter) {
      this._filter.next(filter);
    }
    /**
     * Instance of the MatSort directive used by the table to control its sorting. Sort changes
     * emitted by the MatSort will trigger an update to the table's rendered data.
     */

  }, {
    key: "sort",
    get: function get() {
      return this._sort;
    },
    set: function set(sort) {
      this._sort = sort;

      this._updateChangeSubscription();
    }
    /**
     * Instance of the MatPaginator component used by the table to control what page of the data is
     * displayed. Page changes emitted by the MatPaginator will trigger an update to the
     * table's rendered data.
     *
     * Note that the data source uses the paginator's properties to calculate which page of data
     * should be displayed. If the paginator receives its properties as template inputs,
     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been
     * initialized before assigning it to this data source.
     */

  }, {
    key: "paginator",
    get: function get() {
      return this._paginator;
    },
    set: function set(paginator) {
      this._paginator = paginator;

      this._updateChangeSubscription();
    }
    /**
     * Subscribe to changes that should trigger an update to the table's rendered rows. When the
     * changes occur, process the current state of the filter, sort, and pagination along with
     * the provided base data and send it to the table for rendering.
     */

  }, {
    key: "_updateChangeSubscription",
    value: function _updateChangeSubscription() {
      var _this3 = this;

      // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.
      // The events should emit whenever the component emits a change or initializes, or if no
      // component is provided, a stream with just a null event should be provided.
      // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the
      // pipeline can progress to the next step. Note that the value from these streams are not used,
      // they purely act as a signal to progress in the pipeline.
      var sortChange = this._sort ? Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["merge"])(this._sort.sortChange, this._sort.initialized) : Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["of"])(null);
      var pageChange = this._paginator ? Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["merge"])(this._paginator.page, this._internalPageChanges, this._paginator.initialized) : Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["of"])(null);
      var dataStream = this._data; // Watch for base data or filter changes to provide a filtered set of data.

      var filteredData = Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["combineLatest"])([dataStream, this._filter]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_13__["map"])(function (_ref) {
        var _ref2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref, 1),
            data = _ref2[0];

        return _this3._filterData(data);
      })); // Watch for filtered data or sort changes to provide an ordered set of data.

      var orderedData = Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["combineLatest"])([filteredData, sortChange]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_13__["map"])(function (_ref3) {
        var _ref4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref3, 1),
            data = _ref4[0];

        return _this3._orderData(data);
      })); // Watch for ordered data or page changes to provide a paged set of data.

      var paginatedData = Object(rxjs__WEBPACK_IMPORTED_MODULE_12__["combineLatest"])([orderedData, pageChange]).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_13__["map"])(function (_ref5) {
        var _ref6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_ref5, 1),
            data = _ref6[0];

        return _this3._pageData(data);
      })); // Watched for paged data changes and send the result to the table to render.

      this._renderChangesSubscription.unsubscribe();

      this._renderChangesSubscription = paginatedData.subscribe(function (data) {
        return _this3._renderData.next(data);
      });
    }
    /**
     * Returns a filtered data array where each filter object contains the filter string within
     * the result of the filterTermAccessor function. If no filter is set, returns the data array
     * as provided.
     */

  }, {
    key: "_filterData",
    value: function _filterData(data) {
      var _this4 = this;

      // If there is a filter string, filter out data that does not contain it.
      // Each data object is converted to a string using the function defined by filterTermAccessor.
      // May be overridden for customization.
      this.filteredData = !this.filter ? data : data.filter(function (obj) {
        return _this4.filterPredicate(obj, _this4.filter);
      });

      if (this.paginator) {
        this._updatePaginator(this.filteredData.length);
      }

      return this.filteredData;
    }
    /**
     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the
     * data array as provided. Uses the default data accessor for data lookup, unless a
     * sortDataAccessor function is defined.
     */

  }, {
    key: "_orderData",
    value: function _orderData(data) {
      // If there is no active sort or direction, return the data without trying to sort.
      if (!this.sort) {
        return data;
      }

      return this.sortData(data.slice(), this.sort);
    }
    /**
     * Returns a paged slice of the provided data array according to the provided MatPaginator's page
     * index and length. If there is no paginator provided, returns the data array as provided.
     */

  }, {
    key: "_pageData",
    value: function _pageData(data) {
      if (!this.paginator) {
        return data;
      }

      var startIndex = this.paginator.pageIndex * this.paginator.pageSize;
      return data.slice(startIndex, startIndex + this.paginator.pageSize);
    }
    /**
     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page
     * index does not exceed the paginator's last page. Values are changed in a resolved promise to
     * guard against making property changes within a round of change detection.
     */

  }, {
    key: "_updatePaginator",
    value: function _updatePaginator(filteredDataLength) {
      var _this5 = this;

      Promise.resolve().then(function () {
        var paginator = _this5.paginator;

        if (!paginator) {
          return;
        }

        paginator.length = filteredDataLength; // If the page index is set beyond the page, reduce it to the last page.

        if (paginator.pageIndex > 0) {
          var lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;
          var newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);

          if (newPageIndex !== paginator.pageIndex) {
            paginator.pageIndex = newPageIndex; // Since the paginator only emits after user-generated changes,
            // we need our own stream so we know to should re-render the data.

            _this5._internalPageChanges.next();
          }
        }
      });
    }
    /**
     * Used by the MatTable. Called when it connects to the data source.
     * @docs-private
     */

  }, {
    key: "connect",
    value: function connect() {
      return this._renderData;
    }
    /**
     * Used by the MatTable. Called when it is destroyed. No-op.
     * @docs-private
     */

  }, {
    key: "disconnect",
    value: function disconnect() {}
  }]);

  return MatTableDataSource;
}(_angular_cdk_table__WEBPACK_IMPORTED_MODULE_8__["DataSource"]);
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "/9Rs":
/*!***********************************************************!*\
  !*** ./src/app/core/components/admin/user/models/user.ts ***!
  \***********************************************************/
/*! exports provided: User */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "User", function() { return User; });
var User = /** @class */ (function () {
    function User() {
    }
    return User;
}());



/***/ }),

/***/ "/e0e":
/*!************************************************************************************!*\
  !*** ./src/app/core/components/screens/personel-visit/personel-visit.component.ts ***!
  \************************************************************************************/
/*! exports provided: PersonelVisitComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PersonelVisitComponent", function() { return PersonelVisitComponent; });
/* harmony import */ var _raw_loader_personel_visit_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./personel-visit.component.html */ "dTdK");
/* harmony import */ var _personel_visit_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./personel-visit.component.css */ "BAdQ");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var app_core_components_admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/core/components/admin/visit/services/visit.service */ "vCDI");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var PersonelVisitComponent = /** @class */ (function () {
    function PersonelVisitComponent(visitService) {
        this.visitService = visitService;
        this.visits = [];
        this.filteredVisits = [];
    }
    PersonelVisitComponent.prototype.ngOnInit = function () {
        this.getPersonnelVisitList();
    };
    PersonelVisitComponent.prototype.getPersonnelVisitList = function () {
        var _this = this;
        this.visitService.getPersonnelVisitList().subscribe(function (data) {
            if (Array.isArray(data)) {
                _this.visits = data;
                _this.filteredVisits = data;
            }
            else {
                console.error('Expected an array of visits');
            }
        });
    };
    PersonelVisitComponent.prototype.filterVisits = function (status) {
        if (status === 'approved') {
            this.filteredVisits = this.visits.filter(function (visit) { return visit.isConfirm; });
        }
        else if (status === 'rejected') {
            this.filteredVisits = this.visits.filter(function (visit) { return visit.isReject; });
        }
        else if (status === 'pending') {
            this.filteredVisits = this.visits.filter(function (visit) { return !visit.isConfirm && !visit.isReject; });
        }
        else {
            this.filteredVisits = this.visits;
        }
    };
    PersonelVisitComponent.ctorParameters = function () { return [
        { type: app_core_components_admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_3__["VisitService"] }
    ]; };
    PersonelVisitComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-personel-visit',
            template: _raw_loader_personel_visit_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_personel_visit_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [app_core_components_admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_3__["VisitService"]])
    ], PersonelVisitComponent);
    return PersonelVisitComponent;
}());



/***/ }),

/***/ "0CuA":
/*!*********************************************************************************************************!*\
  !*** ./src/app/core/components/screens/security-transactions/reject-dialog/reject-dialog.component.css ***!
  \*********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("/* Dialog Container */\r\n.dialog-container {\r\n  padding: 0;\r\n  max-height: 90vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n/* Header Styles */\r\n.dialog-header {\r\n  background: #f44336;\r\n  color: white;\r\n  padding: 16px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  border-radius: 4px 4px 0 0;\r\n}\r\n.dialog-header h2 {\r\n  margin: 0;\r\n  font-size: 20px;\r\n  font-weight: 500;\r\n}\r\n.warning-icon {\r\n  font-size: 24px;\r\n  width: 24px;\r\n  height: 24px;\r\n}\r\n/* Content Styles */\r\n.visit-info {\r\n  padding: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 24px;\r\n}\r\n/* Section Styles */\r\n.info-section {\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  padding: 16px;\r\n  transition: all 0.3s ease;\r\n}\r\n.info-section:hover {\r\n  box-shadow: 0 2px 8px rgba(0,0,0,0.1);\r\n  transform: translateY(-1px);\r\n}\r\n.section-header {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  margin-bottom: 16px;\r\n}\r\n.section-header h3 {\r\n  margin: 0;\r\n  font-size: 16px;\r\n  font-weight: 500;\r\n  color: #333;\r\n}\r\n.section-icon {\r\n  color: #666;\r\n}\r\n.visitor-count {\r\n  color: #666;\r\n  font-size: 14px;\r\n  font-weight: normal;\r\n}\r\n/* Chip Styles */\r\n.visitor-chips-container {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n}\r\n.visitor-chip {\r\n  transition: all 0.2s ease;\r\n}\r\n.visitor-chip:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n.primary-visitor-chip {\r\n  background: #e3f2fd !important;\r\n  color: #1976d2 !important;\r\n  font-weight: 500;\r\n}\r\n.secondary-visitor-chip {\r\n  background: #f5f5f5 !important;\r\n  color: #616161 !important;\r\n}\r\n.vehicle-chip {\r\n  background: #e8f5e9 !important;\r\n  color: #2e7d32 !important;\r\n}\r\n.pedestrian-chip {\r\n  background: #fff3e0 !important;\r\n  color: #e65100 !important;\r\n}\r\n.plate-chip {\r\n  background: #e8eaf6 !important;\r\n  color: #3f51b5 !important;\r\n}\r\n.chip-icon {\r\n  margin-right: 4px;\r\n}\r\n/* Form Field Styles */\r\n.reason-field {\r\n  width: 100%;\r\n}\r\n/* Actions Styles */\r\n.dialog-actions {\r\n  padding: 16px;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  gap: 12px;\r\n  background: #fafafa;\r\n  border-top: 1px solid #eee;\r\n  margin: 0;\r\n}\r\n.cancel-button, .reject-button {\r\n  min-width: 120px;\r\n}\r\n/* Responsive Design */\r\n@media (max-width: 600px) {\r\n  .dialog-container {\r\n    max-height: 100vh;\r\n  }\r\n\r\n  .visit-info {\r\n    padding: 12px;\r\n    gap: 16px;\r\n  }\r\n\r\n  .info-section {\r\n    padding: 12px;\r\n  }\r\n\r\n  .dialog-actions {\r\n    flex-direction: column;\r\n    padding: 12px;\r\n  }\r\n\r\n  .cancel-button, .reject-button {\r\n    width: 100%;\r\n  }\r\n}\r\n/* Animation */\r\n@-webkit-keyframes slideIn {\r\n  from {\r\n    transform: translateY(-20px);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n@keyframes slideIn {\r\n  from {\r\n    transform: translateY(-20px);\r\n    opacity: 0;\r\n  }\r\n  to {\r\n    transform: translateY(0);\r\n    opacity: 1;\r\n  }\r\n}\r\n.info-section {\r\n  -webkit-animation: slideIn 0.3s ease-out;\r\n          animation: slideIn 0.3s ease-out;\r\n}\r\n/* Scrollbar Styles */\r\n::-webkit-scrollbar {\r\n  width: 8px;\r\n}\r\n::-webkit-scrollbar-track {\r\n  background: #f1f1f1;\r\n}\r\n::-webkit-scrollbar-thumb {\r\n  background: #888;\r\n  border-radius: 4px;\r\n}\r\n::-webkit-scrollbar-thumb:hover {\r\n  background: #666;\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlamVjdC1kaWFsb2cuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxxQkFBcUI7QUFDckI7RUFDRSxVQUFVO0VBQ1YsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYixzQkFBc0I7QUFDeEI7QUFFQSxrQkFBa0I7QUFDbEI7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGFBQWE7RUFDYixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLFNBQVM7RUFDVCwwQkFBMEI7QUFDNUI7QUFFQTtFQUNFLFNBQVM7RUFDVCxlQUFlO0VBQ2YsZ0JBQWdCO0FBQ2xCO0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLFlBQVk7QUFDZDtBQUVBLG1CQUFtQjtBQUNuQjtFQUNFLGFBQWE7RUFDYixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFNBQVM7QUFDWDtBQUVBLG1CQUFtQjtBQUNuQjtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UscUNBQXFDO0VBQ3JDLDJCQUEyQjtBQUM3QjtBQUVBO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixRQUFRO0VBQ1IsbUJBQW1CO0FBQ3JCO0FBRUE7RUFDRSxTQUFTO0VBQ1QsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixXQUFXO0FBQ2I7QUFFQTtFQUNFLFdBQVc7QUFDYjtBQUVBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixtQkFBbUI7QUFDckI7QUFFQSxnQkFBZ0I7QUFDaEI7RUFDRSxhQUFhO0VBQ2IsZUFBZTtFQUNmLFFBQVE7QUFDVjtBQUVBO0VBQ0UseUJBQXlCO0FBQzNCO0FBRUE7RUFDRSwyQkFBMkI7RUFDM0IscUNBQXFDO0FBQ3ZDO0FBRUE7RUFDRSw4QkFBOEI7RUFDOUIseUJBQXlCO0VBQ3pCLGdCQUFnQjtBQUNsQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsOEJBQThCO0VBQzlCLHlCQUF5QjtBQUMzQjtBQUVBO0VBQ0UsaUJBQWlCO0FBQ25CO0FBRUEsc0JBQXNCO0FBQ3RCO0VBQ0UsV0FBVztBQUNiO0FBRUEsbUJBQW1CO0FBQ25CO0VBQ0UsYUFBYTtFQUNiLGFBQWE7RUFDYix5QkFBeUI7RUFDekIsU0FBUztFQUNULG1CQUFtQjtFQUNuQiwwQkFBMEI7RUFDMUIsU0FBUztBQUNYO0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7QUFFQSxzQkFBc0I7QUFDdEI7RUFDRTtJQUNFLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGFBQWE7SUFDYixTQUFTO0VBQ1g7O0VBRUE7SUFDRSxhQUFhO0VBQ2Y7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsYUFBYTtFQUNmOztFQUVBO0lBQ0UsV0FBVztFQUNiO0FBQ0Y7QUFFQSxjQUFjO0FBQ2Q7RUFDRTtJQUNFLDRCQUE0QjtJQUM1QixVQUFVO0VBQ1o7RUFDQTtJQUNFLHdCQUF3QjtJQUN4QixVQUFVO0VBQ1o7QUFDRjtBQVRBO0VBQ0U7SUFDRSw0QkFBNEI7SUFDNUIsVUFBVTtFQUNaO0VBQ0E7SUFDRSx3QkFBd0I7SUFDeEIsVUFBVTtFQUNaO0FBQ0Y7QUFFQTtFQUNFLHdDQUFnQztVQUFoQyxnQ0FBZ0M7QUFDbEM7QUFFQSxxQkFBcUI7QUFDckI7RUFDRSxVQUFVO0FBQ1o7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjtBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjtBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InJlamVjdC1kaWFsb2cuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIERpYWxvZyBDb250YWluZXIgKi9cclxuLmRpYWxvZy1jb250YWluZXIge1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgbWF4LWhlaWdodDogOTB2aDtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbn1cclxuXHJcbi8qIEhlYWRlciBTdHlsZXMgKi9cclxuLmRpYWxvZy1oZWFkZXIge1xyXG4gIGJhY2tncm91bmQ6ICNmNDQzMzY7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGdhcDogMTJweDtcclxuICBib3JkZXItcmFkaXVzOiA0cHggNHB4IDAgMDtcclxufVxyXG5cclxuLmRpYWxvZy1oZWFkZXIgaDIge1xyXG4gIG1hcmdpbjogMDtcclxuICBmb250LXNpemU6IDIwcHg7XHJcbiAgZm9udC13ZWlnaHQ6IDUwMDtcclxufVxyXG5cclxuLndhcm5pbmctaWNvbiB7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG4gIHdpZHRoOiAyNHB4O1xyXG4gIGhlaWdodDogMjRweDtcclxufVxyXG5cclxuLyogQ29udGVudCBTdHlsZXMgKi9cclxuLnZpc2l0LWluZm8ge1xyXG4gIHBhZGRpbmc6IDE2cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGdhcDogMjRweDtcclxufVxyXG5cclxuLyogU2VjdGlvbiBTdHlsZXMgKi9cclxuLmluZm8tc2VjdGlvbiB7XHJcbiAgYmFja2dyb3VuZDogI2Y1ZjVmNTtcclxuICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgcGFkZGluZzogMTZweDtcclxuICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xyXG59XHJcblxyXG4uaW5mby1zZWN0aW9uOmhvdmVyIHtcclxuICBib3gtc2hhZG93OiAwIDJweCA4cHggcmdiYSgwLDAsMCwwLjEpO1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcclxufVxyXG5cclxuLnNlY3Rpb24taGVhZGVyIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgZ2FwOiA4cHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTZweDtcclxufVxyXG5cclxuLnNlY3Rpb24taGVhZGVyIGgzIHtcclxuICBtYXJnaW46IDA7XHJcbiAgZm9udC1zaXplOiAxNnB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6ICMzMzM7XHJcbn1cclxuXHJcbi5zZWN0aW9uLWljb24ge1xyXG4gIGNvbG9yOiAjNjY2O1xyXG59XHJcblxyXG4udmlzaXRvci1jb3VudCB7XHJcbiAgY29sb3I6ICM2NjY7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBub3JtYWw7XHJcbn1cclxuXHJcbi8qIENoaXAgU3R5bGVzICovXHJcbi52aXNpdG9yLWNoaXBzLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LXdyYXA6IHdyYXA7XHJcbiAgZ2FwOiA4cHg7XHJcbn1cclxuXHJcbi52aXNpdG9yLWNoaXAge1xyXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XHJcbn1cclxuXHJcbi52aXNpdG9yLWNoaXA6aG92ZXIge1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcclxuICBib3gtc2hhZG93OiAwIDJweCA0cHggcmdiYSgwLDAsMCwwLjEpO1xyXG59XHJcblxyXG4ucHJpbWFyeS12aXNpdG9yLWNoaXAge1xyXG4gIGJhY2tncm91bmQ6ICNlM2YyZmQgIWltcG9ydGFudDtcclxuICBjb2xvcjogIzE5NzZkMiAhaW1wb3J0YW50O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5zZWNvbmRhcnktdmlzaXRvci1jaGlwIHtcclxuICBiYWNrZ3JvdW5kOiAjZjVmNWY1ICFpbXBvcnRhbnQ7XHJcbiAgY29sb3I6ICM2MTYxNjEgIWltcG9ydGFudDtcclxufVxyXG5cclxuLnZlaGljbGUtY2hpcCB7XHJcbiAgYmFja2dyb3VuZDogI2U4ZjVlOSAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiAjMmU3ZDMyICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5wZWRlc3RyaWFuLWNoaXAge1xyXG4gIGJhY2tncm91bmQ6ICNmZmYzZTAgIWltcG9ydGFudDtcclxuICBjb2xvcjogI2U2NTEwMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ucGxhdGUtY2hpcCB7XHJcbiAgYmFja2dyb3VuZDogI2U4ZWFmNiAhaW1wb3J0YW50O1xyXG4gIGNvbG9yOiAjM2Y1MWI1ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5jaGlwLWljb24ge1xyXG4gIG1hcmdpbi1yaWdodDogNHB4O1xyXG59XHJcblxyXG4vKiBGb3JtIEZpZWxkIFN0eWxlcyAqL1xyXG4ucmVhc29uLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLyogQWN0aW9ucyBTdHlsZXMgKi9cclxuLmRpYWxvZy1hY3Rpb25zIHtcclxuICBwYWRkaW5nOiAxNnB4O1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBmbGV4LWVuZDtcclxuICBnYXA6IDEycHg7XHJcbiAgYmFja2dyb3VuZDogI2ZhZmFmYTtcclxuICBib3JkZXItdG9wOiAxcHggc29saWQgI2VlZTtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi5jYW5jZWwtYnV0dG9uLCAucmVqZWN0LWJ1dHRvbiB7XHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxufVxyXG5cclxuLyogUmVzcG9uc2l2ZSBEZXNpZ24gKi9cclxuQG1lZGlhIChtYXgtd2lkdGg6IDYwMHB4KSB7XHJcbiAgLmRpYWxvZy1jb250YWluZXIge1xyXG4gICAgbWF4LWhlaWdodDogMTAwdmg7XHJcbiAgfVxyXG5cclxuICAudmlzaXQtaW5mbyB7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gICAgZ2FwOiAxNnB4O1xyXG4gIH1cclxuXHJcbiAgLmluZm8tc2VjdGlvbiB7XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gIH1cclxuXHJcbiAgLmRpYWxvZy1hY3Rpb25zIHtcclxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgICBwYWRkaW5nOiAxMnB4O1xyXG4gIH1cclxuXHJcbiAgLmNhbmNlbC1idXR0b24sIC5yZWplY3QtYnV0dG9uIHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxufVxyXG5cclxuLyogQW5pbWF0aW9uICovXHJcbkBrZXlmcmFtZXMgc2xpZGVJbiB7XHJcbiAgZnJvbSB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTIwcHgpO1xyXG4gICAgb3BhY2l0eTogMDtcclxuICB9XHJcbiAgdG8ge1xyXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xyXG4gICAgb3BhY2l0eTogMTtcclxuICB9XHJcbn1cclxuXHJcbi5pbmZvLXNlY3Rpb24ge1xyXG4gIGFuaW1hdGlvbjogc2xpZGVJbiAwLjNzIGVhc2Utb3V0O1xyXG59XHJcblxyXG4vKiBTY3JvbGxiYXIgU3R5bGVzICovXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXIge1xyXG4gIHdpZHRoOiA4cHg7XHJcbn1cclxuXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xyXG4gIGJhY2tncm91bmQ6ICNmMWYxZjE7XHJcbn1cclxuXHJcbjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xyXG4gIGJhY2tncm91bmQ6ICM4ODg7XHJcbiAgYm9yZGVyLXJhZGl1czogNHB4O1xyXG59XHJcblxyXG46Oi13ZWJraXQtc2Nyb2xsYmFyLXRodW1iOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kOiAjNjY2O1xyXG59Il19 */");

/***/ }),

/***/ "0IaG":
/*!************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/dialog.js ***!
  \************************************************************************/
/*! exports provided: MAT_DIALOG_DATA, MAT_DIALOG_DEFAULT_OPTIONS, MAT_DIALOG_SCROLL_STRATEGY, MAT_DIALOG_SCROLL_STRATEGY_FACTORY, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY, MatDialog, MatDialogActions, MatDialogClose, MatDialogConfig, MatDialogContainer, MatDialogContent, MatDialogModule, MatDialogRef, MatDialogTitle, _MatDialogBase, _MatDialogContainerBase, _closeDialogVia, matDialogAnimations, throwMatDialogContentAlreadyAttachedError */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DIALOG_DATA", function() { return MAT_DIALOG_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DIALOG_DEFAULT_OPTIONS", function() { return MAT_DIALOG_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DIALOG_SCROLL_STRATEGY", function() { return MAT_DIALOG_SCROLL_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DIALOG_SCROLL_STRATEGY_FACTORY", function() { return MAT_DIALOG_SCROLL_STRATEGY_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DIALOG_SCROLL_STRATEGY_PROVIDER", function() { return MAT_DIALOG_SCROLL_STRATEGY_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY", function() { return MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialog", function() { return MatDialog; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogActions", function() { return MatDialogActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogClose", function() { return MatDialogClose; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogConfig", function() { return MatDialogConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogContainer", function() { return MatDialogContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogContent", function() { return MatDialogContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogModule", function() { return MatDialogModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogRef", function() { return MatDialogRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDialogTitle", function() { return MatDialogTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatDialogBase", function() { return _MatDialogBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatDialogContainerBase", function() { return _MatDialogContainerBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_closeDialogVia", function() { return _closeDialogVia; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matDialogAnimations", function() { return matDialogAnimations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "throwMatDialogContentAlreadyAttachedError", function() { return throwMatDialogContentAlreadyAttachedError; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/overlay */ "rDax");
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/portal */ "+rOU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/animations */ "R0Ic");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Configuration for opening a modal dialog with the MatDialog service.
 */







function MatDialogContainer_ng_template_0_Template(rf, ctx) {}

var MatDialogConfig = function MatDialogConfig() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogConfig);

  /** The ARIA role of the dialog element. */
  this.role = 'dialog';
  /** Custom class for the overlay pane. */

  this.panelClass = '';
  /** Whether the dialog has a backdrop. */

  this.hasBackdrop = true;
  /** Custom class for the backdrop. */

  this.backdropClass = '';
  /** Whether the user can use escape or clicking on the backdrop to close the modal. */

  this.disableClose = false;
  /** Width of the dialog. */

  this.width = '';
  /** Height of the dialog. */

  this.height = '';
  /** Max-width of the dialog. If a number is provided, assumes pixel units. Defaults to 80vw. */

  this.maxWidth = '80vw';
  /** Data being injected into the child component. */

  this.data = null;
  /** ID of the element that describes the dialog. */

  this.ariaDescribedBy = null;
  /** ID of the element that labels the dialog. */

  this.ariaLabelledBy = null;
  /** Aria label to assign to the dialog element. */

  this.ariaLabel = null;
  /** Whether the dialog should focus the first focusable element on open. */

  this.autoFocus = true;
  /**
   * Whether the dialog should restore focus to the
   * previously-focused element, after it's closed.
   */

  this.restoreFocus = true;
  /**
   * Whether the dialog should close when the user goes backwards/forwards in history.
   * Note that this usually doesn't include clicking on links (unless the user is using
   * the `HashLocationStrategy`).
   */

  this.closeOnNavigation = true; // TODO(jelbourn): add configuration for lifecycle hooks, ARIA labelling.
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Animations used by MatDialog.
 * @docs-private
 */


var matDialogAnimations = {
  /** Animation that is applied on the dialog container by defalt. */
  dialogContainer: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["trigger"])('dialogContainer', [// Note: The `enter` animation transitions to `transform: none`, because for some reason
  // specifying the transform explicitly, causes IE both to blur the dialog content and
  // decimate the animation performance. Leaving it as `none` solves both issues.
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["state"])('void, exit', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["style"])({
    opacity: 0,
    transform: 'scale(0.7)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["state"])('enter', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["style"])({
    transform: 'none'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["transition"])('* => enter', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["animate"])('150ms cubic-bezier(0, 0, 0.2, 1)', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["style"])({
    transform: 'none',
    opacity: 1
  }))), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["transition"])('* => void, * => exit', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["animate"])('75ms cubic-bezier(0.4, 0.0, 0.2, 1)', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_13__["style"])({
    opacity: 0
  })))])
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Throws an exception for the case when a ComponentPortal is
 * attached to a DomPortalOutlet without an origin.
 * @docs-private
 */

function throwMatDialogContentAlreadyAttachedError() {
  throw Error('Attempting to attach dialog content after content is already attached');
}
/**
 * Base class for the `MatDialogContainer`. The base class does not implement
 * animations as these are left to implementers of the dialog container.
 */


var _MatDialogContainerBase = /*#__PURE__*/function (_BasePortalOutlet) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(_MatDialogContainerBase, _BasePortalOutlet);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(_MatDialogContainerBase);

  function _MatDialogContainerBase(_elementRef, _focusTrapFactory, _changeDetectorRef, _document,
  /** The dialog configuration. */
  _config, _focusMonitor) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, _MatDialogContainerBase);

    _this = _super.call(this);
    _this._elementRef = _elementRef;
    _this._focusTrapFactory = _focusTrapFactory;
    _this._changeDetectorRef = _changeDetectorRef;
    _this._config = _config;
    _this._focusMonitor = _focusMonitor;
    /** Emits when an animation state changes. */

    _this._animationStateChanged = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /** Element that was focused before the dialog was opened. Save this to restore upon close. */

    _this._elementFocusedBeforeDialogWasOpened = null;
    /**
     * Type of interaction that led to the dialog being closed. This is used to determine
     * whether the focus style will be applied when returning focus to its original location
     * after the dialog is closed.
     */

    _this._closeInteractionType = null;
    /**
     * Attaches a DOM portal to the dialog container.
     * @param portal Portal to be attached.
     * @deprecated To be turned into a method.
     * @breaking-change 10.0.0
     */

    _this.attachDomPortal = function (portal) {
      if (_this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throwMatDialogContentAlreadyAttachedError();
      }

      return _this._portalOutlet.attachDomPortal(portal);
    };

    _this._ariaLabelledBy = _config.ariaLabelledBy || null;
    _this._document = _document;
    return _this;
  }
  /** Initializes the dialog container with the attached content. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(_MatDialogContainerBase, [{
    key: "_initializeWithAttachedContent",
    value: function _initializeWithAttachedContent() {
      this._setupFocusTrap(); // Save the previously focused element. This element will be re-focused
      // when the dialog closes.


      this._capturePreviouslyFocusedElement(); // Move focus onto the dialog immediately in order to prevent the user
      // from accidentally opening multiple dialogs at the same time.


      this._focusDialogContainer();
    }
    /**
     * Attach a ComponentPortal as content to this dialog container.
     * @param portal Portal to be attached as the dialog content.
     */

  }, {
    key: "attachComponentPortal",
    value: function attachComponentPortal(portal) {
      if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throwMatDialogContentAlreadyAttachedError();
      }

      return this._portalOutlet.attachComponentPortal(portal);
    }
    /**
     * Attach a TemplatePortal as content to this dialog container.
     * @param portal Portal to be attached as the dialog content.
     */

  }, {
    key: "attachTemplatePortal",
    value: function attachTemplatePortal(portal) {
      if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throwMatDialogContentAlreadyAttachedError();
      }

      return this._portalOutlet.attachTemplatePortal(portal);
    }
    /** Moves focus back into the dialog if it was moved out. */

  }, {
    key: "_recaptureFocus",
    value: function _recaptureFocus() {
      if (!this._containsFocus()) {
        var focusContainer = !this._config.autoFocus || !this._focusTrap.focusInitialElement();

        if (focusContainer) {
          this._elementRef.nativeElement.focus();
        }
      }
    }
    /** Moves the focus inside the focus trap. */

  }, {
    key: "_trapFocus",
    value: function _trapFocus() {
      // If we were to attempt to focus immediately, then the content of the dialog would not yet be
      // ready in instances where change detection has to run first. To deal with this, we simply
      // wait for the microtask queue to be empty.
      if (this._config.autoFocus) {
        this._focusTrap.focusInitialElementWhenReady();
      } else if (!this._containsFocus()) {
        // Otherwise ensure that focus is on the dialog container. It's possible that a different
        // component tried to move focus while the open animation was running. See:
        // https://github.com/angular/components/issues/16215. Note that we only want to do this
        // if the focus isn't inside the dialog already, because it's possible that the consumer
        // turned off `autoFocus` in order to move focus themselves.
        this._elementRef.nativeElement.focus();
      }
    }
    /** Restores focus to the element that was focused before the dialog opened. */

  }, {
    key: "_restoreFocus",
    value: function _restoreFocus() {
      var previousElement = this._elementFocusedBeforeDialogWasOpened; // We need the extra check, because IE can set the `activeElement` to null in some cases.

      if (this._config.restoreFocus && previousElement && typeof previousElement.focus === 'function') {
        var activeElement = this._document.activeElement;
        var element = this._elementRef.nativeElement; // Make sure that focus is still inside the dialog or is on the body (usually because a
        // non-focusable element like the backdrop was clicked) before moving it. It's possible that
        // the consumer moved it themselves before the animation was done, in which case we shouldn't
        // do anything.

        if (!activeElement || activeElement === this._document.body || activeElement === element || element.contains(activeElement)) {
          if (this._focusMonitor) {
            this._focusMonitor.focusVia(previousElement, this._closeInteractionType);

            this._closeInteractionType = null;
          } else {
            previousElement.focus();
          }
        }
      }

      if (this._focusTrap) {
        this._focusTrap.destroy();
      }
    }
    /** Sets up the focus trap. */

  }, {
    key: "_setupFocusTrap",
    value: function _setupFocusTrap() {
      this._focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement);
    }
    /** Captures the element that was focused before the dialog was opened. */

  }, {
    key: "_capturePreviouslyFocusedElement",
    value: function _capturePreviouslyFocusedElement() {
      if (this._document) {
        this._elementFocusedBeforeDialogWasOpened = this._document.activeElement;
      }
    }
    /** Focuses the dialog container. */

  }, {
    key: "_focusDialogContainer",
    value: function _focusDialogContainer() {
      // Note that there is no focus method when rendering on the server.
      if (this._elementRef.nativeElement.focus) {
        this._elementRef.nativeElement.focus();
      }
    }
    /** Returns whether focus is inside the dialog. */

  }, {
    key: "_containsFocus",
    value: function _containsFocus() {
      var element = this._elementRef.nativeElement;
      var activeElement = this._document.activeElement;
      return element === activeElement || element.contains(activeElement);
    }
  }]);

  return _MatDialogContainerBase;
}(_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["BasePortalOutlet"]);

_MatDialogContainerBase.ɵfac = function _MatDialogContainerBase_Factory(t) {
  return new (t || _MatDialogContainerBase)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["FocusTrapFactory"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_9__["DOCUMENT"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MatDialogConfig), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["FocusMonitor"]));
};

_MatDialogContainerBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: _MatDialogContainerBase,
  viewQuery: function _MatDialogContainerBase_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"], 3);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx._portalOutlet = _t.first);
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵInheritDefinitionFeature"]]
});

_MatDialogContainerBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["FocusTrapFactory"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["DOCUMENT"]]
    }]
  }, {
    type: MatDialogConfig
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["FocusMonitor"]
  }];
};

_MatDialogContainerBase.propDecorators = {
  _portalOutlet: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
    args: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"], {
      static: true
    }]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](_MatDialogContainerBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["FocusTrapFactory"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_9__["DOCUMENT"]]
      }]
    }, {
      type: MatDialogConfig
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_12__["FocusMonitor"]
    }];
  }, {
    _portalOutlet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
      args: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"], {
        static: true
      }]
    }]
  });
})();
/**
 * Internal component that wraps user-provided dialog content.
 * Animation is based on https://material.io/guidelines/motion/choreography.html.
 * @docs-private
 */


var MatDialogContainer = /*#__PURE__*/function (_MatDialogContainerBa) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MatDialogContainer, _MatDialogContainerBa);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MatDialogContainer);

  function MatDialogContainer() {
    var _this2;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogContainer);

    _this2 = _super2.apply(this, arguments);
    /** State of the dialog animation. */

    _this2._state = 'enter';
    return _this2;
  }
  /** Callback, invoked whenever an animation on the host completes. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MatDialogContainer, [{
    key: "_onAnimationDone",
    value: function _onAnimationDone(_ref) {
      var toState = _ref.toState,
          totalTime = _ref.totalTime;

      if (toState === 'enter') {
        this._trapFocus();

        this._animationStateChanged.next({
          state: 'opened',
          totalTime: totalTime
        });
      } else if (toState === 'exit') {
        this._restoreFocus();

        this._animationStateChanged.next({
          state: 'closed',
          totalTime: totalTime
        });
      }
    }
    /** Callback, invoked when an animation on the host starts. */

  }, {
    key: "_onAnimationStart",
    value: function _onAnimationStart(_ref2) {
      var toState = _ref2.toState,
          totalTime = _ref2.totalTime;

      if (toState === 'enter') {
        this._animationStateChanged.next({
          state: 'opening',
          totalTime: totalTime
        });
      } else if (toState === 'exit' || toState === 'void') {
        this._animationStateChanged.next({
          state: 'closing',
          totalTime: totalTime
        });
      }
    }
    /** Starts the dialog exit animation. */

  }, {
    key: "_startExitAnimation",
    value: function _startExitAnimation() {
      this._state = 'exit'; // Mark the container for check so it can react if the
      // view container is using OnPush change detection.

      this._changeDetectorRef.markForCheck();
    }
  }]);

  return MatDialogContainer;
}(_MatDialogContainerBase);

MatDialogContainer.ɵfac = function MatDialogContainer_Factory(t) {
  return ɵMatDialogContainer_BaseFactory(t || MatDialogContainer);
};

MatDialogContainer.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: MatDialogContainer,
  selectors: [["mat-dialog-container"]],
  hostAttrs: ["tabindex", "-1", "aria-modal", "true", 1, "mat-dialog-container"],
  hostVars: 6,
  hostBindings: function MatDialogContainer_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsyntheticHostListener"]("@dialogContainer.start", function MatDialogContainer_animation_dialogContainer_start_HostBindingHandler($event) {
        return ctx._onAnimationStart($event);
      })("@dialogContainer.done", function MatDialogContainer_animation_dialogContainer_done_HostBindingHandler($event) {
        return ctx._onAnimationDone($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵhostProperty"]("id", ctx._id);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("role", ctx._config.role)("aria-labelledby", ctx._config.ariaLabel ? null : ctx._ariaLabelledBy)("aria-label", ctx._config.ariaLabel)("aria-describedby", ctx._config.ariaDescribedBy || null);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsyntheticHostProperty"]("@dialogContainer", ctx._state);
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵInheritDefinitionFeature"]],
  decls: 1,
  vars: 0,
  consts: [["cdkPortalOutlet", ""]],
  template: function MatDialogContainer_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtemplate"](0, MatDialogContainer_ng_template_0_Template, 0, 0, "ng-template", 0);
    }
  },
  directives: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"]],
  styles: [".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n"],
  encapsulation: 2,
  data: {
    animation: [matDialogAnimations.dialogContainer]
  }
});
var ɵMatDialogContainer_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetInheritedFactory"](MatDialogContainer);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatDialogContainer, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: 'mat-dialog-container',
      template: "<ng-template cdkPortalOutlet></ng-template>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None,
      // Using OnPush for dialogs caused some G3 sync issues. Disabled until we can track them down.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectionStrategy"].Default,
      animations: [matDialogAnimations.dialogContainer],
      host: {
        'class': 'mat-dialog-container',
        'tabindex': '-1',
        'aria-modal': 'true',
        '[id]': '_id',
        '[attr.role]': '_config.role',
        '[attr.aria-labelledby]': '_config.ariaLabel ? null : _ariaLabelledBy',
        '[attr.aria-label]': '_config.ariaLabel',
        '[attr.aria-describedby]': '_config.ariaDescribedBy || null',
        '[@dialogContainer]': '_state',
        '(@dialogContainer.start)': '_onAnimationStart($event)',
        '(@dialogContainer.done)': '_onAnimationDone($event)'
      },
      styles: [".mat-dialog-container{display:block;padding:24px;border-radius:4px;box-sizing:border-box;overflow:auto;outline:0;width:100%;height:100%;min-height:inherit;max-height:inherit}.cdk-high-contrast-active .mat-dialog-container{outline:solid 1px}.mat-dialog-content{display:block;margin:0 -24px;padding:0 24px;max-height:65vh;overflow:auto;-webkit-overflow-scrolling:touch}.mat-dialog-title{margin:0 0 20px;display:block}.mat-dialog-actions{padding:8px 0;display:flex;flex-wrap:wrap;min-height:52px;align-items:center;margin-bottom:-24px}.mat-dialog-actions[align=end]{justify-content:flex-end}.mat-dialog-actions[align=center]{justify-content:center}.mat-dialog-actions .mat-button-base+.mat-button-base,.mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:8px}[dir=rtl] .mat-dialog-actions .mat-button-base+.mat-button-base,[dir=rtl] .mat-dialog-actions .mat-mdc-button-base+.mat-mdc-button-base{margin-left:0;margin-right:8px}\n"]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO(jelbourn): resizing
// Counter for unique dialog ids.


var uniqueId = 0;
/**
 * Reference to a dialog opened via the MatDialog service.
 */

var MatDialogRef = /*#__PURE__*/function () {
  function MatDialogRef(_overlayRef, _containerInstance) {
    var _this3 = this;

    var id = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : "mat-dialog-".concat(uniqueId++);

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogRef);

    this._overlayRef = _overlayRef;
    this._containerInstance = _containerInstance;
    this.id = id;
    /** Whether the user is allowed to close the dialog. */

    this.disableClose = this._containerInstance._config.disableClose;
    /** Subject for notifying the user that the dialog has finished opening. */

    this._afterOpened = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Subject for notifying the user that the dialog has finished closing. */

    this._afterClosed = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Subject for notifying the user that the dialog has started closing. */

    this._beforeClosed = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Current state of the dialog. */

    this._state = 0
    /* OPEN */
    ; // Pass the id along to the container.

    _containerInstance._id = id; // Emit when opening animation completes

    _containerInstance._animationStateChanged.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (event) {
      return event.state === 'opened';
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["take"])(1)).subscribe(function () {
      _this3._afterOpened.next();

      _this3._afterOpened.complete();
    }); // Dispose overlay when closing animation is complete


    _containerInstance._animationStateChanged.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (event) {
      return event.state === 'closed';
    }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["take"])(1)).subscribe(function () {
      clearTimeout(_this3._closeFallbackTimeout);

      _this3._finishDialogClose();
    });

    _overlayRef.detachments().subscribe(function () {
      _this3._beforeClosed.next(_this3._result);

      _this3._beforeClosed.complete();

      _this3._afterClosed.next(_this3._result);

      _this3._afterClosed.complete();

      _this3.componentInstance = null;

      _this3._overlayRef.dispose();
    });

    _overlayRef.keydownEvents().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (event) {
      return event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_14__["ESCAPE"] && !_this3.disableClose && !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_14__["hasModifierKey"])(event);
    })).subscribe(function (event) {
      event.preventDefault();

      _closeDialogVia(_this3, 'keyboard');
    });

    _overlayRef.backdropClick().subscribe(function () {
      if (_this3.disableClose) {
        _this3._containerInstance._recaptureFocus();
      } else {
        _closeDialogVia(_this3, 'mouse');
      }
    });
  }
  /**
   * Close the dialog.
   * @param dialogResult Optional result to return to the dialog opener.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MatDialogRef, [{
    key: "close",
    value: function close(dialogResult) {
      var _this4 = this;

      this._result = dialogResult; // Transition the backdrop in parallel to the dialog.

      this._containerInstance._animationStateChanged.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["filter"])(function (event) {
        return event.state === 'closing';
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["take"])(1)).subscribe(function (event) {
        _this4._beforeClosed.next(dialogResult);

        _this4._beforeClosed.complete();

        _this4._overlayRef.detachBackdrop(); // The logic that disposes of the overlay depends on the exit animation completing, however
        // it isn't guaranteed if the parent view is destroyed while it's running. Add a fallback
        // timeout which will clean everything up if the animation hasn't fired within the specified
        // amount of time plus 100ms. We don't need to run this outside the NgZone, because for the
        // vast majority of cases the timeout will have been cleared before it has the chance to fire.


        _this4._closeFallbackTimeout = setTimeout(function () {
          return _this4._finishDialogClose();
        }, event.totalTime + 100);
      });

      this._state = 1
      /* CLOSING */
      ;

      this._containerInstance._startExitAnimation();
    }
    /**
     * Gets an observable that is notified when the dialog is finished opening.
     */

  }, {
    key: "afterOpened",
    value: function afterOpened() {
      return this._afterOpened;
    }
    /**
     * Gets an observable that is notified when the dialog is finished closing.
     */

  }, {
    key: "afterClosed",
    value: function afterClosed() {
      return this._afterClosed;
    }
    /**
     * Gets an observable that is notified when the dialog has started closing.
     */

  }, {
    key: "beforeClosed",
    value: function beforeClosed() {
      return this._beforeClosed;
    }
    /**
     * Gets an observable that emits when the overlay's backdrop has been clicked.
     */

  }, {
    key: "backdropClick",
    value: function backdropClick() {
      return this._overlayRef.backdropClick();
    }
    /**
     * Gets an observable that emits when keydown events are targeted on the overlay.
     */

  }, {
    key: "keydownEvents",
    value: function keydownEvents() {
      return this._overlayRef.keydownEvents();
    }
    /**
     * Updates the dialog's position.
     * @param position New dialog position.
     */

  }, {
    key: "updatePosition",
    value: function updatePosition(position) {
      var strategy = this._getPositionStrategy();

      if (position && (position.left || position.right)) {
        position.left ? strategy.left(position.left) : strategy.right(position.right);
      } else {
        strategy.centerHorizontally();
      }

      if (position && (position.top || position.bottom)) {
        position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);
      } else {
        strategy.centerVertically();
      }

      this._overlayRef.updatePosition();

      return this;
    }
    /**
     * Updates the dialog's width and height.
     * @param width New width of the dialog.
     * @param height New height of the dialog.
     */

  }, {
    key: "updateSize",
    value: function updateSize() {
      var width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';

      this._getPositionStrategy().width(width).height(height);

      this._overlayRef.updatePosition();

      return this;
    }
    /** Add a CSS class or an array of classes to the overlay pane. */

  }, {
    key: "addPanelClass",
    value: function addPanelClass(classes) {
      this._overlayRef.addPanelClass(classes);

      return this;
    }
    /** Remove a CSS class or an array of classes from the overlay pane. */

  }, {
    key: "removePanelClass",
    value: function removePanelClass(classes) {
      this._overlayRef.removePanelClass(classes);

      return this;
    }
    /** Gets the current state of the dialog's lifecycle. */

  }, {
    key: "getState",
    value: function getState() {
      return this._state;
    }
    /**
     * Finishes the dialog close by updating the state of the dialog
     * and disposing the overlay.
     */

  }, {
    key: "_finishDialogClose",
    value: function _finishDialogClose() {
      this._state = 2
      /* CLOSED */
      ;

      this._overlayRef.dispose();
    }
    /** Fetches the position strategy object from the overlay ref. */

  }, {
    key: "_getPositionStrategy",
    value: function _getPositionStrategy() {
      return this._overlayRef.getConfig().positionStrategy;
    }
  }]);

  return MatDialogRef;
}();
/**
 * Closes the dialog with the specified interaction type. This is currently not part of
 * `MatDialogRef` as that would conflict with custom dialog ref mocks provided in tests.
 * More details. See: https://github.com/angular/components/pull/9257#issuecomment-651342226.
 */
// TODO: TODO: Move this back into `MatDialogRef` when we provide an official mock dialog ref.


function _closeDialogVia(ref, interactionType, result) {
  // Some mock dialog ref instances in tests do not have the `_containerInstance` property.
  // For those, we keep the behavior as is and do not deal with the interaction type.
  if (ref._containerInstance !== undefined) {
    ref._containerInstance._closeInteractionType = interactionType;
  }

  return ref.close(result);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token that can be used to access the data that was passed in to a dialog. */


var MAT_DIALOG_DATA = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('MatDialogData');
/** Injection token that can be used to specify default dialog options. */

var MAT_DIALOG_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('mat-dialog-default-options');
/** Injection token that determines the scroll handling while the dialog is open. */

var MAT_DIALOG_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('mat-dialog-scroll-strategy');
/** @docs-private */

function MAT_DIALOG_SCROLL_STRATEGY_FACTORY(overlay) {
  return function () {
    return overlay.scrollStrategies.block();
  };
}
/** @docs-private */


function MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {
  return function () {
    return overlay.scrollStrategies.block();
  };
}
/** @docs-private */


var MAT_DIALOG_SCROLL_STRATEGY_PROVIDER = {
  provide: MAT_DIALOG_SCROLL_STRATEGY,
  deps: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]],
  useFactory: MAT_DIALOG_SCROLL_STRATEGY_PROVIDER_FACTORY
};
/**
 * Base class for dialog services. The base dialog service allows
 * for arbitrary dialog refs and dialog container components.
 */

var _MatDialogBase = /*#__PURE__*/function () {
  function _MatDialogBase(_overlay, _injector, _defaultOptions, _parentDialog, _overlayContainer, scrollStrategy, _dialogRefConstructor, _dialogContainerType, _dialogDataToken) {
    var _this5 = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, _MatDialogBase);

    this._overlay = _overlay;
    this._injector = _injector;
    this._defaultOptions = _defaultOptions;
    this._parentDialog = _parentDialog;
    this._overlayContainer = _overlayContainer;
    this._dialogRefConstructor = _dialogRefConstructor;
    this._dialogContainerType = _dialogContainerType;
    this._dialogDataToken = _dialogDataToken;
    this._openDialogsAtThisLevel = [];
    this._afterAllClosedAtThisLevel = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    this._afterOpenedAtThisLevel = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    this._ariaHiddenElements = new Map(); // TODO (jelbourn): tighten the typing right-hand side of this expression.

    /**
     * Stream that emits when all open dialog have finished closing.
     * Will emit on subscribe if there are no open dialogs to begin with.
     */

    this.afterAllClosed = Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["defer"])(function () {
      return _this5.openDialogs.length ? _this5._getAfterAllClosed() : _this5._getAfterAllClosed().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["startWith"])(undefined));
    });
    this._scrollStrategy = scrollStrategy;
  }
  /** Keeps track of the currently-open dialogs. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(_MatDialogBase, [{
    key: "openDialogs",
    get: function get() {
      return this._parentDialog ? this._parentDialog.openDialogs : this._openDialogsAtThisLevel;
    }
    /** Stream that emits when a dialog has been opened. */

  }, {
    key: "afterOpened",
    get: function get() {
      return this._parentDialog ? this._parentDialog.afterOpened : this._afterOpenedAtThisLevel;
    }
  }, {
    key: "_getAfterAllClosed",
    value: function _getAfterAllClosed() {
      var parent = this._parentDialog;
      return parent ? parent._getAfterAllClosed() : this._afterAllClosedAtThisLevel;
    }
    /**
     * Opens a modal dialog containing the given component.
     * @param componentOrTemplateRef Type of the component to load into the dialog,
     *     or a TemplateRef to instantiate as the dialog content.
     * @param config Extra configuration options.
     * @returns Reference to the newly-opened dialog.
     */

  }, {
    key: "open",
    value: function open(componentOrTemplateRef, config) {
      var _this6 = this;

      config = _applyConfigDefaults(config, this._defaultOptions || new MatDialogConfig());

      if (config.id && this.getDialogById(config.id) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error("Dialog with id \"".concat(config.id, "\" exists already. The dialog id must be unique."));
      }

      var overlayRef = this._createOverlay(config);

      var dialogContainer = this._attachDialogContainer(overlayRef, config);

      var dialogRef = this._attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config); // If this is the first dialog that we're opening, hide all the non-overlay content.


      if (!this.openDialogs.length) {
        this._hideNonDialogContentFromAssistiveTechnology();
      }

      this.openDialogs.push(dialogRef);
      dialogRef.afterClosed().subscribe(function () {
        return _this6._removeOpenDialog(dialogRef);
      });
      this.afterOpened.next(dialogRef); // Notify the dialog container that the content has been attached.

      dialogContainer._initializeWithAttachedContent();

      return dialogRef;
    }
    /**
     * Closes all of the currently-open dialogs.
     */

  }, {
    key: "closeAll",
    value: function closeAll() {
      this._closeDialogs(this.openDialogs);
    }
    /**
     * Finds an open dialog by its id.
     * @param id ID to use when looking up the dialog.
     */

  }, {
    key: "getDialogById",
    value: function getDialogById(id) {
      return this.openDialogs.find(function (dialog) {
        return dialog.id === id;
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      // Only close the dialogs at this level on destroy
      // since the parent service may still be active.
      this._closeDialogs(this._openDialogsAtThisLevel);

      this._afterAllClosedAtThisLevel.complete();

      this._afterOpenedAtThisLevel.complete();
    }
    /**
     * Creates the overlay into which the dialog will be loaded.
     * @param config The dialog configuration.
     * @returns A promise resolving to the OverlayRef for the created overlay.
     */

  }, {
    key: "_createOverlay",
    value: function _createOverlay(config) {
      var overlayConfig = this._getOverlayConfig(config);

      return this._overlay.create(overlayConfig);
    }
    /**
     * Creates an overlay config from a dialog config.
     * @param dialogConfig The dialog configuration.
     * @returns The overlay configuration.
     */

  }, {
    key: "_getOverlayConfig",
    value: function _getOverlayConfig(dialogConfig) {
      var state = new _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayConfig"]({
        positionStrategy: this._overlay.position().global(),
        scrollStrategy: dialogConfig.scrollStrategy || this._scrollStrategy(),
        panelClass: dialogConfig.panelClass,
        hasBackdrop: dialogConfig.hasBackdrop,
        direction: dialogConfig.direction,
        minWidth: dialogConfig.minWidth,
        minHeight: dialogConfig.minHeight,
        maxWidth: dialogConfig.maxWidth,
        maxHeight: dialogConfig.maxHeight,
        disposeOnNavigation: dialogConfig.closeOnNavigation
      });

      if (dialogConfig.backdropClass) {
        state.backdropClass = dialogConfig.backdropClass;
      }

      return state;
    }
    /**
     * Attaches a dialog container to a dialog's already-created overlay.
     * @param overlay Reference to the dialog's underlying overlay.
     * @param config The dialog configuration.
     * @returns A promise resolving to a ComponentRef for the attached container.
     */

  }, {
    key: "_attachDialogContainer",
    value: function _attachDialogContainer(overlay, config) {
      var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;
      var injector = _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"].create({
        parent: userInjector || this._injector,
        providers: [{
          provide: MatDialogConfig,
          useValue: config
        }]
      });
      var containerPortal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["ComponentPortal"](this._dialogContainerType, config.viewContainerRef, injector, config.componentFactoryResolver);
      var containerRef = overlay.attach(containerPortal);
      return containerRef.instance;
    }
    /**
     * Attaches the user-provided component to the already-created dialog container.
     * @param componentOrTemplateRef The type of component being loaded into the dialog,
     *     or a TemplateRef to instantiate as the content.
     * @param dialogContainer Reference to the wrapping dialog container.
     * @param overlayRef Reference to the overlay in which the dialog resides.
     * @param config The dialog configuration.
     * @returns A promise resolving to the MatDialogRef that should be returned to the user.
     */

  }, {
    key: "_attachDialogContent",
    value: function _attachDialogContent(componentOrTemplateRef, dialogContainer, overlayRef, config) {
      // Create a reference to the dialog we're creating in order to give the user a handle
      // to modify and close it.
      var dialogRef = new this._dialogRefConstructor(overlayRef, dialogContainer, config.id);

      if (componentOrTemplateRef instanceof _angular_core__WEBPACK_IMPORTED_MODULE_6__["TemplateRef"]) {
        dialogContainer.attachTemplatePortal(new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["TemplatePortal"](componentOrTemplateRef, null, {
          $implicit: config.data,
          dialogRef: dialogRef
        }));
      } else {
        var injector = this._createInjector(config, dialogRef, dialogContainer);

        var contentRef = dialogContainer.attachComponentPortal(new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["ComponentPortal"](componentOrTemplateRef, config.viewContainerRef, injector));
        dialogRef.componentInstance = contentRef.instance;
      }

      dialogRef.updateSize(config.width, config.height).updatePosition(config.position);
      return dialogRef;
    }
    /**
     * Creates a custom injector to be used inside the dialog. This allows a component loaded inside
     * of a dialog to close itself and, optionally, to return a value.
     * @param config Config object that is used to construct the dialog.
     * @param dialogRef Reference to the dialog.
     * @param dialogContainer Dialog container element that wraps all of the contents.
     * @returns The custom injector that can be used inside the dialog.
     */

  }, {
    key: "_createInjector",
    value: function _createInjector(config, dialogRef, dialogContainer) {
      var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector; // The dialog container should be provided as the dialog container and the dialog's
      // content are created out of the same `ViewContainerRef` and as such, are siblings
      // for injector purposes. To allow the hierarchy that is expected, the dialog
      // container is explicitly provided in the injector.

      var providers = [{
        provide: this._dialogContainerType,
        useValue: dialogContainer
      }, {
        provide: this._dialogDataToken,
        useValue: config.data
      }, {
        provide: this._dialogRefConstructor,
        useValue: dialogRef
      }];

      if (config.direction && (!userInjector || !userInjector.get(_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__["Directionality"], null))) {
        providers.push({
          provide: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__["Directionality"],
          useValue: {
            value: config.direction,
            change: Object(rxjs__WEBPACK_IMPORTED_MODULE_10__["of"])()
          }
        });
      }

      return _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"].create({
        parent: userInjector || this._injector,
        providers: providers
      });
    }
    /**
     * Removes a dialog from the array of open dialogs.
     * @param dialogRef Dialog to be removed.
     */

  }, {
    key: "_removeOpenDialog",
    value: function _removeOpenDialog(dialogRef) {
      var index = this.openDialogs.indexOf(dialogRef);

      if (index > -1) {
        this.openDialogs.splice(index, 1); // If all the dialogs were closed, remove/restore the `aria-hidden`
        // to a the siblings and emit to the `afterAllClosed` stream.

        if (!this.openDialogs.length) {
          this._ariaHiddenElements.forEach(function (previousValue, element) {
            if (previousValue) {
              element.setAttribute('aria-hidden', previousValue);
            } else {
              element.removeAttribute('aria-hidden');
            }
          });

          this._ariaHiddenElements.clear();

          this._getAfterAllClosed().next();
        }
      }
    }
    /**
     * Hides all of the content that isn't an overlay from assistive technology.
     */

  }, {
    key: "_hideNonDialogContentFromAssistiveTechnology",
    value: function _hideNonDialogContentFromAssistiveTechnology() {
      var overlayContainer = this._overlayContainer.getContainerElement(); // Ensure that the overlay container is attached to the DOM.


      if (overlayContainer.parentElement) {
        var siblings = overlayContainer.parentElement.children;

        for (var i = siblings.length - 1; i > -1; i--) {
          var sibling = siblings[i];

          if (sibling !== overlayContainer && sibling.nodeName !== 'SCRIPT' && sibling.nodeName !== 'STYLE' && !sibling.hasAttribute('aria-live')) {
            this._ariaHiddenElements.set(sibling, sibling.getAttribute('aria-hidden'));

            sibling.setAttribute('aria-hidden', 'true');
          }
        }
      }
    }
    /** Closes all of the dialogs in an array. */

  }, {
    key: "_closeDialogs",
    value: function _closeDialogs(dialogs) {
      var i = dialogs.length;

      while (i--) {
        // The `_openDialogs` property isn't updated after close until the rxjs subscription
        // runs on the next microtask, in addition to modifying the array as we're going
        // through it. We loop through all of them and call close without assuming that
        // they'll be removed from the list instantaneously.
        dialogs[i].close();
      }
    }
  }]);

  return _MatDialogBase;
}();

_MatDialogBase.ɵfac = function _MatDialogBase_Factory(t) {
  return new (t || _MatDialogBase)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](undefined), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](undefined), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayContainer"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](undefined), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Type"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Type"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]));
};

_MatDialogBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: _MatDialogBase
});

_MatDialogBase.ctorParameters = function () {
  return [{
    type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
  }, {
    type: undefined
  }, {
    type: undefined
  }, {
    type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayContainer"]
  }, {
    type: undefined
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Type"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Type"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](_MatDialogBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"]
  }], function () {
    return [{
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
    }, {
      type: undefined
    }, {
      type: undefined
    }, {
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayContainer"]
    }, {
      type: undefined
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Type"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Type"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]
    }];
  }, null);
})();
/**
 * Service to open Material Design modal dialogs.
 */


var MatDialog = /*#__PURE__*/function (_MatDialogBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MatDialog, _MatDialogBase2);

  var _super3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MatDialog);

  function MatDialog(overlay, injector,
  /**
   * @deprecated `_location` parameter to be removed.
   * @breaking-change 10.0.0
   */
  location, defaultOptions, scrollStrategy, parentDialog, overlayContainer) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialog);

    return _super3.call(this, overlay, injector, defaultOptions, parentDialog, overlayContainer, scrollStrategy, MatDialogRef, MatDialogContainer, MAT_DIALOG_DATA);
  }

  return MatDialog;
}(_MatDialogBase);

MatDialog.ɵfac = function MatDialog_Factory(t) {
  return new (t || MatDialog)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_9__["Location"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](MAT_DIALOG_DEFAULT_OPTIONS, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](MAT_DIALOG_SCROLL_STRATEGY), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](MatDialog, 12), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayContainer"]));
};

MatDialog.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjectable"]({
  token: MatDialog,
  factory: MatDialog.ɵfac
});

MatDialog.ctorParameters = function () {
  return [{
    type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
  }, {
    type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["Location"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: MatDialogConfig,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [MAT_DIALOG_DEFAULT_OPTIONS]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [MAT_DIALOG_SCROLL_STRATEGY]
    }]
  }, {
    type: MatDialog,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["SkipSelf"]
    }]
  }, {
    type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayContainer"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatDialog, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injectable"]
  }], function () {
    return [{
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Injector"]
    }, {
      type: _angular_common__WEBPACK_IMPORTED_MODULE_9__["Location"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: MatDialogConfig,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [MAT_DIALOG_DEFAULT_OPTIONS]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [MAT_DIALOG_SCROLL_STRATEGY]
      }]
    }, {
      type: MatDialog,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["SkipSelf"]
      }]
    }, {
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayContainer"]
    }];
  }, null);
})();
/**
 * Applies default options to the dialog config.
 * @param config Config to be modified.
 * @param defaultOptions Default options provided.
 * @returns The new configuration object.
 */


function _applyConfigDefaults(config, defaultOptions) {
  return Object.assign(Object.assign({}, defaultOptions), config);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Counter used to generate unique IDs for dialog elements. */


var dialogElementUid = 0;
/**
 * Button that will close the current dialog.
 */

var MatDialogClose = /*#__PURE__*/function () {
  function MatDialogClose( // The dialog title directive is always used in combination with a `MatDialogRef`.
  // tslint:disable-next-line: lightweight-tokens
  dialogRef, _elementRef, _dialog) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogClose);

    this.dialogRef = dialogRef;
    this._elementRef = _elementRef;
    this._dialog = _dialog;
    /** Default to "button" to prevents accidental form submits. */

    this.type = 'button';
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MatDialogClose, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      if (!this.dialogRef) {
        // When this directive is included in a dialog via TemplateRef (rather than being
        // in a Component), the DialogRef isn't available via injection because embedded
        // views cannot be given a custom injector. Instead, we look up the DialogRef by
        // ID. This must occur in `onInit`, as the ID binding for the dialog container won't
        // be resolved at constructor time.
        this.dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var proxiedChange = changes['_matDialogClose'] || changes['_matDialogCloseResult'];

      if (proxiedChange) {
        this.dialogResult = proxiedChange.currentValue;
      }
    }
  }, {
    key: "_onButtonClick",
    value: function _onButtonClick(event) {
      // Determinate the focus origin using the click event, because using the FocusMonitor will
      // result in incorrect origins. Most of the time, close buttons will be auto focused in the
      // dialog, and therefore clicking the button won't result in a focus change. This means that
      // the FocusMonitor won't detect any origin change, and will always output `program`.
      _closeDialogVia(this.dialogRef, event.screenX === 0 && event.screenY === 0 ? 'keyboard' : 'mouse', this.dialogResult);
    }
  }]);

  return MatDialogClose;
}();

MatDialogClose.ɵfac = function MatDialogClose_Factory(t) {
  return new (t || MatDialogClose)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MatDialogRef, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MatDialog));
};

MatDialogClose.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: MatDialogClose,
  selectors: [["", "mat-dialog-close", ""], ["", "matDialogClose", ""]],
  hostVars: 2,
  hostBindings: function MatDialogClose_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("click", function MatDialogClose_click_HostBindingHandler($event) {
        return ctx._onButtonClick($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("aria-label", ctx.ariaLabel || null)("type", ctx.type);
    }
  },
  inputs: {
    type: "type",
    dialogResult: ["mat-dialog-close", "dialogResult"],
    ariaLabel: ["aria-label", "ariaLabel"],
    _matDialogClose: ["matDialogClose", "_matDialogClose"]
  },
  exportAs: ["matDialogClose"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵNgOnChangesFeature"]]
});

MatDialogClose.ctorParameters = function () {
  return [{
    type: MatDialogRef,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }, {
    type: MatDialog
  }];
};

MatDialogClose.propDecorators = {
  ariaLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['aria-label']
  }],
  type: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  dialogResult: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['mat-dialog-close']
  }],
  _matDialogClose: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['matDialogClose']
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatDialogClose, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: '[mat-dialog-close], [matDialogClose]',
      exportAs: 'matDialogClose',
      host: {
        '(click)': '_onButtonClick($event)',
        '[attr.aria-label]': 'ariaLabel || null',
        '[attr.type]': 'type'
      }
    }]
  }], function () {
    return [{
      type: MatDialogRef,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }, {
      type: MatDialog
    }];
  }, {
    type: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    dialogResult: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['mat-dialog-close']
    }],
    ariaLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['aria-label']
    }],
    _matDialogClose: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['matDialogClose']
    }]
  });
})();
/**
 * Title of a dialog element. Stays fixed to the top of the dialog when scrolling.
 */


var MatDialogTitle = /*#__PURE__*/function () {
  function MatDialogTitle( // The dialog title directive is always used in combination with a `MatDialogRef`.
  // tslint:disable-next-line: lightweight-tokens
  _dialogRef, _elementRef, _dialog) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogTitle);

    this._dialogRef = _dialogRef;
    this._elementRef = _elementRef;
    this._dialog = _dialog;
    this.id = "mat-dialog-title-".concat(dialogElementUid++);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MatDialogTitle, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this7 = this;

      if (!this._dialogRef) {
        this._dialogRef = getClosestDialog(this._elementRef, this._dialog.openDialogs);
      }

      if (this._dialogRef) {
        Promise.resolve().then(function () {
          var container = _this7._dialogRef._containerInstance;

          if (container && !container._ariaLabelledBy) {
            container._ariaLabelledBy = _this7.id;
          }
        });
      }
    }
  }]);

  return MatDialogTitle;
}();

MatDialogTitle.ɵfac = function MatDialogTitle_Factory(t) {
  return new (t || MatDialogTitle)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MatDialogRef, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MatDialog));
};

MatDialogTitle.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: MatDialogTitle,
  selectors: [["", "mat-dialog-title", ""], ["", "matDialogTitle", ""]],
  hostAttrs: [1, "mat-dialog-title"],
  hostVars: 1,
  hostBindings: function MatDialogTitle_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵhostProperty"]("id", ctx.id);
    }
  },
  inputs: {
    id: "id"
  },
  exportAs: ["matDialogTitle"]
});

MatDialogTitle.ctorParameters = function () {
  return [{
    type: MatDialogRef,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }, {
    type: MatDialog
  }];
};

MatDialogTitle.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatDialogTitle, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: '[mat-dialog-title], [matDialogTitle]',
      exportAs: 'matDialogTitle',
      host: {
        'class': 'mat-dialog-title',
        '[id]': 'id'
      }
    }]
  }], function () {
    return [{
      type: MatDialogRef,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }, {
      type: MatDialog
    }];
  }, {
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }]
  });
})();
/**
 * Scrollable content container of a dialog.
 */


var MatDialogContent = function MatDialogContent() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogContent);
};

MatDialogContent.ɵfac = function MatDialogContent_Factory(t) {
  return new (t || MatDialogContent)();
};

MatDialogContent.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: MatDialogContent,
  selectors: [["", "mat-dialog-content", ""], ["mat-dialog-content"], ["", "matDialogContent", ""]],
  hostAttrs: [1, "mat-dialog-content"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatDialogContent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]",
      host: {
        'class': 'mat-dialog-content'
      }
    }]
  }], null, null);
})();
/**
 * Container for the bottom action buttons in a dialog.
 * Stays fixed to the bottom when scrolling.
 */


var MatDialogActions = function MatDialogActions() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogActions);
};

MatDialogActions.ɵfac = function MatDialogActions_Factory(t) {
  return new (t || MatDialogActions)();
};

MatDialogActions.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: MatDialogActions,
  selectors: [["", "mat-dialog-actions", ""], ["mat-dialog-actions"], ["", "matDialogActions", ""]],
  hostAttrs: [1, "mat-dialog-actions"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatDialogActions, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: "[mat-dialog-actions], mat-dialog-actions, [matDialogActions]",
      host: {
        'class': 'mat-dialog-actions'
      }
    }]
  }], null, null);
})();
/**
 * Finds the closest MatDialogRef to an element by looking at the DOM.
 * @param element Element relative to which to look for a dialog.
 * @param openDialogs References to the currently-open dialogs.
 */


function getClosestDialog(element, openDialogs) {
  var parent = element.nativeElement.parentElement;

  while (parent && !parent.classList.contains('mat-dialog-container')) {
    parent = parent.parentElement;
  }

  return parent ? openDialogs.find(function (dialog) {
    return dialog.id === parent.id;
  }) : null;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatDialogModule = function MatDialogModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatDialogModule);
};

MatDialogModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: MatDialogModule
});
MatDialogModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  factory: function MatDialogModule_Factory(t) {
    return new (t || MatDialogModule)();
  },
  providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],
  imports: [[_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["PortalModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](MatDialogModule, {
    declarations: function declarations() {
      return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent];
    },
    imports: function imports() {
      return [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["PortalModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]];
    },
    exports: function exports() {
      return [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatDialogModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModule"],
    args: [{
      imports: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["PortalModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]],
      exports: [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogContent, MatDialogActions, _angular_material_core__WEBPACK_IMPORTED_MODULE_7__["MatCommonModule"]],
      declarations: [MatDialogContainer, MatDialogClose, MatDialogTitle, MatDialogActions, MatDialogContent],
      providers: [MatDialog, MAT_DIALOG_SCROLL_STRATEGY_PROVIDER],
      entryComponents: [MatDialogContainer]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "1/4N":
/*!*********************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/FetchHttpClient.js ***!
  \*********************************************************************/
/*! exports provided: FetchHttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FetchHttpClient", function() { return FetchHttpClient; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Errors */ "9BRb");
/* harmony import */ var _HttpClient__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./HttpClient */ "Rlqr");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Utils */ "ftFU");







// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.




var FetchHttpClient = /*#__PURE__*/function (_HttpClient) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_5__["default"])(FetchHttpClient, _HttpClient);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_6__["default"])(FetchHttpClient);

  function FetchHttpClient(logger) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, FetchHttpClient);

    _this = _super.call(this);
    _this._logger = logger; // Node added a fetch implementation to the global scope starting in v18.
    // We need to add a cookie jar in node to be able to share cookies with WebSocket

    if (typeof fetch === "undefined" || _Utils__WEBPACK_IMPORTED_MODULE_10__["Platform"].isNode) {
      // In order to ignore the dynamic require in webpack builds we need to do this magic
      // @ts-ignore: TS doesn't know about these names
      var requireFunc =  true ? require : undefined; // Cookies aren't automatically handled in Node so we need to add a CookieJar to preserve cookies across requests

      _this._jar = new (requireFunc("tough-cookie").CookieJar)();

      if (typeof fetch === "undefined") {
        _this._fetchType = requireFunc("node-fetch");
      } else {
        // Use fetch from Node if available
        _this._fetchType = fetch;
      } // node-fetch doesn't have a nice API for getting and setting cookies
      // fetch-cookie will wrap a fetch implementation with a default CookieJar or a provided one


      _this._fetchType = requireFunc("fetch-cookie")(_this._fetchType, _this._jar);
    } else {
      _this._fetchType = fetch.bind(Object(_Utils__WEBPACK_IMPORTED_MODULE_10__["getGlobalThis"])());
    }

    if (typeof AbortController === "undefined") {
      // In order to ignore the dynamic require in webpack builds we need to do this magic
      // @ts-ignore: TS doesn't know about these names
      var _requireFunc =  true ? require : undefined; // Node needs EventListener methods on AbortController which our custom polyfill doesn't provide


      _this._abortControllerType = _requireFunc("abort-controller");
    } else {
      _this._abortControllerType = AbortController;
    }

    return _this;
  }
  /** @inheritDoc */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(FetchHttpClient, [{
    key: "send",
    value: function () {
      var _send = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(request) {
        var _this2 = this;

        var abortController, error, timeoutId, msTimeout, response, errorMessage, content, payload;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(request.abortSignal && request.abortSignal.aborted)) {
                  _context.next = 2;
                  break;
                }

                throw new _Errors__WEBPACK_IMPORTED_MODULE_7__["AbortError"]();

              case 2:
                if (request.method) {
                  _context.next = 4;
                  break;
                }

                throw new Error("No method defined.");

              case 4:
                if (request.url) {
                  _context.next = 6;
                  break;
                }

                throw new Error("No url defined.");

              case 6:
                abortController = new this._abortControllerType();

                // Hook our abortSignal into the abort controller
                if (request.abortSignal) {
                  request.abortSignal.onabort = function () {
                    abortController.abort();
                    error = new _Errors__WEBPACK_IMPORTED_MODULE_7__["AbortError"]();
                  };
                } // If a timeout has been passed in, setup a timeout to call abort
                // Type needs to be any to fit window.setTimeout and NodeJS.setTimeout


                timeoutId = null;

                if (request.timeout) {
                  msTimeout = request.timeout;
                  timeoutId = setTimeout(function () {
                    abortController.abort();

                    _this2._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Warning, "Timeout from HTTP request.");

                    error = new _Errors__WEBPACK_IMPORTED_MODULE_7__["TimeoutError"]();
                  }, msTimeout);
                }

                if (request.content === "") {
                  request.content = undefined;
                }

                if (request.content) {
                  // Explicitly setting the Content-Type header for React Native on Android platform.
                  request.headers = request.headers || {};

                  if (Object(_Utils__WEBPACK_IMPORTED_MODULE_10__["isArrayBuffer"])(request.content)) {
                    request.headers["Content-Type"] = "application/octet-stream";
                  } else {
                    request.headers["Content-Type"] = "text/plain;charset=UTF-8";
                  }
                }

                _context.prev = 12;
                _context.next = 15;
                return this._fetchType(request.url, {
                  body: request.content,
                  cache: "no-cache",
                  credentials: request.withCredentials === true ? "include" : "same-origin",
                  headers: Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])({
                    "X-Requested-With": "XMLHttpRequest"
                  }, request.headers),
                  method: request.method,
                  mode: "cors",
                  redirect: "follow",
                  signal: abortController.signal
                });

              case 15:
                response = _context.sent;
                _context.next = 24;
                break;

              case 18:
                _context.prev = 18;
                _context.t0 = _context["catch"](12);

                if (!error) {
                  _context.next = 22;
                  break;
                }

                throw error;

              case 22:
                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Warning, "Error from HTTP request. ".concat(_context.t0, "."));

                throw _context.t0;

              case 24:
                _context.prev = 24;

                if (timeoutId) {
                  clearTimeout(timeoutId);
                }

                if (request.abortSignal) {
                  request.abortSignal.onabort = null;
                }

                return _context.finish(24);

              case 28:
                if (response.ok) {
                  _context.next = 33;
                  break;
                }

                _context.next = 31;
                return deserializeContent(response, "text");

              case 31:
                errorMessage = _context.sent;
                throw new _Errors__WEBPACK_IMPORTED_MODULE_7__["HttpError"](errorMessage || response.statusText, response.status);

              case 33:
                content = deserializeContent(response, request.responseType);
                _context.next = 36;
                return content;

              case 36:
                payload = _context.sent;
                return _context.abrupt("return", new _HttpClient__WEBPACK_IMPORTED_MODULE_8__["HttpResponse"](response.status, response.statusText, payload));

              case 38:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[12, 18, 24, 28]]);
      }));

      function send(_x) {
        return _send.apply(this, arguments);
      }

      return send;
    }()
  }, {
    key: "getCookieString",
    value: function getCookieString(url) {
      var cookies = "";

      if (_Utils__WEBPACK_IMPORTED_MODULE_10__["Platform"].isNode && this._jar) {
        // @ts-ignore: unused variable
        this._jar.getCookies(url, function (e, c) {
          return cookies = c.join("; ");
        });
      }

      return cookies;
    }
  }]);

  return FetchHttpClient;
}(_HttpClient__WEBPACK_IMPORTED_MODULE_8__["HttpClient"]);

function deserializeContent(response, responseType) {
  var content;

  switch (responseType) {
    case "arraybuffer":
      content = response.arrayBuffer();
      break;

    case "text":
      content = response.text();
      break;

    case "blob":
    case "document":
    case "json":
      throw new Error("".concat(responseType, " is not supported."));

    default:
      content = response.text();
      break;
  }

  return content;
}

/***/ }),

/***/ "1gIY":
/*!**********************************************************************!*\
  !*** ./src/app/core/components/app/dashboard/dashboard.component.ts ***!
  \**********************************************************************/
/*! exports provided: DashboardComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DashboardComponent", function() { return DashboardComponent; });
/* harmony import */ var _raw_loader_dashboard_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./dashboard.component.html */ "GkwA");
/* harmony import */ var _dashboard_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dashboard.component.css */ "HM0i");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var chartist__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! chartist */ "uki+");
/* harmony import */ var chartist__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(chartist__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../admin/login/Services/auth.service */ "a9M/");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var DashboardComponent = /** @class */ (function () {
    function DashboardComponent(authService) {
        this.authService = authService;
    }
    DashboardComponent.prototype.startAnimationForLineChart = function (chart) {
        var seq, delays, durations;
        seq = 0;
        delays = 80;
        durations = 500;
        chart.on('draw', function (data) {
            if (data.type === 'line' || data.type === 'area') {
                data.element.animate({
                    d: {
                        begin: 600,
                        dur: 700,
                        from: data.path.clone().scale(1, 0).translate(0, data.chartRect.height()).stringify(),
                        to: data.path.clone().stringify(),
                        easing: chartist__WEBPACK_IMPORTED_MODULE_3__["Svg"].Easing.easeOutQuint
                    }
                });
            }
            else if (data.type === 'point') {
                seq++;
                data.element.animate({
                    opacity: {
                        begin: seq * delays,
                        dur: durations,
                        from: 0,
                        to: 1,
                        easing: 'ease'
                    }
                });
            }
        });
        seq = 0;
    };
    ;
    DashboardComponent.prototype.startAnimationForBarChart = function (chart) {
        var seq2, delays2, durations2;
        seq2 = 0;
        delays2 = 80;
        durations2 = 500;
        chart.on('draw', function (data) {
            if (data.type === 'bar') {
                seq2++;
                data.element.animate({
                    opacity: {
                        begin: seq2 * delays2,
                        dur: durations2,
                        from: 0,
                        to: 1,
                        easing: 'ease'
                    }
                });
            }
        });
        seq2 = 0;
    };
    ;
    DashboardComponent.prototype.ngOnInit = function () {
        /* ----------==========     Daily Sales Chart initialization For Documentation    ==========---------- */
        var dataDailySalesChart = {
            labels: ['M', 'T', 'W', 'T', 'F', 'S', 'S'],
            series: [
                [12, 17, 7, 17, 23, 18, 38]
            ]
        };
        var optionsDailySalesChart = {
            lineSmooth: chartist__WEBPACK_IMPORTED_MODULE_3__["Interpolation"].cardinal({
                tension: 0
            }),
            low: 0,
            high: 50,
            chartPadding: { top: 0, right: 0, bottom: 0, left: 0 },
        };
        var dailySalesChart = new chartist__WEBPACK_IMPORTED_MODULE_3__["Line"]('#dailySalesChart', dataDailySalesChart, optionsDailySalesChart);
        this.startAnimationForLineChart(dailySalesChart);
        /* ----------==========     Completed Tasks Chart initialization    ==========---------- */
        var dataCompletedTasksChart = {
            labels: ['12p', '3p', '6p', '9p', '12p', '3a', '6a', '9a'],
            series: [
                [230, 750, 450, 300, 280, 240, 200, 190]
            ]
        };
        var optionsCompletedTasksChart = {
            lineSmooth: chartist__WEBPACK_IMPORTED_MODULE_3__["Interpolation"].cardinal({
                tension: 0
            }),
            low: 0,
            high: 1000,
            chartPadding: { top: 0, right: 0, bottom: 0, left: 0 }
        };
        var completedTasksChart = new chartist__WEBPACK_IMPORTED_MODULE_3__["Line"]('#completedTasksChart', dataCompletedTasksChart, optionsCompletedTasksChart);
        // start animation for the Completed Tasks Chart - Line Chart
        this.startAnimationForLineChart(completedTasksChart);
        /* ----------==========     Emails Subscription Chart initialization    ==========---------- */
        var datawebsiteViewsChart = {
            labels: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],
            series: [
                [542, 443, 320, 780, 553, 453, 326, 434, 568, 610, 756, 895]
            ]
        };
        var optionswebsiteViewsChart = {
            axisX: {
                showGrid: false
            },
            low: 0,
            high: 1000,
            chartPadding: { top: 0, right: 5, bottom: 0, left: 0 }
        };
        var responsiveOptions = [
            ['screen and (max-width: 640px)', {
                    seriesBarDistance: 5,
                    axisX: {
                        labelInterpolationFnc: function (value) {
                            return value[0];
                        }
                    }
                }]
        ];
        var websiteViewsChart = new chartist__WEBPACK_IMPORTED_MODULE_3__["Bar"]('#websiteViewsChart', datawebsiteViewsChart, optionswebsiteViewsChart, responsiveOptions);
        //start animation for the Emails Subscription Chart
        this.startAnimationForBarChart(websiteViewsChart);
    };
    DashboardComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    DashboardComponent.ctorParameters = function () { return [
        { type: _admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_4__["AuthService"] }
    ]; };
    DashboardComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-dashboard',
            template: _raw_loader_dashboard_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_dashboard_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_4__["AuthService"]])
    ], DashboardComponent);
    return DashboardComponent;
}());



/***/ }),

/***/ "2RTA":
/*!*************************************************!*\
  !*** ./src/app/core/services/lookUp.service.ts ***!
  \*************************************************/
/*! exports provided: LookUpService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LookUpService", function() { return LookUpService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var LookUpService = /** @class */ (function () {
    function LookUpService(httpClient) {
        this.httpClient = httpClient;
    }
    LookUpService.prototype.getGroupLookUp = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/groups/lookups");
    };
    LookUpService.prototype.getOperationClaimLookUp = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/operation-claims/lookups");
    };
    LookUpService.prototype.getUserLookUp = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/users/lookups");
    };
    LookUpService.prototype.getLanguageLookup = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/languages/lookups");
    };
    LookUpService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    LookUpService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], LookUpService);
    return LookUpService;
}());



/***/ }),

/***/ "2lgH":
/*!********************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/HttpConnection.js ***!
  \********************************************************************/
/*! exports provided: HttpConnection, TransportSendQueue */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpConnection", function() { return HttpConnection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransportSendQueue", function() { return TransportSendQueue; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _AccessTokenHttpClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AccessTokenHttpClient */ "DOH6");
/* harmony import */ var _DefaultHttpClient__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./DefaultHttpClient */ "Ysxs");
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Errors */ "9BRb");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _ITransport__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./ITransport */ "qFkC");
/* harmony import */ var _LongPollingTransport__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./LongPollingTransport */ "C/dI");
/* harmony import */ var _ServerSentEventsTransport__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./ServerSentEventsTransport */ "qIXe");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Utils */ "ftFU");
/* harmony import */ var _WebSocketTransport__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./WebSocketTransport */ "6xqK");







// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.









var MAX_REDIRECTS = 100;
/** @private */

var HttpConnection = /*#__PURE__*/function () {
  function HttpConnection(url) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, HttpConnection);

    this._stopPromiseResolver = function () {};

    this.features = {};
    this._negotiateVersion = 1;
    _Utils__WEBPACK_IMPORTED_MODULE_14__["Arg"].isRequired(url, "url");
    this._logger = Object(_Utils__WEBPACK_IMPORTED_MODULE_14__["createLogger"])(options.logger);
    this.baseUrl = this._resolveUrl(url);
    options = options || {};
    options.logMessageContent = options.logMessageContent === undefined ? false : options.logMessageContent;

    if (typeof options.withCredentials === "boolean" || options.withCredentials === undefined) {
      options.withCredentials = options.withCredentials === undefined ? true : options.withCredentials;
    } else {
      throw new Error("withCredentials option was not a 'boolean' or 'undefined' value");
    }

    options.timeout = options.timeout === undefined ? 100 * 1000 : options.timeout;
    var webSocketModule = null;
    var eventSourceModule = null;

    if (_Utils__WEBPACK_IMPORTED_MODULE_14__["Platform"].isNode && "function" !== "undefined") {
      // In order to ignore the dynamic require in webpack builds we need to do this magic
      // @ts-ignore: TS doesn't know about these names
      var requireFunc =  true ? require : undefined;
      webSocketModule = requireFunc("ws");
      eventSourceModule = requireFunc("eventsource");
    }

    if (!_Utils__WEBPACK_IMPORTED_MODULE_14__["Platform"].isNode && typeof WebSocket !== "undefined" && !options.WebSocket) {
      options.WebSocket = WebSocket;
    } else if (_Utils__WEBPACK_IMPORTED_MODULE_14__["Platform"].isNode && !options.WebSocket) {
      if (webSocketModule) {
        options.WebSocket = webSocketModule;
      }
    }

    if (!_Utils__WEBPACK_IMPORTED_MODULE_14__["Platform"].isNode && typeof EventSource !== "undefined" && !options.EventSource) {
      options.EventSource = EventSource;
    } else if (_Utils__WEBPACK_IMPORTED_MODULE_14__["Platform"].isNode && !options.EventSource) {
      if (typeof eventSourceModule !== "undefined") {
        options.EventSource = eventSourceModule;
      }
    }

    this._httpClient = new _AccessTokenHttpClient__WEBPACK_IMPORTED_MODULE_7__["AccessTokenHttpClient"](options.httpClient || new _DefaultHttpClient__WEBPACK_IMPORTED_MODULE_8__["DefaultHttpClient"](this._logger), options.accessTokenFactory);
    this._connectionState = "Disconnected"
    /* ConnectionState.Disconnected */
    ;
    this._connectionStarted = false;
    this._options = options;
    this.onreceive = null;
    this.onclose = null;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(HttpConnection, [{
    key: "start",
    value: function () {
      var _start = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee(transferFormat) {
        var message, _message;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                transferFormat = transferFormat || _ITransport__WEBPACK_IMPORTED_MODULE_11__["TransferFormat"].Binary;
                _Utils__WEBPACK_IMPORTED_MODULE_14__["Arg"].isIn(transferFormat, _ITransport__WEBPACK_IMPORTED_MODULE_11__["TransferFormat"], "transferFormat");

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Starting connection with transfer format '".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["TransferFormat"][transferFormat], "'."));

                if (!(this._connectionState !== "Disconnected"
                /* ConnectionState.Disconnected */
                )) {
                  _context.next = 5;
                  break;
                }

                return _context.abrupt("return", Promise.reject(new Error("Cannot start an HttpConnection that is not in the 'Disconnected' state.")));

              case 5:
                this._connectionState = "Connecting"
                /* ConnectionState.Connecting */
                ;
                this._startInternalPromise = this._startInternal(transferFormat);
                _context.next = 9;
                return this._startInternalPromise;

              case 9:
                if (!(this._connectionState === "Disconnecting"
                /* ConnectionState.Disconnecting */
                )) {
                  _context.next = 17;
                  break;
                }

                // stop() was called and transitioned the client into the Disconnecting state.
                message = "Failed to start the HttpConnection before stop() was called.";

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, message); // We cannot await stopPromise inside startInternal since stopInternal awaits the startInternalPromise.


                _context.next = 14;
                return this._stopPromise;

              case 14:
                return _context.abrupt("return", Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_9__["AbortError"](message)));

              case 17:
                if (!(this._connectionState !== "Connected"
                /* ConnectionState.Connected */
                )) {
                  _context.next = 21;
                  break;
                }

                // stop() was called and transitioned the client into the Disconnecting state.
                _message = "HttpConnection.startInternal completed gracefully but didn't enter the connection into the connected state!";

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, _message);

                return _context.abrupt("return", Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_9__["AbortError"](_message)));

              case 21:
                this._connectionStarted = true;

              case 22:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function start(_x) {
        return _start.apply(this, arguments);
      }

      return start;
    }()
  }, {
    key: "send",
    value: function send(data) {
      if (this._connectionState !== "Connected"
      /* ConnectionState.Connected */
      ) {
          return Promise.reject(new Error("Cannot send data if the connection is not in the 'Connected' State."));
        }

      if (!this._sendQueue) {
        this._sendQueue = new TransportSendQueue(this.transport);
      } // Transport will not be null if state is connected


      return this._sendQueue.send(data);
    }
  }, {
    key: "stop",
    value: function () {
      var _stop = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee2(error) {
        var _this = this;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!(this._connectionState === "Disconnected"
                /* ConnectionState.Disconnected */
                )) {
                  _context2.next = 3;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Call to HttpConnection.stop(".concat(error, ") ignored because the connection is already in the disconnected state."));

                return _context2.abrupt("return", Promise.resolve());

              case 3:
                if (!(this._connectionState === "Disconnecting"
                /* ConnectionState.Disconnecting */
                )) {
                  _context2.next = 6;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Call to HttpConnection.stop(".concat(error, ") ignored because the connection is already in the disconnecting state."));

                return _context2.abrupt("return", this._stopPromise);

              case 6:
                this._connectionState = "Disconnecting"
                /* ConnectionState.Disconnecting */
                ;
                this._stopPromise = new Promise(function (resolve) {
                  // Don't complete stop() until stopConnection() completes.
                  _this._stopPromiseResolver = resolve;
                }); // stopInternal should never throw so just observe it.

                _context2.next = 10;
                return this._stopInternal(error);

              case 10:
                _context2.next = 12;
                return this._stopPromise;

              case 12:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function stop(_x2) {
        return _stop.apply(this, arguments);
      }

      return stop;
    }()
  }, {
    key: "_stopInternal",
    value: function () {
      var _stopInternal2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee3(error) {
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                // Set error as soon as possible otherwise there is a race between
                // the transport closing and providing an error and the error from a close message
                // We would prefer the close message error.
                this._stopError = error;
                _context3.prev = 1;
                _context3.next = 4;
                return this._startInternalPromise;

              case 4:
                _context3.next = 8;
                break;

              case 6:
                _context3.prev = 6;
                _context3.t0 = _context3["catch"](1);

              case 8:
                if (!this.transport) {
                  _context3.next = 21;
                  break;
                }

                _context3.prev = 9;
                _context3.next = 12;
                return this.transport.stop();

              case 12:
                _context3.next = 18;
                break;

              case 14:
                _context3.prev = 14;
                _context3.t1 = _context3["catch"](9);

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, "HttpConnection.transport.stop() threw error '".concat(_context3.t1, "'."));

                this._stopConnection();

              case 18:
                this.transport = undefined;
                _context3.next = 22;
                break;

              case 21:
                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "HttpConnection.transport is undefined in HttpConnection.stop() because start() failed.");

              case 22:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[1, 6], [9, 14]]);
      }));

      function _stopInternal(_x3) {
        return _stopInternal2.apply(this, arguments);
      }

      return _stopInternal;
    }()
  }, {
    key: "_startInternal",
    value: function () {
      var _startInternal2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee4(transferFormat) {
        var _this2 = this;

        var url, negotiateResponse, redirects;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                // Store the original base url and the access token factory since they may change
                // as part of negotiating
                url = this.baseUrl;
                this._accessTokenFactory = this._options.accessTokenFactory;
                this._httpClient._accessTokenFactory = this._accessTokenFactory;
                _context4.prev = 3;

                if (!this._options.skipNegotiation) {
                  _context4.next = 14;
                  break;
                }

                if (!(this._options.transport === _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].WebSockets)) {
                  _context4.next = 11;
                  break;
                }

                // No need to add a connection ID in this case
                this.transport = this._constructTransport(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].WebSockets); // We should just call connect directly in this case.
                // No fallback or negotiate in this case.

                _context4.next = 9;
                return this._startTransport(url, transferFormat);

              case 9:
                _context4.next = 12;
                break;

              case 11:
                throw new Error("Negotiation can only be skipped when using the WebSocket transport directly.");

              case 12:
                _context4.next = 33;
                break;

              case 14:
                negotiateResponse = null;
                redirects = 0;

              case 16:
                _context4.next = 18;
                return this._getNegotiationResponse(url);

              case 18:
                negotiateResponse = _context4.sent;

                if (!(this._connectionState === "Disconnecting"
                /* ConnectionState.Disconnecting */
                || this._connectionState === "Disconnected"
                /* ConnectionState.Disconnected */
                )) {
                  _context4.next = 21;
                  break;
                }

                throw new _Errors__WEBPACK_IMPORTED_MODULE_9__["AbortError"]("The connection was stopped during negotiation.");

              case 21:
                if (!negotiateResponse.error) {
                  _context4.next = 23;
                  break;
                }

                throw new Error(negotiateResponse.error);

              case 23:
                if (!negotiateResponse.ProtocolVersion) {
                  _context4.next = 25;
                  break;
                }

                throw new Error("Detected a connection attempt to an ASP.NET SignalR Server. This client only supports connecting to an ASP.NET Core SignalR Server. See https://aka.ms/signalr-core-differences for details.");

              case 25:
                if (negotiateResponse.url) {
                  url = negotiateResponse.url;
                }

                if (negotiateResponse.accessToken) {
                  (function () {
                    // Replace the current access token factory with one that uses
                    // the returned access token
                    var accessToken = negotiateResponse.accessToken;

                    _this2._accessTokenFactory = function () {
                      return accessToken;
                    }; // set the factory to undefined so the AccessTokenHttpClient won't retry with the same token, since we know it won't change until a connection restart


                    _this2._httpClient._accessToken = accessToken;
                    _this2._httpClient._accessTokenFactory = undefined;
                  })();
                }

                redirects++;

              case 28:
                if (negotiateResponse.url && redirects < MAX_REDIRECTS) {
                  _context4.next = 16;
                  break;
                }

              case 29:
                if (!(redirects === MAX_REDIRECTS && negotiateResponse.url)) {
                  _context4.next = 31;
                  break;
                }

                throw new Error("Negotiate redirection limit exceeded.");

              case 31:
                _context4.next = 33;
                return this._createTransport(url, this._options.transport, negotiateResponse, transferFormat);

              case 33:
                if (this.transport instanceof _LongPollingTransport__WEBPACK_IMPORTED_MODULE_12__["LongPollingTransport"]) {
                  this.features.inherentKeepAlive = true;
                }

                if (this._connectionState === "Connecting"
                /* ConnectionState.Connecting */
                ) {
                    // Ensure the connection transitions to the connected state prior to completing this.startInternalPromise.
                    // start() will handle the case when stop was called and startInternal exits still in the disconnecting state.
                    this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "The HttpConnection connected successfully.");

                    this._connectionState = "Connected"
                    /* ConnectionState.Connected */
                    ;
                  } // stop() is waiting on us via this.startInternalPromise so keep this.transport around so it can clean up.
                // This is the only case startInternal can exit in neither the connected nor disconnected state because stopConnection()
                // will transition to the disconnected state. start() will wait for the transition using the stopPromise.


                _context4.next = 44;
                break;

              case 37:
                _context4.prev = 37;
                _context4.t0 = _context4["catch"](3);

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, "Failed to start the connection: " + _context4.t0);

                this._connectionState = "Disconnected"
                /* ConnectionState.Disconnected */
                ;
                this.transport = undefined; // if start fails, any active calls to stop assume that start will complete the stop promise

                this._stopPromiseResolver();

                return _context4.abrupt("return", Promise.reject(_context4.t0));

              case 44:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[3, 37]]);
      }));

      function _startInternal(_x4) {
        return _startInternal2.apply(this, arguments);
      }

      return _startInternal;
    }()
  }, {
    key: "_getNegotiationResponse",
    value: function () {
      var _getNegotiationResponse2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee5(url) {
        var headers, _getUserAgentHeader, _getUserAgentHeader2, name, value, negotiateUrl, response, negotiateResponse, errorMessage;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee5$(_context5) {
          while (1) {
            switch (_context5.prev = _context5.next) {
              case 0:
                headers = {};
                _getUserAgentHeader = Object(_Utils__WEBPACK_IMPORTED_MODULE_14__["getUserAgentHeader"])(), _getUserAgentHeader2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_getUserAgentHeader, 2), name = _getUserAgentHeader2[0], value = _getUserAgentHeader2[1];
                headers[name] = value;
                negotiateUrl = this._resolveNegotiateUrl(url);

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Sending negotiation request: ".concat(negotiateUrl, "."));

                _context5.prev = 5;
                _context5.next = 8;
                return this._httpClient.post(negotiateUrl, {
                  content: "",
                  headers: Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])({}, headers), this._options.headers),
                  timeout: this._options.timeout,
                  withCredentials: this._options.withCredentials
                });

              case 8:
                response = _context5.sent;

                if (!(response.statusCode !== 200)) {
                  _context5.next = 11;
                  break;
                }

                return _context5.abrupt("return", Promise.reject(new Error("Unexpected status code returned from negotiate '".concat(response.statusCode, "'"))));

              case 11:
                negotiateResponse = JSON.parse(response.content);

                if (!negotiateResponse.negotiateVersion || negotiateResponse.negotiateVersion < 1) {
                  // Negotiate version 0 doesn't use connectionToken
                  // So we set it equal to connectionId so all our logic can use connectionToken without being aware of the negotiate version
                  negotiateResponse.connectionToken = negotiateResponse.connectionId;
                }

                if (!(negotiateResponse.useStatefulReconnect && this._options._useStatefulReconnect !== true)) {
                  _context5.next = 15;
                  break;
                }

                return _context5.abrupt("return", Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_9__["FailedToNegotiateWithServerError"]("Client didn't negotiate Stateful Reconnect but the server did.")));

              case 15:
                return _context5.abrupt("return", negotiateResponse);

              case 18:
                _context5.prev = 18;
                _context5.t0 = _context5["catch"](5);
                errorMessage = "Failed to complete negotiation with the server: " + _context5.t0;

                if (_context5.t0 instanceof _Errors__WEBPACK_IMPORTED_MODULE_9__["HttpError"]) {
                  if (_context5.t0.statusCode === 404) {
                    errorMessage = errorMessage + " Either this is not a SignalR endpoint or there is a proxy blocking the connection.";
                  }
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, errorMessage);

                return _context5.abrupt("return", Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_9__["FailedToNegotiateWithServerError"](errorMessage)));

              case 24:
              case "end":
                return _context5.stop();
            }
          }
        }, _callee5, this, [[5, 18]]);
      }));

      function _getNegotiationResponse(_x5) {
        return _getNegotiationResponse2.apply(this, arguments);
      }

      return _getNegotiationResponse;
    }()
  }, {
    key: "_createConnectUrl",
    value: function _createConnectUrl(url, connectionToken) {
      if (!connectionToken) {
        return url;
      }

      return url + (url.indexOf("?") === -1 ? "?" : "&") + "id=".concat(connectionToken);
    }
  }, {
    key: "_createTransport",
    value: function () {
      var _createTransport2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee6(url, requestedTransport, negotiateResponse, requestedTransferFormat) {
        var connectUrl, transportExceptions, transports, negotiate, _iterator, _step, endpoint, transportOrError, message;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                connectUrl = this._createConnectUrl(url, negotiateResponse.connectionToken);

                if (!this._isITransport(requestedTransport)) {
                  _context6.next = 8;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Connection was provided an instance of ITransport, using that directly.");

                this.transport = requestedTransport;
                _context6.next = 6;
                return this._startTransport(connectUrl, requestedTransferFormat);

              case 6:
                this.connectionId = negotiateResponse.connectionId;
                return _context6.abrupt("return");

              case 8:
                transportExceptions = [];
                transports = negotiateResponse.availableTransports || [];
                negotiate = negotiateResponse;
                _iterator = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(transports);
                _context6.prev = 12;

                _iterator.s();

              case 14:
                if ((_step = _iterator.n()).done) {
                  _context6.next = 53;
                  break;
                }

                endpoint = _step.value;
                transportOrError = this._resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, (negotiate === null || negotiate === void 0 ? void 0 : negotiate.useStatefulReconnect) === true);

                if (!(transportOrError instanceof Error)) {
                  _context6.next = 22;
                  break;
                }

                // Store the error and continue, we don't want to cause a re-negotiate in these cases
                transportExceptions.push("".concat(endpoint.transport, " failed:"));
                transportExceptions.push(transportOrError);
                _context6.next = 51;
                break;

              case 22:
                if (!this._isITransport(transportOrError)) {
                  _context6.next = 51;
                  break;
                }

                this.transport = transportOrError;

                if (negotiate) {
                  _context6.next = 35;
                  break;
                }

                _context6.prev = 25;
                _context6.next = 28;
                return this._getNegotiationResponse(url);

              case 28:
                negotiate = _context6.sent;
                _context6.next = 34;
                break;

              case 31:
                _context6.prev = 31;
                _context6.t0 = _context6["catch"](25);
                return _context6.abrupt("return", Promise.reject(_context6.t0));

              case 34:
                connectUrl = this._createConnectUrl(url, negotiate.connectionToken);

              case 35:
                _context6.prev = 35;
                _context6.next = 38;
                return this._startTransport(connectUrl, requestedTransferFormat);

              case 38:
                this.connectionId = negotiate.connectionId;
                return _context6.abrupt("return");

              case 42:
                _context6.prev = 42;
                _context6.t1 = _context6["catch"](35);

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, "Failed to start the transport '".concat(endpoint.transport, "': ").concat(_context6.t1));

                negotiate = undefined;
                transportExceptions.push(new _Errors__WEBPACK_IMPORTED_MODULE_9__["FailedToStartTransportError"]("".concat(endpoint.transport, " failed: ").concat(_context6.t1), _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][endpoint.transport]));

                if (!(this._connectionState !== "Connecting"
                /* ConnectionState.Connecting */
                )) {
                  _context6.next = 51;
                  break;
                }

                message = "Failed to select transport before stop() was called.";

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, message);

                return _context6.abrupt("return", Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_9__["AbortError"](message)));

              case 51:
                _context6.next = 14;
                break;

              case 53:
                _context6.next = 58;
                break;

              case 55:
                _context6.prev = 55;
                _context6.t2 = _context6["catch"](12);

                _iterator.e(_context6.t2);

              case 58:
                _context6.prev = 58;

                _iterator.f();

                return _context6.finish(58);

              case 61:
                if (!(transportExceptions.length > 0)) {
                  _context6.next = 63;
                  break;
                }

                return _context6.abrupt("return", Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_9__["AggregateErrors"]("Unable to connect to the server with any of the available transports. ".concat(transportExceptions.join(" ")), transportExceptions)));

              case 63:
                return _context6.abrupt("return", Promise.reject(new Error("None of the transports supported by the client are supported by the server.")));

              case 64:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[12, 55, 58, 61], [25, 31], [35, 42]]);
      }));

      function _createTransport(_x6, _x7, _x8, _x9) {
        return _createTransport2.apply(this, arguments);
      }

      return _createTransport;
    }()
  }, {
    key: "_constructTransport",
    value: function _constructTransport(transport) {
      switch (transport) {
        case _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].WebSockets:
          if (!this._options.WebSocket) {
            throw new Error("'WebSocket' is not supported in your environment.");
          }

          return new _WebSocketTransport__WEBPACK_IMPORTED_MODULE_15__["WebSocketTransport"](this._httpClient, this._accessTokenFactory, this._logger, this._options.logMessageContent, this._options.WebSocket, this._options.headers || {});

        case _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].ServerSentEvents:
          if (!this._options.EventSource) {
            throw new Error("'EventSource' is not supported in your environment.");
          }

          return new _ServerSentEventsTransport__WEBPACK_IMPORTED_MODULE_13__["ServerSentEventsTransport"](this._httpClient, this._httpClient._accessToken, this._logger, this._options);

        case _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].LongPolling:
          return new _LongPollingTransport__WEBPACK_IMPORTED_MODULE_12__["LongPollingTransport"](this._httpClient, this._logger, this._options);

        default:
          throw new Error("Unknown transport: ".concat(transport, "."));
      }
    }
  }, {
    key: "_startTransport",
    value: function _startTransport(url, transferFormat) {
      var _this3 = this;

      this.transport.onreceive = this.onreceive;

      if (this.features.reconnect) {
        this.transport.onclose = /*#__PURE__*/function () {
          var _ref = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee7(e) {
            var callStop;
            return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee7$(_context7) {
              while (1) {
                switch (_context7.prev = _context7.next) {
                  case 0:
                    callStop = false;

                    if (!_this3.features.reconnect) {
                      _context7.next = 15;
                      break;
                    }

                    _context7.prev = 2;

                    _this3.features.disconnected();

                    _context7.next = 6;
                    return _this3.transport.connect(url, transferFormat);

                  case 6:
                    _context7.next = 8;
                    return _this3.features.resend();

                  case 8:
                    _context7.next = 13;
                    break;

                  case 10:
                    _context7.prev = 10;
                    _context7.t0 = _context7["catch"](2);
                    callStop = true;

                  case 13:
                    _context7.next = 17;
                    break;

                  case 15:
                    _this3._stopConnection(e);

                    return _context7.abrupt("return");

                  case 17:
                    if (callStop) {
                      _this3._stopConnection(e);
                    }

                  case 18:
                  case "end":
                    return _context7.stop();
                }
              }
            }, _callee7, null, [[2, 10]]);
          }));

          return function (_x10) {
            return _ref.apply(this, arguments);
          };
        }();
      } else {
        this.transport.onclose = function (e) {
          return _this3._stopConnection(e);
        };
      }

      return this.transport.connect(url, transferFormat);
    }
  }, {
    key: "_resolveTransportOrError",
    value: function _resolveTransportOrError(endpoint, requestedTransport, requestedTransferFormat, useStatefulReconnect) {
      var transport = _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][endpoint.transport];

      if (transport === null || transport === undefined) {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Skipping transport '".concat(endpoint.transport, "' because it is not supported by this client."));

        return new Error("Skipping transport '".concat(endpoint.transport, "' because it is not supported by this client."));
      } else {
        if (transportMatches(requestedTransport, transport)) {
          var transferFormats = endpoint.transferFormats.map(function (s) {
            return _ITransport__WEBPACK_IMPORTED_MODULE_11__["TransferFormat"][s];
          });

          if (transferFormats.indexOf(requestedTransferFormat) >= 0) {
            if (transport === _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].WebSockets && !this._options.WebSocket || transport === _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].ServerSentEvents && !this._options.EventSource) {
              this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Skipping transport '".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][transport], "' because it is not supported in your environment.'"));

              return new _Errors__WEBPACK_IMPORTED_MODULE_9__["UnsupportedTransportError"]("'".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][transport], "' is not supported in your environment."), transport);
            } else {
              this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Selecting transport '".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][transport], "'."));

              try {
                this.features.reconnect = transport === _ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"].WebSockets ? useStatefulReconnect : undefined;
                return this._constructTransport(transport);
              } catch (ex) {
                return ex;
              }
            }
          } else {
            this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Skipping transport '".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][transport], "' because it does not support the requested transfer format '").concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["TransferFormat"][requestedTransferFormat], "'."));

            return new Error("'".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][transport], "' does not support ").concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["TransferFormat"][requestedTransferFormat], "."));
          }
        } else {
          this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Skipping transport '".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][transport], "' because it was disabled by the client."));

          return new _Errors__WEBPACK_IMPORTED_MODULE_9__["DisabledTransportError"]("'".concat(_ITransport__WEBPACK_IMPORTED_MODULE_11__["HttpTransportType"][transport], "' is disabled by the client."), transport);
        }
      }
    }
  }, {
    key: "_isITransport",
    value: function _isITransport(transport) {
      return transport && typeof transport === "object" && "connect" in transport;
    }
  }, {
    key: "_stopConnection",
    value: function _stopConnection(error) {
      var _this4 = this;

      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "HttpConnection.stopConnection(".concat(error, ") called while in state ").concat(this._connectionState, "."));

      this.transport = undefined; // If we have a stopError, it takes precedence over the error from the transport

      error = this._stopError || error;
      this._stopError = undefined;

      if (this._connectionState === "Disconnected"
      /* ConnectionState.Disconnected */
      ) {
          this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Debug, "Call to HttpConnection.stopConnection(".concat(error, ") was ignored because the connection is already in the disconnected state."));

          return;
        }

      if (this._connectionState === "Connecting"
      /* ConnectionState.Connecting */
      ) {
          this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Warning, "Call to HttpConnection.stopConnection(".concat(error, ") was ignored because the connection is still in the connecting state."));

          throw new Error("HttpConnection.stopConnection(".concat(error, ") was called while the connection is still in the connecting state."));
        }

      if (this._connectionState === "Disconnecting"
      /* ConnectionState.Disconnecting */
      ) {
          // A call to stop() induced this call to stopConnection and needs to be completed.
          // Any stop() awaiters will be scheduled to continue after the onclose callback fires.
          this._stopPromiseResolver();
        }

      if (error) {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, "Connection disconnected with error '".concat(error, "'."));
      } else {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Information, "Connection disconnected.");
      }

      if (this._sendQueue) {
        this._sendQueue.stop().catch(function (e) {
          _this4._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, "TransportSendQueue.stop() threw error '".concat(e, "'."));
        });

        this._sendQueue = undefined;
      }

      this.connectionId = undefined;
      this._connectionState = "Disconnected"
      /* ConnectionState.Disconnected */
      ;

      if (this._connectionStarted) {
        this._connectionStarted = false;

        try {
          if (this.onclose) {
            this.onclose(error);
          }
        } catch (e) {
          this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Error, "HttpConnection.onclose(".concat(error, ") threw error '").concat(e, "'."));
        }
      }
    }
  }, {
    key: "_resolveUrl",
    value: function _resolveUrl(url) {
      // startsWith is not supported in IE
      if (url.lastIndexOf("https://", 0) === 0 || url.lastIndexOf("http://", 0) === 0) {
        return url;
      }

      if (!_Utils__WEBPACK_IMPORTED_MODULE_14__["Platform"].isBrowser) {
        throw new Error("Cannot resolve '".concat(url, "'."));
      } // Setting the url to the href propery of an anchor tag handles normalization
      // for us. There are 3 main cases.
      // 1. Relative path normalization e.g "b" -> "http://localhost:5000/a/b"
      // 2. Absolute path normalization e.g "/a/b" -> "http://localhost:5000/a/b"
      // 3. Networkpath reference normalization e.g "//localhost:5000/a/b" -> "http://localhost:5000/a/b"


      var aTag = window.document.createElement("a");
      aTag.href = url;

      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_10__["LogLevel"].Information, "Normalizing '".concat(url, "' to '").concat(aTag.href, "'."));

      return aTag.href;
    }
  }, {
    key: "_resolveNegotiateUrl",
    value: function _resolveNegotiateUrl(url) {
      var negotiateUrl = new URL(url);

      if (negotiateUrl.pathname.endsWith('/')) {
        negotiateUrl.pathname += "negotiate";
      } else {
        negotiateUrl.pathname += "/negotiate";
      }

      var searchParams = new URLSearchParams(negotiateUrl.searchParams);

      if (!searchParams.has("negotiateVersion")) {
        searchParams.append("negotiateVersion", this._negotiateVersion.toString());
      }

      if (searchParams.has("useStatefulReconnect")) {
        if (searchParams.get("useStatefulReconnect") === "true") {
          this._options._useStatefulReconnect = true;
        }
      } else if (this._options._useStatefulReconnect === true) {
        searchParams.append("useStatefulReconnect", "true");
      }

      negotiateUrl.search = searchParams.toString();
      return negotiateUrl.toString();
    }
  }]);

  return HttpConnection;
}();

function transportMatches(requestedTransport, actualTransport) {
  return !requestedTransport || (actualTransport & requestedTransport) !== 0;
}
/** @private */


var TransportSendQueue = /*#__PURE__*/function () {
  function TransportSendQueue(_transport) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, TransportSendQueue);

    this._transport = _transport;
    this._buffer = [];
    this._executing = true;
    this._sendBufferedData = new PromiseSource();
    this._transportResult = new PromiseSource();
    this._sendLoopPromise = this._sendLoop();
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(TransportSendQueue, [{
    key: "send",
    value: function send(data) {
      this._bufferData(data);

      if (!this._transportResult) {
        this._transportResult = new PromiseSource();
      }

      return this._transportResult.promise;
    }
  }, {
    key: "stop",
    value: function stop() {
      this._executing = false;

      this._sendBufferedData.resolve();

      return this._sendLoopPromise;
    }
  }, {
    key: "_bufferData",
    value: function _bufferData(data) {
      if (this._buffer.length && typeof this._buffer[0] !== typeof data) {
        throw new Error("Expected data to be of type ".concat(typeof this._buffer, " but was of type ").concat(typeof data));
      }

      this._buffer.push(data);

      this._sendBufferedData.resolve();
    }
  }, {
    key: "_sendLoop",
    value: function () {
      var _sendLoop2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.mark(function _callee8() {
        var transportResult, data;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_3___default.a.wrap(function _callee8$(_context8) {
          while (1) {
            switch (_context8.prev = _context8.next) {
              case 0:
                if (false) {}

                _context8.next = 3;
                return this._sendBufferedData.promise;

              case 3:
                if (this._executing) {
                  _context8.next = 6;
                  break;
                }

                if (this._transportResult) {
                  this._transportResult.reject("Connection stopped.");
                }

                return _context8.abrupt("break", 22);

              case 6:
                this._sendBufferedData = new PromiseSource();
                transportResult = this._transportResult;
                this._transportResult = undefined;
                data = typeof this._buffer[0] === "string" ? this._buffer.join("") : TransportSendQueue._concatBuffers(this._buffer);
                this._buffer.length = 0;
                _context8.prev = 11;
                _context8.next = 14;
                return this._transport.send(data);

              case 14:
                transportResult.resolve();
                _context8.next = 20;
                break;

              case 17:
                _context8.prev = 17;
                _context8.t0 = _context8["catch"](11);
                transportResult.reject(_context8.t0);

              case 20:
                _context8.next = 0;
                break;

              case 22:
              case "end":
                return _context8.stop();
            }
          }
        }, _callee8, this, [[11, 17]]);
      }));

      function _sendLoop() {
        return _sendLoop2.apply(this, arguments);
      }

      return _sendLoop;
    }()
  }], [{
    key: "_concatBuffers",
    value: function _concatBuffers(arrayBuffers) {
      var totalLength = arrayBuffers.map(function (b) {
        return b.byteLength;
      }).reduce(function (a, b) {
        return a + b;
      });
      var result = new Uint8Array(totalLength);
      var offset = 0;

      var _iterator2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(arrayBuffers),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var item = _step2.value;
          result.set(new Uint8Array(item), offset);
          offset += item.byteLength;
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }

      return result.buffer;
    }
  }]);

  return TransportSendQueue;
}();

var PromiseSource = /*#__PURE__*/function () {
  function PromiseSource() {
    var _this5 = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, PromiseSource);

    this.promise = new Promise(function (resolve, reject) {
      var _ref2;

      return _ref2 = [resolve, reject], _this5._resolver = _ref2[0], _this5._rejecter = _ref2[1], _ref2;
    });
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(PromiseSource, [{
    key: "resolve",
    value: function resolve() {
      this._resolver();
    }
  }, {
    key: "reject",
    value: function reject(reason) {
      this._rejecter(reason);
    }
  }]);

  return PromiseSource;
}();

/***/ }),

/***/ "2zAs":
/*!*********************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/JsonHubProtocol.js ***!
  \*********************************************************************/
/*! exports provided: JsonHubProtocol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "JsonHubProtocol", function() { return JsonHubProtocol; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./IHubProtocol */ "++1n");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _ITransport__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ITransport */ "qFkC");
/* harmony import */ var _Loggers__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Loggers */ "v3Fn");
/* harmony import */ var _TextMessageFormat__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./TextMessageFormat */ "PMyv");



// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.





var JSON_HUB_PROTOCOL_NAME = "json";
/** Implements the JSON Hub Protocol. */

var JsonHubProtocol = /*#__PURE__*/function () {
  function JsonHubProtocol() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, JsonHubProtocol);

    /** @inheritDoc */
    this.name = JSON_HUB_PROTOCOL_NAME;
    /** @inheritDoc */

    this.version = 2;
    /** @inheritDoc */

    this.transferFormat = _ITransport__WEBPACK_IMPORTED_MODULE_5__["TransferFormat"].Text;
  }
  /** Creates an array of {@link @microsoft/signalr.HubMessage} objects from the specified serialized representation.
   *
   * @param {string} input A string containing the serialized representation.
   * @param {ILogger} logger A logger that will be used to log messages that occur during parsing.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(JsonHubProtocol, [{
    key: "parseMessages",
    value: function parseMessages(input, logger) {
      // The interface does allow "ArrayBuffer" to be passed in, but this implementation does not. So let's throw a useful error.
      if (typeof input !== "string") {
        throw new Error("Invalid input for JSON hub protocol. Expected a string.");
      }

      if (!input) {
        return [];
      }

      if (logger === null) {
        logger = _Loggers__WEBPACK_IMPORTED_MODULE_6__["NullLogger"].instance;
      } // Parse the messages


      var messages = _TextMessageFormat__WEBPACK_IMPORTED_MODULE_7__["TextMessageFormat"].parse(input);
      var hubMessages = [];

      var _iterator = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(messages),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var message = _step.value;
          var parsedMessage = JSON.parse(message);

          if (typeof parsedMessage.type !== "number") {
            throw new Error("Invalid payload.");
          }

          switch (parsedMessage.type) {
            case _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__["MessageType"].Invocation:
              this._isInvocationMessage(parsedMessage);

              break;

            case _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__["MessageType"].StreamItem:
              this._isStreamItemMessage(parsedMessage);

              break;

            case _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__["MessageType"].Completion:
              this._isCompletionMessage(parsedMessage);

              break;

            case _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__["MessageType"].Ping:
              // Single value, no need to validate
              break;

            case _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__["MessageType"].Close:
              // All optional values, no need to validate
              break;

            case _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__["MessageType"].Ack:
              this._isAckMessage(parsedMessage);

              break;

            case _IHubProtocol__WEBPACK_IMPORTED_MODULE_3__["MessageType"].Sequence:
              this._isSequenceMessage(parsedMessage);

              break;

            default:
              // Future protocol changes can add message types, old clients can ignore them
              logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_4__["LogLevel"].Information, "Unknown message type '" + parsedMessage.type + "' ignored.");
              continue;
          }

          hubMessages.push(parsedMessage);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return hubMessages;
    }
    /** Writes the specified {@link @microsoft/signalr.HubMessage} to a string and returns it.
     *
     * @param {HubMessage} message The message to write.
     * @returns {string} A string containing the serialized representation of the message.
     */

  }, {
    key: "writeMessage",
    value: function writeMessage(message) {
      return _TextMessageFormat__WEBPACK_IMPORTED_MODULE_7__["TextMessageFormat"].write(JSON.stringify(message));
    }
  }, {
    key: "_isInvocationMessage",
    value: function _isInvocationMessage(message) {
      this._assertNotEmptyString(message.target, "Invalid payload for Invocation message.");

      if (message.invocationId !== undefined) {
        this._assertNotEmptyString(message.invocationId, "Invalid payload for Invocation message.");
      }
    }
  }, {
    key: "_isStreamItemMessage",
    value: function _isStreamItemMessage(message) {
      this._assertNotEmptyString(message.invocationId, "Invalid payload for StreamItem message.");

      if (message.item === undefined) {
        throw new Error("Invalid payload for StreamItem message.");
      }
    }
  }, {
    key: "_isCompletionMessage",
    value: function _isCompletionMessage(message) {
      if (message.result && message.error) {
        throw new Error("Invalid payload for Completion message.");
      }

      if (!message.result && message.error) {
        this._assertNotEmptyString(message.error, "Invalid payload for Completion message.");
      }

      this._assertNotEmptyString(message.invocationId, "Invalid payload for Completion message.");
    }
  }, {
    key: "_isAckMessage",
    value: function _isAckMessage(message) {
      if (typeof message.sequenceId !== 'number') {
        throw new Error("Invalid SequenceId for Ack message.");
      }
    }
  }, {
    key: "_isSequenceMessage",
    value: function _isSequenceMessage(message) {
      if (typeof message.sequenceId !== 'number') {
        throw new Error("Invalid SequenceId for Sequence message.");
      }
    }
  }, {
    key: "_assertNotEmptyString",
    value: function _assertNotEmptyString(value, errorMessage) {
      if (typeof value !== "string" || value === "") {
        throw new Error(errorMessage);
      }
    }
  }]);

  return JsonHubProtocol;
}();

/***/ }),

/***/ "4+oF":
/*!*******************************************************************!*\
  !*** ./src/app/core/tables/spark-table/spark-table.component.css ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcGFyay10YWJsZS5jb21wb25lbnQuY3NzIn0= */");

/***/ }),

/***/ "4Q0m":
/*!************************************************************************************!*\
  !*** ./src/app/core/components/admin/operationclaim/operationClaim.component.scss ***!
  \************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".no-sort::after {\n  display: none !important;\n  background-image: url() !important;\n}\n\n.card [class*=card-header-]:not(.card-header-icon):not(.card-header-text):not(.card-header-image) {\n  border-radius: 3px;\n  margin-top: -20px;\n  padding: 15px 15px 44px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXG9wZXJhdGlvbkNsYWltLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Msd0JBQUE7RUFDQSxrQ0FBQTtBQUNEOztBQUlBO0VBQ0Msa0JBQUE7RUFDQSxpQkFBQTtFQUNBLGtDQUFBO0FBREQiLCJmaWxlIjoib3BlcmF0aW9uQ2xhaW0uY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm8tc29ydDo6YWZ0ZXIge1xyXG5cdGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuXHRiYWNrZ3JvdW5kLWltYWdlOiB1cmwoKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuXHJcbi5jYXJkIFtjbGFzcyo9Y2FyZC1oZWFkZXItXTpub3QoLmNhcmQtaGVhZGVyLWljb24pOm5vdCguY2FyZC1oZWFkZXItdGV4dCk6bm90KC5jYXJkLWhlYWRlci1pbWFnZSkge1xyXG5cdGJvcmRlci1yYWRpdXM6IDNweDtcclxuXHRtYXJnaW4tdG9wOiAtMjBweDtcclxuXHRwYWRkaW5nOiAxNXB4IDE1cHggIDQ0cHggIWltcG9ydGFudDtcclxufSJdfQ== */");

/***/ }),

/***/ "4Zp6":
/*!**************************************************************!*\
  !*** ./src/app/core/components/admin/user/user.component.ts ***!
  \**************************************************************/
/*! exports provided: UserComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserComponent", function() { return UserComponent; });
/* harmony import */ var _raw_loader_user_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./user.component.html */ "TP/T");
/* harmony import */ var _user_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./user.component.scss */ "HC1W");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_directives_must_match__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/directives/must-match */ "upmi");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! environments/environment */ "AytR");
/* harmony import */ var _group_Services_group_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../group/Services/group.service */ "QXas");
/* harmony import */ var _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../login/Services/auth.service */ "a9M/");
/* harmony import */ var _models_passwordDto__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./models/passwordDto */ "XvJy");
/* harmony import */ var _models_user__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./models/user */ "/9Rs");
/* harmony import */ var _Services_signalr_service__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./Services/signalr.service */ "wNif");
/* harmony import */ var _Services_user_service__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./Services/user.service */ "tl2s");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};

















var UserComponent = /** @class */ (function () {
    function UserComponent(userService, formBuilder, alertifyService, lookUpService, authService, signalRService, groupService) {
        this.userService = userService;
        this.formBuilder = formBuilder;
        this.alertifyService = alertifyService;
        this.lookUpService = lookUpService;
        this.authService = authService;
        this.signalRService = signalRService;
        this.groupService = groupService;
        this.displayedColumns = [
            "email",
            "fullName",
            "reqLimit",
            "status",
            "mobilePhones",
            "address",
            "notes",
            "updateReqLimit",
            "passwordChange",
            "updateGroupClaim",
            "update",
        ];
        this.visits = ["jhnuıohıuj"];
        this.notValidEmail = true;
        this.isGroupChange = false;
        this.isClaimChange = false;
    }
    UserComponent.prototype.ngAfterViewInit = function () {
        this.getUserList();
    };
    UserComponent.prototype.ngOnInit = function () {
        var _this = this;
        var _a;
        this.createUserAddForm();
        this.createPasswordForm();
        this.createReqLimitForm();
        this.getGroupList();
        this.dropdownSettings = environments_environment__WEBPACK_IMPORTED_MODULE_10__["environment"].getDropDownSetting;
        this.lookUpService.getGroupLookUp().subscribe(function (data) {
            _this.groupDropdownList = data;
        });
        this.lookUpService.getOperationClaimLookUp().subscribe(function (data) {
            _this.claimDropdownList = data;
        });
        // Real-time validation for email field
        (_a = this.userAddForm.get('email')) === null || _a === void 0 ? void 0 : _a.valueChanges.subscribe(function () {
            _this.validateEmail();
        });
    };
    UserComponent.prototype.validateEmail = function () {
        if (this.userEmail.length < 10 || this.userEmail.length > 50) {
            this.notValidEmail = false;
        }
        else {
            this.notValidEmail = true;
        }
    };
    UserComponent.prototype.getUserGroupPermissions = function (userId) {
        var _this = this;
        this.userId = userId;
        this.userService.getUserGroupPermissions(userId).subscribe(function (data) {
            _this.groupSelectedItems = data;
        });
    };
    UserComponent.prototype.ngOnDestroy = function () {
        if (this.hubConnection) {
            this.hubConnection.stop()
                .then(function () { return console.log('Hub connection stopped'); })
                .catch(function (err) { return console.error('Error while stopping connection:', err); });
        }
        else {
            console.warn('Hub connection is undefined, cannot stop.');
        }
    };
    UserComponent.prototype.getUserClaimsPermissions = function (userId) {
        var _this = this;
        this.userId = userId;
        this.userService.getUserClaims(userId).subscribe(function (data) {
            _this.claimSelectedItems = data;
        });
    };
    UserComponent.prototype.saveUserGroupsPermissions = function () {
        var _this = this;
        if (this.isGroupChange) {
            var ids = this.groupSelectedItems.map(function (x) {
                return x.id;
            });
            this.userService.saveUserGroupPermissions(this.userId, ids).subscribe(function (x) {
                jQuery("#groupPermissions").modal("hide");
                _this.isGroupChange = false;
                _this.alertifyService.success(x);
            }, function (error) {
                _this.alertifyService.error(error.error);
                jQuery("#groupPermissions").modal("hide");
            });
        }
    };
    UserComponent.prototype.saveUserClaimsPermission = function () {
        var _this = this;
        if (this.isClaimChange) {
            var ids = this.claimSelectedItems.map(function (x) {
                return x.id;
            });
            this.userService.saveUserClaims(this.userId, ids).subscribe(function (x) {
                jQuery("#claimsPermissions").modal("hide");
                _this.isClaimChange = false;
                _this.alertifyService.success(x);
            }, function (error) {
                _this.alertifyService.error(error.error);
                jQuery("#claimsPermissions").modal("hide");
            });
        }
    };
    UserComponent.prototype.onItemSelect = function (comboType) {
        this.setComboStatus(comboType);
    };
    UserComponent.prototype.onSelectAll = function (comboType) {
        this.setComboStatus(comboType);
    };
    UserComponent.prototype.onItemDeSelect = function (comboType) {
        this.setComboStatus(comboType);
    };
    UserComponent.prototype.setComboStatus = function (comboType) {
        if (comboType == "Group")
            this.isGroupChange = true;
        else if (comboType == "Claim")
            this.isClaimChange = true;
    };
    UserComponent.prototype.createUserAddForm = function () {
        this.userAddForm = this.formBuilder.group({
            userId: [0],
            fullName: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            email: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            address: [""],
            notes: [""],
            mobilePhones: [""],
            status: [true],
        });
    };
    UserComponent.prototype.createPasswordForm = function () {
        this.passwordForm = this.formBuilder.group({
            password: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            confirmPassword: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
        }, {
            validator: Object(app_core_directives_must_match__WEBPACK_IMPORTED_MODULE_7__["MustMatch"])("password", "confirmPassword"),
        });
    };
    UserComponent.prototype.createReqLimitForm = function () {
        this.reqLimitForm = this.formBuilder.group({
            reqLimit: ['', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].min(1)]]
        });
    };
    UserComponent.prototype.getUserList = function () {
        var _this = this;
        this.userService.getUserList().subscribe(function (data) {
            _this.userList = data;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    UserComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == "userId")
                group.get(key).setValue(0);
            else if (key == "status")
                group.get(key).setValue(true);
        });
    };
    UserComponent.prototype.setUserId = function (id) {
        this.userId = id;
    };
    UserComponent.prototype.save = function () {
        if (this.userAddForm.valid) {
            this.user = Object.assign({}, this.userAddForm.value);
            if (this.user.userId == 0)
                this.addUser();
            else
                this.updateUser();
        }
    };
    UserComponent.prototype.savePassword = function () {
        var _this = this;
        if (this.passwordForm.valid) {
            var passwordDto = new _models_passwordDto__WEBPACK_IMPORTED_MODULE_13__["PasswordDto"]();
            passwordDto.userId = this.userId;
            passwordDto.password = this.passwordForm.value.password;
            this.userService.saveUserPassword(passwordDto).subscribe(function (data) {
                _this.userId = 0;
                jQuery("#passwordChange").modal("hide");
                _this.alertifyService.success(data);
                _this.clearFormGroup(_this.passwordForm);
            });
        }
    };
    UserComponent.prototype.addUser = function () {
        var _this = this;
        this.userService.addUser(this.user).subscribe(function (data) {
            _this.getUserList();
            _this.user = new _models_user__WEBPACK_IMPORTED_MODULE_14__["User"]();
            jQuery("#user").modal("hide");
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.userAddForm);
        });
    };
    UserComponent.prototype.getUserById = function (id) {
        var _this = this;
        this.clearFormGroup(this.userAddForm);
        this.userService.getUserById(id).subscribe(function (data) {
            _this.user = data;
            _this.userAddForm.patchValue(data);
        });
    };
    UserComponent.prototype.updateUser = function () {
        var _this = this;
        this.userService.updateUser(this.user).subscribe(function (data) {
            var index = _this.userList.findIndex(function (x) { return x.userId == _this.user.userId; });
            _this.userList[index] = _this.user;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.userList);
            _this.configDataTable();
            _this.user = new _models_user__WEBPACK_IMPORTED_MODULE_14__["User"]();
            jQuery("#user").modal("hide");
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.userAddForm);
        });
    };
    UserComponent.prototype.deleteUser = function (id) {
        var _this = this;
        this.userService.deleteUser(id).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            var index = _this.userList.findIndex(function (x) { return x.userId == id; });
            _this.userList[index].status = false;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.userList);
            _this.configDataTable();
        });
    };
    UserComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    UserComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    UserComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    UserComponent.prototype.requestLimitIncrease = function (userId) {
        var _this = this;
        var newLimit = prompt('Enter new request limit:');
        if (newLimit !== null) {
            var limit = parseInt(newLimit);
            if (!isNaN(limit)) {
                this.userService.requestLimitIncrease(userId, limit).subscribe(function (response) {
                    _this.alertifyService.success(response);
                    _this.getUserList();
                }, function (error) {
                    _this.alertifyService.error(error.error);
                });
            }
            else {
                this.alertifyService.error('Please enter a valid number');
            }
        }
    };
    UserComponent.prototype.setSelectedUserId = function (userId) {
        this.selectedUserId = userId;
        // Get current req limit and set it in form
        var user = this.userList.find(function (u) { return u.userId === userId; });
        if (user) {
            this.reqLimitForm.patchValue({
                reqLimit: user.reqLimit
            });
        }
    };
    UserComponent.prototype.saveRequestLimit = function () {
        var _this = this;
        var _a;
        if (this.reqLimitForm.valid) {
            var newLimit = (_a = this.reqLimitForm.get('reqLimit')) === null || _a === void 0 ? void 0 : _a.value;
            this.userService.requestLimitIncrease(this.selectedUserId, newLimit).subscribe({
                next: function (response) {
                    jQuery('#reqLimitModal').modal('hide');
                    _this.alertifyService.success(response);
                    _this.getUserList();
                    _this.clearFormGroup(_this.reqLimitForm);
                },
                error: function (error) {
                    var errorMessage = error.error || error.message || 'An error occurred while updating request limit';
                    _this.alertifyService.error(errorMessage);
                }
            });
        }
    };
    UserComponent.prototype.getGroupList = function () {
        var _this = this;
        this.groupService.getGroupList().subscribe(function (data) {
            _this.groupDropdownList = data.map(function (group) { return ({ id: group.id, label: group.groupName }); });
        });
    };
    UserComponent.ctorParameters = function () { return [
        { type: _Services_user_service__WEBPACK_IMPORTED_MODULE_16__["UserService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"] },
        { type: _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_12__["AuthService"] },
        { type: _Services_signalr_service__WEBPACK_IMPORTED_MODULE_15__["SignalRService"] },
        { type: _group_Services_group_service__WEBPACK_IMPORTED_MODULE_11__["GroupService"] }
    ]; };
    UserComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    UserComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: "app-user",
            template: _raw_loader_user_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_user_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_Services_user_service__WEBPACK_IMPORTED_MODULE_16__["UserService"],
            _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"],
            app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"],
            app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"],
            _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_12__["AuthService"],
            _Services_signalr_service__WEBPACK_IMPORTED_MODULE_15__["SignalRService"],
            _group_Services_group_service__WEBPACK_IMPORTED_MODULE_11__["GroupService"]])
    ], UserComponent);
    return UserComponent;
}());



/***/ }),

/***/ "4w+6":
/*!******************************************************************!*\
  !*** ./src/app/core/components/admin/group/group.component.scss ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (":host ::ng-deep .multiselect-dropdown .dropdown-btn {\n  display: inline-block;\n  border: 1px solid #adadad;\n  width: 100%;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.1;\n  text-align: left;\n  vertical-align: middle;\n  cursor: pointer;\n  background-image: none;\n  border-radius: 4px;\n}\n\n:host ::ng-deep .multiselect-dropdown .dropdown-btn .selected-item {\n  background: #9c27b0 !important;\n}\n\n:host ::ng-deep .multiselect-item-checkbox > input[type=checkbox]:checked + div:before {\n  background: #9c27b0 !important;\n}\n\n.no-sort::after {\n  display: none !important;\n  background-image: url() !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGdyb3VwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUkscUJBQUE7RUFDQSx5QkFBQTtFQUNBLFdBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLHNCQUFBO0VBQ0EsZUFBQTtFQUNBLHNCQUFBO0VBQ0Esa0JBQUE7QUFBSjs7QUFLQTtFQUVJLDhCQUFBO0FBSEo7O0FBTUE7RUFDSSw4QkFBQTtBQUhKOztBQU1BO0VBQ0Usd0JBQUE7RUFDQSxrQ0FBQTtBQUhGIiwiZmlsZSI6Imdyb3VwLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3QgOjpuZy1kZWVwIC5tdWx0aXNlbGVjdC1kcm9wZG93biAuZHJvcGRvd24tYnRuIFxyXG57XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjYWRhZGFkO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA2cHggMTJweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBmb250LXdlaWdodDogNDAwO1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuMTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcclxuICAgXHJcbiAgICBcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5tdWx0aXNlbGVjdC1kcm9wZG93biAuZHJvcGRvd24tYnRuIC5zZWxlY3RlZC1pdGVtXHJcbntcclxuICAgIGJhY2tncm91bmQ6ICM5YzI3YjAgIWltcG9ydGFudDtcclxufVxyXG5cclxuOmhvc3QgOjpuZy1kZWVwIC5tdWx0aXNlbGVjdC1pdGVtLWNoZWNrYm94ID5pbnB1dFt0eXBlPWNoZWNrYm94XTpjaGVja2VkICsgZGl2OmJlZm9yZSB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjOWMyN2IwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5uby1zb3J0OjphZnRlciB7XHJcbiAgZGlzcGxheTogbm9uZSAhaW1wb3J0YW50O1xyXG4gIGJhY2tncm91bmQtaW1hZ2U6IHVybCgpICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbiJdfQ== */");

/***/ }),

/***/ "5/gN":
/*!*********************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/AbortController.js ***!
  \*********************************************************************/
/*! exports provided: AbortController */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbortController", function() { return AbortController; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");


// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// Rough polyfill of https://developer.mozilla.org/en-US/docs/Web/API/AbortController
// We don't actually ever use the API being polyfilled, we always use the polyfill because
// it's a very new API right now.
// Not exported from index.

/** @private */
var AbortController = /*#__PURE__*/function () {
  function AbortController() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AbortController);

    this._isAborted = false;
    this.onabort = null;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(AbortController, [{
    key: "abort",
    value: function abort() {
      if (!this._isAborted) {
        this._isAborted = true;

        if (this.onabort) {
          this.onabort();
        }
      }
    }
  }, {
    key: "signal",
    get: function get() {
      return this;
    }
  }, {
    key: "aborted",
    get: function get() {
      return this._isAborted;
    }
  }]);

  return AbortController;
}();

/***/ }),

/***/ "6HpG":
/*!***********************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/index.js ***!
  \***********************************************************/
/*! exports provided: AbortError, HttpError, TimeoutError, HttpClient, HttpResponse, DefaultHttpClient, HubConnection, HubConnectionState, HubConnectionBuilder, MessageType, LogLevel, HttpTransportType, TransferFormat, NullLogger, JsonHubProtocol, Subject, VERSION */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Errors */ "9BRb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AbortError", function() { return _Errors__WEBPACK_IMPORTED_MODULE_0__["AbortError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HttpError", function() { return _Errors__WEBPACK_IMPORTED_MODULE_0__["HttpError"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return _Errors__WEBPACK_IMPORTED_MODULE_0__["TimeoutError"]; });

/* harmony import */ var _HttpClient__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./HttpClient */ "Rlqr");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HttpClient", function() { return _HttpClient__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HttpResponse", function() { return _HttpClient__WEBPACK_IMPORTED_MODULE_1__["HttpResponse"]; });

/* harmony import */ var _DefaultHttpClient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./DefaultHttpClient */ "Ysxs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DefaultHttpClient", function() { return _DefaultHttpClient__WEBPACK_IMPORTED_MODULE_2__["DefaultHttpClient"]; });

/* harmony import */ var _HubConnection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./HubConnection */ "mLhb");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HubConnection", function() { return _HubConnection__WEBPACK_IMPORTED_MODULE_3__["HubConnection"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HubConnectionState", function() { return _HubConnection__WEBPACK_IMPORTED_MODULE_3__["HubConnectionState"]; });

/* harmony import */ var _HubConnectionBuilder__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HubConnectionBuilder */ "utQ/");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HubConnectionBuilder", function() { return _HubConnectionBuilder__WEBPACK_IMPORTED_MODULE_4__["HubConnectionBuilder"]; });

/* harmony import */ var _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./IHubProtocol */ "++1n");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MessageType", function() { return _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"]; });

/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LogLevel", function() { return _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"]; });

/* harmony import */ var _ITransport__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ITransport */ "qFkC");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HttpTransportType", function() { return _ITransport__WEBPACK_IMPORTED_MODULE_7__["HttpTransportType"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TransferFormat", function() { return _ITransport__WEBPACK_IMPORTED_MODULE_7__["TransferFormat"]; });

/* harmony import */ var _Loggers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Loggers */ "v3Fn");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NullLogger", function() { return _Loggers__WEBPACK_IMPORTED_MODULE_8__["NullLogger"]; });

/* harmony import */ var _JsonHubProtocol__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./JsonHubProtocol */ "2zAs");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "JsonHubProtocol", function() { return _JsonHubProtocol__WEBPACK_IMPORTED_MODULE_9__["JsonHubProtocol"]; });

/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Subject */ "z2YZ");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return _Subject__WEBPACK_IMPORTED_MODULE_10__["Subject"]; });

/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Utils */ "ftFU");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return _Utils__WEBPACK_IMPORTED_MODULE_11__["VERSION"]; });

// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.













/***/ }),

/***/ "6xqK":
/*!************************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/WebSocketTransport.js ***!
  \************************************************************************/
/*! exports provided: WebSocketTransport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "WebSocketTransport", function() { return WebSocketTransport; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _HeaderNames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HeaderNames */ "EXQx");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _ITransport__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./ITransport */ "qFkC");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Utils */ "ftFU");






// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.




/** @private */

var WebSocketTransport = /*#__PURE__*/function () {
  function WebSocketTransport(httpClient, accessTokenFactory, logger, logMessageContent, webSocketConstructor, headers) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, WebSocketTransport);

    this._logger = logger;
    this._accessTokenFactory = accessTokenFactory;
    this._logMessageContent = logMessageContent;
    this._webSocketConstructor = webSocketConstructor;
    this._httpClient = httpClient;
    this.onreceive = null;
    this.onclose = null;
    this._headers = headers;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(WebSocketTransport, [{
    key: "connect",
    value: function () {
      var _connect = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(url, transferFormat) {
        var _this = this;

        var token;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isRequired(url, "url");
                _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isRequired(transferFormat, "transferFormat");
                _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isIn(transferFormat, _ITransport__WEBPACK_IMPORTED_MODULE_8__["TransferFormat"], "transferFormat");

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_7__["LogLevel"].Trace, "(WebSockets transport) Connecting.");

                if (!this._accessTokenFactory) {
                  _context.next = 8;
                  break;
                }

                _context.next = 7;
                return this._accessTokenFactory();

              case 7:
                token = _context.sent;

              case 8:
                return _context.abrupt("return", new Promise(function (resolve, reject) {
                  url = url.replace(/^http/, "ws");
                  var webSocket;

                  var cookies = _this._httpClient.getCookieString(url);

                  var opened = false;

                  if (_Utils__WEBPACK_IMPORTED_MODULE_9__["Platform"].isNode || _Utils__WEBPACK_IMPORTED_MODULE_9__["Platform"].isReactNative) {
                    var headers = {};

                    var _getUserAgentHeader = Object(_Utils__WEBPACK_IMPORTED_MODULE_9__["getUserAgentHeader"])(),
                        _getUserAgentHeader2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_getUserAgentHeader, 2),
                        name = _getUserAgentHeader2[0],
                        value = _getUserAgentHeader2[1];

                    headers[name] = value;

                    if (token) {
                      headers[_HeaderNames__WEBPACK_IMPORTED_MODULE_6__["HeaderNames"].Authorization] = "Bearer ".concat(token);
                    }

                    if (cookies) {
                      headers[_HeaderNames__WEBPACK_IMPORTED_MODULE_6__["HeaderNames"].Cookie] = cookies;
                    } // Only pass headers when in non-browser environments


                    webSocket = new _this._webSocketConstructor(url, undefined, {
                      headers: Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])({}, headers), _this._headers)
                    });
                  } else {
                    if (token) {
                      url += (url.indexOf("?") < 0 ? "?" : "&") + "access_token=".concat(encodeURIComponent(token));
                    }
                  }

                  if (!webSocket) {
                    // Chrome is not happy with passing 'undefined' as protocol
                    webSocket = new _this._webSocketConstructor(url);
                  }

                  if (transferFormat === _ITransport__WEBPACK_IMPORTED_MODULE_8__["TransferFormat"].Binary) {
                    webSocket.binaryType = "arraybuffer";
                  }

                  webSocket.onopen = function (_event) {
                    _this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_7__["LogLevel"].Information, "WebSocket connected to ".concat(url, "."));

                    _this._webSocket = webSocket;
                    opened = true;
                    resolve();
                  };

                  webSocket.onerror = function (event) {
                    var error = null; // ErrorEvent is a browser only type we need to check if the type exists before using it

                    if (typeof ErrorEvent !== "undefined" && event instanceof ErrorEvent) {
                      error = event.error;
                    } else {
                      error = "There was an error with the transport";
                    }

                    _this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_7__["LogLevel"].Information, "(WebSockets transport) ".concat(error, "."));
                  };

                  webSocket.onmessage = function (message) {
                    _this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_7__["LogLevel"].Trace, "(WebSockets transport) data received. ".concat(Object(_Utils__WEBPACK_IMPORTED_MODULE_9__["getDataDetail"])(message.data, _this._logMessageContent), "."));

                    if (_this.onreceive) {
                      try {
                        _this.onreceive(message.data);
                      } catch (error) {
                        _this._close(error);

                        return;
                      }
                    }
                  };

                  webSocket.onclose = function (event) {
                    // Don't call close handler if connection was never established
                    // We'll reject the connect call instead
                    if (opened) {
                      _this._close(event);
                    } else {
                      var error = null; // ErrorEvent is a browser only type we need to check if the type exists before using it

                      if (typeof ErrorEvent !== "undefined" && event instanceof ErrorEvent) {
                        error = event.error;
                      } else {
                        error = "WebSocket failed to connect. The connection could not be found on the server," + " either the endpoint may not be a SignalR endpoint," + " the connection ID is not present on the server, or there is a proxy blocking WebSockets." + " If you have multiple servers check that sticky sessions are enabled.";
                      }

                      reject(new Error(error));
                    }
                  };
                }));

              case 9:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function connect(_x, _x2) {
        return _connect.apply(this, arguments);
      }

      return connect;
    }()
  }, {
    key: "send",
    value: function send(data) {
      if (this._webSocket && this._webSocket.readyState === this._webSocketConstructor.OPEN) {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_7__["LogLevel"].Trace, "(WebSockets transport) sending data. ".concat(Object(_Utils__WEBPACK_IMPORTED_MODULE_9__["getDataDetail"])(data, this._logMessageContent), "."));

        this._webSocket.send(data);

        return Promise.resolve();
      }

      return Promise.reject("WebSocket is not in the OPEN state");
    }
  }, {
    key: "stop",
    value: function stop() {
      if (this._webSocket) {
        // Manually invoke onclose callback inline so we know the HttpConnection was closed properly before returning
        // This also solves an issue where websocket.onclose could take 18+ seconds to trigger during network disconnects
        this._close(undefined);
      }

      return Promise.resolve();
    }
  }, {
    key: "_close",
    value: function _close(event) {
      // webSocket will be null if the transport did not start successfully
      if (this._webSocket) {
        // Clear websocket handlers because we are considering the socket closed now
        this._webSocket.onclose = function () {};

        this._webSocket.onmessage = function () {};

        this._webSocket.onerror = function () {};

        this._webSocket.close();

        this._webSocket = undefined;
      }

      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_7__["LogLevel"].Trace, "(WebSockets transport) socket closed.");

      if (this.onclose) {
        if (this._isCloseEvent(event) && (event.wasClean === false || event.code !== 1000)) {
          this.onclose(new Error("WebSocket closed with status code: ".concat(event.code, " (").concat(event.reason || "no reason given", ").")));
        } else if (event instanceof Error) {
          this.onclose(event);
        } else {
          this.onclose();
        }
      }
    }
  }, {
    key: "_isCloseEvent",
    value: function _isCloseEvent(event) {
      return event && typeof event.wasClean === "boolean" && typeof event.code === "number";
    }
  }]);

  return WebSocketTransport;
}();

/***/ }),

/***/ "8/hw":
/*!*************************************************************!*\
  !*** ./src/app/core/components/admin/group/Models/group.ts ***!
  \*************************************************************/
/*! exports provided: Group */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Group", function() { return Group; });
var Group = /** @class */ (function () {
    function Group() {
    }
    return Group;
}());



/***/ }),

/***/ "8654":
/*!********************************************!*\
  !*** ./src/app/core/guards/claim.guard.ts ***!
  \********************************************/
/*! exports provided: ClaimGuard */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClaimGuard", function() { return ClaimGuard; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/admin/login/Services/auth.service */ "a9M/");
/* harmony import */ var _services_alertify_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../services/alertify.service */ "DAyg");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var ClaimGuard = /** @class */ (function () {
    function ClaimGuard(authService, router, alertifyService) {
        this.authService = authService;
        this.router = router;
        this.alertifyService = alertifyService;
    }
    ClaimGuard.prototype.canActivate = function (route) {
        var expectedClaim = route.data['claim'];
        if (!expectedClaim) {
            return true; // If no claim is specified, allow access
        }
        if (this.authService.claimGuard(expectedClaim)) {
            return true;
        }
        this.router.navigate(['/dashboard']);
        return false;
    };
    ClaimGuard.ctorParameters = function () { return [
        { type: _components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"] },
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"] },
        { type: _services_alertify_service__WEBPACK_IMPORTED_MODULE_3__["AlertifyService"] }
    ]; };
    ClaimGuard = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"],
            _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"],
            _services_alertify_service__WEBPACK_IMPORTED_MODULE_3__["AlertifyService"]])
    ], ClaimGuard);
    return ClaimGuard;
}());



/***/ }),

/***/ "8z5B":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/screens/visit-add/visit-add.component.html ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid\" style=\"padding-top: 35px;\">\r\n    <div class=\"card\">\r\n      <div class=\"card-header card-header-primary\">\r\n        <h4 class=\"card-title\">Ziyaret Talebi</h4>\r\n        <p class=\"card-category\">Ziyaret Talebi</p>\r\n      </div>\r\n      <div class=\"card-body\">\r\n        <!-- Tab Butonları -->\r\n        <div class=\"date-tabs\">\r\n          <button mat-button \r\n                  [class.active]=\"selectedTab === 'vehicle'\"\r\n                  (click)=\"switchTab('vehicle')\">\r\n            <mat-icon>directions_car</mat-icon>\r\n            <span>Araç</span>\r\n          </button>\r\n          <button mat-button \r\n                  [class.active]=\"selectedTab === 'pedestrian'\"\r\n                  (click)=\"switchTab('pedestrian')\">\r\n            <mat-icon>directions_walk</mat-icon>\r\n            <span>Yaya</span>\r\n          </button>\r\n        </div>\r\n\r\n        <!-- Ziyaretçi Formu -->\r\n        <div class=\"visitor-form\" [ngSwitch]=\"selectedTab\">\r\n          \r\n          <!-- Araçlı Ziyaretçi Formu -->\r\n          <div *ngSwitchCase=\"'vehicle'\" class=\"mt-4\">\r\n            <form #vehicleForm=\"ngForm\" (ngSubmit)=\"saveVisit(true)\">\r\n              <div class=\"form-group\">\r\n                <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                  <mat-label>Araç Plakası</mat-label>\r\n                  <input matInput [(ngModel)]=\"vehicleData.plate\" name=\"plate\" required>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <!-- Tarih Alanları -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Giriş Tarihi</mat-label>\r\n                    <input matInput [matDatepicker]=\"startDatePicker\" \r\n                           [(ngModel)]=\"vehicleData.visitStartDate\" \r\n                           name=\"visitStartDate\"\r\n                           (dateChange)=\"onStartDateChange()\" \r\n                           [matDatepickerFilter]=\"dateFilter\"\r\n                           required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #startDatePicker></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Çıkış Tarihi</mat-label>\r\n                    <input matInput [matDatepicker]=\"endDatePicker\" \r\n                           [(ngModel)]=\"vehicleData.visitEndDate\" \r\n                           name=\"visitEndDate\"\r\n                           (dateChange)=\"onEndDateChange()\" \r\n                           [min]=\"vehicleData.visitStartDate\"\r\n                           required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #endDatePicker></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Ziyaretçi Listesi -->\r\n              <div class=\"visitors-list\">\r\n                <div *ngFor=\"let visitor of vehicleVisitors; let i = index\" class=\"visitor-item mb-3\">\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>{{ i === 0 ? 'Ana Ziyaretçi' : 'Ek Ziyaretçi ' + i }}</mat-label>\r\n                    <input matInput [(ngModel)]=\"visitor.name\" [name]=\"'visitor' + i\" required>\r\n                    <button mat-icon-button matSuffix color=\"warn\" \r\n                            (click)=\"removeVisitor(i)\" \r\n                            *ngIf=\"i !== 0\">\r\n                      <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Ziyaretçi Ekle Butonu -->\r\n              <div class=\"text-right mb-3\">\r\n                <button mat-mini-fab color=\"primary\" \r\n                        type=\"button\"\r\n                        (click)=\"addVisitor()\"\r\n                        matTooltip=\"Ek Ziyaretçi Ekle\">\r\n                  <mat-icon>add</mat-icon>\r\n                </button>\r\n              </div>\r\n\r\n              <!-- Kaydet Butonu -->\r\n              <button mat-raised-button color=\"primary\" \r\n                      class=\"w-100\" \r\n                      [disabled]=\"!vehicleForm.valid\"\r\n                      type=\"submit\">\r\n                Kaydet\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          <!-- Yaya Ziyaretçi Formu -->\r\n          <div *ngSwitchCase=\"'pedestrian'\" class=\"mt-4\">\r\n            <form #pedestrianForm=\"ngForm\" (ngSubmit)=\"saveVisit(false)\">\r\n              <!-- Tarih Alanları -->\r\n              <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Giriş Tarihi</mat-label>\r\n                    <input matInput [matDatepicker]=\"pedStartDatePicker\" \r\n                           [(ngModel)]=\"vehicleData.visitStartDate\" \r\n                           name=\"visitStartDate\"\r\n                           (dateChange)=\"onStartDateChange()\" \r\n                           [matDatepickerFilter]=\"dateFilter\"\r\n                           required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"pedStartDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #pedStartDatePicker></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>Çıkış Tarihi</mat-label>\r\n                    <input matInput [matDatepicker]=\"pedEndDatePicker\" \r\n                           [(ngModel)]=\"vehicleData.visitEndDate\" \r\n                           name=\"visitEndDate\"\r\n                           (dateChange)=\"onEndDateChange()\" \r\n                           [min]=\"vehicleData.visitStartDate\"\r\n                           required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"pedEndDatePicker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #pedEndDatePicker></mat-datepicker>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Yaya Ziyaretçi Listesi -->\r\n              <div class=\"visitors-list\">\r\n                <div *ngFor=\"let visitor of pedestrianVisitors; let i = index\" class=\"visitor-item mb-3\">\r\n                  <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n                    <mat-label>{{ i === 0 ? 'Ana Ziyaretçi' : 'Ek Ziyaretçi ' + i }}</mat-label>\r\n                    <input matInput [(ngModel)]=\"visitor.name\" [name]=\"'visitor' + i\" required>\r\n                    <button mat-icon-button matSuffix color=\"warn\" \r\n                            (click)=\"removePedestrianVisitor(i)\" \r\n                            *ngIf=\"i !== 0\">\r\n                      <mat-icon>delete</mat-icon>\r\n                    </button>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\r\n              <!-- Ziyaretçi Ekle Butonu -->\r\n              <div class=\"text-right mb-3\">\r\n                <button mat-mini-fab color=\"primary\" \r\n                        type=\"button\"\r\n                        (click)=\"addPedestrianVisitor()\"\r\n                        matTooltip=\"Ek Ziyaretçi Ekle\">\r\n                  <mat-icon>add</mat-icon>\r\n                </button>\r\n              </div>\r\n\r\n              <!-- Kaydet Butonu -->\r\n              <button mat-raised-button color=\"primary\" \r\n                      class=\"w-100\" \r\n                      [disabled]=\"!pedestrianForm.valid\"\r\n                      type=\"submit\">\r\n                Kaydet\r\n              </button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n</div>");

/***/ }),

/***/ "9BRb":
/*!************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/Errors.js ***!
  \************************************************************/
/*! exports provided: HttpError, TimeoutError, AbortError, UnsupportedTransportError, DisabledTransportError, FailedToStartTransportError, FailedToNegotiateWithServerError, AggregateErrors */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpError", function() { return HttpError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TimeoutError", function() { return TimeoutError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AbortError", function() { return AbortError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UnsupportedTransportError", function() { return UnsupportedTransportError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DisabledTransportError", function() { return DisabledTransportError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FailedToStartTransportError", function() { return FailedToStartTransportError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FailedToNegotiateWithServerError", function() { return FailedToNegotiateWithServerError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AggregateErrors", function() { return AggregateErrors; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/wrapNativeSuper */ "kHIg");




// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

/** Error thrown when an HTTP request fails. */
var HttpError = /*#__PURE__*/function (_Error) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(HttpError, _Error);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(HttpError);

  /** Constructs a new instance of {@link @microsoft/signalr.HttpError}.
   *
   * @param {string} errorMessage A descriptive error message.
   * @param {number} statusCode The HTTP status code represented by this error.
   */
  function HttpError(errorMessage, statusCode) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, HttpError);

    var trueProto = (this instanceof HttpError ? this.constructor : void 0).prototype;
    _this = _super.call(this, "".concat(errorMessage, ": Status code '").concat(statusCode, "'"));
    _this.statusCode = statusCode; // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this.__proto__ = trueProto;
    return _this;
  }

  return HttpError;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));
/** Error thrown when a timeout elapses. */

var TimeoutError = /*#__PURE__*/function (_Error2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(TimeoutError, _Error2);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(TimeoutError);

  /** Constructs a new instance of {@link @microsoft/signalr.TimeoutError}.
   *
   * @param {string} errorMessage A descriptive error message.
   */
  function TimeoutError() {
    var _this2;

    var errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "A timeout occurred.";

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, TimeoutError);

    var trueProto = (this instanceof TimeoutError ? this.constructor : void 0).prototype;
    _this2 = _super2.call(this, errorMessage); // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this2.__proto__ = trueProto;
    return _this2;
  }

  return TimeoutError;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));
/** Error thrown when an action is aborted. */

var AbortError = /*#__PURE__*/function (_Error3) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(AbortError, _Error3);

  var _super3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(AbortError);

  /** Constructs a new instance of {@link AbortError}.
   *
   * @param {string} errorMessage A descriptive error message.
   */
  function AbortError() {
    var _this3;

    var errorMessage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "An abort occurred.";

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AbortError);

    var trueProto = (this instanceof AbortError ? this.constructor : void 0).prototype;
    _this3 = _super3.call(this, errorMessage); // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this3.__proto__ = trueProto;
    return _this3;
  }

  return AbortError;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));
/** Error thrown when the selected transport is unsupported by the browser. */

/** @private */

var UnsupportedTransportError = /*#__PURE__*/function (_Error4) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(UnsupportedTransportError, _Error4);

  var _super4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(UnsupportedTransportError);

  /** Constructs a new instance of {@link @microsoft/signalr.UnsupportedTransportError}.
   *
   * @param {string} message A descriptive error message.
   * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.
   */
  function UnsupportedTransportError(message, transport) {
    var _this4;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, UnsupportedTransportError);

    var trueProto = (this instanceof UnsupportedTransportError ? this.constructor : void 0).prototype;
    _this4 = _super4.call(this, message);
    _this4.transport = transport;
    _this4.errorType = 'UnsupportedTransportError'; // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this4.__proto__ = trueProto;
    return _this4;
  }

  return UnsupportedTransportError;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));
/** Error thrown when the selected transport is disabled by the browser. */

/** @private */

var DisabledTransportError = /*#__PURE__*/function (_Error5) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(DisabledTransportError, _Error5);

  var _super5 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(DisabledTransportError);

  /** Constructs a new instance of {@link @microsoft/signalr.DisabledTransportError}.
   *
   * @param {string} message A descriptive error message.
   * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.
   */
  function DisabledTransportError(message, transport) {
    var _this5;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, DisabledTransportError);

    var trueProto = (this instanceof DisabledTransportError ? this.constructor : void 0).prototype;
    _this5 = _super5.call(this, message);
    _this5.transport = transport;
    _this5.errorType = 'DisabledTransportError'; // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this5.__proto__ = trueProto;
    return _this5;
  }

  return DisabledTransportError;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));
/** Error thrown when the selected transport cannot be started. */

/** @private */

var FailedToStartTransportError = /*#__PURE__*/function (_Error6) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(FailedToStartTransportError, _Error6);

  var _super6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(FailedToStartTransportError);

  /** Constructs a new instance of {@link @microsoft/signalr.FailedToStartTransportError}.
   *
   * @param {string} message A descriptive error message.
   * @param {HttpTransportType} transport The {@link @microsoft/signalr.HttpTransportType} this error occurred on.
   */
  function FailedToStartTransportError(message, transport) {
    var _this6;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, FailedToStartTransportError);

    var trueProto = (this instanceof FailedToStartTransportError ? this.constructor : void 0).prototype;
    _this6 = _super6.call(this, message);
    _this6.transport = transport;
    _this6.errorType = 'FailedToStartTransportError'; // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this6.__proto__ = trueProto;
    return _this6;
  }

  return FailedToStartTransportError;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));
/** Error thrown when the negotiation with the server failed to complete. */

/** @private */

var FailedToNegotiateWithServerError = /*#__PURE__*/function (_Error7) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(FailedToNegotiateWithServerError, _Error7);

  var _super7 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(FailedToNegotiateWithServerError);

  /** Constructs a new instance of {@link @microsoft/signalr.FailedToNegotiateWithServerError}.
   *
   * @param {string} message A descriptive error message.
   */
  function FailedToNegotiateWithServerError(message) {
    var _this7;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, FailedToNegotiateWithServerError);

    var trueProto = (this instanceof FailedToNegotiateWithServerError ? this.constructor : void 0).prototype;
    _this7 = _super7.call(this, message);
    _this7.errorType = 'FailedToNegotiateWithServerError'; // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this7.__proto__ = trueProto;
    return _this7;
  }

  return FailedToNegotiateWithServerError;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));
/** Error thrown when multiple errors have occurred. */

/** @private */

var AggregateErrors = /*#__PURE__*/function (_Error8) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(AggregateErrors, _Error8);

  var _super8 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(AggregateErrors);

  /** Constructs a new instance of {@link @microsoft/signalr.AggregateErrors}.
   *
   * @param {string} message A descriptive error message.
   * @param {Error[]} innerErrors The collection of errors this error is aggregating.
   */
  function AggregateErrors(message, innerErrors) {
    var _this8;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, AggregateErrors);

    var trueProto = (this instanceof AggregateErrors ? this.constructor : void 0).prototype;
    _this8 = _super8.call(this, message);
    _this8.innerErrors = innerErrors; // Workaround issue in Typescript compiler
    // https://github.com/Microsoft/TypeScript/issues/13965#issuecomment-278570200

    _this8.__proto__ = trueProto;
    return _this8;
  }

  return AggregateErrors;
}( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_wrapNativeSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(Error));

/***/ }),

/***/ "9TM8":
/*!*****************************************************************************!*\
  !*** ./src/app/core/components/admin/multiVisiters/models/multivisiters.ts ***!
  \*****************************************************************************/
/*! exports provided: MultiVisiters */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiVisiters", function() { return MultiVisiters; });
var MultiVisiters = /** @class */ (function () {
    function MultiVisiters() {
    }
    return MultiVisiters;
}());



/***/ }),

/***/ "9emw":
/*!*******************************************************************************!*\
  !*** ./src/app/core/components/admin/translate/services/Translate.service.ts ***!
  \*******************************************************************************/
/*! exports provided: TranslateService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TranslateService", function() { return TranslateService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var TranslateService = /** @class */ (function () {
    function TranslateService(_httpClient) {
        this._httpClient = _httpClient;
    }
    TranslateService.prototype.getTranslateList = function () {
        return this._httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/translates/dtos');
    };
    TranslateService.prototype.getTranslate = function (id) {
        return this._httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/translates/" + id));
    };
    TranslateService.prototype.addTranslate = function (translate) {
        return this._httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/translates/', translate, { responseType: 'text' });
    };
    TranslateService.prototype.updateTranslate = function (translate) {
        return this._httpClient.put(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/translates/', translate, { responseType: 'text' });
    };
    TranslateService.prototype.deleteTranslate = function (id) {
        return this._httpClient.request('delete', environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/translates/" + id));
    };
    TranslateService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    TranslateService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], TranslateService);
    return TranslateService;
}());



/***/ }),

/***/ "A5z7":
/*!***********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/chips.js ***!
  \***********************************************************************/
/*! exports provided: MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipInput, MatChipList, MatChipListChange, MatChipRemove, MatChipSelectionChange, MatChipTrailingIcon, MatChipsModule, ɵ0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHIPS_DEFAULT_OPTIONS", function() { return MAT_CHIPS_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHIP_AVATAR", function() { return MAT_CHIP_AVATAR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHIP_REMOVE", function() { return MAT_CHIP_REMOVE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHIP_TRAILING_ICON", function() { return MAT_CHIP_TRAILING_ICON; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChip", function() { return MatChip; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipAvatar", function() { return MatChipAvatar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipInput", function() { return MatChipInput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipList", function() { return MatChipList; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipListChange", function() { return MatChipListChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipRemove", function() { return MatChipRemove; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipSelectionChange", function() { return MatChipSelectionChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipTrailingIcon", function() { return MatChipTrailingIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatChipsModule", function() { return MatChipsModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/cdk/collections */ "0EQZ");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/form-field */ "kmnG");




















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Event object emitted by MatChip when selected or deselected. */






var _c0 = ["*"];

var MatChipSelectionChange = function MatChipSelectionChange(
/** Reference to the chip that emitted the event. */
source,
/** Whether the chip that emitted the event is selected. */
selected) {
  var isUserInput = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipSelectionChange);

  this.source = source;
  this.selected = selected;
  this.isUserInput = isUserInput;
};
/**
 * Injection token that can be used to reference instances of `MatChipRemove`. It serves as
 * alternative token to the actual `MatChipRemove` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */


var MAT_CHIP_REMOVE = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatChipRemove');
/**
 * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as
 * alternative token to the actual `MatChipAvatar` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */

var MAT_CHIP_AVATAR = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatChipAvatar');
/**
 * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as
 * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */

var MAT_CHIP_TRAILING_ICON = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatChipTrailingIcon'); // Boilerplate for applying mixins to MatChip.

/** @docs-private */

var MatChipBase = function MatChipBase(_elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipBase);

  this._elementRef = _elementRef;
};

var _MatChipMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinTabIndex"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinColor"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinDisableRipple"])(MatChipBase), 'primary'), -1);
/**
 * Dummy directive to add CSS class to chip avatar.
 * @docs-private
 */


var MatChipAvatar = function MatChipAvatar() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipAvatar);
};

MatChipAvatar.ɵfac = function MatChipAvatar_Factory(t) {
  return new (t || MatChipAvatar)();
};

MatChipAvatar.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatChipAvatar,
  selectors: [["mat-chip-avatar"], ["", "matChipAvatar", ""]],
  hostAttrs: [1, "mat-chip-avatar"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_CHIP_AVATAR,
    useExisting: MatChipAvatar
  }])]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatChipAvatar, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-chip-avatar, [matChipAvatar]',
      host: {
        'class': 'mat-chip-avatar'
      },
      providers: [{
        provide: MAT_CHIP_AVATAR,
        useExisting: MatChipAvatar
      }]
    }]
  }], null, null);
})();
/**
 * Dummy directive to add CSS class to chip trailing icon.
 * @docs-private
 */


var MatChipTrailingIcon = function MatChipTrailingIcon() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipTrailingIcon);
};

MatChipTrailingIcon.ɵfac = function MatChipTrailingIcon_Factory(t) {
  return new (t || MatChipTrailingIcon)();
};

MatChipTrailingIcon.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatChipTrailingIcon,
  selectors: [["mat-chip-trailing-icon"], ["", "matChipTrailingIcon", ""]],
  hostAttrs: [1, "mat-chip-trailing-icon"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_CHIP_TRAILING_ICON,
    useExisting: MatChipTrailingIcon
  }])]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatChipTrailingIcon, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',
      host: {
        'class': 'mat-chip-trailing-icon'
      },
      providers: [{
        provide: MAT_CHIP_TRAILING_ICON,
        useExisting: MatChipTrailingIcon
      }]
    }]
  }], null, null);
})();
/**
 * Material design styled Chip component. Used inside the MatChipList component.
 */


var MatChip = /*#__PURE__*/function (_MatChipMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(MatChip, _MatChipMixinBase2);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(MatChip);

  function MatChip(_elementRef, _ngZone, platform, globalRippleOptions, // @breaking-change 8.0.0 `animationMode` parameter to become required.
  animationMode, // @breaking-change 9.0.0 `_changeDetectorRef` parameter to become required.
  _changeDetectorRef, tabIndex, // @breaking-change 11.0.0 `_document` parameter to become required.
  _document) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChip);

    _this = _super.call(this, _elementRef);
    _this._elementRef = _elementRef;
    _this._ngZone = _ngZone;
    _this._changeDetectorRef = _changeDetectorRef;
    /** Whether the chip has focus. */

    _this._hasFocus = false;
    /** Whether the chip list is selectable */

    _this.chipListSelectable = true;
    /** Whether the chip list is in multi-selection mode. */

    _this._chipListMultiple = false;
    /** Whether the chip list as a whole is disabled. */

    _this._chipListDisabled = false;
    _this._selected = false;
    _this._selectable = true;
    _this._disabled = false;
    _this._removable = true;
    /** Emits when the chip is focused. */

    _this._onFocus = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Subject"]();
    /** Emits when the chip is blured. */

    _this._onBlur = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Subject"]();
    /** Emitted when the chip is selected or deselected. */

    _this.selectionChange = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
    /** Emitted when the chip is destroyed. */

    _this.destroyed = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
    /** Emitted when a chip is to be removed. */

    _this.removed = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();

    _this._addHostClassName(); // Dynamically create the ripple target, append it within the chip, and use it as the
    // chip's ripple target. Adding the class '.mat-chip-ripple' ensures that it will have
    // the proper styles.


    _this._chipRippleTarget = (_document || document).createElement('div');

    _this._chipRippleTarget.classList.add('mat-chip-ripple');

    _this._elementRef.nativeElement.appendChild(_this._chipRippleTarget);

    _this._chipRipple = new _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["RippleRenderer"](Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this), _ngZone, _this._chipRippleTarget, platform);

    _this._chipRipple.setupTriggerEvents(_elementRef);

    _this.rippleConfig = globalRippleOptions || {};
    _this._animationsDisabled = animationMode === 'NoopAnimations';
    _this.tabIndex = tabIndex != null ? parseInt(tabIndex) || -1 : -1;
    return _this;
  }
  /**
   * Whether ripples are disabled on interaction
   * @docs-private
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatChip, [{
    key: "rippleDisabled",
    get: function get() {
      return this.disabled || this.disableRipple || !!this.rippleConfig.disabled;
    }
    /** Whether the chip is selected. */

  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    },
    set: function set(value) {
      var coercedValue = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);

      if (coercedValue !== this._selected) {
        this._selected = coercedValue;

        this._dispatchSelectionChange();
      }
    }
    /** The value of the chip. Defaults to the content inside `<mat-chip>` tags. */

  }, {
    key: "value",
    get: function get() {
      return this._value !== undefined ? this._value : this._elementRef.nativeElement.textContent;
    },
    set: function set(value) {
      this._value = value;
    }
    /**
     * Whether or not the chip is selectable. When a chip is not selectable,
     * changes to its selected state are always ignored. By default a chip is
     * selectable, and it becomes non-selectable if its parent chip list is
     * not selectable.
     */

  }, {
    key: "selectable",
    get: function get() {
      return this._selectable && this.chipListSelectable;
    },
    set: function set(value) {
      this._selectable = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);
    }
    /** Whether the chip is disabled. */

  }, {
    key: "disabled",
    get: function get() {
      return this._chipListDisabled || this._disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);
    }
    /**
     * Determines whether or not the chip displays the remove styling and emits (removed) events.
     */

  }, {
    key: "removable",
    get: function get() {
      return this._removable;
    },
    set: function set(value) {
      this._removable = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);
    }
    /** The ARIA selected applied to the chip. */

  }, {
    key: "ariaSelected",
    get: function get() {
      // Remove the `aria-selected` when the chip is deselected in single-selection mode, because
      // it adds noise to NVDA users where "not selected" will be read out for each chip.
      return this.selectable && (this._chipListMultiple || this.selected) ? this.selected.toString() : null;
    }
  }, {
    key: "_addHostClassName",
    value: function _addHostClassName() {
      var basicChipAttrName = 'mat-basic-chip';
      var element = this._elementRef.nativeElement;

      if (element.hasAttribute(basicChipAttrName) || element.tagName.toLowerCase() === basicChipAttrName) {
        element.classList.add(basicChipAttrName);
        return;
      } else {
        element.classList.add('mat-standard-chip');
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.destroyed.emit({
        chip: this
      });

      this._chipRipple._removeTriggerEvents();
    }
    /** Selects the chip. */

  }, {
    key: "select",
    value: function select() {
      if (!this._selected) {
        this._selected = true;

        this._dispatchSelectionChange();

        this._markForCheck();
      }
    }
    /** Deselects the chip. */

  }, {
    key: "deselect",
    value: function deselect() {
      if (this._selected) {
        this._selected = false;

        this._dispatchSelectionChange();

        this._markForCheck();
      }
    }
    /** Select this chip and emit selected event */

  }, {
    key: "selectViaInteraction",
    value: function selectViaInteraction() {
      if (!this._selected) {
        this._selected = true;

        this._dispatchSelectionChange(true);

        this._markForCheck();
      }
    }
    /** Toggles the current selected state of this chip. */

  }, {
    key: "toggleSelected",
    value: function toggleSelected() {
      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      this._selected = !this.selected;

      this._dispatchSelectionChange(isUserInput);

      this._markForCheck();

      return this.selected;
    }
    /** Allows for programmatic focusing of the chip. */

  }, {
    key: "focus",
    value: function focus() {
      if (!this._hasFocus) {
        this._elementRef.nativeElement.focus();

        this._onFocus.next({
          chip: this
        });
      }

      this._hasFocus = true;
    }
    /**
     * Allows for programmatic removal of the chip. Called by the MatChipList when the DELETE or
     * BACKSPACE keys are pressed.
     *
     * Informs any listeners of the removal request. Does not remove the chip from the DOM.
     */

  }, {
    key: "remove",
    value: function remove() {
      if (this.removable) {
        this.removed.emit({
          chip: this
        });
      }
    }
    /** Handles click events on the chip. */

  }, {
    key: "_handleClick",
    value: function _handleClick(event) {
      if (this.disabled) {
        event.preventDefault();
      } else {
        event.stopPropagation();
      }
    }
    /** Handle custom key presses. */

  }, {
    key: "_handleKeydown",
    value: function _handleKeydown(event) {
      if (this.disabled) {
        return;
      }

      switch (event.keyCode) {
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["DELETE"]:
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["BACKSPACE"]:
          // If we are removable, remove the focused chip
          this.remove(); // Always prevent so page navigation does not occur

          event.preventDefault();
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["SPACE"]:
          // If we are selectable, toggle the focused chip
          if (this.selectable) {
            this.toggleSelected(true);
          } // Always prevent space from scrolling the page since the list has focus


          event.preventDefault();
          break;
      }
    }
  }, {
    key: "_blur",
    value: function _blur() {
      var _this2 = this;

      // When animations are enabled, Angular may end up removing the chip from the DOM a little
      // earlier than usual, causing it to be blurred and throwing off the logic in the chip list
      // that moves focus not the next item. To work around the issue, we defer marking the chip
      // as not focused until the next time the zone stabilizes.
      this._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["take"])(1)).subscribe(function () {
        _this2._ngZone.run(function () {
          _this2._hasFocus = false;

          _this2._onBlur.next({
            chip: _this2
          });
        });
      });
    }
  }, {
    key: "_dispatchSelectionChange",
    value: function _dispatchSelectionChange() {
      var isUserInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;
      this.selectionChange.emit({
        source: this,
        isUserInput: isUserInput,
        selected: this._selected
      });
    }
  }, {
    key: "_markForCheck",
    value: function _markForCheck() {
      // @breaking-change 9.0.0 Remove this method once the _changeDetectorRef is a required param.
      if (this._changeDetectorRef) {
        this._changeDetectorRef.markForCheck();
      }
    }
  }]);

  return MatChip;
}(_MatChipMixinBase);

MatChip.ɵfac = function MatChip_Factory(t) {
  return new (t || MatChip)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_RIPPLE_GLOBAL_OPTIONS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_12__["ANIMATION_MODULE_TYPE"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinjectAttribute"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"], 8));
};

MatChip.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatChip,
  selectors: [["mat-basic-chip"], ["", "mat-basic-chip", ""], ["mat-chip"], ["", "mat-chip", ""]],
  contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MAT_CHIP_AVATAR, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MAT_CHIP_TRAILING_ICON, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MAT_CHIP_REMOVE, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx.avatar = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx.trailingIcon = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx.removeIcon = _t.first);
    }
  },
  hostAttrs: ["role", "option", 1, "mat-chip", "mat-focus-indicator"],
  hostVars: 14,
  hostBindings: function MatChip_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MatChip_click_HostBindingHandler($event) {
        return ctx._handleClick($event);
      })("keydown", function MatChip_keydown_HostBindingHandler($event) {
        return ctx._handleKeydown($event);
      })("focus", function MatChip_focus_HostBindingHandler() {
        return ctx.focus();
      })("blur", function MatChip_blur_HostBindingHandler() {
        return ctx._blur();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("tabindex", ctx.disabled ? null : ctx.tabIndex)("disabled", ctx.disabled || null)("aria-disabled", ctx.disabled.toString())("aria-selected", ctx.ariaSelected);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-chip-selected", ctx.selected)("mat-chip-with-avatar", ctx.avatar)("mat-chip-with-trailing-icon", ctx.trailingIcon || ctx.removeIcon)("mat-chip-disabled", ctx.disabled)("_mat-animation-noopable", ctx._animationsDisabled);
    }
  },
  inputs: {
    color: "color",
    disableRipple: "disableRipple",
    tabIndex: "tabIndex",
    selected: "selected",
    value: "value",
    selectable: "selectable",
    disabled: "disabled",
    removable: "removable"
  },
  outputs: {
    selectionChange: "selectionChange",
    destroyed: "destroyed",
    removed: "removed"
  },
  exportAs: ["matChip"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]]
});

MatChip.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_RIPPLE_GLOBAL_OPTIONS"]]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_12__["ANIMATION_MODULE_TYPE"]]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Attribute"],
      args: ['tabindex']
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
    }]
  }];
};

MatChip.propDecorators = {
  avatar: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MAT_CHIP_AVATAR]
  }],
  trailingIcon: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MAT_CHIP_TRAILING_ICON]
  }],
  removeIcon: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
    args: [MAT_CHIP_REMOVE]
  }],
  selected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  selectable: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  removable: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  selectionChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
  }],
  destroyed: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
  }],
  removed: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatChip, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: "mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]",
      inputs: ['color', 'disableRipple', 'tabIndex'],
      exportAs: 'matChip',
      host: {
        'class': 'mat-chip mat-focus-indicator',
        '[attr.tabindex]': 'disabled ? null : tabIndex',
        'role': 'option',
        '[class.mat-chip-selected]': 'selected',
        '[class.mat-chip-with-avatar]': 'avatar',
        '[class.mat-chip-with-trailing-icon]': 'trailingIcon || removeIcon',
        '[class.mat-chip-disabled]': 'disabled',
        '[class._mat-animation-noopable]': '_animationsDisabled',
        '[attr.disabled]': 'disabled || null',
        '[attr.aria-disabled]': 'disabled.toString()',
        '[attr.aria-selected]': 'ariaSelected',
        '(click)': '_handleClick($event)',
        '(keydown)': '_handleKeydown($event)',
        '(focus)': 'focus()',
        '(blur)': '_blur()'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_10__["Platform"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MAT_RIPPLE_GLOBAL_OPTIONS"]]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_12__["ANIMATION_MODULE_TYPE"]]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Attribute"],
        args: ['tabindex']
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
      }]
    }];
  }, {
    selectionChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
    }],
    destroyed: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
    }],
    removed: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    selectable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    removable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    avatar: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MAT_CHIP_AVATAR]
    }],
    trailingIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MAT_CHIP_TRAILING_ICON]
    }],
    removeIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChild"],
      args: [MAT_CHIP_REMOVE]
    }]
  });
})();
/**
 * Applies proper (click) support and adds styling for use with the Material Design "cancel" icon
 * available at https://material.io/icons/#ic_cancel.
 *
 * Example:
 *
 *     `<mat-chip>
 *       <mat-icon matChipRemove>cancel</mat-icon>
 *     </mat-chip>`
 *
 * You *may* use a custom icon, but you may need to override the `mat-chip-remove` positioning
 * styles to properly center the icon within the chip.
 */


var MatChipRemove = /*#__PURE__*/function () {
  function MatChipRemove(_parentChip, // @breaking-change 11.0.0 `elementRef` parameter to be made required.
  elementRef) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipRemove);

    this._parentChip = _parentChip; // @breaking-change 11.0.0 Remove null check for `elementRef`.

    if (elementRef && elementRef.nativeElement.nodeName === 'BUTTON') {
      elementRef.nativeElement.setAttribute('type', 'button');
    }
  }
  /** Calls the parent chip's public `remove()` method if applicable. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatChipRemove, [{
    key: "_handleClick",
    value: function _handleClick(event) {
      var parentChip = this._parentChip;

      if (parentChip.removable && !parentChip.disabled) {
        parentChip.remove();
      } // We need to stop event propagation because otherwise the event will bubble up to the
      // form field and cause the `onContainerClick` method to be invoked. This method would then
      // reset the focused chip that has been focused after chip removal. Usually the parent
      // the parent click listener of the `MatChip` would prevent propagation, but it can happen
      // that the chip is being removed before the event bubbles up.


      event.stopPropagation();
    }
  }]);

  return MatChipRemove;
}();

MatChipRemove.ɵfac = function MatChipRemove_Factory(t) {
  return new (t || MatChipRemove)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MatChip), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]));
};

MatChipRemove.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatChipRemove,
  selectors: [["", "matChipRemove", ""]],
  hostAttrs: [1, "mat-chip-remove", "mat-chip-trailing-icon"],
  hostBindings: function MatChipRemove_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function MatChipRemove_click_HostBindingHandler($event) {
        return ctx._handleClick($event);
      });
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: MAT_CHIP_REMOVE,
    useExisting: MatChipRemove
  }])]
});

MatChipRemove.ctorParameters = function () {
  return [{
    type: MatChip
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatChipRemove, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: '[matChipRemove]',
      host: {
        'class': 'mat-chip-remove mat-chip-trailing-icon',
        '(click)': '_handleClick($event)'
      },
      providers: [{
        provide: MAT_CHIP_REMOVE,
        useExisting: MatChipRemove
      }]
    }]
  }], function () {
    return [{
      type: MatChip
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token to be used to override the default options for the chips module. */


var MAT_CHIPS_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('mat-chips-default-options');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Boilerplate for applying mixins to MatChipList.

/** @docs-private */

var MatChipListBase = function MatChipListBase(_defaultErrorStateMatcher, _parentForm, _parentFormGroup,
/** @docs-private */
ngControl) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipListBase);

  this._defaultErrorStateMatcher = _defaultErrorStateMatcher;
  this._parentForm = _parentForm;
  this._parentFormGroup = _parentFormGroup;
  this.ngControl = ngControl;
};

var _MatChipListMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinErrorState"])(MatChipListBase); // Increasing integer for generating unique ids for chip-list components.


var nextUniqueId = 0;
/** Change event object that is emitted when the chip list value has changed. */

var MatChipListChange = function MatChipListChange(
/** Chip list that emitted the event. */
source,
/** Value of the chip list when the event was emitted. */
value) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipListChange);

  this.source = source;
  this.value = value;
};
/**
 * A material design chips component (named ChipList for its similarity to the List component).
 */


var MatChipList = /*#__PURE__*/function (_MatChipListMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_3__["default"])(MatChipList, _MatChipListMixinBase2);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_4__["default"])(MatChipList);

  function MatChipList(_elementRef, _changeDetectorRef, _dir, _parentForm, _parentFormGroup, _defaultErrorStateMatcher,
  /** @docs-private */
  ngControl) {
    var _this3;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipList);

    _this3 = _super2.call(this, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);
    _this3._elementRef = _elementRef;
    _this3._changeDetectorRef = _changeDetectorRef;
    _this3._dir = _dir;
    _this3.ngControl = ngControl;
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

    _this3.controlType = 'mat-chip-list';
    /**
     * When a chip is destroyed, we store the index of the destroyed chip until the chips
     * query list notifies about the update. This is necessary because we cannot determine an
     * appropriate chip that should receive focus until the array of chips updated completely.
     */

    _this3._lastDestroyedChipIndex = null;
    /** Subject that emits when the component has been destroyed. */

    _this3._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_13__["Subject"]();
    /** Uid of the chip list */

    _this3._uid = "mat-chip-list-".concat(nextUniqueId++);
    /** Tab index for the chip list. */

    _this3._tabIndex = 0;
    /**
     * User defined tab index.
     * When it is not null, use user defined tab index. Otherwise use _tabIndex
     */

    _this3._userTabIndex = null;
    /** Function when touched */

    _this3._onTouched = function () {};
    /** Function when changed */


    _this3._onChange = function () {};

    _this3._multiple = false;

    _this3._compareWith = function (o1, o2) {
      return o1 === o2;
    };

    _this3._required = false;
    _this3._disabled = false;
    /** Orientation of the chip list. */

    _this3.ariaOrientation = 'horizontal';
    _this3._selectable = true;
    /** Event emitted when the selected chip list value has been changed by the user. */

    _this3.change = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
    /**
     * Event that emits whenever the raw value of the chip-list changes. This is here primarily
     * to facilitate the two-way binding for the `value` input.
     * @docs-private
     */

    _this3.valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();

    if (_this3.ngControl) {
      _this3.ngControl.valueAccessor = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__["default"])(_this3);
    }

    return _this3;
  }
  /** The array of selected chips inside chip list. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatChipList, [{
    key: "selected",
    get: function get() {
      return this.multiple ? this._selectionModel.selected : this._selectionModel.selected[0];
    }
    /** The ARIA role applied to the chip list. */

  }, {
    key: "role",
    get: function get() {
      return this.empty ? null : 'listbox';
    }
    /** Whether the user should be allowed to select multiple chips. */

  }, {
    key: "multiple",
    get: function get() {
      return this._multiple;
    },
    set: function set(value) {
      this._multiple = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);

      this._syncChipsState();
    }
    /**
     * A function to compare the option values with the selected values. The first argument
     * is a value from an option. The second is a value from the selection. A boolean
     * should be returned.
     */

  }, {
    key: "compareWith",
    get: function get() {
      return this._compareWith;
    },
    set: function set(fn) {
      this._compareWith = fn;

      if (this._selectionModel) {
        // A different comparator means the selection could change.
        this._initializeSelection();
      }
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "value",
    get: function get() {
      return this._value;
    },
    set: function set(value) {
      this.writeValue(value);
      this._value = value;
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "id",
    get: function get() {
      return this._chipInput ? this._chipInput.id : this._uid;
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "required",
    get: function get() {
      return this._required;
    },
    set: function set(value) {
      this._required = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);
      this.stateChanges.next();
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "placeholder",
    get: function get() {
      return this._chipInput ? this._chipInput.placeholder : this._placeholder;
    },
    set: function set(value) {
      this._placeholder = value;
      this.stateChanges.next();
    }
    /** Whether any chips or the matChipInput inside of this chip-list has focus. */

  }, {
    key: "focused",
    get: function get() {
      return this._chipInput && this._chipInput.focused || this._hasFocusedChip();
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "empty",
    get: function get() {
      return (!this._chipInput || this._chipInput.empty) && (!this.chips || this.chips.length === 0);
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "shouldLabelFloat",
    get: function get() {
      return !this.empty || this.focused;
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "disabled",
    get: function get() {
      return this.ngControl ? !!this.ngControl.disabled : this._disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);

      this._syncChipsState();
    }
    /**
     * Whether or not this chip list is selectable. When a chip list is not selectable,
     * the selected states for all the chips inside the chip list are always ignored.
     */

  }, {
    key: "selectable",
    get: function get() {
      return this._selectable;
    },
    set: function set(value) {
      var _this4 = this;

      this._selectable = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);

      if (this.chips) {
        this.chips.forEach(function (chip) {
          return chip.chipListSelectable = _this4._selectable;
        });
      }
    }
  }, {
    key: "tabIndex",
    set: function set(value) {
      this._userTabIndex = value;
      this._tabIndex = value;
    }
    /** Combined stream of all of the child chips' selection change events. */

  }, {
    key: "chipSelectionChanges",
    get: function get() {
      return rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"].apply(void 0, Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this.chips.map(function (chip) {
        return chip.selectionChange;
      })));
    }
    /** Combined stream of all of the child chips' focus change events. */

  }, {
    key: "chipFocusChanges",
    get: function get() {
      return rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"].apply(void 0, Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this.chips.map(function (chip) {
        return chip._onFocus;
      })));
    }
    /** Combined stream of all of the child chips' blur change events. */

  }, {
    key: "chipBlurChanges",
    get: function get() {
      return rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"].apply(void 0, Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this.chips.map(function (chip) {
        return chip._onBlur;
      })));
    }
    /** Combined stream of all of the child chips' remove change events. */

  }, {
    key: "chipRemoveChanges",
    get: function get() {
      return rxjs__WEBPACK_IMPORTED_MODULE_13__["merge"].apply(void 0, Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(this.chips.map(function (chip) {
        return chip.destroyed;
      })));
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this5 = this;

      this._keyManager = new _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_15__["FocusKeyManager"](this.chips).withWrap().withVerticalOrientation().withHomeAndEnd().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr');

      if (this._dir) {
        this._dir.change.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["takeUntil"])(this._destroyed)).subscribe(function (dir) {
          return _this5._keyManager.withHorizontalOrientation(dir);
        });
      }

      this._keyManager.tabOut.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["takeUntil"])(this._destroyed)).subscribe(function () {
        _this5._allowFocusEscape();
      }); // When the list changes, re-subscribe


      this.chips.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["startWith"])(null), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_14__["takeUntil"])(this._destroyed)).subscribe(function () {
        if (_this5.disabled) {
          // Since this happens after the content has been
          // checked, we need to defer it to the next tick.
          Promise.resolve().then(function () {
            _this5._syncChipsState();
          });
        }

        _this5._resetChips(); // Reset chips selected/deselected status


        _this5._initializeSelection(); // Check to see if we need to update our tab index


        _this5._updateTabIndex(); // Check to see if we have a destroyed chip and need to refocus


        _this5._updateFocusForDestroyedChips();

        _this5.stateChanges.next();
      });
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      this._selectionModel = new _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_17__["SelectionModel"](this.multiple, undefined, false);
      this.stateChanges.next();
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      if (this.ngControl) {
        // We need to re-evaluate this on every change detection cycle, because there are some
        // error triggers that we can't subscribe to (e.g. parent form submissions). This means
        // that whatever logic is in here has to be super lean or we risk destroying the performance.
        this.updateErrorState();

        if (this.ngControl.disabled !== this._disabled) {
          this.disabled = !!this.ngControl.disabled;
        }
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroyed.next();

      this._destroyed.complete();

      this.stateChanges.complete();

      this._dropSubscriptions();
    }
    /** Associates an HTML input element with this chip list. */

  }, {
    key: "registerInput",
    value: function registerInput(inputElement) {
      this._chipInput = inputElement; // We use this attribute to match the chip list to its input in test harnesses.
      // Set the attribute directly here to avoid "changed after checked" errors.

      this._elementRef.nativeElement.setAttribute('data-mat-chip-input', inputElement.id);
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "setDescribedByIds",
    value: function setDescribedByIds(ids) {
      this._ariaDescribedby = ids.join(' ');
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "writeValue",
    value: function writeValue(value) {
      if (this.chips) {
        this._setSelectionByValue(value, false);
      }
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this._onChange = fn;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this._onTouched = fn;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "setDisabledState",
    value: function setDisabledState(isDisabled) {
      this.disabled = isDisabled;
      this.stateChanges.next();
    }
    /**
     * Implemented as part of MatFormFieldControl.
     * @docs-private
     */

  }, {
    key: "onContainerClick",
    value: function onContainerClick(event) {
      if (!this._originatesFromChip(event)) {
        this.focus();
      }
    }
    /**
     * Focuses the first non-disabled chip in this chip list, or the associated input when there
     * are no eligible chips.
     */

  }, {
    key: "focus",
    value: function focus(options) {
      if (this.disabled) {
        return;
      } // TODO: ARIA says this should focus the first `selected` chip if any are selected.
      // Focus on first element if there's no chipInput inside chip-list


      if (this._chipInput && this._chipInput.focused) {// do nothing
      } else if (this.chips.length > 0) {
        this._keyManager.setFirstItemActive();

        this.stateChanges.next();
      } else {
        this._focusInput(options);

        this.stateChanges.next();
      }
    }
    /** Attempt to focus an input if we have one. */

  }, {
    key: "_focusInput",
    value: function _focusInput(options) {
      if (this._chipInput) {
        this._chipInput.focus(options);
      }
    }
    /**
     * Pass events to the keyboard manager. Available here for tests.
     */

  }, {
    key: "_keydown",
    value: function _keydown(event) {
      var target = event.target; // If they are on an empty input and hit backspace, focus the last chip

      if (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["BACKSPACE"] && this._isInputEmpty(target)) {
        this._keyManager.setLastItemActive();

        event.preventDefault();
      } else if (target && target.classList.contains('mat-chip')) {
        this._keyManager.onKeydown(event);

        this.stateChanges.next();
      }
    }
    /**
     * Check the tab index as you should not be allowed to focus an empty list.
     */

  }, {
    key: "_updateTabIndex",
    value: function _updateTabIndex() {
      // If we have 0 chips, we should not allow keyboard focus
      this._tabIndex = this._userTabIndex || (this.chips.length === 0 ? -1 : 0);
    }
    /**
     * If the amount of chips changed, we need to update the
     * key manager state and focus the next closest chip.
     */

  }, {
    key: "_updateFocusForDestroyedChips",
    value: function _updateFocusForDestroyedChips() {
      // Move focus to the closest chip. If no other chips remain, focus the chip-list itself.
      if (this._lastDestroyedChipIndex != null) {
        if (this.chips.length) {
          var newChipIndex = Math.min(this._lastDestroyedChipIndex, this.chips.length - 1);

          this._keyManager.setActiveItem(newChipIndex);
        } else {
          this.focus();
        }
      }

      this._lastDestroyedChipIndex = null;
    }
    /**
     * Utility to ensure all indexes are valid.
     *
     * @param index The index to be checked.
     * @returns True if the index is valid for our list of chips.
     */

  }, {
    key: "_isValidIndex",
    value: function _isValidIndex(index) {
      return index >= 0 && index < this.chips.length;
    }
  }, {
    key: "_isInputEmpty",
    value: function _isInputEmpty(element) {
      if (element && element.nodeName.toLowerCase() === 'input') {
        var input = element;
        return !input.value;
      }

      return false;
    }
  }, {
    key: "_setSelectionByValue",
    value: function _setSelectionByValue(value) {
      var _this6 = this;

      var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;

      this._clearSelection();

      this.chips.forEach(function (chip) {
        return chip.deselect();
      });

      if (Array.isArray(value)) {
        value.forEach(function (currentValue) {
          return _this6._selectValue(currentValue, isUserInput);
        });

        this._sortValues();
      } else {
        var correspondingChip = this._selectValue(value, isUserInput); // Shift focus to the active item. Note that we shouldn't do this in multiple
        // mode, because we don't know what chip the user interacted with last.


        if (correspondingChip) {
          if (isUserInput) {
            this._keyManager.setActiveItem(correspondingChip);
          }
        }
      }
    }
    /**
     * Finds and selects the chip based on its value.
     * @returns Chip that has the corresponding value.
     */

  }, {
    key: "_selectValue",
    value: function _selectValue(value) {
      var _this7 = this;

      var isUserInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      var correspondingChip = this.chips.find(function (chip) {
        return chip.value != null && _this7._compareWith(chip.value, value);
      });

      if (correspondingChip) {
        isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();

        this._selectionModel.select(correspondingChip);
      }

      return correspondingChip;
    }
  }, {
    key: "_initializeSelection",
    value: function _initializeSelection() {
      var _this8 = this;

      // Defer setting the value in order to avoid the "Expression
      // has changed after it was checked" errors from Angular.
      Promise.resolve().then(function () {
        if (_this8.ngControl || _this8._value) {
          _this8._setSelectionByValue(_this8.ngControl ? _this8.ngControl.value : _this8._value, false);

          _this8.stateChanges.next();
        }
      });
    }
    /**
     * Deselects every chip in the list.
     * @param skip Chip that should not be deselected.
     */

  }, {
    key: "_clearSelection",
    value: function _clearSelection(skip) {
      this._selectionModel.clear();

      this.chips.forEach(function (chip) {
        if (chip !== skip) {
          chip.deselect();
        }
      });
      this.stateChanges.next();
    }
    /**
     * Sorts the model values, ensuring that they keep the same
     * order that they have in the panel.
     */

  }, {
    key: "_sortValues",
    value: function _sortValues() {
      var _this9 = this;

      if (this._multiple) {
        this._selectionModel.clear();

        this.chips.forEach(function (chip) {
          if (chip.selected) {
            _this9._selectionModel.select(chip);
          }
        });
        this.stateChanges.next();
      }
    }
    /** Emits change event to set the model value. */

  }, {
    key: "_propagateChanges",
    value: function _propagateChanges(fallbackValue) {
      var valueToEmit = null;

      if (Array.isArray(this.selected)) {
        valueToEmit = this.selected.map(function (chip) {
          return chip.value;
        });
      } else {
        valueToEmit = this.selected ? this.selected.value : fallbackValue;
      }

      this._value = valueToEmit;
      this.change.emit(new MatChipListChange(this, valueToEmit));
      this.valueChange.emit(valueToEmit);

      this._onChange(valueToEmit);

      this._changeDetectorRef.markForCheck();
    }
    /** When blurred, mark the field as touched when focus moved outside the chip list. */

  }, {
    key: "_blur",
    value: function _blur() {
      var _this10 = this;

      if (!this._hasFocusedChip()) {
        this._keyManager.setActiveItem(-1);
      }

      if (!this.disabled) {
        if (this._chipInput) {
          // If there's a chip input, we should check whether the focus moved to chip input.
          // If the focus is not moved to chip input, mark the field as touched. If the focus moved
          // to chip input, do nothing.
          // Timeout is needed to wait for the focus() event trigger on chip input.
          setTimeout(function () {
            if (!_this10.focused) {
              _this10._markAsTouched();
            }
          });
        } else {
          // If there's no chip input, then mark the field as touched.
          this._markAsTouched();
        }
      }
    }
    /** Mark the field as touched */

  }, {
    key: "_markAsTouched",
    value: function _markAsTouched() {
      this._onTouched();

      this._changeDetectorRef.markForCheck();

      this.stateChanges.next();
    }
    /**
     * Removes the `tabindex` from the chip list and resets it back afterwards, allowing the
     * user to tab out of it. This prevents the list from capturing focus and redirecting
     * it back to the first chip, creating a focus trap, if it user tries to tab away.
     */

  }, {
    key: "_allowFocusEscape",
    value: function _allowFocusEscape() {
      var _this11 = this;

      if (this._tabIndex !== -1) {
        this._tabIndex = -1;
        setTimeout(function () {
          _this11._tabIndex = _this11._userTabIndex || 0;

          _this11._changeDetectorRef.markForCheck();
        });
      }
    }
  }, {
    key: "_resetChips",
    value: function _resetChips() {
      this._dropSubscriptions();

      this._listenToChipsFocus();

      this._listenToChipsSelection();

      this._listenToChipsRemoved();
    }
  }, {
    key: "_dropSubscriptions",
    value: function _dropSubscriptions() {
      if (this._chipFocusSubscription) {
        this._chipFocusSubscription.unsubscribe();

        this._chipFocusSubscription = null;
      }

      if (this._chipBlurSubscription) {
        this._chipBlurSubscription.unsubscribe();

        this._chipBlurSubscription = null;
      }

      if (this._chipSelectionSubscription) {
        this._chipSelectionSubscription.unsubscribe();

        this._chipSelectionSubscription = null;
      }

      if (this._chipRemoveSubscription) {
        this._chipRemoveSubscription.unsubscribe();

        this._chipRemoveSubscription = null;
      }
    }
    /** Listens to user-generated selection events on each chip. */

  }, {
    key: "_listenToChipsSelection",
    value: function _listenToChipsSelection() {
      var _this12 = this;

      this._chipSelectionSubscription = this.chipSelectionChanges.subscribe(function (event) {
        event.source.selected ? _this12._selectionModel.select(event.source) : _this12._selectionModel.deselect(event.source); // For single selection chip list, make sure the deselected value is unselected.

        if (!_this12.multiple) {
          _this12.chips.forEach(function (chip) {
            if (!_this12._selectionModel.isSelected(chip) && chip.selected) {
              chip.deselect();
            }
          });
        }

        if (event.isUserInput) {
          _this12._propagateChanges();
        }
      });
    }
    /** Listens to user-generated selection events on each chip. */

  }, {
    key: "_listenToChipsFocus",
    value: function _listenToChipsFocus() {
      var _this13 = this;

      this._chipFocusSubscription = this.chipFocusChanges.subscribe(function (event) {
        var chipIndex = _this13.chips.toArray().indexOf(event.chip);

        if (_this13._isValidIndex(chipIndex)) {
          _this13._keyManager.updateActiveItem(chipIndex);
        }

        _this13.stateChanges.next();
      });
      this._chipBlurSubscription = this.chipBlurChanges.subscribe(function () {
        _this13._blur();

        _this13.stateChanges.next();
      });
    }
  }, {
    key: "_listenToChipsRemoved",
    value: function _listenToChipsRemoved() {
      var _this14 = this;

      this._chipRemoveSubscription = this.chipRemoveChanges.subscribe(function (event) {
        var chip = event.chip;

        var chipIndex = _this14.chips.toArray().indexOf(event.chip); // In case the chip that will be removed is currently focused, we temporarily store
        // the index in order to be able to determine an appropriate sibling chip that will
        // receive focus.


        if (_this14._isValidIndex(chipIndex) && chip._hasFocus) {
          _this14._lastDestroyedChipIndex = chipIndex;
        }
      });
    }
    /** Checks whether an event comes from inside a chip element. */

  }, {
    key: "_originatesFromChip",
    value: function _originatesFromChip(event) {
      var currentElement = event.target;

      while (currentElement && currentElement !== this._elementRef.nativeElement) {
        if (currentElement.classList.contains('mat-chip')) {
          return true;
        }

        currentElement = currentElement.parentElement;
      }

      return false;
    }
    /** Checks whether any of the chips is focused. */

  }, {
    key: "_hasFocusedChip",
    value: function _hasFocusedChip() {
      return this.chips && this.chips.some(function (chip) {
        return chip._hasFocus;
      });
    }
    /** Syncs the list's state with the individual chips. */

  }, {
    key: "_syncChipsState",
    value: function _syncChipsState() {
      var _this15 = this;

      if (this.chips) {
        this.chips.forEach(function (chip) {
          chip._chipListDisabled = _this15._disabled;
          chip._chipListMultiple = _this15.multiple;
        });
      }
    }
  }]);

  return MatChipList;
}(_MatChipListMixinBase);

MatChipList.ɵfac = function MatChipList_Factory(t) {
  return new (t || MatChipList)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_18__["NgForm"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_18__["FormGroupDirective"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["ErrorStateMatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_18__["NgControl"], 10));
};

MatChipList.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatChipList,
  selectors: [["mat-chip-list"]],
  contentQueries: function MatChipList_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵcontentQuery"](dirIndex, MatChip, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx.chips = _t);
    }
  },
  hostAttrs: [1, "mat-chip-list"],
  hostVars: 15,
  hostBindings: function MatChipList_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("focus", function MatChipList_focus_HostBindingHandler() {
        return ctx.focus();
      })("blur", function MatChipList_blur_HostBindingHandler() {
        return ctx._blur();
      })("keydown", function MatChipList_keydown_HostBindingHandler($event) {
        return ctx._keydown($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵhostProperty"]("id", ctx._uid);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("tabindex", ctx.disabled ? null : ctx._tabIndex)("aria-describedby", ctx._ariaDescribedby || null)("aria-required", ctx.role ? ctx.required : null)("aria-disabled", ctx.disabled.toString())("aria-invalid", ctx.errorState)("aria-multiselectable", ctx.multiple)("role", ctx.role)("aria-orientation", ctx.ariaOrientation);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵclassProp"]("mat-chip-list-disabled", ctx.disabled)("mat-chip-list-invalid", ctx.errorState)("mat-chip-list-required", ctx.required);
    }
  },
  inputs: {
    ariaOrientation: ["aria-orientation", "ariaOrientation"],
    multiple: "multiple",
    compareWith: "compareWith",
    value: "value",
    required: "required",
    placeholder: "placeholder",
    disabled: "disabled",
    selectable: "selectable",
    tabIndex: "tabIndex",
    errorStateMatcher: "errorStateMatcher"
  },
  outputs: {
    change: "change",
    valueChange: "valueChange"
  },
  exportAs: ["matChipList"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵProvidersFeature"]([{
    provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__["MatFormFieldControl"],
    useExisting: MatChipList
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c0,
  decls: 2,
  vars: 0,
  consts: [[1, "mat-chip-list-wrapper"]],
  template: function MatChipList_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵprojection"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    }
  },
  styles: [".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\"\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatChipList.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_18__["NgForm"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_18__["FormGroupDirective"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["ErrorStateMatcher"]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_18__["NgControl"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Self"]
    }]
  }];
};

MatChipList.propDecorators = {
  errorStateMatcher: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  multiple: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  compareWith: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  required: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  placeholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  ariaOrientation: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['aria-orientation']
  }],
  selectable: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  tabIndex: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  change: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
  }],
  valueChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
  }],
  chips: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
    args: [MatChip, {
      // We need to use `descendants: true`, because Ivy will no longer match
      // indirect descendants if it's left as false.
      descendants: true
    }]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatChipList, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'mat-chip-list',
      template: "<div class=\"mat-chip-list-wrapper\"><ng-content></ng-content></div>",
      exportAs: 'matChipList',
      host: {
        '[attr.tabindex]': 'disabled ? null : _tabIndex',
        '[attr.aria-describedby]': '_ariaDescribedby || null',
        '[attr.aria-required]': 'role ? required : null',
        '[attr.aria-disabled]': 'disabled.toString()',
        '[attr.aria-invalid]': 'errorState',
        '[attr.aria-multiselectable]': 'multiple',
        '[attr.role]': 'role',
        '[class.mat-chip-list-disabled]': 'disabled',
        '[class.mat-chip-list-invalid]': 'errorState',
        '[class.mat-chip-list-required]': 'required',
        '[attr.aria-orientation]': 'ariaOrientation',
        'class': 'mat-chip-list',
        '(focus)': 'focus()',
        '(blur)': '_blur()',
        '(keydown)': '_keydown($event)',
        '[id]': '_uid'
      },
      providers: [{
        provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_19__["MatFormFieldControl"],
        useExisting: MatChipList
      }],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-chip{position:relative;box-sizing:border-box;-webkit-tap-highlight-color:transparent;transform:translateZ(0);border:none;-webkit-appearance:none;-moz-appearance:none}.mat-standard-chip{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:inline-flex;padding:7px 12px;border-radius:16px;align-items:center;cursor:default;min-height:32px;height:1px}._mat-animation-noopable.mat-standard-chip{transition:none;animation:none}.mat-standard-chip .mat-chip-remove.mat-icon{width:18px;height:18px}.mat-standard-chip::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;opacity:0;content:\"\";pointer-events:none;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-standard-chip:hover::after{opacity:.12}.mat-standard-chip:focus{outline:none}.mat-standard-chip:focus::after{opacity:.16}.cdk-high-contrast-active .mat-standard-chip{outline:solid 1px}.cdk-high-contrast-active .mat-standard-chip:focus{outline:dotted 2px}.mat-standard-chip.mat-chip-disabled::after{opacity:0}.mat-standard-chip.mat-chip-disabled .mat-chip-remove,.mat-standard-chip.mat-chip-disabled .mat-chip-trailing-icon{cursor:default}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar,.mat-standard-chip.mat-chip-with-avatar{padding-top:0;padding-bottom:0}.mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-right:8px;padding-left:0}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon.mat-chip-with-avatar{padding-left:8px;padding-right:0}.mat-standard-chip.mat-chip-with-trailing-icon{padding-top:7px;padding-bottom:7px;padding-right:8px;padding-left:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-trailing-icon{padding-left:8px;padding-right:12px}.mat-standard-chip.mat-chip-with-avatar{padding-left:0;padding-right:12px}[dir=rtl] .mat-standard-chip.mat-chip-with-avatar{padding-right:0;padding-left:12px}.mat-standard-chip .mat-chip-avatar{width:24px;height:24px;margin-right:8px;margin-left:4px}[dir=rtl] .mat-standard-chip .mat-chip-avatar{margin-left:8px;margin-right:4px}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{width:18px;height:18px;cursor:pointer}.mat-standard-chip .mat-chip-remove,.mat-standard-chip .mat-chip-trailing-icon{margin-left:8px;margin-right:0}[dir=rtl] .mat-standard-chip .mat-chip-remove,[dir=rtl] .mat-standard-chip .mat-chip-trailing-icon{margin-right:8px;margin-left:0}.mat-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit;overflow:hidden}.mat-chip-list-wrapper{display:flex;flex-direction:row;flex-wrap:wrap;align-items:center;margin:-4px}.mat-chip-list-wrapper input.mat-input-element,.mat-chip-list-wrapper .mat-standard-chip{margin:4px}.mat-chip-list-stacked .mat-chip-list-wrapper{flex-direction:column;align-items:flex-start}.mat-chip-list-stacked .mat-chip-list-wrapper .mat-standard-chip{width:100%}.mat-chip-avatar{border-radius:50%;justify-content:center;align-items:center;display:flex;overflow:hidden;object-fit:cover}input.mat-chip-input{width:150px;margin:4px;flex:1 0 150px}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_18__["NgForm"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_18__["FormGroupDirective"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["ErrorStateMatcher"]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_18__["NgControl"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Self"]
      }]
    }];
  }, {
    ariaOrientation: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['aria-orientation']
    }],
    change: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
    }],
    valueChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"]
    }],
    multiple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    compareWith: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    required: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    placeholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    selectable: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    tabIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    errorStateMatcher: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    chips: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ContentChildren"],
      args: [MatChip, {
        // We need to use `descendants: true`, because Ivy will no longer match
        // indirect descendants if it's left as false.
        descendants: true
      }]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Increasing integer for generating unique ids.


var nextUniqueId$1 = 0;
/**
 * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.
 * May be placed inside or outside of an `<mat-chip-list>`.
 */

var MatChipInput = /*#__PURE__*/function () {
  function MatChipInput(_elementRef, _defaultOptions) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipInput);

    this._elementRef = _elementRef;
    this._defaultOptions = _defaultOptions;
    /** Whether the control is focused. */

    this.focused = false;
    this._addOnBlur = false;
    /**
     * The list of key codes that will trigger a chipEnd event.
     *
     * Defaults to `[ENTER]`.
     */

    this.separatorKeyCodes = this._defaultOptions.separatorKeyCodes;
    /** Emitted when a chip is to be added. */

    this.chipEnd = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["EventEmitter"]();
    /** The input's placeholder text. */

    this.placeholder = '';
    /** Unique id for the input. */

    this.id = "mat-chip-list-input-".concat(nextUniqueId$1++);
    this._disabled = false;
    this._inputElement = this._elementRef.nativeElement;
  }
  /** Register input for chip list */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatChipInput, [{
    key: "chipList",
    set: function set(value) {
      if (value) {
        this._chipList = value;

        this._chipList.registerInput(this);
      }
    }
    /**
     * Whether or not the chipEnd event will be emitted when the input is blurred.
     */

  }, {
    key: "addOnBlur",
    get: function get() {
      return this._addOnBlur;
    },
    set: function set(value) {
      this._addOnBlur = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);
    }
    /** Whether the input is disabled. */

  }, {
    key: "disabled",
    get: function get() {
      return this._disabled || this._chipList && this._chipList.disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(value);
    }
    /** Whether the input is empty. */

  }, {
    key: "empty",
    get: function get() {
      return !this._inputElement.value;
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges() {
      this._chipList.stateChanges.next();
    }
    /** Utility method to make host definition/tests more clear. */

  }, {
    key: "_keydown",
    value: function _keydown(event) {
      // Allow the user's focus to escape when they're tabbing forward. Note that we don't
      // want to do this when going backwards, because focus should go back to the first chip.
      if (event && event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["TAB"] && !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["hasModifierKey"])(event, 'shiftKey')) {
        this._chipList._allowFocusEscape();
      }

      this._emitChipEnd(event);
    }
    /** Checks to see if the blur should emit the (chipEnd) event. */

  }, {
    key: "_blur",
    value: function _blur() {
      if (this.addOnBlur) {
        this._emitChipEnd();
      }

      this.focused = false; // Blur the chip list if it is not focused

      if (!this._chipList.focused) {
        this._chipList._blur();
      }

      this._chipList.stateChanges.next();
    }
  }, {
    key: "_focus",
    value: function _focus() {
      this.focused = true;

      this._chipList.stateChanges.next();
    }
    /** Checks to see if the (chipEnd) event needs to be emitted. */

  }, {
    key: "_emitChipEnd",
    value: function _emitChipEnd(event) {
      if (!this._inputElement.value && !!event) {
        this._chipList._keydown(event);
      }

      if (!event || this._isSeparatorKey(event)) {
        this.chipEnd.emit({
          input: this._inputElement,
          value: this._inputElement.value
        });

        if (event) {
          event.preventDefault();
        }
      }
    }
  }, {
    key: "_onInput",
    value: function _onInput() {
      // Let chip list know whenever the value changes.
      this._chipList.stateChanges.next();
    }
    /** Focuses the input. */

  }, {
    key: "focus",
    value: function focus(options) {
      this._inputElement.focus(options);
    }
    /** Checks whether a keycode is one of the configured separators. */

  }, {
    key: "_isSeparatorKey",
    value: function _isSeparatorKey(event) {
      return !Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["hasModifierKey"])(event) && new Set(this.separatorKeyCodes).has(event.keyCode);
    }
  }]);

  return MatChipInput;
}();

MatChipInput.ɵfac = function MatChipInput_Factory(t) {
  return new (t || MatChipInput)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MAT_CHIPS_DEFAULT_OPTIONS));
};

MatChipInput.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineDirective"]({
  type: MatChipInput,
  selectors: [["input", "matChipInputFor", ""]],
  hostAttrs: [1, "mat-chip-input", "mat-input-element"],
  hostVars: 5,
  hostBindings: function MatChipInput_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("keydown", function MatChipInput_keydown_HostBindingHandler($event) {
        return ctx._keydown($event);
      })("blur", function MatChipInput_blur_HostBindingHandler() {
        return ctx._blur();
      })("focus", function MatChipInput_focus_HostBindingHandler() {
        return ctx._focus();
      })("input", function MatChipInput_input_HostBindingHandler() {
        return ctx._onInput();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵhostProperty"]("id", ctx.id);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("disabled", ctx.disabled || null)("placeholder", ctx.placeholder || null)("aria-invalid", ctx._chipList && ctx._chipList.ngControl ? ctx._chipList.ngControl.invalid : null)("aria-required", ctx._chipList && ctx._chipList.required || null);
    }
  },
  inputs: {
    separatorKeyCodes: ["matChipInputSeparatorKeyCodes", "separatorKeyCodes"],
    placeholder: "placeholder",
    id: "id",
    chipList: ["matChipInputFor", "chipList"],
    addOnBlur: ["matChipInputAddOnBlur", "addOnBlur"],
    disabled: "disabled"
  },
  outputs: {
    chipEnd: "matChipInputTokenEnd"
  },
  exportAs: ["matChipInput", "matChipInputFor"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵNgOnChangesFeature"]]
});

MatChipInput.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_CHIPS_DEFAULT_OPTIONS]
    }]
  }];
};

MatChipInput.propDecorators = {
  chipList: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matChipInputFor']
  }],
  addOnBlur: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matChipInputAddOnBlur']
  }],
  separatorKeyCodes: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
    args: ['matChipInputSeparatorKeyCodes']
  }],
  chipEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"],
    args: ['matChipInputTokenEnd']
  }],
  placeholder: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatChipInput, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Directive"],
    args: [{
      selector: 'input[matChipInputFor]',
      exportAs: 'matChipInput, matChipInputFor',
      host: {
        'class': 'mat-chip-input mat-input-element',
        '(keydown)': '_keydown($event)',
        '(blur)': '_blur()',
        '(focus)': '_focus()',
        '(input)': '_onInput()',
        '[id]': 'id',
        '[attr.disabled]': 'disabled || null',
        '[attr.placeholder]': 'placeholder || null',
        '[attr.aria-invalid]': '_chipList && _chipList.ngControl ? _chipList.ngControl.invalid : null',
        '[attr.aria-required]': '_chipList && _chipList.required || null'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_CHIPS_DEFAULT_OPTIONS]
      }]
    }];
  }, {
    separatorKeyCodes: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matChipInputSeparatorKeyCodes']
    }],
    chipEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Output"],
      args: ['matChipInputTokenEnd']
    }],
    placeholder: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }],
    chipList: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matChipInputFor']
    }],
    addOnBlur: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"],
      args: ['matChipInputAddOnBlur']
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var CHIP_DECLARATIONS = [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon];
var ɵ0 = {
  separatorKeyCodes: [_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_6__["ENTER"]]
};

var MatChipsModule = function MatChipsModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, MatChipsModule);
};

MatChipsModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatChipsModule
});
MatChipsModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatChipsModule_Factory(t) {
    return new (t || MatChipsModule)();
  },
  providers: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["ErrorStateMatcher"], {
    provide: MAT_CHIPS_DEFAULT_OPTIONS,
    useValue: ɵ0
  }]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatChipsModule, {
    declarations: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon],
    exports: [MatChipList, MatChip, MatChipInput, MatChipRemove, MatChipAvatar, MatChipTrailingIcon]
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatChipsModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      exports: CHIP_DECLARATIONS,
      declarations: CHIP_DECLARATIONS,
      providers: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["ErrorStateMatcher"], {
        provide: MAT_CHIPS_DEFAULT_OPTIONS,
        useValue: ɵ0
      }]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "BAdQ":
/*!*************************************************************************************!*\
  !*** ./src/app/core/components/screens/personel-visit/personel-visit.component.css ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".visit-card {\r\n    margin-bottom: 20px;\r\n    border-radius: 8px;\r\n    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);\r\n    transition: transform 0.2s, box-shadow 0.2s;\r\n    padding: 20px; /* Increased padding */\r\n  }\r\n  \r\n  .visit-card:hover {\r\n    transform: translateY(-2px);\r\n    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.3);\r\n  }\r\n  \r\n  .approved {\r\n    background-color: #e8f5e9; /* Light green */\r\n    border-left: 5px solid #4caf50;\r\n  }\r\n  \r\n  .rejected {\r\n    background-color: #ffebee; /* Light red */\r\n    border-left: 5px solid #f44336;\r\n  }\r\n  \r\n  .pending {\r\n    background-color: #fff3cd; /* Light yellow */\r\n    border-left: 5px solid #ffc107;\r\n  }\r\n  \r\n  .status {\r\n    font-weight: bold;\r\n    text-transform: uppercase;\r\n    font-size: 1.1em; /* Increased font size */\r\n  }\r\n  \r\n  .mat-icon {\r\n    vertical-align: middle;\r\n    margin-right: 8px;\r\n  }\r\n  \r\n  button.mat-button {\r\n    background-color: #007bff; /* Primary color */\r\n    color: white; /* Text color */\r\n    border-radius: 5px; /* Rounded corners */\r\n    padding: 10px 15px; /* Padding for better size */\r\n    margin-right: 10px; /* Spacing between buttons */\r\n    transition: background-color 0.3s, transform 0.2s; /* Smooth transition */\r\n}\r\n  \r\n  button.mat-button:hover {\r\n    background-color: #0056b3; /* Darker shade on hover */\r\n    transform: scale(1.05); /* Slightly enlarge on hover */\r\n}\r\n  \r\n  button.mat-button:focus {\r\n    outline: none; /* Remove default outline */\r\n}\r\n  \r\n  .card {\r\n    margin-bottom: 20px; /* Space between cards */\r\n}\r\n  \r\n  .card-header {\r\n    background-color: #673ab7; /* Primary color */\r\n    color: white; /* Text color */\r\n}\r\n  \r\n  .date-tabs button {\r\n    background-color: #007bff; /* Primary color */\r\n    color: white; /* Text color */\r\n    border-radius: 5px; /* Rounded corners */\r\n    padding: 10px 15px; /* Padding for better size */\r\n    margin-right: 10px; /* Spacing between buttons */\r\n    transition: background-color 0.3s, transform 0.2s; /* Smooth transition */\r\n}\r\n  \r\n  div.date-tabs button:hover {\r\n    background-color: #0056b3; /* Darker shade on hover */\r\n    transform: scale(1.05); /* Slightly enlarge on hover */\r\n}\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInBlcnNvbmVsLXZpc2l0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxtQkFBbUI7SUFDbkIsa0JBQWtCO0lBQ2xCLHlDQUF5QztJQUN6QywyQ0FBMkM7SUFDM0MsYUFBYSxFQUFFLHNCQUFzQjtFQUN2Qzs7RUFFQTtJQUNFLDJCQUEyQjtJQUMzQix5Q0FBeUM7RUFDM0M7O0VBRUE7SUFDRSx5QkFBeUIsRUFBRSxnQkFBZ0I7SUFDM0MsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UseUJBQXlCLEVBQUUsY0FBYztJQUN6Qyw4QkFBOEI7RUFDaEM7O0VBRUE7SUFDRSx5QkFBeUIsRUFBRSxpQkFBaUI7SUFDNUMsOEJBQThCO0VBQ2hDOztFQUVBO0lBQ0UsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixnQkFBZ0IsRUFBRSx3QkFBd0I7RUFDNUM7O0VBRUE7SUFDRSxzQkFBc0I7SUFDdEIsaUJBQWlCO0VBQ25COztFQUVGO0lBQ0kseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVksRUFBRSxlQUFlO0lBQzdCLGtCQUFrQixFQUFFLG9CQUFvQjtJQUN4QyxrQkFBa0IsRUFBRSw0QkFBNEI7SUFDaEQsa0JBQWtCLEVBQUUsNEJBQTRCO0lBQ2hELGlEQUFpRCxFQUFFLHNCQUFzQjtBQUM3RTs7RUFFQTtJQUNJLHlCQUF5QixFQUFFLDBCQUEwQjtJQUNyRCxzQkFBc0IsRUFBRSw4QkFBOEI7QUFDMUQ7O0VBRUE7SUFDSSxhQUFhLEVBQUUsMkJBQTJCO0FBQzlDOztFQUVBO0lBQ0ksbUJBQW1CLEVBQUUsd0JBQXdCO0FBQ2pEOztFQUVBO0lBQ0kseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVksRUFBRSxlQUFlO0FBQ2pDOztFQUVBO0lBQ0kseUJBQXlCLEVBQUUsa0JBQWtCO0lBQzdDLFlBQVksRUFBRSxlQUFlO0lBQzdCLGtCQUFrQixFQUFFLG9CQUFvQjtJQUN4QyxrQkFBa0IsRUFBRSw0QkFBNEI7SUFDaEQsa0JBQWtCLEVBQUUsNEJBQTRCO0lBQ2hELGlEQUFpRCxFQUFFLHNCQUFzQjtBQUM3RTs7RUFFQTtJQUNJLHlCQUF5QixFQUFFLDBCQUEwQjtJQUNyRCxzQkFBc0IsRUFBRSw4QkFBOEI7QUFDMUQiLCJmaWxlIjoicGVyc29uZWwtdmlzaXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi52aXNpdC1jYXJkIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XHJcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxuICAgIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjJzLCBib3gtc2hhZG93IDAuMnM7XHJcbiAgICBwYWRkaW5nOiAyMHB4OyAvKiBJbmNyZWFzZWQgcGFkZGluZyAqL1xyXG4gIH1cclxuICBcclxuICAudmlzaXQtY2FyZDpob3ZlciB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDZweCAxNXB4IHJnYmEoMCwgMCwgMCwgMC4zKTtcclxuICB9XHJcbiAgXHJcbiAgLmFwcHJvdmVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlOGY1ZTk7IC8qIExpZ2h0IGdyZWVuICovXHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICM0Y2FmNTA7XHJcbiAgfVxyXG4gIFxyXG4gIC5yZWplY3RlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZlYmVlOyAvKiBMaWdodCByZWQgKi9cclxuICAgIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2Y0NDMzNjtcclxuICB9XHJcbiAgXHJcbiAgLnBlbmRpbmcge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjNjZDsgLyogTGlnaHQgeWVsbG93ICovXHJcbiAgICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNmZmMxMDc7XHJcbiAgfVxyXG4gIFxyXG4gIC5zdGF0dXMge1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xyXG4gICAgZm9udC1zaXplOiAxLjFlbTsgLyogSW5jcmVhc2VkIGZvbnQgc2l6ZSAqL1xyXG4gIH1cclxuICBcclxuICAubWF0LWljb24ge1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIG1hcmdpbi1yaWdodDogOHB4O1xyXG4gIH1cclxuXHJcbmJ1dHRvbi5tYXQtYnV0dG9uIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7IC8qIFByaW1hcnkgY29sb3IgKi9cclxuICAgIGNvbG9yOiB3aGl0ZTsgLyogVGV4dCBjb2xvciAqL1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4OyAvKiBSb3VuZGVkIGNvcm5lcnMgKi9cclxuICAgIHBhZGRpbmc6IDEwcHggMTVweDsgLyogUGFkZGluZyBmb3IgYmV0dGVyIHNpemUgKi9cclxuICAgIG1hcmdpbi1yaWdodDogMTBweDsgLyogU3BhY2luZyBiZXR3ZWVuIGJ1dHRvbnMgKi9cclxuICAgIHRyYW5zaXRpb246IGJhY2tncm91bmQtY29sb3IgMC4zcywgdHJhbnNmb3JtIDAuMnM7IC8qIFNtb290aCB0cmFuc2l0aW9uICovXHJcbn1cclxuXHJcbmJ1dHRvbi5tYXQtYnV0dG9uOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDU2YjM7IC8qIERhcmtlciBzaGFkZSBvbiBob3ZlciAqL1xyXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTsgLyogU2xpZ2h0bHkgZW5sYXJnZSBvbiBob3ZlciAqL1xyXG59XHJcblxyXG5idXR0b24ubWF0LWJ1dHRvbjpmb2N1cyB7XHJcbiAgICBvdXRsaW5lOiBub25lOyAvKiBSZW1vdmUgZGVmYXVsdCBvdXRsaW5lICovXHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IC8qIFNwYWNlIGJldHdlZW4gY2FyZHMgKi9cclxufVxyXG5cclxuLmNhcmQtaGVhZGVyIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICM2NzNhYjc7IC8qIFByaW1hcnkgY29sb3IgKi9cclxuICAgIGNvbG9yOiB3aGl0ZTsgLyogVGV4dCBjb2xvciAqL1xyXG59XHJcblxyXG4uZGF0ZS10YWJzIGJ1dHRvbiB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmOyAvKiBQcmltYXJ5IGNvbG9yICovXHJcbiAgICBjb2xvcjogd2hpdGU7IC8qIFRleHQgY29sb3IgKi9cclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDsgLyogUm91bmRlZCBjb3JuZXJzICovXHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7IC8qIFBhZGRpbmcgZm9yIGJldHRlciBzaXplICovXHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7IC8qIFNwYWNpbmcgYmV0d2VlbiBidXR0b25zICovXHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MsIHRyYW5zZm9ybSAwLjJzOyAvKiBTbW9vdGggdHJhbnNpdGlvbiAqL1xyXG59XHJcblxyXG5kaXYuZGF0ZS10YWJzIGJ1dHRvbjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzOyAvKiBEYXJrZXIgc2hhZGUgb24gaG92ZXIgKi9cclxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7IC8qIFNsaWdodGx5IGVubGFyZ2Ugb24gaG92ZXIgKi9cclxufSJdfQ== */");

/***/ }),

/***/ "C/dI":
/*!**************************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/LongPollingTransport.js ***!
  \**************************************************************************/
/*! exports provided: LongPollingTransport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LongPollingTransport", function() { return LongPollingTransport; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/defineProperty */ "rePB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _AbortController__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AbortController */ "5/gN");
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Errors */ "9BRb");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _ITransport__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./ITransport */ "qFkC");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Utils */ "ftFU");







// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.




 // Not exported from 'index', this type is internal.

/** @private */

var LongPollingTransport = /*#__PURE__*/function () {
  function LongPollingTransport(httpClient, logger, options) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__["default"])(this, LongPollingTransport);

    this._httpClient = httpClient;
    this._logger = logger;
    this._pollAbort = new _AbortController__WEBPACK_IMPORTED_MODULE_7__["AbortController"]();
    this._options = options;
    this._running = false;
    this.onreceive = null;
    this.onclose = null;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__["default"])(LongPollingTransport, [{
    key: "pollAborted",
    get: // This is an internal type, not exported from 'index' so this is really just internal.
    function get() {
      return this._pollAbort.aborted;
    }
  }, {
    key: "connect",
    value: function () {
      var _connect = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(url, transferFormat) {
        var _getUserAgentHeader, _getUserAgentHeader2, name, value, headers, pollOptions, pollUrl, response;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _Utils__WEBPACK_IMPORTED_MODULE_11__["Arg"].isRequired(url, "url");
                _Utils__WEBPACK_IMPORTED_MODULE_11__["Arg"].isRequired(transferFormat, "transferFormat");
                _Utils__WEBPACK_IMPORTED_MODULE_11__["Arg"].isIn(transferFormat, _ITransport__WEBPACK_IMPORTED_MODULE_10__["TransferFormat"], "transferFormat");
                this._url = url;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Connecting."); // Allow binary format on Node and Browsers that support binary content (indicated by the presence of responseType property)


                if (!(transferFormat === _ITransport__WEBPACK_IMPORTED_MODULE_10__["TransferFormat"].Binary && typeof XMLHttpRequest !== "undefined" && typeof new XMLHttpRequest().responseType !== "string")) {
                  _context.next = 7;
                  break;
                }

                throw new Error("Binary protocols over XmlHttpRequest not implementing advanced features are not supported.");

              case 7:
                _getUserAgentHeader = Object(_Utils__WEBPACK_IMPORTED_MODULE_11__["getUserAgentHeader"])(), _getUserAgentHeader2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_getUserAgentHeader, 2), name = _getUserAgentHeader2[0], value = _getUserAgentHeader2[1];
                headers = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_1__["default"])({}, name, value), this._options.headers);
                pollOptions = {
                  abortSignal: this._pollAbort.signal,
                  headers: headers,
                  timeout: 100000,
                  withCredentials: this._options.withCredentials
                };

                if (transferFormat === _ITransport__WEBPACK_IMPORTED_MODULE_10__["TransferFormat"].Binary) {
                  pollOptions.responseType = "arraybuffer";
                } // Make initial long polling request
                // Server uses first long polling request to finish initializing connection and it returns without data


                pollUrl = "".concat(url, "&_=").concat(Date.now());

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) polling: ".concat(pollUrl, "."));

                _context.next = 15;
                return this._httpClient.get(pollUrl, pollOptions);

              case 15:
                response = _context.sent;

                if (response.statusCode !== 200) {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "(LongPolling transport) Unexpected response code: ".concat(response.statusCode, ".")); // Mark running as false so that the poll immediately ends and runs the close logic


                  this._closeError = new _Errors__WEBPACK_IMPORTED_MODULE_8__["HttpError"](response.statusText || "", response.statusCode);
                  this._running = false;
                } else {
                  this._running = true;
                }

                this._receiving = this._poll(this._url, pollOptions);

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function connect(_x, _x2) {
        return _connect.apply(this, arguments);
      }

      return connect;
    }()
  }, {
    key: "_poll",
    value: function () {
      var _poll2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(url, pollOptions) {
        var pollUrl, response;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;

              case 1:
                if (!this._running) {
                  _context2.next = 16;
                  break;
                }

                _context2.prev = 2;
                pollUrl = "".concat(url, "&_=").concat(Date.now());

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) polling: ".concat(pollUrl, "."));

                _context2.next = 7;
                return this._httpClient.get(pollUrl, pollOptions);

              case 7:
                response = _context2.sent;

                if (response.statusCode === 204) {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "(LongPolling transport) Poll terminated by server.");

                  this._running = false;
                } else if (response.statusCode !== 200) {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "(LongPolling transport) Unexpected response code: ".concat(response.statusCode, ".")); // Unexpected status code


                  this._closeError = new _Errors__WEBPACK_IMPORTED_MODULE_8__["HttpError"](response.statusText || "", response.statusCode);
                  this._running = false;
                } else {
                  // Process the response
                  if (response.content) {
                    this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) data received. ".concat(Object(_Utils__WEBPACK_IMPORTED_MODULE_11__["getDataDetail"])(response.content, this._options.logMessageContent), "."));

                    if (this.onreceive) {
                      this.onreceive(response.content);
                    }
                  } else {
                    // This is another way timeout manifest.
                    this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Poll timed out, reissuing.");
                  }
                }

                _context2.next = 14;
                break;

              case 11:
                _context2.prev = 11;
                _context2.t0 = _context2["catch"](2);

                if (!this._running) {
                  // Log but disregard errors that occur after stopping
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Poll errored after shutdown: ".concat(_context2.t0.message));
                } else {
                  if (_context2.t0 instanceof _Errors__WEBPACK_IMPORTED_MODULE_8__["TimeoutError"]) {
                    // Ignore timeouts and reissue the poll.
                    this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Poll timed out, reissuing.");
                  } else {
                    // Close the connection with the error as the result.
                    this._closeError = _context2.t0;
                    this._running = false;
                  }
                }

              case 14:
                _context2.next = 1;
                break;

              case 16:
                _context2.prev = 16;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Polling complete."); // We will reach here with pollAborted==false when the server returned a response causing the transport to stop.
                // If pollAborted==true then client initiated the stop and the stop method will raise the close event after DELETE is sent.


                if (!this.pollAborted) {
                  this._raiseOnClose();
                }

                return _context2.finish(16);

              case 20:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[0,, 16, 20], [2, 11]]);
      }));

      function _poll(_x3, _x4) {
        return _poll2.apply(this, arguments);
      }

      return _poll;
    }()
  }, {
    key: "send",
    value: function () {
      var _send = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3(data) {
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                if (this._running) {
                  _context3.next = 2;
                  break;
                }

                return _context3.abrupt("return", Promise.reject(new Error("Cannot send until the transport is connected")));

              case 2:
                return _context3.abrupt("return", Object(_Utils__WEBPACK_IMPORTED_MODULE_11__["sendMessage"])(this._logger, "LongPolling", this._httpClient, this._url, data, this._options));

              case 3:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this);
      }));

      function send(_x5) {
        return _send.apply(this, arguments);
      }

      return send;
    }()
  }, {
    key: "stop",
    value: function () {
      var _stop = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_4__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee4() {
        var headers, _getUserAgentHeader3, _getUserAgentHeader4, name, value, deleteOptions, error;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Stopping polling."); // Tell receiving loop to stop, abort any current request, and then wait for it to finish


                this._running = false;

                this._pollAbort.abort();

                _context4.prev = 3;
                _context4.next = 6;
                return this._receiving;

              case 6:
                // Send DELETE to clean up long polling on the server
                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) sending DELETE request to ".concat(this._url, "."));

                headers = {};
                _getUserAgentHeader3 = Object(_Utils__WEBPACK_IMPORTED_MODULE_11__["getUserAgentHeader"])(), _getUserAgentHeader4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__["default"])(_getUserAgentHeader3, 2), name = _getUserAgentHeader4[0], value = _getUserAgentHeader4[1];
                headers[name] = value;
                deleteOptions = {
                  headers: Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_2__["default"])({}, headers), this._options.headers),
                  timeout: this._options.timeout,
                  withCredentials: this._options.withCredentials
                };
                _context4.prev = 11;
                _context4.next = 14;
                return this._httpClient.delete(this._url, deleteOptions);

              case 14:
                _context4.next = 19;
                break;

              case 16:
                _context4.prev = 16;
                _context4.t0 = _context4["catch"](11);
                error = _context4.t0;

              case 19:
                if (error) {
                  if (error instanceof _Errors__WEBPACK_IMPORTED_MODULE_8__["HttpError"]) {
                    if (error.statusCode === 404) {
                      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) A 404 response was returned from sending a DELETE request.");
                    } else {
                      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Error sending a DELETE request: ".concat(error));
                    }
                  }
                } else {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) DELETE request accepted.");
                }

              case 20:
                _context4.prev = 20;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, "(LongPolling transport) Stop finished."); // Raise close event here instead of in polling
                // It needs to happen after the DELETE request is sent


                this._raiseOnClose();

                return _context4.finish(20);

              case 24:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[3,, 20, 24], [11, 16]]);
      }));

      function stop() {
        return _stop.apply(this, arguments);
      }

      return stop;
    }()
  }, {
    key: "_raiseOnClose",
    value: function _raiseOnClose() {
      if (this.onclose) {
        var logMessage = "(LongPolling transport) Firing onclose event.";

        if (this._closeError) {
          logMessage += " Error: " + this._closeError;
        }

        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Trace, logMessage);

        this.onclose(this._closeError);
      }
    }
  }]);

  return LongPollingTransport;
}();

/***/ }),

/***/ "CG6G":
/*!***************************************************************************************************!*\
  !*** ./src/app/core/components/screens/security-transactions/security-transactions.component.css ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".status-tables {\r\n  margin-top: 32px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 24px;\r\n}\r\n\r\n.status-table {\r\n  margin-bottom: 24px;\r\n}\r\n\r\n.mr-2 {\r\n  margin-right: 8px;\r\n}\r\n\r\n@-webkit-keyframes highlight {\r\n  0% {\r\n    background-color: #72c579; \r\n  }\r\n  100% {\r\n    background-color: white;\r\n  }\r\n  50% {\r\n    background-color: #72c579;\r\n  }\r\n  75% {\r\n    background-color: #72c579;\r\n  }\r\n  100% {\r\n    background-color: white;\r\n  }\r\n}\r\n\r\n@keyframes highlight {\r\n  0% {\r\n    background-color: #72c579; \r\n  }\r\n  100% {\r\n    background-color: white;\r\n  }\r\n  50% {\r\n    background-color: #72c579;\r\n  }\r\n  75% {\r\n    background-color: #72c579;\r\n  }\r\n  100% {\r\n    background-color: white;\r\n  }\r\n}\r\n\r\n.highlight {\r\n  -webkit-animation: highlight 2s infinite;\r\n          animation: highlight 2s infinite;\r\n}\r\n\r\n.card-category {\r\n  font-size: 14px;\r\n  margin-top: 15px !important;\r\n  padding: 10px 15px !important;\r\n}\r\n\r\nmat-chip {\r\n  min-height: 24px;\r\n  padding: 4px 12px;\r\n  pointer-events: none !important;\r\n}\r\n\r\n.visitors-container {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n}\r\n\r\n.visitors-list {\r\n  flex: 1;\r\n}\r\n\r\n.total-visitors mat-chip {\r\n  font-size: 12px !important;\r\n  pointer-events: none !important;\r\n}\r\n\r\n.no-data-message {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 32px;\r\n  text-align: center;\r\n  background: #f5f5f5;\r\n  border-radius: 8px;\r\n  margin: 16px 0;\r\n}\r\n\r\n.no-data-message mat-icon {\r\n  font-size: 48px;\r\n  width: 48px;\r\n  height: 48px;\r\n  color: #9e9e9e;\r\n  margin-bottom: 16px;\r\n}\r\n\r\n.no-data-message p {\r\n  color: #666;\r\n  font-size: 16px;\r\n  margin: 0;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .no-data-message {\r\n    padding: 24px;\r\n  }\r\n\r\n  .no-data-message mat-icon {\r\n    font-size: 36px;\r\n    width: 36px;\r\n    height: 36px;\r\n    margin-bottom: 12px;\r\n  }\r\n\r\n  .no-data-message p {\r\n    font-size: 14px;\r\n  }\r\n}\r\n\r\n/* Snackbar stilleri */\r\n\r\n::ng-deep .success-snackbar {\r\n  background: #4caf50;\r\n  color: white;\r\n}\r\n\r\n::ng-deep .error-snackbar {\r\n  background: #f44336;\r\n  color: white;\r\n}\r\n\r\n::ng-deep .success-snackbar .mat-simple-snackbar-action,\r\n::ng-deep .error-snackbar .mat-simple-snackbar-action {\r\n  color: white;\r\n}\r\n\r\n/* Ziyaretçi bilgileri için stiller */\r\n\r\n.visitor-info {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 12px;\r\n  padding: 8px 0;\r\n}\r\n\r\n.visitor-names {\r\n  flex: 1;\r\n  font-size: 14px;\r\n}\r\n\r\n.visitor-count {\r\n  min-height: 24px;\r\n  padding: 4px 12px;\r\n  font-size: 12px !important;\r\n}\r\n\r\n/* Araç/Yaya chip'leri için stiller */\r\n\r\n.vehicle-chip {\r\n  background: #e8f5e9 !important;\r\n  color: #2e7d32 !important;\r\n  min-height: 24px;\r\n  padding: 4px 12px;\r\n}\r\n\r\n.pedestrian-chip {\r\n  background: #f5f5f5 !important;\r\n  color: #616161 !important;\r\n  min-height: 24px;\r\n  padding: 4px 12px;\r\n}\r\n\r\n.vehicle-chip mat-icon,\r\n.pedestrian-chip mat-icon {\r\n  font-size: 18px;\r\n  height: 18px;\r\n  width: 18px;\r\n  margin-right: 4px;\r\n}\r\n\r\n/* Tablo hücresi düzenlemeleri */\r\n\r\n.mat-cell {\r\n  padding: 12px 16px;\r\n}\r\n\r\n.mat-header-cell {\r\n  padding: 0 16px;\r\n  font-weight: 500;\r\n  color: rgba(0, 0, 0, 0.87);\r\n}\r\n\r\n/* Chip listesi düzenlemeleri */\r\n\r\nmat-chip-list {\r\n  pointer-events: none;\r\n}\r\n\r\nmat-chip {\r\n  pointer-events: none !important;\r\n}\r\n\r\n/* Tablo genel stilleri */\r\n\r\n.mat-elevation-z8 {\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n}\r\n\r\ntable {\r\n  width: 100%;\r\n}\r\n\r\n/* Responsive düzenlemeler */\r\n\r\n@media (max-width: 1024px) {\r\n  .status-tables {\r\n    grid-template-columns: 1fr;\r\n  }\r\n\r\n  .card {\r\n    margin-bottom: 24px;\r\n  }\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .container-fluid {\r\n    padding: 16px !important;\r\n  }\r\n\r\n  .card-header {\r\n    margin: -15px 10px 0;\r\n    padding: 12px !important;\r\n  }\r\n\r\n  .card-title {\r\n    font-size: 18px;\r\n  }\r\n\r\n  .card-category {\r\n    font-size: 14px;\r\n    margin-top: 15px !important;\r\n    padding: 10px 15px !important;\r\n  }\r\n\r\n  .mat-table {\r\n    display: block;\r\n    overflow-x: auto;\r\n    white-space: nowrap;\r\n  }\r\n\r\n  .mat-cell,\r\n  .mat-header-cell {\r\n    padding: 8px !important;\r\n  }\r\n\r\n  .visitor-info {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    gap: 8px;\r\n  }\r\n\r\n  .visitor-chips {\r\n    width: 100%;\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .total-visitor-chip {\r\n    width: auto;\r\n  }\r\n\r\n  .mat-chip {\r\n    font-size: 12px !important;\r\n    height: 24px !important;\r\n  }\r\n\r\n  .mat-chip mat-icon {\r\n    font-size: 14px;\r\n    height: 14px;\r\n    width: 14px;\r\n  }\r\n\r\n  .date-tabs {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  .date-tabs button {\r\n    flex: 1;\r\n    min-width: 0;\r\n    padding: 4px 8px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  .mat-form-field {\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  .mat-paginator {\r\n    font-size: 12px;\r\n  }\r\n\r\n  .mat-paginator-page-size {\r\n    margin-right: 8px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .container-fluid {\r\n    padding: 8px !important;\r\n  }\r\n\r\n  .card {\r\n    margin-bottom: 16px;\r\n  }\r\n\r\n  .card-header {\r\n    margin: -10px 5px 0;\r\n    padding: 10px !important;\r\n  }\r\n\r\n  .mat-cell,\r\n  .mat-header-cell {\r\n    padding: 6px !important;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .mat-chip {\r\n    font-size: 11px !important;\r\n    height: 22px !important;\r\n    padding: 2px 8px !important;\r\n  }\r\n\r\n  .mat-chip mat-icon {\r\n    font-size: 12px;\r\n    height: 12px;\r\n    width: 12px;\r\n    margin-right: 2px;\r\n  }\r\n\r\n  .date-tabs button {\r\n    font-size: 12px;\r\n    padding: 2px 6px;\r\n  }\r\n\r\n  .mat-form-field {\r\n    font-size: 14px;\r\n  }\r\n\r\n  .mat-paginator-page-size-select {\r\n    margin: 0 4px;\r\n  }\r\n}\r\n\r\n/* Tablo stilleri */\r\n\r\n.mat-table {\r\n  width: 100%;\r\n  background: white;\r\n}\r\n\r\n.mat-row:hover {\r\n  background: #f5f5f5;\r\n}\r\n\r\n/* Chip stilleri */\r\n\r\n.mat-chip-list {\r\n  display: inline-flex;\r\n}\r\n\r\n.mat-chip {\r\n  font-size: 13px !important;\r\n  height: 24px !important;\r\n  line-height: 24px !important;\r\n}\r\n\r\n.visitor-count {\r\n  background: #e3f2fd !important;\r\n  color: #1976d2 !important;\r\n}\r\n\r\n.vehicle-chip mat-icon,\r\n.pedestrian-chip mat-icon {\r\n  margin-right: 4px;\r\n  font-size: 16px;\r\n  width: 16px;\r\n  height: 16px;\r\n  vertical-align: text-bottom;\r\n}\r\n\r\n/* Card stilleri */\r\n\r\n.card-header {\r\n  padding: 15px !important;\r\n  margin: -20px 15px 0;\r\n}\r\n\r\n.card-header-success {\r\n  background: linear-gradient(60deg, #66bb6a, #43a047);\r\n}\r\n\r\n.card-header-danger {\r\n  background: linear-gradient(60deg, #ef5350, #e53935);\r\n}\r\n\r\n/* Tablo container stilleri */\r\n\r\n.mat-elevation-z8 {\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;\r\n}\r\n\r\n.visitor-chips {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 8px;\r\n  flex: 1;\r\n}\r\n\r\n.visitor-icon {\r\n  font-size: 16px;\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 4px;\r\n}\r\n\r\n.primary-visitor-chip {\r\n  background: #e3f2fd !important;\r\n  color: #1976d2 !important;\r\n  font-weight: 500;\r\n  min-height: 28px;\r\n}\r\n\r\n.secondary-visitor-chip {\r\n  background: #f5f5f5 !important;\r\n  color: #616161 !important;\r\n  min-height: 28px;\r\n}\r\n\r\n.total-visitor-chip {\r\n  background: #e8f5e9 !important;\r\n  color: #2e7d32 !important;\r\n  font-size: 12px !important;\r\n  min-height: 24px;\r\n  padding: 0 8px;\r\n}\r\n\r\n.total-visitor-chip mat-icon {\r\n  font-size: 16px;\r\n  height: 16px;\r\n  width: 16px;\r\n  margin-right: 4px;\r\n}\r\n\r\n/* Responsive tasarım için */\r\n\r\n@media (max-width: 768px) {\r\n  .visitor-info {\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n  }\r\n\r\n  .visitor-chips {\r\n    margin-bottom: 8px;\r\n  }\r\n\r\n  .total-visitor-chip {\r\n    align-self: flex-end;\r\n  }\r\n}\r\n\r\n/* Hover efekti */\r\n\r\n.mat-chip {\r\n  transition: transform 0.2s ease;\r\n}\r\n\r\n.mat-chip:hover {\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n/* Chip içindeki ikonların hizalaması */\r\n\r\n.mat-chip mat-icon {\r\n  vertical-align: middle;\r\n}\r\n\r\n/* Chip listesi container'ı */\r\n\r\n.mat-chip-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 6px;\r\n}\r\n\r\n.visitor-actions {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n}\r\n\r\n.visitor-actions button {\r\n  min-width: 36px;\r\n  width: 36px;\r\n  height: 36px;\r\n  padding: 0;\r\n  margin-left: 4px;\r\n}\r\n\r\n.visitor-actions button mat-icon {\r\n  font-size: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .visitor-actions {\r\n    width: 100%;\r\n    justify-content: space-between;\r\n  }\r\n  \r\n  .visitor-actions button {\r\n    min-width: 32px;\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n\r\n  .visitor-actions button mat-icon {\r\n    font-size: 18px;\r\n    width: 18px;\r\n    height: 18px;\r\n    line-height: 18px;\r\n  }\r\n}\r\n\r\n.show-all-btn {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 8px;\r\n  padding: 4px 12px;\r\n  height: 32px;\r\n  font-size: 13px;\r\n  border-radius: 16px;\r\n  background: white;\r\n  transition: all 0.2s ease;\r\n  color: #1976d2;\r\n}\r\n\r\n.show-all-btn:hover {\r\n  background: #1976d2;\r\n  color: black;\r\n  transform: translateY(-1px);\r\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n}\r\n\r\n.show-all-btn:hover mat-icon {\r\n  color: white;\r\n}\r\n\r\n.show-all-btn mat-icon {\r\n  font-size: 18px;\r\n  width: 18px;\r\n  height: 18px;\r\n  margin: 0;\r\n  color: #1976d2;\r\n  transition: color 0.2s ease;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .show-all-btn {\r\n    padding: 4px 8px;\r\n    height: 28px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  .show-all-btn mat-icon {\r\n    font-size: 16px;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n}\r\n\r\n/* Tarih seçim butonları */\r\n\r\n.date-tabs {\r\n  display: flex;\r\n  justify-content: center;\r\n  gap: 16px;\r\n  margin: 24px auto;\r\n  max-width: 600px;\r\n  background: #f5f5f5;\r\n  padding: 8px;\r\n  border-radius: 12px;\r\n}\r\n\r\n.date-tabs button {\r\n  flex: 1;\r\n  min-width: 140px;\r\n  padding: 12px 24px;\r\n  border-radius: 8px;\r\n  border: none;\r\n  background: transparent;\r\n  color: #666;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 8px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  cursor: pointer;\r\n}\r\n\r\n.date-tabs button.active {\r\n  background: #ab47bc !important;\r\n  color: white !important;\r\n  box-shadow: 0 4px 12px rgba(171, 71, 188, 0.2);\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.date-tabs button.active mat-icon {\r\n  color: white !important;\r\n  transform: scale(1.1);\r\n}\r\n\r\n.date-tabs button.active span {\r\n  color: white !important;\r\n  transform: scale(1.05);\r\n}\r\n\r\n.date-tabs button:not(.active):hover {\r\n  background: rgba(171, 71, 188, 0.1);\r\n  color: #ab47bc;\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.date-tabs button mat-icon {\r\n  font-size: 20px;\r\n  width: 20px;\r\n  height: 20px;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n.date-tabs button:hover mat-icon {\r\n  transform: translateY(-2px);\r\n}\r\n\r\n.date-tabs button span {\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  transition: all 0.3s ease;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n  .date-tabs {\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n    padding: 8px;\r\n    margin: 16px auto;\r\n  }\r\n\r\n  .date-tabs button {\r\n    min-width: 0;\r\n    padding: 8px 16px;\r\n    font-size: 13px;\r\n  }\r\n\r\n  .date-tabs button mat-icon {\r\n    font-size: 18px;\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n}\r\n\r\n@media (max-width: 480px) {\r\n  .date-tabs {\r\n    flex-direction: column;\r\n    width: 100%;\r\n  }\r\n\r\n  .date-tabs button {\r\n    width: 100%;\r\n    padding: 10px;\r\n  }\r\n}\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "CXOy":
/*!********************************************************************************************************************!*\
  !*** ./src/app/core/components/screens/security-transactions/all-visitors-dialog/all-visitors-dialog.component.ts ***!
  \********************************************************************************************************************/
/*! exports provided: AllVisitorsDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AllVisitorsDialogComponent", function() { return AllVisitorsDialogComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var AllVisitorsDialogComponent = /** @class */ (function () {
    function AllVisitorsDialogComponent(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
    }
    AllVisitorsDialogComponent.ctorParameters = function () { return [
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_0__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MAT_DIALOG_DATA"],] }] }
    ]; };
    AllVisitorsDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Component"])({
            selector: 'app-all-visitors-dialog',
            template: "\n    <div class=\"dialog-header\">\n      <h2 mat-dialog-title>\n        <mat-icon class=\"header-icon\">groups</mat-icon>\n        T\u00FCm Ziyaret\u00E7iler ({{data.multiVisiters?.length + 1}} Ki\u015Fi)\n      </h2>\n    </div>\n    <mat-dialog-content>\n      <div class=\"visitor-list\">\n        <!-- Ana Ziyaret\u00E7i -->\n        <div class=\"visitor-item primary\">\n          <div class=\"visitor-icon\">\n            <mat-icon>person</mat-icon>\n          </div>\n          <div class=\"visitor-info\">\n            <span class=\"visitor-name\">{{data.visit.visitorFullName}}</span>\n            <div class=\"visitor-details\">\n              <span class=\"visitor-type\">Ana Ziyaret\u00E7i</span>\n              <span class=\"visitor-entry\">\n                <mat-icon>event</mat-icon>\n                {{data.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}}\n              </span>\n            </div>\n          </div>\n        </div>\n\n        <!-- Di\u011Fer Ziyaret\u00E7iler -->\n        <div *ngFor=\"let visitor of data.multiVisiters; let i = index\" class=\"visitor-item\">\n          <div class=\"visitor-icon\">\n            <mat-icon>person_outline</mat-icon>\n          </div>\n          <div class=\"visitor-info\">\n            <span class=\"visitor-name\">{{visitor.visitorFullName}}</span>\n            <div class=\"visitor-details\">\n              <span class=\"visitor-type\">Beraberindeki Ziyaret\u00E7i {{i + 1}}</span>\n              <span class=\"visitor-entry\">\n                <mat-icon>event</mat-icon>\n                {{data.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}}\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </mat-dialog-content>\n    <mat-dialog-actions align=\"end\">\n      <button mat-stroked-button color=\"primary\" [mat-dialog-close]>\n        <mat-icon>close</mat-icon>\n        Kapat\n      </button>\n    </mat-dialog-actions>\n  ",
            styles: ["\n    .dialog-header {\n      background: #1976d2;\n      color: white;\n      margin: -24px -24px 24px -24px;\n      padding: 16px 24px;\n      display: flex;\n      align-items: center;\n    }\n\n    .header-icon {\n      margin-right: 8px;\n      vertical-align: text-bottom;\n    }\n\n    .visitor-list {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n    }\n\n    .visitor-item {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n      padding: 16px;\n      border-radius: 8px;\n      background: #f5f5f5;\n      transition: transform 0.2s ease, box-shadow 0.2s ease;\n    }\n\n    .visitor-item:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n    }\n\n    .visitor-item.primary {\n      background: #e3f2fd;\n      border-left: 4px solid #1976d2;\n    }\n\n    .visitor-icon {\n      background: white;\n      border-radius: 50%;\n      width: 40px;\n      height: 40px;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .visitor-info {\n      flex: 1;\n    }\n\n    .visitor-name {\n      font-size: 16px;\n      font-weight: 500;\n      color: rgba(0, 0, 0, 0.87);\n      display: block;\n      margin-bottom: 4px;\n    }\n\n    .visitor-details {\n      display: flex;\n      align-items: center;\n      gap: 16px;\n    }\n\n    .visitor-type {\n      font-size: 13px;\n      color: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n    }\n\n    .visitor-entry {\n      font-size: 13px;\n      color: rgba(0, 0, 0, 0.6);\n      display: flex;\n      align-items: center;\n      gap: 4px;\n    }\n\n    .visitor-entry mat-icon {\n      font-size: 16px;\n      width: 16px;\n      height: 16px;\n      color: #1976d2;\n    }\n\n    mat-icon {\n      color: #1976d2;\n    }\n\n    .primary .visitor-icon {\n      background: #1976d2;\n    }\n\n    .primary .visitor-icon mat-icon {\n      color: white;\n    }\n\n    mat-dialog-actions {\n      padding: 16px 0 0;\n      margin-bottom: -8px;\n    }\n\n    button {\n      display: flex;\n      align-items: center;\n      gap: 8px;\n    }\n  "]
        }),
        __metadata("design:paramtypes", [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_1__["MatDialogRef"], Object])
    ], AllVisitorsDialogComponent);
    return AllVisitorsDialogComponent;
}());



/***/ }),

/***/ "Cm+b":
/*!**********************************************************************************!*\
  !*** ./src/app/core/components/app/layouts/admin-layout/admin-layout.routing.ts ***!
  \**********************************************************************************/
/*! exports provided: AdminLayoutRoutes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLayoutRoutes", function() { return AdminLayoutRoutes; });
/* harmony import */ var app_core_components_admin_banuLog_banuLog_component__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! app/core/components/admin/banuLog/banuLog.component */ "V0Ej");
/* harmony import */ var app_core_components_admin_group_group_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! app/core/components/admin/group/group.component */ "c0QP");
/* harmony import */ var app_core_components_admin_language_language_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/core/components/admin/language/language.component */ "b6ta");
/* harmony import */ var app_core_components_admin_log_logDto_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! app/core/components/admin/log/logDto.component */ "MXpY");
/* harmony import */ var app_core_components_admin_login_login_component__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! app/core/components/admin/login/login.component */ "ebNd");
/* harmony import */ var app_core_components_admin_operationclaim_operationClaim_component__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/core/components/admin/operationclaim/operationClaim.component */ "N0gA");
/* harmony import */ var app_core_components_admin_translate_translate_component__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/core/components/admin/translate/translate.component */ "j9ws");
/* harmony import */ var app_core_components_admin_user_user_component__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/components/admin/user/user.component */ "4Zp6");
/* harmony import */ var app_core_components_admin_visit_visit_component__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/components/admin/visit/visit.component */ "YK1k");
/* harmony import */ var app_core_components_screens_banu_logs_banu_logs_component__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/components/screens/banu-logs/banu-logs.component */ "XtHf");
/* harmony import */ var app_core_components_screens_personel_visit_personel_visit_component__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/core/components/screens/personel-visit/personel-visit.component */ "/e0e");
/* harmony import */ var app_core_components_screens_security_transactions_security_transactions_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/core/components/screens/security-transactions/security-transactions.component */ "JDzB");
/* harmony import */ var app_core_components_screens_visit_add_visit_add_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/core/components/screens/visit-add/visit-add.component */ "W7d8");
/* harmony import */ var app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! app/core/guards/claim.guard */ "8654");
/* harmony import */ var app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! app/core/guards/login-guard */ "sppB");
/* harmony import */ var app_core_guards_login_routing__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! app/core/guards/login-routing */ "Gu9m");
/* harmony import */ var _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../dashboard/dashboard.component */ "1gIY");

















var AdminLayoutRoutes = [
    { path: 'dashboard', component: _dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_16__["DashboardComponent"], canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"]] },
    {
        path: 'user',
        component: app_core_components_admin_user_user_component__WEBPACK_IMPORTED_MODULE_7__["UserComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetUsersQuery' }
    },
    {
        path: 'group',
        component: app_core_components_admin_group_group_component__WEBPACK_IMPORTED_MODULE_1__["GroupComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetGroupsQuery' }
    },
    { path: 'login', component: app_core_components_admin_login_login_component__WEBPACK_IMPORTED_MODULE_4__["LoginComponent"], canActivate: [app_core_guards_login_routing__WEBPACK_IMPORTED_MODULE_15__["LoginRouting"]] },
    {
        path: 'language',
        component: app_core_components_admin_language_language_component__WEBPACK_IMPORTED_MODULE_2__["LanguageComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetLanguagesQuery' }
    },
    {
        path: 'translate',
        component: app_core_components_admin_translate_translate_component__WEBPACK_IMPORTED_MODULE_6__["TranslateComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetTranslatesQuery' }
    },
    {
        path: 'operationclaim',
        component: app_core_components_admin_operationclaim_operationClaim_component__WEBPACK_IMPORTED_MODULE_5__["OperationClaimComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetOperationClaimsQuery' }
    },
    {
        path: 'log',
        component: app_core_components_admin_log_logDto_component__WEBPACK_IMPORTED_MODULE_3__["LogDtoComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"]]
    },
    {
        path: 'banu-log',
        component: app_core_components_admin_banuLog_banuLog_component__WEBPACK_IMPORTED_MODULE_0__["BanuLogComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetUsersQuery' }
    },
    {
        path: 'banu-logs',
        component: app_core_components_screens_banu_logs_banu_logs_component__WEBPACK_IMPORTED_MODULE_9__["BanuLogsComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetBanuLogsForSecurityQuery' }
    },
    {
        path: 'security-transactions',
        component: app_core_components_screens_security_transactions_security_transactions_component__WEBPACK_IMPORTED_MODULE_11__["SecurityTransactionsComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetVisitsMultiVisitsQuery' }
    },
    {
        path: 'personel-visit',
        component: app_core_components_screens_personel_visit_personel_visit_component__WEBPACK_IMPORTED_MODULE_10__["PersonelVisitComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetPersonnelVisitsQuery' }
    },
    {
        path: 'visit',
        component: app_core_components_admin_visit_visit_component__WEBPACK_IMPORTED_MODULE_8__["VisitComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'GetUsersQuery' }
    },
    {
        path: 'visit-add',
        component: app_core_components_screens_visit_add_visit_add_component__WEBPACK_IMPORTED_MODULE_12__["VisitAddComponent"],
        canActivate: [app_core_guards_login_guard__WEBPACK_IMPORTED_MODULE_14__["LoginGuard"], app_core_guards_claim_guard__WEBPACK_IMPORTED_MODULE_13__["ClaimGuard"]],
        data: { claim: 'VehicleEntranceCommand' }
    }
];


/***/ }),

/***/ "CvCy":
/*!*****************************************************!*\
  !*** ./src/app/core/modules/admin-layout.module.ts ***!
  \*****************************************************/
/*! exports provided: AdminLayoutModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AdminLayoutModule", function() { return AdminLayoutModule; });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/button */ "bTqV");
/* harmony import */ var _angular_material_card__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/card */ "Wp6s");
/* harmony import */ var _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/checkbox */ "bSwM");
/* harmony import */ var _angular_material_chips__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/chips */ "A5z7");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/datepicker */ "iadO");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_divider__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/material/divider */ "f0Cb");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/material/form-field */ "kmnG");
/* harmony import */ var _angular_material_icon__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/icon */ "NFeN");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/input */ "qFsG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_select__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/select */ "d3UM");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/material/snack-bar */ "dNgK");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var _angular_material_tabs__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/material/tabs */ "wZkO");
/* harmony import */ var _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/material/tooltip */ "Qu3c");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ "1kSV");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @ngx-translate/core */ "sYmb");
/* harmony import */ var _sweetalert2_ngx_sweetalert2__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @sweetalert2/ngx-sweetalert2 */ "QJFE");
/* harmony import */ var app_core_components_admin_group_group_component__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! app/core/components/admin/group/group.component */ "c0QP");
/* harmony import */ var app_core_components_admin_login_login_component__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! app/core/components/admin/login/login.component */ "ebNd");
/* harmony import */ var app_core_components_admin_user_user_component__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! app/core/components/admin/user/user.component */ "4Zp6");
/* harmony import */ var app_core_guards_login_routing__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! app/core/guards/login-routing */ "Gu9m");
/* harmony import */ var app_core_services_Translation_service__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! app/core/services/Translation.service */ "LjPS");
/* harmony import */ var app_core_tables_spark_table_spark_table_component__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! app/core/tables/spark-table/spark-table.component */ "VUeu");
/* harmony import */ var ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ng-multiselect-dropdown */ "Egam");
/* harmony import */ var _components_admin_banuLog_banuLog_component__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ../components/admin/banuLog/banuLog.component */ "V0Ej");
/* harmony import */ var _components_admin_language_language_component__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ../components/admin/language/language.component */ "b6ta");
/* harmony import */ var _components_admin_log_logDto_component__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ../components/admin/log/logDto.component */ "MXpY");
/* harmony import */ var _components_admin_multiVisiters_multiVisiters_component__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ../components/admin/multiVisiters/multiVisiters.component */ "MHRx");
/* harmony import */ var _components_admin_operationclaim_operationClaim_component__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ../components/admin/operationclaim/operationClaim.component */ "N0gA");
/* harmony import */ var _components_admin_translate_translate_component__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ../components/admin/translate/translate.component */ "j9ws");
/* harmony import */ var _components_admin_visit_visit_component__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ../components/admin/visit/visit.component */ "YK1k");
/* harmony import */ var _components_app_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ../components/app/dashboard/dashboard.component */ "1gIY");
/* harmony import */ var _components_app_layouts_admin_layout_admin_layout_routing__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ../components/app/layouts/admin-layout/admin-layout.routing */ "Cm+b");
/* harmony import */ var _components_screens_banu_logs_banu_logs_component__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ../components/screens/banu-logs/banu-logs.component */ "XtHf");
/* harmony import */ var _components_screens_personel_visit_personel_visit_component__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ../components/screens/personel-visit/personel-visit.component */ "/e0e");
/* harmony import */ var _components_screens_security_transactions_all_visitors_dialog_all_visitors_dialog_component__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ../components/screens/security-transactions/all-visitors-dialog/all-visitors-dialog.component */ "CXOy");
/* harmony import */ var _components_screens_security_transactions_reject_dialog_reject_dialog_component__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ../components/screens/security-transactions/reject-dialog/reject-dialog.component */ "fx42");
/* harmony import */ var _components_screens_security_transactions_security_transactions_component__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ../components/screens/security-transactions/security-transactions.component */ "JDzB");
/* harmony import */ var _components_screens_visit_add_visit_add_component__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ../components/screens/visit-add/visit-add.component */ "W7d8");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
















































// export function layoutHttpLoaderFactory(http: HttpClient) {
// 
//   return new TranslateHttpLoader(http,'../../../../../../assets/i18n/','.json');
// }
var AdminLayoutModule = /** @class */ (function () {
    function AdminLayoutModule() {
    }
    AdminLayoutModule = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"])({
            imports: [
                _angular_common__WEBPACK_IMPORTED_MODULE_0__["CommonModule"],
                _angular_router__WEBPACK_IMPORTED_MODULE_22__["RouterModule"].forChild(_components_app_layouts_admin_layout_admin_layout_routing__WEBPACK_IMPORTED_MODULE_41__["AdminLayoutRoutes"]),
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormsModule"],
                _angular_forms__WEBPACK_IMPORTED_MODULE_3__["ReactiveFormsModule"],
                _angular_material_button__WEBPACK_IMPORTED_MODULE_4__["MatButtonModule"],
                _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRippleModule"],
                _angular_material_form_field__WEBPACK_IMPORTED_MODULE_12__["MatFormFieldModule"],
                _angular_material_datepicker__WEBPACK_IMPORTED_MODULE_9__["MatDatepickerModule"],
                _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatNativeDateModule"],
                _angular_material_input__WEBPACK_IMPORTED_MODULE_14__["MatInputModule"],
                _angular_material_select__WEBPACK_IMPORTED_MODULE_16__["MatSelectModule"],
                _angular_material_tooltip__WEBPACK_IMPORTED_MODULE_21__["MatTooltipModule"],
                _angular_material_table__WEBPACK_IMPORTED_MODULE_19__["MatTableModule"],
                _angular_material_paginator__WEBPACK_IMPORTED_MODULE_15__["MatPaginatorModule"],
                _angular_material_sort__WEBPACK_IMPORTED_MODULE_18__["MatSortModule"],
                _angular_material_checkbox__WEBPACK_IMPORTED_MODULE_6__["MatCheckboxModule"],
                _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_17__["MatSnackBarModule"],
                _angular_material_icon__WEBPACK_IMPORTED_MODULE_13__["MatIconModule"],
                _angular_material_dialog__WEBPACK_IMPORTED_MODULE_10__["MatDialogModule"],
                _angular_material_divider__WEBPACK_IMPORTED_MODULE_11__["MatDividerModule"],
                _angular_material_chips__WEBPACK_IMPORTED_MODULE_7__["MatChipsModule"],
                _angular_material_card__WEBPACK_IMPORTED_MODULE_5__["MatCardModule"],
                _angular_material_tabs__WEBPACK_IMPORTED_MODULE_20__["MatTabsModule"],
                _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_23__["NgbModule"],
                ng_multiselect_dropdown__WEBPACK_IMPORTED_MODULE_32__["NgMultiSelectDropDownModule"],
                _sweetalert2_ngx_sweetalert2__WEBPACK_IMPORTED_MODULE_25__["SweetAlert2Module"],
                _ngx_translate_core__WEBPACK_IMPORTED_MODULE_24__["TranslateModule"].forChild({
                    loader: {
                        provide: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_24__["TranslateLoader"],
                        //useFactory:layoutHttpLoaderFactory,
                        useClass: app_core_services_Translation_service__WEBPACK_IMPORTED_MODULE_30__["TranslationService"],
                        deps: [_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]]
                    }
                })
            ],
            declarations: [
                _components_app_dashboard_dashboard_component__WEBPACK_IMPORTED_MODULE_40__["DashboardComponent"],
                app_core_components_admin_user_user_component__WEBPACK_IMPORTED_MODULE_28__["UserComponent"],
                app_core_components_admin_login_login_component__WEBPACK_IMPORTED_MODULE_27__["LoginComponent"],
                app_core_components_admin_group_group_component__WEBPACK_IMPORTED_MODULE_26__["GroupComponent"],
                _components_admin_language_language_component__WEBPACK_IMPORTED_MODULE_34__["LanguageComponent"],
                _components_admin_translate_translate_component__WEBPACK_IMPORTED_MODULE_38__["TranslateComponent"],
                _components_admin_operationclaim_operationClaim_component__WEBPACK_IMPORTED_MODULE_37__["OperationClaimComponent"],
                _components_admin_log_logDto_component__WEBPACK_IMPORTED_MODULE_35__["LogDtoComponent"],
                _components_admin_banuLog_banuLog_component__WEBPACK_IMPORTED_MODULE_33__["BanuLogComponent"],
                _components_screens_banu_logs_banu_logs_component__WEBPACK_IMPORTED_MODULE_42__["BanuLogsComponent"],
                _components_screens_security_transactions_security_transactions_component__WEBPACK_IMPORTED_MODULE_46__["SecurityTransactionsComponent"],
                _components_screens_security_transactions_reject_dialog_reject_dialog_component__WEBPACK_IMPORTED_MODULE_45__["RejectDialogComponent"],
                _components_admin_visit_visit_component__WEBPACK_IMPORTED_MODULE_39__["VisitComponent"],
                app_core_tables_spark_table_spark_table_component__WEBPACK_IMPORTED_MODULE_31__["SparkTableComponent"],
                _components_screens_security_transactions_all_visitors_dialog_all_visitors_dialog_component__WEBPACK_IMPORTED_MODULE_44__["AllVisitorsDialogComponent"],
                _components_screens_visit_add_visit_add_component__WEBPACK_IMPORTED_MODULE_47__["VisitAddComponent"], _components_admin_multiVisiters_multiVisiters_component__WEBPACK_IMPORTED_MODULE_36__["MultiVisitersComponent"],
                _components_screens_personel_visit_personel_visit_component__WEBPACK_IMPORTED_MODULE_43__["PersonelVisitComponent"]
            ],
            providers: [
                app_core_guards_login_routing__WEBPACK_IMPORTED_MODULE_29__["LoginRouting"]
            ]
        })
    ], AdminLayoutModule);
    return AdminLayoutModule;
}());



/***/ }),

/***/ "DOH6":
/*!***************************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/AccessTokenHttpClient.js ***!
  \***************************************************************************/
/*! exports provided: AccessTokenHttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AccessTokenHttpClient", function() { return AccessTokenHttpClient; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _HeaderNames__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HeaderNames */ "EXQx");
/* harmony import */ var _HttpClient__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./HttpClient */ "Rlqr");






// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.


/** @private */

var AccessTokenHttpClient = /*#__PURE__*/function (_HttpClient) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(AccessTokenHttpClient, _HttpClient);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(AccessTokenHttpClient);

  function AccessTokenHttpClient(innerClient, accessTokenFactory) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, AccessTokenHttpClient);

    _this = _super.call(this);
    _this._innerClient = innerClient;
    _this._accessTokenFactory = accessTokenFactory;
    return _this;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(AccessTokenHttpClient, [{
    key: "send",
    value: function () {
      var _send = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(request) {
        var allowRetry, response;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                allowRetry = true;

                if (!(this._accessTokenFactory && (!this._accessToken || request.url && request.url.indexOf("/negotiate?") > 0))) {
                  _context.next = 6;
                  break;
                }

                // don't retry if the request is a negotiate or if we just got a potentially new token from the access token factory
                allowRetry = false;
                _context.next = 5;
                return this._accessTokenFactory();

              case 5:
                this._accessToken = _context.sent;

              case 6:
                this._setAuthorizationHeader(request);

                _context.next = 9;
                return this._innerClient.send(request);

              case 9:
                response = _context.sent;

                if (!(allowRetry && response.statusCode === 401 && this._accessTokenFactory)) {
                  _context.next = 18;
                  break;
                }

                _context.next = 13;
                return this._accessTokenFactory();

              case 13:
                this._accessToken = _context.sent;

                this._setAuthorizationHeader(request);

                _context.next = 17;
                return this._innerClient.send(request);

              case 17:
                return _context.abrupt("return", _context.sent);

              case 18:
                return _context.abrupt("return", response);

              case 19:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function send(_x) {
        return _send.apply(this, arguments);
      }

      return send;
    }()
  }, {
    key: "_setAuthorizationHeader",
    value: function _setAuthorizationHeader(request) {
      if (!request.headers) {
        request.headers = {};
      }

      if (this._accessToken) {
        request.headers[_HeaderNames__WEBPACK_IMPORTED_MODULE_6__["HeaderNames"].Authorization] = "Bearer ".concat(this._accessToken);
      } // don't remove the header if there isn't an access token factory, the user manually added the header in this case
      else if (this._accessTokenFactory) {
          if (request.headers[_HeaderNames__WEBPACK_IMPORTED_MODULE_6__["HeaderNames"].Authorization]) {
            delete request.headers[_HeaderNames__WEBPACK_IMPORTED_MODULE_6__["HeaderNames"].Authorization];
          }
        }
    }
  }, {
    key: "getCookieString",
    value: function getCookieString(url) {
      return this._innerClient.getCookieString(url);
    }
  }]);

  return AccessTokenHttpClient;
}(_HttpClient__WEBPACK_IMPORTED_MODULE_7__["HttpClient"]);

/***/ }),

/***/ "Dh3D":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/sort.js ***!
  \**********************************************************************/
/*! exports provided: MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SORT_HEADER_INTL_PROVIDER", function() { return MAT_SORT_HEADER_INTL_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SORT_HEADER_INTL_PROVIDER_FACTORY", function() { return MAT_SORT_HEADER_INTL_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSort", function() { return MatSort; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSortHeader", function() { return MatSortHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSortHeaderIntl", function() { return MatSortHeaderIntl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSortModule", function() { return MatSortModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matSortAnimations", function() { return matSortAnimations; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/animations */ "R0Ic");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "ofXK");












/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @docs-private */




var _c0 = ["mat-sort-header", ""];

function MatSortHeader_div_3_Template(rf, ctx) {
  if (rf & 1) {
    var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("@arrowPosition.start", function MatSortHeader_div_3_Template_div_animation_arrowPosition_start_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r2);
      var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
      return ctx_r1._disableViewStateAnimation = true;
    })("@arrowPosition.done", function MatSortHeader_div_3_Template_div_animation_arrowPosition_done_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵrestoreView"](_r2);
      var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
      return ctx_r3._disableViewStateAnimation = false;
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](1, "div", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](2, "div", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](3, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](4, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelement"](5, "div", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@arrowOpacity", ctx_r0._getArrowViewState())("@arrowPosition", ctx_r0._getArrowViewState())("@allowChildren", ctx_r0._getArrowDirectionState());
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@indicator", ctx_r0._getArrowDirectionState());
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@leftPointer", ctx_r0._getArrowDirectionState());
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("@rightPointer", ctx_r0._getArrowDirectionState());
  }
}

var _c1 = ["*"];

function getSortDuplicateSortableIdError(id) {
  return Error("Cannot have two MatSortables with the same id (".concat(id, ")."));
}
/** @docs-private */


function getSortHeaderNotContainedWithinSortError() {
  return Error("MatSortHeader must be placed within a parent element with the MatSort directive.");
}
/** @docs-private */


function getSortHeaderMissingIdError() {
  return Error("MatSortHeader must be provided with a unique id.");
}
/** @docs-private */


function getSortInvalidDirectionError(direction) {
  return Error("".concat(direction, " is not a valid sort direction ('asc' or 'desc')."));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Boilerplate for applying mixins to MatSort.

/** @docs-private */


var MatSortBase = function MatSortBase() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSortBase);
};

var _MatSortMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["mixinInitialized"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["mixinDisabled"])(MatSortBase));
/** Container for MatSortables to manage the sort state and provide default sort parameters. */


var MatSort = /*#__PURE__*/function (_MatSortMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MatSort, _MatSortMixinBase2);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MatSort);

  function MatSort() {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSort);

    _this = _super.apply(this, arguments);
    /** Collection of all registered sortables that this directive manages. */

    _this.sortables = new Map();
    /** Used to notify any child components listening to state changes. */

    _this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_9__["Subject"]();
    /**
     * The direction to set when an MatSortable is initially sorted.
     * May be overriden by the MatSortable's sort start.
     */

    _this.start = 'asc';
    _this._direction = '';
    /** Event emitted when the user changes either the active sort or sort direction. */

    _this.sortChange = new _angular_core__WEBPACK_IMPORTED_MODULE_4__["EventEmitter"]();
    return _this;
  }
  /** The sort direction of the currently active MatSortable. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MatSort, [{
    key: "direction",
    get: function get() {
      return this._direction;
    },
    set: function set(direction) {
      if (direction && direction !== 'asc' && direction !== 'desc' && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getSortInvalidDirectionError(direction);
      }

      this._direction = direction;
    }
    /**
     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.
     * May be overriden by the MatSortable's disable clear input.
     */

  }, {
    key: "disableClear",
    get: function get() {
      return this._disableClear;
    },
    set: function set(v) {
      this._disableClear = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_5__["coerceBooleanProperty"])(v);
    }
    /**
     * Register function to be used by the contained MatSortables. Adds the MatSortable to the
     * collection of MatSortables.
     */

  }, {
    key: "register",
    value: function register(sortable) {
      if (typeof ngDevMode === 'undefined' || ngDevMode) {
        if (!sortable.id) {
          throw getSortHeaderMissingIdError();
        }

        if (this.sortables.has(sortable.id)) {
          throw getSortDuplicateSortableIdError(sortable.id);
        }
      }

      this.sortables.set(sortable.id, sortable);
    }
    /**
     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the
     * collection of contained MatSortables.
     */

  }, {
    key: "deregister",
    value: function deregister(sortable) {
      this.sortables.delete(sortable.id);
    }
    /** Sets the active sort id and determines the new sort direction. */

  }, {
    key: "sort",
    value: function sort(sortable) {
      if (this.active != sortable.id) {
        this.active = sortable.id;
        this.direction = sortable.start ? sortable.start : this.start;
      } else {
        this.direction = this.getNextSortDirection(sortable);
      }

      this.sortChange.emit({
        active: this.active,
        direction: this.direction
      });
    }
    /** Returns the next sort direction of the active sortable, checking for potential overrides. */

  }, {
    key: "getNextSortDirection",
    value: function getNextSortDirection(sortable) {
      if (!sortable) {
        return '';
      } // Get the sort direction cycle with the potential sortable overrides.


      var disableClear = sortable.disableClear != null ? sortable.disableClear : this.disableClear;
      var sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear); // Get and return the next direction in the cycle

      var nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;

      if (nextDirectionIndex >= sortDirectionCycle.length) {
        nextDirectionIndex = 0;
      }

      return sortDirectionCycle[nextDirectionIndex];
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      this._markInitialized();
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges() {
      this._stateChanges.next();
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._stateChanges.complete();
    }
  }]);

  return MatSort;
}(_MatSortMixinBase);

MatSort.ɵfac = function MatSort_Factory(t) {
  return ɵMatSort_BaseFactory(t || MatSort);
};

MatSort.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineDirective"]({
  type: MatSort,
  selectors: [["", "matSort", ""]],
  hostAttrs: [1, "mat-sort"],
  inputs: {
    disabled: ["matSortDisabled", "disabled"],
    start: ["matSortStart", "start"],
    direction: ["matSortDirection", "direction"],
    disableClear: ["matSortDisableClear", "disableClear"],
    active: ["matSortActive", "active"]
  },
  outputs: {
    sortChange: "matSortChange"
  },
  exportAs: ["matSort"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵNgOnChangesFeature"]]
});
MatSort.propDecorators = {
  active: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
    args: ['matSortActive']
  }],
  start: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
    args: ['matSortStart']
  }],
  direction: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
    args: ['matSortDirection']
  }],
  disableClear: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
    args: ['matSortDisableClear']
  }],
  sortChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"],
    args: ['matSortChange']
  }]
};
var ɵMatSort_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵgetInheritedFactory"](MatSort);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MatSort, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Directive"],
    args: [{
      selector: '[matSort]',
      exportAs: 'matSort',
      host: {
        'class': 'mat-sort'
      },
      inputs: ['disabled: matSortDisabled']
    }]
  }], null, {
    start: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
      args: ['matSortStart']
    }],
    sortChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Output"],
      args: ['matSortChange']
    }],
    direction: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
      args: ['matSortDirection']
    }],
    disableClear: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
      args: ['matSortDisableClear']
    }],
    active: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
      args: ['matSortActive']
    }]
  });
})();
/** Returns the sort direction cycle to use given the provided parameters of order and clear. */


function getSortDirectionCycle(start, disableClear) {
  var sortOrder = ['asc', 'desc'];

  if (start == 'desc') {
    sortOrder.reverse();
  }

  if (!disableClear) {
    sortOrder.push('');
  }

  return sortOrder;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var SORT_ANIMATION_TRANSITION = _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["AnimationDurations"].ENTERING + ' ' + _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["AnimationCurves"].STANDARD_CURVE;
/**
 * Animations used by MatSort.
 * @docs-private
 */

var matSortAnimations = {
  /** Animation that moves the sort indicator. */
  indicator: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["trigger"])('indicator', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('active-asc, asc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(0px)'
  })), // 10px is the height of the sort indicator, minus the width of the pointers
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('active-desc, desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(10px)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('active-asc <=> active-desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION))]),

  /** Animation that rotates the left pointer of the indicator based on the sorting direction. */
  leftPointer: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["trigger"])('leftPointer', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('active-asc, asc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'rotate(-45deg)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('active-desc, desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'rotate(45deg)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('active-asc <=> active-desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION))]),

  /** Animation that rotates the right pointer of the indicator based on the sorting direction. */
  rightPointer: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["trigger"])('rightPointer', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('active-asc, asc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'rotate(45deg)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('active-desc, desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'rotate(-45deg)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('active-asc <=> active-desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION))]),

  /** Animation that controls the arrow opacity. */
  arrowOpacity: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["trigger"])('arrowOpacity', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('desc-to-active, asc-to-active, active', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    opacity: 1
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('desc-to-hint, asc-to-hint, hint', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    opacity: .54
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    opacity: 0
  })), // Transition between all states except for immediate transitions
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('* => asc, * => desc, * => active, * => hint, * => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])('0ms')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('* <=> *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION))]),

  /**
   * Animation for the translation of the arrow as a whole. States are separated into two
   * groups: ones with animations and others that are immediate. Immediate states are asc, desc,
   * peek, and active. The other states define a specific animation (source-to-destination)
   * and are determined as a function of their prev user-perceived state and what the next state
   * should be.
   */
  arrowPosition: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["trigger"])('arrowPosition', [// Hidden Above => Hint Center
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('* => desc-to-hint, * => desc-to-active', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["keyframes"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(-25%)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(0)'
  })]))), // Hint Center => Hidden Below
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('* => hint-to-desc, * => active-to-desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["keyframes"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(0)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(25%)'
  })]))), // Hidden Below => Hint Center
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('* => asc-to-hint, * => asc-to-active', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["keyframes"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(25%)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(0)'
  })]))), // Hint Center => Hidden Above
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('* => hint-to-asc, * => active-to-asc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animate"])(SORT_ANIMATION_TRANSITION, Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["keyframes"])([Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(0)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(-25%)'
  })]))), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(0)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('hint-to-desc, active-to-desc, desc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(-25%)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["state"])('hint-to-asc, active-to-asc, asc', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["style"])({
    transform: 'translateY(25%)'
  }))]),

  /** Necessary trigger that calls animate on children animations. */
  allowChildren: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["trigger"])('allowChildren', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["transition"])('* <=> *', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["query"])('@*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_10__["animateChild"])(), {
    optional: true
  })])])
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and
 * include it in a custom provider.
 */

var MatSortHeaderIntl = function MatSortHeaderIntl() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSortHeaderIntl);

  /**
   * Stream that emits whenever the labels here are changed. Use this to notify
   * components if the labels have changed after initialization.
   */
  this.changes = new rxjs__WEBPACK_IMPORTED_MODULE_9__["Subject"]();
  /**
   * ARIA label for the sorting button.
   * @deprecated Not used anymore. To be removed.
   * @breaking-change 8.0.0
   */

  this.sortButtonLabel = function (id) {
    return "Change sorting for ".concat(id);
  };
};

MatSortHeaderIntl.ɵfac = function MatSortHeaderIntl_Factory(t) {
  return new (t || MatSortHeaderIntl)();
};

MatSortHeaderIntl.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"])({
  factory: function MatSortHeaderIntl_Factory() {
    return new MatSortHeaderIntl();
  },
  token: MatSortHeaderIntl,
  providedIn: "root"
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MatSortHeaderIntl, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [];
  }, null);
})();
/** @docs-private */


function MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {
  return parentIntl || new MatSortHeaderIntl();
}
/** @docs-private */


var MAT_SORT_HEADER_INTL_PROVIDER = {
  // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.
  provide: MatSortHeaderIntl,
  deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_4__["SkipSelf"](), MatSortHeaderIntl]],
  useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Boilerplate for applying mixins to the sort header.

/** @docs-private */

var MatSortHeaderBase = function MatSortHeaderBase() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSortHeaderBase);
};

var _MatSortHeaderMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["mixinDisabled"])(MatSortHeaderBase);
/**
 * Applies sorting behavior (click to change sort) and styles to an element, including an
 * arrow to display the current sort direction.
 *
 * Must be provided with an id and contained within a parent MatSort directive.
 *
 * If used on header cells in a CdkTable, it will automatically default its id from its containing
 * column definition.
 */


var MatSortHeader = /*#__PURE__*/function (_MatSortHeaderMixinBa) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MatSortHeader, _MatSortHeaderMixinBa);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MatSortHeader);

  function MatSortHeader(_intl, changeDetectorRef, // `MatSort` is not optionally injected, but just asserted manually w/ better error.
  // tslint:disable-next-line: lightweight-tokens
  _sort, _columnDef, _focusMonitor, _elementRef) {
    var _this2;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSortHeader);

    // Note that we use a string token for the `_columnDef`, because the value is provided both by
    // `material/table` and `cdk/table` and we can't have the CDK depending on Material,
    // and we want to avoid having the sort header depending on the CDK table because
    // of this single reference.
    _this2 = _super2.call(this);
    _this2._intl = _intl;
    _this2._sort = _sort;
    _this2._columnDef = _columnDef;
    _this2._focusMonitor = _focusMonitor;
    _this2._elementRef = _elementRef;
    /**
     * Flag set to true when the indicator should be displayed while the sort is not active. Used to
     * provide an affordance that the header is sortable by showing on focus and hover.
     */

    _this2._showIndicatorHint = false;
    /** The direction the arrow should be facing according to the current state. */

    _this2._arrowDirection = '';
    /**
     * Whether the view state animation should show the transition between the `from` and `to` states.
     */

    _this2._disableViewStateAnimation = false;
    /** Sets the position of the arrow that displays when sorted. */

    _this2.arrowPosition = 'after';

    if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {
      throw getSortHeaderNotContainedWithinSortError();
    }

    _this2._rerenderSubscription = Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["merge"])(_sort.sortChange, _sort._stateChanges, _intl.changes).subscribe(function () {
      if (_this2._isSorted()) {
        _this2._updateArrowDirection();
      } // If this header was recently active and now no longer sorted, animate away the arrow.


      if (!_this2._isSorted() && _this2._viewState && _this2._viewState.toState === 'active') {
        _this2._disableViewStateAnimation = false;

        _this2._setAnimationTransitionState({
          fromState: 'active',
          toState: _this2._arrowDirection
        });
      }

      changeDetectorRef.markForCheck();
    });
    return _this2;
  }
  /** Overrides the disable clear value of the containing MatSort for this MatSortable. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MatSortHeader, [{
    key: "disableClear",
    get: function get() {
      return this._disableClear;
    },
    set: function set(v) {
      this._disableClear = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_5__["coerceBooleanProperty"])(v);
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      if (!this.id && this._columnDef) {
        this.id = this._columnDef.name;
      } // Initialize the direction of the arrow and set the view state to be immediately that state.


      this._updateArrowDirection();

      this._setAnimationTransitionState({
        toState: this._isSorted() ? 'active' : this._arrowDirection
      });

      this._sort.register(this);
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this3 = this;

      // We use the focus monitor because we also want to style
      // things differently based on the focus origin.
      this._focusMonitor.monitor(this._elementRef, true).subscribe(function (origin) {
        return _this3._setIndicatorHintVisible(!!origin);
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._focusMonitor.stopMonitoring(this._elementRef);

      this._sort.deregister(this);

      this._rerenderSubscription.unsubscribe();
    }
    /**
     * Sets the "hint" state such that the arrow will be semi-transparently displayed as a hint to the
     * user showing what the active sort will become. If set to false, the arrow will fade away.
     */

  }, {
    key: "_setIndicatorHintVisible",
    value: function _setIndicatorHintVisible(visible) {
      // No-op if the sort header is disabled - should not make the hint visible.
      if (this._isDisabled() && visible) {
        return;
      }

      this._showIndicatorHint = visible;

      if (!this._isSorted()) {
        this._updateArrowDirection();

        if (this._showIndicatorHint) {
          this._setAnimationTransitionState({
            fromState: this._arrowDirection,
            toState: 'hint'
          });
        } else {
          this._setAnimationTransitionState({
            fromState: 'hint',
            toState: this._arrowDirection
          });
        }
      }
    }
    /**
     * Sets the animation transition view state for the arrow's position and opacity. If the
     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that
     * no animation appears.
     */

  }, {
    key: "_setAnimationTransitionState",
    value: function _setAnimationTransitionState(viewState) {
      this._viewState = viewState; // If the animation for arrow position state (opacity/translation) should be disabled,
      // remove the fromState so that it jumps right to the toState.

      if (this._disableViewStateAnimation) {
        this._viewState = {
          toState: viewState.toState
        };
      }
    }
    /** Triggers the sort on this sort header and removes the indicator hint. */

  }, {
    key: "_toggleOnInteraction",
    value: function _toggleOnInteraction() {
      this._sort.sort(this); // Do not show the animation if the header was already shown in the right position.


      if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {
        this._disableViewStateAnimation = true;
      } // If the arrow is now sorted, animate the arrow into place. Otherwise, animate it away into
      // the direction it is facing.


      var viewState = this._isSorted() ? {
        fromState: this._arrowDirection,
        toState: 'active'
      } : {
        fromState: 'active',
        toState: this._arrowDirection
      };

      this._setAnimationTransitionState(viewState);

      this._showIndicatorHint = false;
    }
  }, {
    key: "_handleClick",
    value: function _handleClick() {
      if (!this._isDisabled()) {
        this._toggleOnInteraction();
      }
    }
  }, {
    key: "_handleKeydown",
    value: function _handleKeydown(event) {
      if (!this._isDisabled() && (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_8__["SPACE"] || event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_8__["ENTER"])) {
        event.preventDefault();

        this._toggleOnInteraction();
      }
    }
    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */

  }, {
    key: "_isSorted",
    value: function _isSorted() {
      return this._sort.active == this.id && (this._sort.direction === 'asc' || this._sort.direction === 'desc');
    }
    /** Returns the animation state for the arrow direction (indicator and pointers). */

  }, {
    key: "_getArrowDirectionState",
    value: function _getArrowDirectionState() {
      return "".concat(this._isSorted() ? 'active-' : '').concat(this._arrowDirection);
    }
    /** Returns the arrow position state (opacity, translation). */

  }, {
    key: "_getArrowViewState",
    value: function _getArrowViewState() {
      var fromState = this._viewState.fromState;
      return (fromState ? "".concat(fromState, "-to-") : '') + this._viewState.toState;
    }
    /**
     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be
     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently
     * active sorted direction. The reason this is updated through a function is because the direction
     * should only be changed at specific times - when deactivated but the hint is displayed and when
     * the sort is active and the direction changes. Otherwise the arrow's direction should linger
     * in cases such as the sort becoming deactivated but we want to animate the arrow away while
     * preserving its direction, even though the next sort direction is actually different and should
     * only be changed once the arrow displays again (hint or activation).
     */

  }, {
    key: "_updateArrowDirection",
    value: function _updateArrowDirection() {
      this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;
    }
  }, {
    key: "_isDisabled",
    value: function _isDisabled() {
      return this._sort.disabled || this.disabled;
    }
    /**
     * Gets the aria-sort attribute that should be applied to this sort header. If this header
     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec
     * says that the aria-sort property should only be present on one header at a time, so removing
     * ensures this is true.
     */

  }, {
    key: "_getAriaSortAttribute",
    value: function _getAriaSortAttribute() {
      if (!this._isSorted()) {
        return 'none';
      }

      return this._sort.direction == 'asc' ? 'ascending' : 'descending';
    }
    /** Whether the arrow inside the sort header should be rendered. */

  }, {
    key: "_renderArrow",
    value: function _renderArrow() {
      return !this._isDisabled() || this._isSorted();
    }
  }]);

  return MatSortHeader;
}(_MatSortHeaderMixinBase);

MatSortHeader.ɵfac = function MatSortHeader_Factory(t) {
  return new (t || MatSortHeader)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MatSortHeaderIntl), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](MatSort, 8), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"]('MAT_SORT_HEADER_COLUMN_DEF', 8), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_4__["ElementRef"]));
};

MatSortHeader.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineComponent"]({
  type: MatSortHeader,
  selectors: [["", "mat-sort-header", ""]],
  hostAttrs: [1, "mat-sort-header"],
  hostVars: 3,
  hostBindings: function MatSortHeader_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵlistener"]("click", function MatSortHeader_click_HostBindingHandler() {
        return ctx._handleClick();
      })("keydown", function MatSortHeader_keydown_HostBindingHandler($event) {
        return ctx._handleKeydown($event);
      })("mouseenter", function MatSortHeader_mouseenter_HostBindingHandler() {
        return ctx._setIndicatorHintVisible(true);
      })("mouseleave", function MatSortHeader_mouseleave_HostBindingHandler() {
        return ctx._setIndicatorHintVisible(false);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵattribute"]("aria-sort", ctx._getAriaSortAttribute());
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassProp"]("mat-sort-header-disabled", ctx._isDisabled());
    }
  },
  inputs: {
    disabled: "disabled",
    arrowPosition: "arrowPosition",
    disableClear: "disableClear",
    id: ["mat-sort-header", "id"],
    start: "start"
  },
  exportAs: ["matSortHeader"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵInheritDefinitionFeature"]],
  attrs: _c0,
  ngContentSelectors: _c1,
  decls: 4,
  vars: 6,
  consts: [["role", "button", 1, "mat-sort-header-container", "mat-focus-indicator"], [1, "mat-sort-header-content"], ["class", "mat-sort-header-arrow", 4, "ngIf"], [1, "mat-sort-header-arrow"], [1, "mat-sort-header-stem"], [1, "mat-sort-header-indicator"], [1, "mat-sort-header-pointer-left"], [1, "mat-sort-header-pointer-right"], [1, "mat-sort-header-pointer-middle"]],
  template: function MatSortHeader_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementStart"](1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵtemplate"](3, MatSortHeader_div_3_Template, 6, 6, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵclassProp"]("mat-sort-header-sorted", ctx._isSorted())("mat-sort-header-position-before", ctx.arrowPosition == "before");
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵattribute"]("tabindex", ctx._isDisabled() ? null : 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵproperty"]("ngIf", ctx._renderArrow());
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"]],
  styles: [".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\n"],
  encapsulation: 2,
  data: {
    animation: [matSortAnimations.indicator, matSortAnimations.leftPointer, matSortAnimations.rightPointer, matSortAnimations.arrowOpacity, matSortAnimations.arrowPosition, matSortAnimations.allowChildren]
  },
  changeDetection: 0
});

MatSortHeader.ctorParameters = function () {
  return [{
    type: MatSortHeaderIntl
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"]
  }, {
    type: MatSort,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
      args: ['MAT_SORT_HEADER_COLUMN_DEF']
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
    }]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ElementRef"]
  }];
};

MatSortHeader.propDecorators = {
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
    args: ['mat-sort-header']
  }],
  arrowPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  start: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }],
  disableClear: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MatSortHeader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Component"],
    args: [{
      selector: '[mat-sort-header]',
      exportAs: 'matSortHeader',
      template: "<!--\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\n  will be read out as the user is navigating the table's cell (see #13012).\n\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\n-->\n<div class=\"mat-sort-header-container mat-focus-indicator\"\n     [class.mat-sort-header-sorted]=\"_isSorted()\"\n     [class.mat-sort-header-position-before]=\"arrowPosition == 'before'\"\n     [attr.tabindex]=\"_isDisabled() ? null : 0\"\n     role=\"button\">\n\n  <!--\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\n  -->\n  <div class=\"mat-sort-header-content\">\n    <ng-content></ng-content>\n  </div>\n\n  <!-- Disable animations while a current animation is running -->\n  <div class=\"mat-sort-header-arrow\"\n       *ngIf=\"_renderArrow()\"\n       [@arrowOpacity]=\"_getArrowViewState()\"\n       [@arrowPosition]=\"_getArrowViewState()\"\n       [@allowChildren]=\"_getArrowDirectionState()\"\n       (@arrowPosition.start)=\"_disableViewStateAnimation = true\"\n       (@arrowPosition.done)=\"_disableViewStateAnimation = false\">\n    <div class=\"mat-sort-header-stem\"></div>\n    <div class=\"mat-sort-header-indicator\" [@indicator]=\"_getArrowDirectionState()\">\n      <div class=\"mat-sort-header-pointer-left\" [@leftPointer]=\"_getArrowDirectionState()\"></div>\n      <div class=\"mat-sort-header-pointer-right\" [@rightPointer]=\"_getArrowDirectionState()\"></div>\n      <div class=\"mat-sort-header-pointer-middle\"></div>\n    </div>\n  </div>\n</div>\n",
      host: {
        'class': 'mat-sort-header',
        '(click)': '_handleClick()',
        '(keydown)': '_handleKeydown($event)',
        '(mouseenter)': '_setIndicatorHintVisible(true)',
        '(mouseleave)': '_setIndicatorHintVisible(false)',
        '[attr.aria-sort]': '_getAriaSortAttribute()',
        '[class.mat-sort-header-disabled]': '_isDisabled()'
      },
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectionStrategy"].OnPush,
      inputs: ['disabled'],
      animations: [matSortAnimations.indicator, matSortAnimations.leftPointer, matSortAnimations.rightPointer, matSortAnimations.arrowOpacity, matSortAnimations.arrowPosition, matSortAnimations.allowChildren],
      styles: [".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\n"]
    }]
  }], function () {
    return [{
      type: MatSortHeaderIntl
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ChangeDetectorRef"]
    }, {
      type: MatSort,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Inject"],
        args: ['MAT_SORT_HEADER_COLUMN_DEF']
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Optional"]
      }]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_7__["FocusMonitor"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["ElementRef"]
    }];
  }, {
    arrowPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    disableClear: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"],
      args: ['mat-sort-header']
    }],
    start: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatSortModule = function MatSortModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSortModule);
};

MatSortModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({
  type: MatSortModule
});
MatSortModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({
  factory: function MatSortModule_Factory(t) {
    return new (t || MatSortModule)();
  },
  providers: [MAT_SORT_HEADER_INTL_PROVIDER],
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](MatSortModule, {
    declarations: function declarations() {
      return [MatSort, MatSortHeader];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"]];
    },
    exports: function exports() {
      return [MatSort, MatSortHeader];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵsetClassMetadata"](MatSortModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_4__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"]],
      exports: [MatSort, MatSortHeader],
      declarations: [MatSort, MatSortHeader],
      providers: [MAT_SORT_HEADER_INTL_PROVIDER]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "EXQx":
/*!*****************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/HeaderNames.js ***!
  \*****************************************************************/
/*! exports provided: HeaderNames */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderNames", function() { return HeaderNames; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");

// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
var HeaderNames = function HeaderNames() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, HeaderNames);
};
HeaderNames.Authorization = "Authorization";
HeaderNames.Cookie = "Cookie";

/***/ }),

/***/ "F11F":
/*!*****************************************************************************************!*\
  !*** ./src/app/core/components/admin/operationclaim/services/OperationClaim.service.ts ***!
  \*****************************************************************************************/
/*! exports provided: OperationClaimService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperationClaimService", function() { return OperationClaimService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var OperationClaimService = /** @class */ (function () {
    function OperationClaimService(_httpClient) {
        this._httpClient = _httpClient;
    }
    OperationClaimService.prototype.getOperationClaimList = function () {
        return this._httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/operation-claims/');
    };
    OperationClaimService.prototype.getOperationClaim = function (id) {
        return this._httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/operation-claims/" + id));
    };
    OperationClaimService.prototype.updateOperationClaim = function (operationClaim) {
        return this._httpClient.put(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/operation-claims/", operationClaim, { responseType: 'text' });
    };
    OperationClaimService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    OperationClaimService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], OperationClaimService);
    return OperationClaimService;
}());



/***/ }),

/***/ "FVxW":
/*!************************************************************************!*\
  !*** ./src/app/core/components/admin/language/language.component.scss ***!
  \************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJsYW5ndWFnZS5jb21wb25lbnQuc2NzcyJ9 */");

/***/ }),

/***/ "GkwA":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/app/dashboard/dashboard.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"welcome-container\">\r\n      <div class=\"welcome-content text-center\">\r\n        <img src=\"../../../../../assets/img/analogo.jpg\" alt=\"Logo\" class=\"welcome-logo\">\r\n        <h1 class=\"mt-4\">Misafir Takip Sistemine Hoş Geldiniz</h1>\r\n        <p class=\"welcome-text\">\r\n          Bu platform üzerinden Misafir Takip Sistemi işlemleri gerçekleştirebilirsiniz.\r\n        </p>\r\n        <div class=\"quick-links mt-5\">\r\n          <div class=\"row justify-content-center\">\r\n            <!-- Admin Kullanıcıları İçin -->\r\n            <div class=\"col-md-4 mb-4\" *ngIf=\"checkClaim('GetUsersQuery')\">\r\n              <div class=\"quick-link-card\">\r\n                <mat-icon class=\"quick-link-icon\">people</mat-icon>\r\n                <h3>Ziyaretçi Yönetimi</h3>\r\n                <p>Ziyaretçi kayıtlarını görüntüleyin ve yönetin</p>\r\n                <button mat-raised-button color=\"primary\" class=\"mt-3\" routerLink=\"/visit\">\r\n                  <mat-icon>arrow_forward</mat-icon> Ziyaretçileri Görüntüle\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Güvenlik Personeli İçin -->\r\n            <div class=\"col-md-4 mb-4\" *ngIf=\"checkClaim('GetUsersQuery')\">\r\n              <div class=\"quick-link-card\">\r\n                <mat-icon class=\"quick-link-icon\">security</mat-icon>\r\n                <h3>Güvenlik İşlemleri</h3>\r\n                <p>Güvenlik raporlarını ve işlemlerini takip edin</p>\r\n                <button mat-raised-button color=\"primary\" class=\"mt-3\" routerLink=\"/security-transactions\">\r\n                  <mat-icon>arrow_forward</mat-icon> Güvenlik İşlemleri\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Raporlama Yetkisi Olanlar İçin -->\r\n            <div class=\"col-md-4 mb-4\" *ngIf=\"checkClaim('GetUsersQuery')\">\r\n              <div class=\"quick-link-card\">\r\n                <mat-icon class=\"quick-link-icon\">assessment</mat-icon>\r\n                <h3>Raporlama</h3>\r\n                <p>Detaylı raporları görüntüleyin ve analiz edin</p>\r\n                <button mat-raised-button color=\"primary\" class=\"mt-3\" routerLink=\"/banu-logs\">\r\n                  <mat-icon>arrow_forward</mat-icon> Raporları Görüntüle\r\n                </button>\r\n              </div>\r\n            </div>\r\n\r\n            <!-- Ziyaretçi Talebi Oluşturma -->\r\n            <div class=\"col-md-4 mb-4\" *ngIf=\"checkClaim('GetUsersQuery')\">\r\n              <div class=\"quick-link-card\">\r\n                <mat-icon class=\"quick-link-icon\">add_circle</mat-icon>\r\n                <h3>Ziyaret Talebi</h3>\r\n                <p>Yeni bir ziyaret talebi oluşturun</p>\r\n                <button mat-raised-button color=\"primary\" class=\"mt-3\" routerLink=\"/visit-add\">\r\n                  <mat-icon>arrow_forward</mat-icon> Talep Oluştur\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "Gu9m":
/*!**********************************************!*\
  !*** ./src/app/core/guards/login-routing.ts ***!
  \**********************************************/
/*! exports provided: LoginRouting */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginRouting", function() { return LoginRouting; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ "tyNb");
/* harmony import */ var _components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/admin/login/Services/auth.service */ "a9M/");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};



var LoginRouting = /** @class */ (function () {
    function LoginRouting(router, authService) {
        this.router = router;
        this.authService = authService;
    }
    LoginRouting.prototype.canActivate = function (route, state) {
        return this.checkClaimForRoute(state.url);
    };
    LoginRouting.prototype.checkClaimForRoute = function (routePath) {
        return __awaiter(this, void 0, void 0, function () {
            return __generator(this, function (_a) {
                if (this.authService.loggedIn()) {
                    this.router.navigate(["dashboard"]);
                    return [2 /*return*/, true];
                }
                return [2 /*return*/, true];
            });
        });
    };
    LoginRouting.ctorParameters = function () { return [
        { type: _angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"] },
        { type: _components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"] }
    ]; };
    LoginRouting = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])(),
        __metadata("design:paramtypes", [_angular_router__WEBPACK_IMPORTED_MODULE_1__["Router"], _components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_2__["AuthService"]])
    ], LoginRouting);
    return LoginRouting;
}());



/***/ }),

/***/ "HC1W":
/*!****************************************************************!*\
  !*** ./src/app/core/components/admin/user/user.component.scss ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (":host ::ng-deep .multiselect-dropdown .dropdown-btn {\n  display: inline-block;\n  border: 1px solid #adadad;\n  width: 100%;\n  padding: 6px 12px;\n  margin-bottom: 0;\n  font-size: 12px;\n  font-weight: 400;\n  line-height: 1.1;\n  text-align: left;\n  vertical-align: middle;\n  cursor: pointer;\n  background-image: none;\n  border-radius: 4px;\n}\n\n:host ::ng-deep .multiselect-dropdown .dropdown-btn .selected-item {\n  background: #9c27b0 !important;\n}\n\n:host ::ng-deep .multiselect-item-checkbox > input[type=checkbox]:checked + div:before {\n  background: #9c27b0 !important;\n}\n\n.no-sort::after {\n  display: none !important;\n  background-image: url() !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHVzZXIuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFFSSxxQkFBQTtFQUNBLHlCQUFBO0VBQ0EsV0FBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQkFBQTtFQUNBLGdCQUFBO0VBQ0Esc0JBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7RUFDQSxrQkFBQTtBQUFKOztBQUtBO0VBRUksOEJBQUE7QUFISjs7QUFNQTtFQUNJLDhCQUFBO0FBSEo7O0FBTUE7RUFDRSx3QkFBQTtFQUNBLGtDQUFBO0FBSEYiLCJmaWxlIjoidXNlci5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IDo6bmctZGVlcCAubXVsdGlzZWxlY3QtZHJvcGRvd24gLmRyb3Bkb3duLWJ0biBcclxue1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2FkYWRhZDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgcGFkZGluZzogNnB4IDEycHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgZm9udC1zaXplOiAxMnB4O1xyXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjE7XHJcbiAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA0cHg7XHJcbiAgIFxyXG4gICAgXHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAubXVsdGlzZWxlY3QtZHJvcGRvd24gLmRyb3Bkb3duLWJ0biAuc2VsZWN0ZWQtaXRlbVxyXG57XHJcbiAgICBiYWNrZ3JvdW5kOiAjOWMyN2IwICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbjpob3N0IDo6bmctZGVlcCAubXVsdGlzZWxlY3QtaXRlbS1jaGVja2JveCA+aW5wdXRbdHlwZT1jaGVja2JveF06Y2hlY2tlZCArIGRpdjpiZWZvcmUge1xyXG4gICAgYmFja2dyb3VuZDogIzljMjdiMCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubm8tc29ydDo6YWZ0ZXIge1xyXG4gIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDtcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoKSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG5cclxuIl19 */");

/***/ }),

/***/ "HM0i":
/*!***********************************************************************!*\
  !*** ./src/app/core/components/app/dashboard/dashboard.component.css ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".welcome-container {\r\n  padding: 40px 20px;\r\n  min-height: calc(100vh - 200px);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.welcome-content {\r\n  max-width: 1200px;\r\n  margin: 0 auto;\r\n}\r\n\r\n.welcome-logo {\r\n  width: 180px;\r\n  height: 180px;\r\n  -o-object-fit: contain;\r\n     object-fit: contain;\r\n  border-radius: 50%;\r\n  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\r\n  background: white;\r\n  padding: 20px;\r\n}\r\n\r\nh1 {\r\n  color: #333;\r\n  font-size: 2.5rem;\r\n  margin-bottom: 1.5rem;\r\n  font-weight: 600;\r\n}\r\n\r\n.welcome-text {\r\n  color: #666;\r\n  font-size: 1.2rem;\r\n  max-width: 800px;\r\n  margin: 0 auto 2rem;\r\n  line-height: 1.6;\r\n}\r\n\r\n.quick-links {\r\n  margin-top: 3rem;\r\n}\r\n\r\n.quick-link-card {\r\n  background: white;\r\n  border-radius: 12px;\r\n  padding: 30px 20px;\r\n  margin: 15px;\r\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\r\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n}\r\n\r\n.quick-link-card:hover {\r\n  transform: translateY(-5px);\r\n  box-shadow: 0 6px 25px rgba(0, 0, 0, 0.1);\r\n}\r\n\r\n.quick-link-icon {\r\n  font-size: 40px;\r\n  width: 40px;\r\n  height: 40px;\r\n  color: #e91e63;\r\n  margin-bottom: 15px;\r\n}\r\n\r\n.quick-link-card h3 {\r\n  color: #333;\r\n  font-size: 1.4rem;\r\n  margin-bottom: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.quick-link-card p {\r\n  color: #666;\r\n  font-size: 1rem;\r\n  line-height: 1.5;\r\n  margin-bottom: 20px;\r\n  flex-grow: 1;\r\n}\r\n\r\nbutton {\r\n  width: 100%;\r\n  max-width: 250px;\r\n}\r\n\r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0Usa0JBQWtCO0VBQ2xCLCtCQUErQjtFQUMvQixhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsWUFBWTtFQUNaLGFBQWE7RUFDYixzQkFBbUI7S0FBbkIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQix5Q0FBeUM7RUFDekMsaUJBQWlCO0VBQ2pCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIscUJBQXFCO0VBQ3JCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsbUJBQW1CO0VBQ25CLGtCQUFrQjtFQUNsQixZQUFZO0VBQ1osMENBQTBDO0VBQzFDLHFEQUFxRDtFQUNyRCxZQUFZO0VBQ1osYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLHlDQUF5QztBQUMzQzs7QUFFQTtFQUNFLGVBQWU7RUFDZixXQUFXO0VBQ1gsWUFBWTtFQUNaLGNBQWM7RUFDZCxtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsaUJBQWlCO0VBQ2pCLG1CQUFtQjtFQUNuQixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJkYXNoYm9hcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53ZWxjb21lLWNvbnRhaW5lciB7XHJcbiAgcGFkZGluZzogNDBweCAyMHB4O1xyXG4gIG1pbi1oZWlnaHQ6IGNhbGMoMTAwdmggLSAyMDBweCk7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4ud2VsY29tZS1jb250ZW50IHtcclxuICBtYXgtd2lkdGg6IDEyMDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLndlbGNvbWUtbG9nbyB7XHJcbiAgd2lkdGg6IDE4MHB4O1xyXG4gIGhlaWdodDogMTgwcHg7XHJcbiAgb2JqZWN0LWZpdDogY29udGFpbjtcclxuICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggMjBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgYmFja2dyb3VuZDogd2hpdGU7XHJcbiAgcGFkZGluZzogMjBweDtcclxufVxyXG5cclxuaDEge1xyXG4gIGNvbG9yOiAjMzMzO1xyXG4gIGZvbnQtc2l6ZTogMi41cmVtO1xyXG4gIG1hcmdpbi1ib3R0b206IDEuNXJlbTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4ud2VsY29tZS10ZXh0IHtcclxuICBjb2xvcjogIzY2NjtcclxuICBmb250LXNpemU6IDEuMnJlbTtcclxuICBtYXgtd2lkdGg6IDgwMHB4O1xyXG4gIG1hcmdpbjogMCBhdXRvIDJyZW07XHJcbiAgbGluZS1oZWlnaHQ6IDEuNjtcclxufVxyXG5cclxuLnF1aWNrLWxpbmtzIHtcclxuICBtYXJnaW4tdG9wOiAzcmVtO1xyXG59XHJcblxyXG4ucXVpY2stbGluay1jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcclxuICBib3JkZXItcmFkaXVzOiAxMnB4O1xyXG4gIHBhZGRpbmc6IDMwcHggMjBweDtcclxuICBtYXJnaW46IDE1cHg7XHJcbiAgYm94LXNoYWRvdzogMCA0cHggMTVweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xyXG4gIGhlaWdodDogMTAwJTtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbi5xdWljay1saW5rLWNhcmQ6aG92ZXIge1xyXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcclxuICBib3gtc2hhZG93OiAwIDZweCAyNXB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxufVxyXG5cclxuLnF1aWNrLWxpbmstaWNvbiB7XHJcbiAgZm9udC1zaXplOiA0MHB4O1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGhlaWdodDogNDBweDtcclxuICBjb2xvcjogI2U5MWU2MztcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG59XHJcblxyXG4ucXVpY2stbGluay1jYXJkIGgzIHtcclxuICBjb2xvcjogIzMzMztcclxuICBmb250LXNpemU6IDEuNHJlbTtcclxuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbn1cclxuXHJcbi5xdWljay1saW5rLWNhcmQgcCB7XHJcbiAgY29sb3I6ICM2NjY7XHJcbiAgZm9udC1zaXplOiAxcmVtO1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICBmbGV4LWdyb3c6IDE7XHJcbn1cclxuXHJcbmJ1dHRvbiB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgbWF4LXdpZHRoOiAyNTBweDtcclxufVxyXG4iXX0= */");

/***/ }),

/***/ "HaE+":
/*!*********************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _asyncToGenerator; });
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),

/***/ "HfsZ":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/visit/visit.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 style=\"padding-bottom: 30px;\" class=\"card-title\">{{'VisitList'| translate}}</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"row\" *ngIf=\"visitList\">\r\n                <div style=\"font-weight: bold;\" class=\"col-md-4\">\r\n                  {{ totalItemCount }} kayıt arasından {{ visitList.length }} kayıt listeleniyor\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <div class=\"pagination-container\" *ngIf=\"totalPages > 0\">\r\n                    <nav aria-label=\"Page navigation\">\r\n                      <ul class=\"pagination\">\r\n                        <!-- Önceki Sayfa Butonu -->\r\n                        <li class=\"page-item\" [class.disabled]=\"page === 1\">\r\n                          <a class=\"page-link\" (click)=\"onPageChange(page - 1)\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                          </a>\r\n                        </li>\r\n                \r\n                        <!-- Sayfa Numaraları ve \"...\" İşaretleri -->\r\n                        <li class=\"page-item\" *ngFor=\"let p of getPagination()\" [class.active]=\"p === page\">\r\n                          <a class=\"page-link\" *ngIf=\"p !== -1\" (click)=\"onPageChange(p)\">{{ p }}</a>\r\n                          <span class=\"page-link dots\" *ngIf=\"p === -1\">...</span>\r\n                        </li>\r\n                \r\n                        <!-- Sonraki Sayfa Butonu -->\r\n                        <li class=\"page-item\" [class.disabled]=\"page === totalPages\">\r\n                          <a class=\"page-link\" (click)=\"onPageChange(page + 1)\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div class=\"col-md-4\">\r\n                  <mat-form-field class=\"float-right\">\r\n                    <mat-label>Filter</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\t\t\t\t\t\t\t<table mat-table [dataSource]=\"dataSource\" matSort class=\"w-100\">\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n                 \r\n\t\r\n                   <ng-container matColumnDef=\"createdDate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.createdDate | date:'dd.MM.yyyy HH:mm'}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"personnelId\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'PersonnelId'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.personnelId}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"visitorFullName\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'VisitorFullName'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\" class=\"font-weight-bold\">{{element.visitorFullName}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"visitorLicensePlate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'VisitorLicensePlate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <span *ngIf=\"element.vehicleEntry\" class=\"badge badge-info\">\r\n                         {{element.visitorLicensePlate}}\r\n                       </span>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"vehicleEntry\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VehicleEntry'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\"> \r\n                        <mat-checkbox [checked]=\"element.vehicleEntry\" [disabled]=\"true\"></mat-checkbox>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"multiPersonVisit\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'MultiPersonVisit'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <mat-icon *ngIf=\"element.multiPersonVisit\" class=\"text-info\">group</mat-icon>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"isConfirm\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'IsConfirm'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <mat-icon [class.text-success]=\"element.isConfirm\" [class.text-danger]=\"!element.isConfirm\">\r\n                         {{element.isConfirm ? 'check_circle' : 'cancel'}}\r\n                       </mat-icon>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"isExit\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'IsExit'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <mat-icon [class.text-success]=\"element.isExit\" [class.text-warning]=\"!element.isExit\">\r\n                         {{element.isExit ? 'exit_to_app' : 'schedule'}}\r\n                       </mat-icon>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"status\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'Status'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <mat-chip-list>\r\n                         <mat-chip [color]=\"element.status ? 'primary' : 'warn'\" selected>\r\n                           {{element.status ? 'Aktif' : 'Pasif' | translate}}\r\n                         </mat-chip>\r\n                       </mat-chip-list>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                  \r\n\t\r\n                   <ng-container matColumnDef=\"isReject\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'IsReject'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <span *ngIf=\"element.isReject\" class=\"badge badge-danger\">\r\n                         {{element.reasonForRejection}}\r\n                       </span>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"approvalDate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'ApprovalDate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.approvalDate}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"exitDate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'ExitDate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <span *ngIf=\"element.exitDate\" class=\"text-danger\">\r\n                         {{element.exitDate | date:'dd.MM.yyyy HH:mm'}}\r\n                       </span>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"visitStartDate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'VisitStartDate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <span class=\"text-primary\">\r\n                         {{element.visitStartDate | date:'dd.MM.yyyy HH:mm'}}\r\n                       </span>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"visitEndDate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"bg-light\">{{'VisitEndDate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">\r\n                       <span class=\"text-primary\">\r\n                         {{element.visitEndDate | date:'dd.MM.yyyy HH:mm'}}\r\n                       </span>\r\n                     </td>\r\n\t\t\t\t   </ng-container>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\" class=\"bg-light\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" \r\n                    [class.bg-warning-light]=\"row.isReject\"\r\n                    [class.bg-success-light]=\"row.isConfirm && !row.isExit\"\r\n                    [class.bg-info-light]=\"row.isExit\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow>\r\n                  <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumns.length\">\r\n                    {{'NoRecordsFound' |translate}} \"{{input.value}}\"\r\n                  </td>\r\n                </tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\" [pageSize]=\"pageSize\"></mat-paginator>\r\n\t\t\t\t\t\t\t</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon = \"error\" [showCancelButton]=\"true\"\r\n\t[confirmButtonText] = \"'OK'\"[cancelButtonText] = \"'Cancel'\" >\r\n</swal>\r\n\r\n");

/***/ }),

/***/ "Id6e":
/*!*******************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/XhrHttpClient.js ***!
  \*******************************************************************/
/*! exports provided: XhrHttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XhrHttpClient", function() { return XhrHttpClient; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Errors */ "9BRb");
/* harmony import */ var _HttpClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HttpClient */ "Rlqr");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Utils */ "ftFU");




// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.




var XhrHttpClient = /*#__PURE__*/function (_HttpClient) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(XhrHttpClient, _HttpClient);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(XhrHttpClient);

  function XhrHttpClient(logger) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, XhrHttpClient);

    _this = _super.call(this);
    _this._logger = logger;
    return _this;
  }
  /** @inheritDoc */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(XhrHttpClient, [{
    key: "send",
    value: function send(request) {
      var _this2 = this;

      // Check that abort was not signaled before calling send
      if (request.abortSignal && request.abortSignal.aborted) {
        return Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_4__["AbortError"]());
      }

      if (!request.method) {
        return Promise.reject(new Error("No method defined."));
      }

      if (!request.url) {
        return Promise.reject(new Error("No url defined."));
      }

      return new Promise(function (resolve, reject) {
        var xhr = new XMLHttpRequest();
        xhr.open(request.method, request.url, true);
        xhr.withCredentials = request.withCredentials === undefined ? true : request.withCredentials;
        xhr.setRequestHeader("X-Requested-With", "XMLHttpRequest");

        if (request.content === "") {
          request.content = undefined;
        }

        if (request.content) {
          // Explicitly setting the Content-Type header for React Native on Android platform.
          if (Object(_Utils__WEBPACK_IMPORTED_MODULE_7__["isArrayBuffer"])(request.content)) {
            xhr.setRequestHeader("Content-Type", "application/octet-stream");
          } else {
            xhr.setRequestHeader("Content-Type", "text/plain;charset=UTF-8");
          }
        }

        var headers = request.headers;

        if (headers) {
          Object.keys(headers).forEach(function (header) {
            xhr.setRequestHeader(header, headers[header]);
          });
        }

        if (request.responseType) {
          xhr.responseType = request.responseType;
        }

        if (request.abortSignal) {
          request.abortSignal.onabort = function () {
            xhr.abort();
            reject(new _Errors__WEBPACK_IMPORTED_MODULE_4__["AbortError"]());
          };
        }

        if (request.timeout) {
          xhr.timeout = request.timeout;
        }

        xhr.onload = function () {
          if (request.abortSignal) {
            request.abortSignal.onabort = null;
          }

          if (xhr.status >= 200 && xhr.status < 300) {
            resolve(new _HttpClient__WEBPACK_IMPORTED_MODULE_5__["HttpResponse"](xhr.status, xhr.statusText, xhr.response || xhr.responseText));
          } else {
            reject(new _Errors__WEBPACK_IMPORTED_MODULE_4__["HttpError"](xhr.response || xhr.responseText || xhr.statusText, xhr.status));
          }
        };

        xhr.onerror = function () {
          _this2._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Warning, "Error from HTTP request. ".concat(xhr.status, ": ").concat(xhr.statusText, "."));

          reject(new _Errors__WEBPACK_IMPORTED_MODULE_4__["HttpError"](xhr.statusText, xhr.status));
        };

        xhr.ontimeout = function () {
          _this2._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Warning, "Timeout from HTTP request.");

          reject(new _Errors__WEBPACK_IMPORTED_MODULE_4__["TimeoutError"]());
        };

        xhr.send(request.content);
      });
    }
  }]);

  return XhrHttpClient;
}(_HttpClient__WEBPACK_IMPORTED_MODULE_5__["HttpClient"]);

/***/ }),

/***/ "JDzB":
/*!**************************************************************************************************!*\
  !*** ./src/app/core/components/screens/security-transactions/security-transactions.component.ts ***!
  \**************************************************************************************************/
/*! exports provided: SecurityTransactionsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SecurityTransactionsComponent", function() { return SecurityTransactionsComponent; });
/* harmony import */ var _raw_loader_security_transactions_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./security-transactions.component.html */ "TAJw");
/* harmony import */ var _security_transactions_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./security-transactions.component.css */ "CG6G");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/animations */ "R0Ic");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/snack-bar */ "dNgK");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var _admin_user_Services_signalr_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../admin/user/Services/signalr.service */ "wNif");
/* harmony import */ var _admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../admin/visit/services/visit.service */ "vCDI");
/* harmony import */ var _all_visitors_dialog_all_visitors_dialog_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./all-visitors-dialog/all-visitors-dialog.component */ "CXOy");
/* harmony import */ var _reject_dialog_reject_dialog_component__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./reject-dialog/reject-dialog.component */ "fx42");
var __assign = (undefined && undefined.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __spreadArrays = (undefined && undefined.__spreadArrays) || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;
    for (var r = Array(s), k = 0, i = 0; i < il; i++)
        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)
            r[k] = a[j];
    return r;
};














var SecurityTransactionsComponent = /** @class */ (function () {
    function SecurityTransactionsComponent(snackBar, dialog, visitService, signalRService, alertifyService) {
        this.snackBar = snackBar;
        this.dialog = dialog;
        this.visitService = visitService;
        this.signalRService = signalRService;
        this.alertifyService = alertifyService;
        this.displayedColumns = ['visitors', 'licensePlate', 'entryDate', 'exitDate', 'actions'];
        this.approvedColumns = ['visitors', 'licensePlate', 'entryDate', 'exitDate'];
        this.rejectedColumns = ['rejectReason', 'visitors', 'licensePlate', 'entryDate', 'exitDate'];
        this.allmergeData = [];
        this.selectedTab = 'today';
        this.pendingData = [];
        this.filteredPendingData = [];
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"]([]);
        this.approvedDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"]([]);
        this.rejectedDataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"]([]);
    }
    SecurityTransactionsComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.loadVisits(this.getSelectedDateText());
        // SignalR bağlantısını başlat
        this.signalRService.startConnection();
        // 3 saniye sonra bağlantı durumunu kontrol et
        setTimeout(function () {
            var _a;
            if (!((_a = _this.signalRService.hubConnection) === null || _a === void 0 ? void 0 : _a.state)) {
                console.error('SignalR connection failed');
                _this.alertifyService.error('Gerçek zamanlı bildirimler için bağlantı kurulamadı. Sayfayı yenileyin veya daha sonra tekrar deneyin.');
            }
            else {
                _this.setupVisitAddedListener();
            }
        }, 3000);
    };
    SecurityTransactionsComponent.prototype.setupVisitAddedListener = function () {
        var _this = this;
        this.signalRService.addVisitAddedListener(function (visit) {
            if (!visit)
                return;
            visit.animated = true;
            _this.pendingData.unshift(visit);
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](_this.pendingData);
            _this.configDataTable();
            setTimeout(function () {
                visit.animated = false;
            }, 20000);
            _this.alertifyService.success(visit.visit.visitorFullName + " ad\u0131na yeni ziyaret kayd\u0131 var!");
        });
    };
    SecurityTransactionsComponent.prototype.ngOnDestroy = function () {
        if (this.signalRService.hubConnection) {
            this.signalRService.hubConnection.off("VisitAdded");
            this.signalRService.stopConnection();
        }
    };
    SecurityTransactionsComponent.prototype.loadVisits = function (date) {
        var _this = this;
        this.visitService.getVisitMergeMultiVisitList(date).subscribe({
            next: function (data) {
                _this.pendingData = data.filter(function (v) { return !v.visit.isConfirm && !v.visit.isReject; });
                var approvedData = data.filter(function (v) { return v.visit.isConfirm; });
                var rejectedData = data.filter(function (v) { return v.visit.isReject; });
                _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](_this.pendingData);
                _this.approvedDataSource.data = approvedData;
                _this.rejectedDataSource.data = rejectedData;
                _this.configDataTable();
            },
            error: function (error) {
                console.error('Ziyaret verileri yüklenirken hata oluştu:', error);
                _this.snackBar.open('Gösterilecek veri bulunamadı', 'Kapat', {
                    duration: 3000,
                    panelClass: ['error-snackbar']
                });
            }
        });
    };
    SecurityTransactionsComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
        this.approvedDataSource.paginator = this.approvedPaginator;
        this.approvedDataSource.sort = this.approvedSort;
        this.rejectedDataSource.paginator = this.rejectedPaginator;
        this.rejectedDataSource.sort = this.rejectedSort;
    };
    SecurityTransactionsComponent.prototype.approveVisit = function (row) {
        var _this = this;
        this.visitService.confirmVisit(row.visit.id).subscribe(function (res) {
            _this.snackBar.open(res, 'Kapat', {
                duration: 3000,
                panelClass: ['success-snackbar']
            });
            _this.loadVisits(_this.getSelectedDateText());
        });
    };
    SecurityTransactionsComponent.prototype.rejectVisit = function (mergeVisit) {
        var _this = this;
        var dialogRef = this.dialog.open(_reject_dialog_reject_dialog_component__WEBPACK_IMPORTED_MODULE_13__["RejectDialogComponent"], {
            width: '500px',
            data: {
                visit: mergeVisit.visit,
                multiVisiters: mergeVisit.multiVisiters
            }
        });
        dialogRef.afterClosed().subscribe(function (result) {
            if (result) {
                // API'ye red isteği gönder
                var visitToUpdate = __assign(__assign({}, mergeVisit.visit), { isReject: true, reasonForRejection: result.reason });
                _this.visitService.rejectVisit(mergeVisit.visit.id, result.reason).subscribe({
                    next: function () {
                        var visitorNames = __spreadArrays([
                            mergeVisit.visit.visitorFullName
                        ], (mergeVisit.multiVisiters || []).map(function (mv) { return mv.visitorFullName; })).join(', ');
                        var message = mergeVisit.visit.vehicleEntry ?
                            visitorNames + " (" + mergeVisit.visit.visitorLicensePlate + ") ziyareti reddedildi" :
                            visitorNames + " (Yaya) ziyareti reddedildi";
                        _this.snackBar.open(message, 'Kapat', {
                            duration: 3000,
                            panelClass: ['error-snackbar']
                        });
                        // Tabloları güncelle
                        _this.loadVisits(_this.getSelectedDateText());
                    },
                    error: function (error) {
                        console.error('Ziyaret reddetme hatası:', error);
                        _this.snackBar.open('Ziyaret reddedilirken bir hata oluştu', 'Kapat', {
                            duration: 3000,
                            panelClass: ['error-snackbar']
                        });
                    }
                });
            }
        });
    };
    SecurityTransactionsComponent.prototype.updateTables = function () {
        var allData = __spreadArrays(this.dataSource.data);
        /*this.approvedDataSource.data = allData.filter(visit => visit.visits === 'approved');
        this.rejectedDataSource.data = allData.filter(visit => visit === 'rejected');
       this.dataSource.data = allData.filter(visit => visit.status === 'pending');*/
        this.refreshDataSources();
    };
    SecurityTransactionsComponent.prototype.refreshDataSources = function () {
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
        if (this.dataSource.sort) {
            this.dataSource.sort.sortChange.emit();
        }
        if (this.approvedDataSource.paginator) {
            this.approvedDataSource.paginator.firstPage();
        }
        if (this.approvedDataSource.sort) {
            this.approvedDataSource.sort.sortChange.emit();
        }
        if (this.rejectedDataSource.paginator) {
            this.rejectedDataSource.paginator.firstPage();
        }
        if (this.rejectedDataSource.sort) {
            this.rejectedDataSource.sort.sortChange.emit();
        }
    };
    SecurityTransactionsComponent.prototype.applyFilter = function (event) {
        var _a;
        var target = event.target;
        if (!target) {
            console.error("Event target is not an input element.");
            return;
        }
        var filterValue = (_a = target.value) === null || _a === void 0 ? void 0 : _a.trim().toLowerCase();
        // Eğer filtre değeri boşsa, tüm veriyi geri yükle ve işlemi durdur
        if (!filterValue) {
            console.warn("Filter value is empty or not valid. Resetting to all data.");
            this.filteredPendingData = this.pendingData;
            this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.filteredPendingData);
            if (this.dataSource.paginator) {
                this.dataSource.paginator.firstPage();
            }
            return;
        }
        // pendingData'nın geçerli bir array olduğunu kontrol et
        if (!Array.isArray(this.pendingData)) {
            console.error("pendingData is not an array:", this.pendingData);
            return;
        }
        // Filtreleme işlemi
        this.filteredPendingData = this.pendingData.filter(function (v) {
            var _a, _b, _c, _d;
            return ((_b = (_a = v === null || v === void 0 ? void 0 : v.visit) === null || _a === void 0 ? void 0 : _a.visitorFullName) === null || _b === void 0 ? void 0 : _b.toLowerCase().includes(filterValue)) || ((_d = (_c = v === null || v === void 0 ? void 0 : v.visit) === null || _c === void 0 ? void 0 : _c.visitorLicensePlate) === null || _d === void 0 ? void 0 : _d.toLowerCase().includes(filterValue));
        });
        this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_8__["MatTableDataSource"](this.filteredPendingData);
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    SecurityTransactionsComponent.prototype.filterByDate = function (tab) {
        this.selectedTab = tab;
        this.loadVisits(this.getSelectedDateText());
    };
    SecurityTransactionsComponent.prototype.getSelectedDateText = function () {
        var today = new Date();
        switch (this.selectedTab) {
            case 'today':
                return "" + this.formatDate(today);
            case 'tomorrow': {
                var tomorrow = new Date();
                tomorrow.setDate(today.getDate() + 1);
                return "" + this.formatDate(tomorrow);
            }
            case 'twoDaysLater': {
                var twoDaysLater = new Date();
                twoDaysLater.setDate(today.getDate() + 2);
                return "" + this.formatDate(twoDaysLater);
            }
            default:
                return '';
        }
    };
    SecurityTransactionsComponent.prototype.formatDate = function (date) {
        var day = date.getDate() < 10 ? '0' + date.getDate() : date.getDate().toString();
        var month = (date.getMonth() + 1) < 10 ? '0' + (date.getMonth() + 1) : (date.getMonth() + 1).toString();
        var year = date.getFullYear();
        return day + "-" + month + "-" + year;
    };
    SecurityTransactionsComponent.prototype.getAllVisitorNames = function (row) {
        var _a, _b;
        var allVisitors = [];
        if ((_a = row.visit) === null || _a === void 0 ? void 0 : _a.visitorFullName) {
            allVisitors.push(row.visit.visitorFullName);
        }
        if (row.multiVisiters && row.multiVisiters.length > 2) {
            for (var index = 0; index < 2; index++) {
                allVisitors.push(row.multiVisiters[index].visitorFullName);
            }
            allVisitors.push("+" + (row.multiVisiters.length - 2));
        }
        else if (row.multiVisiters) {
            // İkiden az ziyaretçi varsa hepsini ekle
            allVisitors.push.apply(allVisitors, row.multiVisiters.map(function (mv) { return mv.visitorFullName; }));
        }
        // Toplam ziyaretçi sayısı: Ana ziyaretçi + multiVisiters
        var totalVisitors = (((_b = row.multiVisiters) === null || _b === void 0 ? void 0 : _b.length) || 0) + 1;
        return { visitorNames: allVisitors, totalVisitors: totalVisitors };
    };
    SecurityTransactionsComponent.prototype.showAllVisitors = function (row) {
        this.dialog.open(_all_visitors_dialog_all_visitors_dialog_component__WEBPACK_IMPORTED_MODULE_12__["AllVisitorsDialogComponent"], {
            width: '500px',
            data: row
        });
    };
    SecurityTransactionsComponent.ctorParameters = function () { return [
        { type: _angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"] },
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"] },
        { type: _admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_11__["VisitService"] },
        { type: _admin_user_Services_signalr_service__WEBPACK_IMPORTED_MODULE_10__["SignalRService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__["AlertifyService"] }
    ]; };
    SecurityTransactionsComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_7__["MatSort"],] }],
        approvedPaginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: ['approvedPaginator',] }],
        rejectedPaginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: ['rejectedPaginator',] }],
        approvedSort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: ['approvedSort',] }],
        rejectedSort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: ['rejectedSort',] }]
    };
    SecurityTransactionsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-security-transactions',
            template: _raw_loader_security_transactions_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            animations: [
                Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["trigger"])('tabAnimation', [
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["style"])({
                        transform: 'translateY(-100%)',
                        opacity: 0
                    })),
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["state"])('*', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["style"])({
                        transform: 'translateY(0)',
                        opacity: 1
                    })),
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["transition"])('void => *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["animate"])('300ms ease-out')),
                    Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_2__["animate"])('300ms ease-in'))
                ])
            ],
            styles: [_security_transactions_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_angular_material_snack_bar__WEBPACK_IMPORTED_MODULE_6__["MatSnackBar"],
            _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialog"],
            _admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_11__["VisitService"], _admin_user_Services_signalr_service__WEBPACK_IMPORTED_MODULE_10__["SignalRService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__["AlertifyService"]])
    ], SecurityTransactionsComponent);
    return SecurityTransactionsComponent;
}());



/***/ }),

/***/ "Jnle":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/tables/spark-table/spark-table.component.html ***!
  \**********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"card\" style=\"margin-top: 15px;\">\r\n        <div class=\"card-header bg-white d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"card-title mb-0\">Filtreleme</h5>\r\n          <button mat-raised-button color=\"primary\"  (click)=\"createPdf()\">\r\n            <i class=\"fas fa-file-pdf\"></i>\r\n            PDF Oluştur\r\n          </button>\r\n        </div>\r\n        <div class=\"card-body py-2\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Başlangıç</mat-label>\r\n                <input matInput [matDatepicker]=\"startDatePicker\" [(ngModel)]=\"startDate\" (dateChange)=\"onStartDateChange()\" placeholder=\"Seçiniz\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #startDatePicker></mat-datepicker>\r\n              </mat-form-field>\r\n              <button *ngIf=\"startDate\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"startDate=null;formattedStartDate=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Bitiş</mat-label>\r\n                <input matInput [matDatepicker]=\"endDatePicker\" [(ngModel)]=\"endDate\" (dateChange)=\"onEndDateChange()\" placeholder=\"Seçiniz\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #endDatePicker></mat-datepicker>\r\n              </mat-form-field>\r\n              <button *ngIf=\"endDate\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"endDate=null;formattedEndDate=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>İsim</mat-label>\r\n                <input matInput [(ngModel)]=\"searchName\" placeholder=\"İsim giriniz\">\r\n              </mat-form-field>\r\n              <button *ngIf=\"searchName\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"searchName=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>İşlem</mat-label>\r\n                <mat-select [(ngModel)]=\"selectedProcessType\">\r\n                  <mat-option value=\"Ziyaret Talebi\">Ziyaret</mat-option>\r\n                  <mat-option value=\"Güvenlik Onay\">Güvenlik Onay</mat-option>\r\n                  <mat-option value=\"Güvenlik Red\">Güvenlik Red</mat-option>\r\n                  <mat-option value=\"Rapor Oluşturma\">Rapor Oluşturma</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <button *ngIf=\"selectedProcessType\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"selectedProcessType=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12 text-center\">\r\n              <button mat-raised-button color=\"primary\" (click)=\"onSearch()\">\r\n                <i class=\"fas fa-search\"></i>\r\n                Ara\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header card-header-danger\">\r\n              <h4 class=\"card-title \">{{'BanuLogList'| translate}}</h4>\r\n              <a *ngIf=\"checkClaim('CreateBanuLogCommand')\" class=\"pull-right\" data-toggle=\"modal\" data-target=\"#banulog\"> <i style=\"color:white\"  title=\"{{'Add'| translate}}\" class=\"far fa-plus-square fa-2x\"></i></a>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"table-responsive\">\r\n                \r\n                <div class=\"col-md-4 pull-right\">\r\n                  <mat-form-field>\r\n                    <mat-label>Filter</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                  </mat-form-field>\r\n                </div>\r\n                              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n  \r\n                                  \r\n                     <ng-container matColumnDef=\"id\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.id}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"createdDate\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.createdDate|date:'dd/MM/yyyy'}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactorFullName\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorFullName'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactorFullName}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactorId\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorId'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactorId}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactionsDescription\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionsDescription'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactionsDescription}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactionType\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionType'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactionType}}</td>\r\n                     </ng-container>\r\n  \r\n  \r\n  \r\n  \r\n                                  <ng-container matColumnDef=\"update\" >\r\n                    <th mat-header-cell *matHeaderCellDef></th>\r\n                    <td style=\"width: 25px;\" mat-cell\r\n                      *matCellDef=\"let element\">\r\n                      <a *ngIf=\"checkClaim('UpdateBanuLogCommand')\" data-toggle=\"modal\" data-target=\"#banulog\"  (click)=\"getBanuLogById(element.id)\">\r\n                        <i title=\"{{'Update'| translate}}\" style=\"color:#ff5722;\" class=\"far fa-edit\"></i>\r\n                      </a>\r\n                    </td>\r\n                  </ng-container>\r\n  \r\n                  <ng-container matColumnDef=\"delete\" >\r\n                    <th mat-header-cell *matHeaderCellDef></th>\r\n                    <td  style=\"width: 25px;\" mat-cell\r\n                      *matCellDef=\"let element\">\r\n                      <a *ngIf=\"checkClaim('DeleteBanuLogCommand')\" (confirm)=\"deleteBanuLog(element.id)\" [swal]=\"deleteSwal\"><i title=\"{{'Delete'| translate}}\" style=\"color: #D9534E;\"class=\"fas fa-trash-alt\"></i></a>\r\n                    </td>\r\n                  </ng-container>\r\n  \r\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  \r\n                  <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                    <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                  </tr>\r\n                              </table>\r\n                              <mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n                              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <div class=\"modal modal-angular fade\" id=\"banulog\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-body text-center\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n            (click)=\"clearFormGroup(banuLogAddForm)\"><span aria-hidden=\"true\">&times;</span></button>\r\n          <h4 class=\"margin-top\">\r\n             {{'BanuLogForm'| translate}}\r\n          </h4>\r\n          <div class=\"separator\"></div>\r\n          <form *ngIf=\"banuLogAddForm\" [formGroup]=\"banuLogAddForm\" (ngSubmit)=\"save()\">\r\n            \r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"createdDate\" type=\"date\" id=\"createdDate\" name=\"createdDate\"\r\n                         formControlName=\"createdDate\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('createdDate')!.hasError('createdDate') && banuLogAddForm.get('createdDate')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"transactorFullName\" type=\"text\" id=\"transactorFullName\" name=\"transactorFullName\"\r\n                         formControlName=\"transactorFullName\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('transactorFullName')!.hasError('transactorFullName') && banuLogAddForm.get('transactorFullName')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                      <div class=\"row\">\r\n                          <div class=\"col-md-12\">\r\n                              <select class=\"browser-default custom-select\" formControlName=\"transactorId\">\r\n                                  <option *ngFor=\"let item of banuLoglookUp\" [value]=\"item.id\"> {{item.label}}</option>\r\n                              </select>\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"transactionsDescription\" type=\"text\" id=\"transactionsDescription\" name=\"transactionsDescription\"\r\n                         formControlName=\"transactionsDescription\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('transactionsDescription')!.hasError('transactionsDescription') && banuLogAddForm.get('transactionsDescription')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"transactionType\" type=\"text\" id=\"transactionType\" name=\"transactionType\"\r\n                         formControlName=\"transactionType\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('transactionType')!.hasError('transactionType') && banuLogAddForm.get('transactionType')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                     \r\n            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save'|translate}}</button>\r\n            <div class=\"clearfix\"></div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon = \"error\" [showCancelButton]=\"true\"\r\n      [confirmButtonText] = \"'OK'\"[cancelButtonText] = \"'Cancel'\" >\r\n  </swal>\r\n  \r\n  ");

/***/ }),

/***/ "M+GD":
/*!*************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/ILogger.js ***!
  \*************************************************************/
/*! exports provided: LogLevel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogLevel", function() { return LogLevel; });
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// These values are designed to match the ASP.NET Log Levels since that's the pattern we're emulating here.

/** Indicates the severity of a log message.
 *
 * Log Levels are ordered in increasing severity. So `Debug` is more severe than `Trace`, etc.
 */
var LogLevel;

(function (LogLevel) {
  /** Log level for very low severity diagnostic messages. */
  LogLevel[LogLevel["Trace"] = 0] = "Trace";
  /** Log level for low severity diagnostic messages. */

  LogLevel[LogLevel["Debug"] = 1] = "Debug";
  /** Log level for informational diagnostic messages. */

  LogLevel[LogLevel["Information"] = 2] = "Information";
  /** Log level for diagnostic messages that indicate a non-fatal problem. */

  LogLevel[LogLevel["Warning"] = 3] = "Warning";
  /** Log level for diagnostic messages that indicate a failure in the current operation. */

  LogLevel[LogLevel["Error"] = 4] = "Error";
  /** Log level for diagnostic messages that indicate a failure that will terminate the entire application. */

  LogLevel[LogLevel["Critical"] = 5] = "Critical";
  /** The highest possible log level. Used when configuring logging to indicate that no log messages should be emitted. */

  LogLevel[LogLevel["None"] = 6] = "None";
})(LogLevel || (LogLevel = {}));

/***/ }),

/***/ "M1xz":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/group/group.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 class=\"card-title \">{{'GroupList'|translate}}</h4>\r\n            <a *ngIf=\"checkClaim('CreateGroupCommand')\" class=\"pull-right\" data-toggle=\"modal\" data-target=\"#group\"><i style=\"color:white\" title=\"{{'Add'| translate}}\" class=\"far fa-plus-square fa-2x\"></i> </a>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n              \r\n              <div class=\"col-md-4 pull-right\">\r\n                <mat-form-field>\r\n                  <mat-label>{{'Filter' |translate}}</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"id\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"groupName\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'GroupName'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.groupName}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"updateGroupClaim\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateGroupClaimCommand')\" data-toggle=\"modal\" data-target=\"#groupClaims\" (click)=\"getGroupClaims(element.id)\"><i title=\"{{'GrupPermissions' | translate }}\" style=\"color:blue;\" class=\"fas fa-shield-alt\" aria-hidden=\"true\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"updateUserGroupClaims\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateUserGroupByGroupIdCommand')\" data-toggle=\"modal\" data-target=\"#groupUsers\" (click)=\"getGroupUsers(element.id)\"><i title=\"{{'UsersGroups' | translate}}\" style=\"color:green;\" class=\"fas fa-user-shield\" aria-hidden=\"true\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"update\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateGroupCommand')\" data-toggle=\"modal\" data-target=\"#group\" (click)=\"getGroupById(element.id)\"><i title=\"{{'Update' | translate}}\" style=\"color:#ff5722;\" class=\"far fa-edit\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('DeleteGroupCommand')\" (confirm)=\"deleteGroup(element.id)\" [swal]=\"deleteSwal\"><i title=\"{{'Delete'| translate}}\" style=\"color:#D9534E;\" class=\"fas fa-trash-alt\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                  <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                </tr>\r\n              </table>\r\n              <mat-paginator [pageSizeOptions]=\"[10, 25,50,100]\"></mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal modal-angular fade\" id=\"group\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary text-white\">\r\n        <h4 class=\"modal-title\">\r\n          <i class=\"material-icons mr-2\">group_add</i>\r\n          {{'GroupForm'| translate}}\r\n        </h4>\r\n        <button type=\"button\" #closeButton class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(groupAddForm)\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form *ngIf=\"groupAddForm\" [formGroup]=\"groupAddForm\" (ngSubmit)=\"save()\" class=\"p-3\">\r\n          <div class=\"row mb-4\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                <mat-label>{{'GroupName'|translate}}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"groupName\">\r\n                <mat-icon matPrefix class=\"mr-2\">group</mat-icon>\r\n                <mat-error *ngIf=\"groupAddForm.get('groupName')!.hasError('required') && groupAddForm.get('groupName')!.touched\">\r\n                  {{'Required'| translate}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"d-flex justify-content-end mt-4\">\r\n            <button mat-button type=\"button\" class=\"mr-2\" data-dismiss=\"modal\" (click)=\"clearFormGroup(groupAddForm)\">\r\n              <mat-icon>close</mat-icon>\r\n              {{'Cancel' |translate}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!groupAddForm.valid\">\r\n              <mat-icon>save</mat-icon>\r\n              {{'Save' |translate}}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal modal-angular fade\" id=\"groupUsers\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary text-white\">\r\n        <h4 class=\"modal-title\">\r\n          <i class=\"material-icons mr-2\">people</i>\r\n          {{'GroupUsers'| translate}}\r\n        </h4>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body p-4\">\r\n        <ng-multiselect-dropdown \r\n          [settings]=\"dropdownSettings\" \r\n          [placeholder]=\"'Users'\" \r\n          [data]=\"formattedUserDropdownList\"\r\n          [(ngModel)]=\"userSelectedItems\" \r\n          (onSelect)=\"onItemSelect('User')\" \r\n          (onSelectAll)=\"onSelectAll('User')\"\r\n          (onDeSelect)=\"onItemDeSelect('User')\"\r\n          class=\"w-100\">\r\n        </ng-multiselect-dropdown>\r\n\r\n        <div class=\"d-flex justify-content-end mt-4\">\r\n          <button mat-button type=\"button\" class=\"mr-2\" data-dismiss=\"modal\">\r\n            <mat-icon>close</mat-icon>\r\n            {{'Cancel' |translate}}\r\n          </button>\r\n          <button mat-raised-button color=\"primary\" (click)=\"saveGroupUsers()\">\r\n            <mat-icon>save</mat-icon>\r\n            {{'Save' |translate}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal modal-angular fade\" id=\"groupClaims\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary text-white\">\r\n        <h4 class=\"modal-title\">\r\n          <i class=\"material-icons mr-2\">security</i>\r\n          {{'GroupClaims'| translate}}\r\n        </h4>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body p-4\">\r\n        <ng-multiselect-dropdown \r\n          [settings]=\"dropdownSettings\" \r\n          [placeholder]=\"'Claims'\" \r\n          [data]=\"claimDropdownList\"\r\n          [(ngModel)]=\"claimSelectedItems\" \r\n          (onSelect)=\"onItemSelect('Claim')\" \r\n          (onSelectAll)=\"onSelectAll('Claim')\"\r\n          (onDeSelect)=\"onItemDeSelect('Claim')\"\r\n          class=\"w-100\">\r\n        </ng-multiselect-dropdown>\r\n\r\n        <div class=\"d-flex justify-content-end mt-4\">\r\n          <button mat-button type=\"button\" class=\"mr-2\" data-dismiss=\"modal\">\r\n            <mat-icon>close</mat-icon>\r\n            {{'Cancel' |translate}}\r\n          </button>\r\n          <button mat-raised-button color=\"primary\" (click)=\"saveGroupClaims()\">\r\n            <mat-icon>save</mat-icon>\r\n            {{'Save' |translate}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon=\"error\" [showCancelButton]=\"true\"\r\n  [confirmButtonText]=\"'OK'\" [cancelButtonText]=\"'Cancel'\">\r\n</swal>");

/***/ }),

/***/ "MHRx":
/*!********************************************************************************!*\
  !*** ./src/app/core/components/admin/multiVisiters/multiVisiters.component.ts ***!
  \********************************************************************************/
/*! exports provided: MultiVisitersComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiVisitersComponent", function() { return MultiVisitersComponent; });
/* harmony import */ var _raw_loader_multivisiters_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./multivisiters.component.html */ "WWwI");
/* harmony import */ var _multiVisiters_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./multiVisiters.component.scss */ "WFWO");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/components/admin/login/Services/auth.service */ "a9M/");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var _models_multivisiters__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./models/multivisiters */ "9TM8");
/* harmony import */ var _services_multivisiters_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./services/multivisiters.service */ "k9Mz");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var MultiVisitersComponent = /** @class */ (function () {
    function MultiVisitersComponent(multiVisitersService, lookupService, alertifyService, formBuilder, authService) {
        this.multiVisitersService = multiVisitersService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.displayedColumns = ['id', 'createdDate', 'visitId', 'visitorFullName', 'update', 'delete'];
        this.multiVisiters = new _models_multivisiters__WEBPACK_IMPORTED_MODULE_10__["MultiVisiters"]();
    }
    MultiVisitersComponent.prototype.ngAfterViewInit = function () {
        this.getMultiVisitersList();
    };
    MultiVisitersComponent.prototype.ngOnInit = function () {
        this.createMultiVisitersAddForm();
    };
    MultiVisitersComponent.prototype.getMultiVisitersList = function () {
        var _this = this;
        this.multiVisitersService.getMultiVisitersList().subscribe(function (data) {
            _this.multiVisitersList = data;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    MultiVisitersComponent.prototype.save = function () {
        if (this.multiVisitersAddForm.valid) {
            this.multiVisiters = Object.assign({}, this.multiVisitersAddForm.value);
            if (this.multiVisiters.id == "")
                this.addMultiVisiters();
            else
                this.updateMultiVisiters();
        }
    };
    MultiVisitersComponent.prototype.addMultiVisiters = function () {
        var _this = this;
        this.multiVisitersService.addMultiVisiters(this.multiVisiters).subscribe(function (data) {
            _this.getMultiVisitersList();
            _this.multiVisiters = new _models_multivisiters__WEBPACK_IMPORTED_MODULE_10__["MultiVisiters"]();
            jQuery('#multivisiters').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.multiVisitersAddForm);
        });
    };
    MultiVisitersComponent.prototype.updateMultiVisiters = function () {
        var _this = this;
        this.multiVisitersService.updateMultiVisiters(this.multiVisiters).subscribe(function (data) {
            var index = _this.multiVisitersList.findIndex(function (x) { return x.id == _this.multiVisiters.id; });
            _this.multiVisitersList[index] = _this.multiVisiters;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.multiVisitersList);
            _this.configDataTable();
            _this.multiVisiters = new _models_multivisiters__WEBPACK_IMPORTED_MODULE_10__["MultiVisiters"]();
            jQuery('#multivisiters').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.multiVisitersAddForm);
        });
    };
    MultiVisitersComponent.prototype.createMultiVisitersAddForm = function () {
        this.multiVisitersAddForm = this.formBuilder.group({
            id: [0],
            createdDate: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            visitId: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            visitorFullName: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
    };
    MultiVisitersComponent.prototype.deleteMultiVisiters = function (multiVisitersId) {
        var _this = this;
        this.multiVisitersService.deleteMultiVisiters(multiVisitersId).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            _this.multiVisitersList = _this.multiVisitersList.filter(function (x) { return x.id != multiVisitersId; });
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.multiVisitersList);
            _this.configDataTable();
        });
    };
    MultiVisitersComponent.prototype.getMultiVisitersById = function (multiVisitersId) {
        var _this = this;
        this.clearFormGroup(this.multiVisitersAddForm);
        this.multiVisitersService.getMultiVisitersById(multiVisitersId).subscribe(function (data) {
            _this.multiVisiters = data;
            _this.multiVisitersAddForm.patchValue(data);
        });
    };
    MultiVisitersComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    MultiVisitersComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    MultiVisitersComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    MultiVisitersComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    MultiVisitersComponent.ctorParameters = function () { return [
        { type: _services_multivisiters_service__WEBPACK_IMPORTED_MODULE_11__["MultiVisitersService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"] }
    ]; };
    MultiVisitersComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    MultiVisitersComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-multiVisiters',
            template: _raw_loader_multivisiters_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_multiVisiters_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_services_multivisiters_service__WEBPACK_IMPORTED_MODULE_11__["MultiVisitersService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"]])
    ], MultiVisitersComponent);
    return MultiVisitersComponent;
}());



/***/ }),

/***/ "MSb9":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/language/language.component.html ***!
  \**************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 class=\"card-title \">{{'LanguageList'|translate}}</h4>\r\n            <a *ngIf=\"checkClaim('CreateLanguageCommand')\" class=\"pull-right\" data-toggle=\"modal\"\r\n              data-target=\"#language\"> <i style=\"color:white\" title=\"{{'Add'| translate}}\" class=\"far fa-plus-square fa-2x\"></i></a>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n\r\n              <div class=\"col-md-4 pull-right\">\r\n                <mat-form-field>\r\n                  <mat-label>{{'Filter' |translate}}</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"id\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Name'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"code\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Code'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"update\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateLanguageCommand')\" data-toggle=\"modal\" data-target=\"#language\" (click)=\"getLanguageById(element.id)\">\r\n                      <i title=\"{{'Update'| translate}}\" style=\"color:#ff5722;\" class=\"far fa-edit\"></i>\r\n                    </a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('DeleteLanguageCommand')\" (confirm)=\"deleteLanguage(element.id)\" [swal]=\"deleteSwal\"><i title=\"{{'Delete'| translate}}\" style=\"color:#D9534E;\" class=\"fas fa-trash-alt\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                  <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                </tr>\r\n              </table>\r\n              <mat-paginator [pageSizeOptions]=\"[10, 25,50,100]\"></mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal modal-angular fade\" id=\"language\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(languageAddForm)\"><span aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"margin-top\">\r\n          {{'LanguageForm'|translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n        <form *ngIf=\"languageAddForm\" [formGroup]=\"languageAddForm\" (ngSubmit)=\"save()\">\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\" {{'FullName'|translate}}\" type=\"text\" id=\"name\" name=\"name\"\r\n                  formControlName=\"name\">\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"languageAddForm.get('name')!.hasError('required') && languageAddForm.get('name')!.touched\"> {{'Required'| translate}}</div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"{{'Code'|translate}}\" type=\"text\" id=\"code\" name=\"code\"\r\n                  formControlName=\"code\" />\r\n                <div class=\"alert alert-danger\"\r\n                  *ngIf=\"languageAddForm.get('code')!.hasError('code') && languageAddForm.get('code')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save' |translate}}</button>\r\n          <div class=\"clearfix\"></div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon=\"error\" [showCancelButton]=\"true\"\r\n  [confirmButtonText]=\"'OK'\" [cancelButtonText]=\"'Cancel'\">\r\n</swal>");

/***/ }),

/***/ "MXpY":
/*!***************************************************************!*\
  !*** ./src/app/core/components/admin/log/logDto.component.ts ***!
  \***************************************************************/
/*! exports provided: LogDtoComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogDtoComponent", function() { return LogDtoComponent; });
/* harmony import */ var _raw_loader_logdto_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./logdto.component.html */ "a0Xx");
/* harmony import */ var _logDto_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./logDto.component.scss */ "NK4k");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/components/admin/login/Services/auth.service */ "a9M/");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _models_LogDto__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./models/LogDto */ "fcXA");
/* harmony import */ var _services_LogDto_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./services/LogDto.service */ "rBRC");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var LogDtoComponent = /** @class */ (function () {
    function LogDtoComponent(logDtoService, lookupService, alertifyService, formBuilder, authService) {
        this.logDtoService = logDtoService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.displayedColumns = ['id', 'level', 'exceptionMessage', 'timeStamp', 'user', 'value', 'type'];
        this.logDto = new _models_LogDto__WEBPACK_IMPORTED_MODULE_11__["LogDto"]();
        this.dtTrigger = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    }
    LogDtoComponent.prototype.ngOnInit = function () {
        this.getLogDtoList();
    };
    LogDtoComponent.prototype.getLogDtoList = function () {
        var _this = this;
        this.logDtoService.getLogDtoList().subscribe(function (data) {
            _this.logDtoList = data;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    LogDtoComponent.prototype.ngOnDestroy = function () {
        this.dtTrigger.unsubscribe();
    };
    LogDtoComponent.prototype.ngAfterViewInit = function () {
        this.getLogDtoList();
    };
    LogDtoComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    LogDtoComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    LogDtoComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    LogDtoComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    LogDtoComponent.ctorParameters = function () { return [
        { type: _services_LogDto_service__WEBPACK_IMPORTED_MODULE_12__["LogDtoService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"] }
    ]; };
    LogDtoComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    LogDtoComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-logDto',
            template: _raw_loader_logdto_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_logDto_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_services_LogDto_service__WEBPACK_IMPORTED_MODULE_12__["LogDtoService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"]])
    ], LogDtoComponent);
    return LogDtoComponent;
}());



/***/ }),

/***/ "N0gA":
/*!**********************************************************************************!*\
  !*** ./src/app/core/components/admin/operationclaim/operationClaim.component.ts ***!
  \**********************************************************************************/
/*! exports provided: OperationClaimComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperationClaimComponent", function() { return OperationClaimComponent; });
/* harmony import */ var _raw_loader_operationclaim_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./operationclaim.component.html */ "pOye");
/* harmony import */ var _operationClaim_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./operationClaim.component.scss */ "4Q0m");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../login/Services/auth.service */ "a9M/");
/* harmony import */ var _models_operationclaim__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./models/operationclaim */ "gYl6");
/* harmony import */ var _services_OperationClaim_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./services/OperationClaim.service */ "F11F");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var OperationClaimComponent = /** @class */ (function () {
    function OperationClaimComponent(operationClaimService, lookupService, alertifyService, formBuilder, authService) {
        this.operationClaimService = operationClaimService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.displayedColumns = ['id', 'name', 'alias', 'description', 'update'];
        this.operationClaim = new _models_operationclaim__WEBPACK_IMPORTED_MODULE_10__["OperationClaim"]();
    }
    OperationClaimComponent.prototype.ngAfterViewInit = function () {
        this.getOperationClaimList();
    };
    OperationClaimComponent.prototype.ngOnInit = function () {
        this.createOperationClaimAddForm();
    };
    OperationClaimComponent.prototype.getOperationClaimList = function () {
        var _this = this;
        this.operationClaimService.getOperationClaimList().subscribe(function (data) {
            _this.operationClaimList = data;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    OperationClaimComponent.prototype.save = function () {
        if (this.operationClaimAddForm.valid) {
            this.operationClaim = Object.assign({}, this.operationClaimAddForm.value);
            this.updateOperationClaim();
        }
    };
    OperationClaimComponent.prototype.updateOperationClaim = function () {
        var _this = this;
        this.operationClaimService.updateOperationClaim(this.operationClaim).subscribe(function (data) {
            var index = _this.operationClaimList.findIndex(function (x) { return x.id == _this.operationClaim.id; });
            _this.operationClaimList[index] = _this.operationClaim;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.operationClaimList);
            _this.configDataTable();
            _this.operationClaim = new _models_operationclaim__WEBPACK_IMPORTED_MODULE_10__["OperationClaim"]();
            jQuery('#operationclaim').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.operationClaimAddForm);
        });
    };
    OperationClaimComponent.prototype.createOperationClaimAddForm = function () {
        this.operationClaimAddForm = this.formBuilder.group({
            id: [0],
            name: [],
            alias: [""],
            description: [""]
        });
    };
    OperationClaimComponent.prototype.getOperationClaimById = function (operationClaimId) {
        var _this = this;
        this.clearFormGroup(this.operationClaimAddForm);
        this.operationClaimService.getOperationClaim(operationClaimId).subscribe(function (data) {
            _this.operationClaimAddForm.patchValue(data);
            _this.operationClaim = data;
        });
    };
    OperationClaimComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    OperationClaimComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    OperationClaimComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    OperationClaimComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    OperationClaimComponent.ctorParameters = function () { return [
        { type: _services_OperationClaim_service__WEBPACK_IMPORTED_MODULE_11__["OperationClaimService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__["AuthService"] }
    ]; };
    OperationClaimComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    OperationClaimComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-operationClaim',
            template: _raw_loader_operationclaim_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_operationClaim_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_services_OperationClaim_service__WEBPACK_IMPORTED_MODULE_11__["OperationClaimService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__["AuthService"]])
    ], OperationClaimComponent);
    return OperationClaimComponent;
}());



/***/ }),

/***/ "NFeN":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/icon.js ***!
  \**********************************************************************/
/*! exports provided: ICON_REGISTRY_PROVIDER, ICON_REGISTRY_PROVIDER_FACTORY, MAT_ICON_LOCATION, MAT_ICON_LOCATION_FACTORY, MatIcon, MatIconModule, MatIconRegistry, getMatIconFailedToSanitizeLiteralError, getMatIconFailedToSanitizeUrlError, getMatIconNameNotFoundError, getMatIconNoHttpProviderError, ɵ0 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ICON_REGISTRY_PROVIDER", function() { return ICON_REGISTRY_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ICON_REGISTRY_PROVIDER_FACTORY", function() { return ICON_REGISTRY_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_ICON_LOCATION", function() { return MAT_ICON_LOCATION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_ICON_LOCATION_FACTORY", function() { return MAT_ICON_LOCATION_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatIcon", function() { return MatIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatIconModule", function() { return MatIconModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatIconRegistry", function() { return MatIconRegistry; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatIconFailedToSanitizeLiteralError", function() { return getMatIconFailedToSanitizeLiteralError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatIconFailedToSanitizeUrlError", function() { return getMatIconFailedToSanitizeUrlError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatIconNameNotFoundError", function() { return getMatIconNameNotFoundError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getMatIconNoHttpProviderError", function() { return getMatIconNoHttpProviderError; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵ0", function() { return ɵ0; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/platform-browser */ "jhN1");













/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Returns an exception to be thrown in the case when attempting to
 * load an icon with a name that cannot be found.
 * @docs-private
 */




var _c0 = ["*"];

function getMatIconNameNotFoundError(iconName) {
  return Error("Unable to find icon with the name \"".concat(iconName, "\""));
}
/**
 * Returns an exception to be thrown when the consumer attempts to use
 * `<mat-icon>` without including @angular/common/http.
 * @docs-private
 */


function getMatIconNoHttpProviderError() {
  return Error('Could not find HttpClient provider for use with Angular Material icons. ' + 'Please include the HttpClientModule from @angular/common/http in your ' + 'app imports.');
}
/**
 * Returns an exception to be thrown when a URL couldn't be sanitized.
 * @param url URL that was attempted to be sanitized.
 * @docs-private
 */


function getMatIconFailedToSanitizeUrlError(url) {
  return Error("The URL provided to MatIconRegistry was not trusted as a resource URL " + "via Angular's DomSanitizer. Attempted URL was \"".concat(url, "\"."));
}
/**
 * Returns an exception to be thrown when a HTML string couldn't be sanitized.
 * @param literal HTML that was attempted to be sanitized.
 * @docs-private
 */


function getMatIconFailedToSanitizeLiteralError(literal) {
  return Error("The literal provided to MatIconRegistry was not trusted as safe HTML by " + "Angular's DomSanitizer. Attempted literal was \"".concat(literal, "\"."));
}
/**
 * Configuration for an icon, including the URL and possibly the cached SVG element.
 * @docs-private
 */


var SvgIconConfig = function SvgIconConfig(url, svgText, options) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, SvgIconConfig);

  this.url = url;
  this.svgText = svgText;
  this.options = options;
};
/**
 * Service to register and display icons used by the `<mat-icon>` component.
 * - Registers icon URLs by namespace and name.
 * - Registers icon set URLs by namespace.
 * - Registers aliases for CSS classes, for use with icon fonts.
 * - Loads icons from URLs and extracts individual icons from icon sets.
 */


var MatIconRegistry = /*#__PURE__*/function () {
  function MatIconRegistry(_httpClient, _sanitizer, document, _errorHandler) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatIconRegistry);

    this._httpClient = _httpClient;
    this._sanitizer = _sanitizer;
    this._errorHandler = _errorHandler;
    /**
     * URLs and cached SVG elements for individual icons. Keys are of the format "[namespace]:[icon]".
     */

    this._svgIconConfigs = new Map();
    /**
     * SvgIconConfig objects and cached SVG elements for icon sets, keyed by namespace.
     * Multiple icon sets can be registered under the same namespace.
     */

    this._iconSetConfigs = new Map();
    /** Cache for icons loaded by direct URLs. */

    this._cachedIconsByUrl = new Map();
    /** In-progress icon fetches. Used to coalesce multiple requests to the same URL. */

    this._inProgressUrlFetches = new Map();
    /** Map from font identifiers to their CSS class names. Used for icon fonts. */

    this._fontCssClassesByAlias = new Map();
    /**
     * The CSS class to apply when an `<mat-icon>` component has no icon name, url, or font specified.
     * The default 'material-icons' value assumes that the material icon font has been loaded as
     * described at http://google.github.io/material-design-icons/#icon-font-for-the-web
     */

    this._defaultFontSetClass = 'material-icons';
    this._document = document;
  }
  /**
   * Registers an icon by URL in the default namespace.
   * @param iconName Name under which the icon should be registered.
   * @param url
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MatIconRegistry, [{
    key: "addSvgIcon",
    value: function addSvgIcon(iconName, url, options) {
      return this.addSvgIconInNamespace('', iconName, url, options);
    }
    /**
     * Registers an icon using an HTML string in the default namespace.
     * @param iconName Name under which the icon should be registered.
     * @param literal SVG source of the icon.
     */

  }, {
    key: "addSvgIconLiteral",
    value: function addSvgIconLiteral(iconName, literal, options) {
      return this.addSvgIconLiteralInNamespace('', iconName, literal, options);
    }
    /**
     * Registers an icon by URL in the specified namespace.
     * @param namespace Namespace in which the icon should be registered.
     * @param iconName Name under which the icon should be registered.
     * @param url
     */

  }, {
    key: "addSvgIconInNamespace",
    value: function addSvgIconInNamespace(namespace, iconName, url, options) {
      return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig(url, null, options));
    }
    /**
     * Registers an icon using an HTML string in the specified namespace.
     * @param namespace Namespace in which the icon should be registered.
     * @param iconName Name under which the icon should be registered.
     * @param literal SVG source of the icon.
     */

  }, {
    key: "addSvgIconLiteralInNamespace",
    value: function addSvgIconLiteralInNamespace(namespace, iconName, literal, options) {
      var cleanLiteral = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_5__["SecurityContext"].HTML, literal); // TODO: add an ngDevMode check


      if (!cleanLiteral) {
        throw getMatIconFailedToSanitizeLiteralError(literal);
      }

      return this._addSvgIconConfig(namespace, iconName, new SvgIconConfig('', cleanLiteral, options));
    }
    /**
     * Registers an icon set by URL in the default namespace.
     * @param url
     */

  }, {
    key: "addSvgIconSet",
    value: function addSvgIconSet(url, options) {
      return this.addSvgIconSetInNamespace('', url, options);
    }
    /**
     * Registers an icon set using an HTML string in the default namespace.
     * @param literal SVG source of the icon set.
     */

  }, {
    key: "addSvgIconSetLiteral",
    value: function addSvgIconSetLiteral(literal, options) {
      return this.addSvgIconSetLiteralInNamespace('', literal, options);
    }
    /**
     * Registers an icon set by URL in the specified namespace.
     * @param namespace Namespace in which to register the icon set.
     * @param url
     */

  }, {
    key: "addSvgIconSetInNamespace",
    value: function addSvgIconSetInNamespace(namespace, url, options) {
      return this._addSvgIconSetConfig(namespace, new SvgIconConfig(url, null, options));
    }
    /**
     * Registers an icon set using an HTML string in the specified namespace.
     * @param namespace Namespace in which to register the icon set.
     * @param literal SVG source of the icon set.
     */

  }, {
    key: "addSvgIconSetLiteralInNamespace",
    value: function addSvgIconSetLiteralInNamespace(namespace, literal, options) {
      var cleanLiteral = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_5__["SecurityContext"].HTML, literal);

      if (!cleanLiteral) {
        throw getMatIconFailedToSanitizeLiteralError(literal);
      }

      return this._addSvgIconSetConfig(namespace, new SvgIconConfig('', cleanLiteral, options));
    }
    /**
     * Defines an alias for a CSS class name to be used for icon fonts. Creating an matIcon
     * component with the alias as the fontSet input will cause the class name to be applied
     * to the `<mat-icon>` element.
     *
     * @param alias Alias for the font.
     * @param className Class name override to be used instead of the alias.
     */

  }, {
    key: "registerFontClassAlias",
    value: function registerFontClassAlias(alias) {
      var className = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : alias;

      this._fontCssClassesByAlias.set(alias, className);

      return this;
    }
    /**
     * Returns the CSS class name associated with the alias by a previous call to
     * registerFontClassAlias. If no CSS class has been associated, returns the alias unmodified.
     */

  }, {
    key: "classNameForFontAlias",
    value: function classNameForFontAlias(alias) {
      return this._fontCssClassesByAlias.get(alias) || alias;
    }
    /**
     * Sets the CSS class name to be used for icon fonts when an `<mat-icon>` component does not
     * have a fontSet input value, and is not loading an icon by name or URL.
     *
     * @param className
     */

  }, {
    key: "setDefaultFontSetClass",
    value: function setDefaultFontSetClass(className) {
      this._defaultFontSetClass = className;
      return this;
    }
    /**
     * Returns the CSS class name to be used for icon fonts when an `<mat-icon>` component does not
     * have a fontSet input value, and is not loading an icon by name or URL.
     */

  }, {
    key: "getDefaultFontSetClass",
    value: function getDefaultFontSetClass() {
      return this._defaultFontSetClass;
    }
    /**
     * Returns an Observable that produces the icon (as an `<svg>` DOM element) from the given URL.
     * The response from the URL may be cached so this will not always cause an HTTP request, but
     * the produced element will always be a new copy of the originally fetched icon. (That is,
     * it will not contain any modifications made to elements previously returned).
     *
     * @param safeUrl URL from which to fetch the SVG icon.
     */

  }, {
    key: "getSvgIconFromUrl",
    value: function getSvgIconFromUrl(safeUrl) {
      var _this = this;

      var url = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_5__["SecurityContext"].RESOURCE_URL, safeUrl);

      if (!url) {
        throw getMatIconFailedToSanitizeUrlError(safeUrl);
      }

      var cachedIcon = this._cachedIconsByUrl.get(url);

      if (cachedIcon) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["of"])(cloneSvg(cachedIcon));
      }

      return this._loadSvgIconFromConfig(new SvgIconConfig(safeUrl, null)).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["tap"])(function (svg) {
        return _this._cachedIconsByUrl.set(url, svg);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["map"])(function (svg) {
        return cloneSvg(svg);
      }));
    }
    /**
     * Returns an Observable that produces the icon (as an `<svg>` DOM element) with the given name
     * and namespace. The icon must have been previously registered with addIcon or addIconSet;
     * if not, the Observable will throw an error.
     *
     * @param name Name of the icon to be retrieved.
     * @param namespace Namespace in which to look for the icon.
     */

  }, {
    key: "getNamedSvgIcon",
    value: function getNamedSvgIcon(name) {
      var namespace = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      // Return (copy of) cached icon if possible.
      var key = iconKey(namespace, name);

      var config = this._svgIconConfigs.get(key);

      if (config) {
        return this._getSvgFromConfig(config);
      } // See if we have any icon sets registered for the namespace.


      var iconSetConfigs = this._iconSetConfigs.get(namespace);

      if (iconSetConfigs) {
        return this._getSvgFromIconSetConfigs(name, iconSetConfigs);
      }

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["throwError"])(getMatIconNameNotFoundError(key));
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._svgIconConfigs.clear();

      this._iconSetConfigs.clear();

      this._cachedIconsByUrl.clear();
    }
    /**
     * Returns the cached icon for a SvgIconConfig if available, or fetches it from its URL if not.
     */

  }, {
    key: "_getSvgFromConfig",
    value: function _getSvgFromConfig(config) {
      if (config.svgText) {
        // We already have the SVG element for this icon, return a copy.
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["of"])(cloneSvg(this._svgElementFromConfig(config)));
      } else {
        // Fetch the icon from the config's URL, cache it, and return a copy.
        return this._loadSvgIconFromConfig(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["map"])(function (svg) {
          return cloneSvg(svg);
        }));
      }
    }
    /**
     * Attempts to find an icon with the specified name in any of the SVG icon sets.
     * First searches the available cached icons for a nested element with a matching name, and
     * if found copies the element to a new `<svg>` element. If not found, fetches all icon sets
     * that have not been cached, and searches again after all fetches are completed.
     * The returned Observable produces the SVG element if possible, and throws
     * an error if no icon with the specified name can be found.
     */

  }, {
    key: "_getSvgFromIconSetConfigs",
    value: function _getSvgFromIconSetConfigs(name, iconSetConfigs) {
      var _this2 = this;

      // For all the icon set SVG elements we've fetched, see if any contain an icon with the
      // requested name.
      var namedIcon = this._extractIconWithNameFromAnySet(name, iconSetConfigs);

      if (namedIcon) {
        // We could cache namedIcon in _svgIconConfigs, but since we have to make a copy every
        // time anyway, there's probably not much advantage compared to just always extracting
        // it from the icon set.
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["of"])(namedIcon);
      } // Not found in any cached icon sets. If there are icon sets with URLs that we haven't
      // fetched, fetch them now and look for iconName in the results.


      var iconSetFetchRequests = iconSetConfigs.filter(function (iconSetConfig) {
        return !iconSetConfig.svgText;
      }).map(function (iconSetConfig) {
        return _this2._loadSvgIconSetFromConfig(iconSetConfig).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["catchError"])(function (err) {
          var url = _this2._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_5__["SecurityContext"].RESOURCE_URL, iconSetConfig.url); // Swallow errors fetching individual URLs so the
          // combined Observable won't necessarily fail.


          var errorMessage = "Loading icon set URL: ".concat(url, " failed: ").concat(err.message);

          _this2._errorHandler.handleError(new Error(errorMessage));

          return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["of"])(null);
        }));
      }); // Fetch all the icon set URLs. When the requests complete, every IconSet should have a
      // cached SVG element (unless the request failed), and we can check again for the icon.

      return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["forkJoin"])(iconSetFetchRequests).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["map"])(function () {
        var foundIcon = _this2._extractIconWithNameFromAnySet(name, iconSetConfigs); // TODO: add an ngDevMode check


        if (!foundIcon) {
          throw getMatIconNameNotFoundError(name);
        }

        return foundIcon;
      }));
    }
    /**
     * Searches the cached SVG elements for the given icon sets for a nested icon element whose "id"
     * tag matches the specified name. If found, copies the nested element to a new SVG element and
     * returns it. Returns null if no matching element is found.
     */

  }, {
    key: "_extractIconWithNameFromAnySet",
    value: function _extractIconWithNameFromAnySet(iconName, iconSetConfigs) {
      // Iterate backwards, so icon sets added later have precedence.
      for (var i = iconSetConfigs.length - 1; i >= 0; i--) {
        var config = iconSetConfigs[i]; // Parsing the icon set's text into an SVG element can be expensive. We can avoid some of
        // the parsing by doing a quick check using `indexOf` to see if there's any chance for the
        // icon to be in the set. This won't be 100% accurate, but it should help us avoid at least
        // some of the parsing.

        if (config.svgText && config.svgText.indexOf(iconName) > -1) {
          var svg = this._svgElementFromConfig(config);

          var foundIcon = this._extractSvgIconFromSet(svg, iconName, config.options);

          if (foundIcon) {
            return foundIcon;
          }
        }
      }

      return null;
    }
    /**
     * Loads the content of the icon URL specified in the SvgIconConfig and creates an SVG element
     * from it.
     */

  }, {
    key: "_loadSvgIconFromConfig",
    value: function _loadSvgIconFromConfig(config) {
      var _this3 = this;

      return this._fetchIcon(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["tap"])(function (svgText) {
        return config.svgText = svgText;
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["map"])(function () {
        return _this3._svgElementFromConfig(config);
      }));
    }
    /**
     * Loads the content of the icon set URL specified in the
     * SvgIconConfig and attaches it to the config.
     */

  }, {
    key: "_loadSvgIconSetFromConfig",
    value: function _loadSvgIconSetFromConfig(config) {
      if (config.svgText) {
        return Object(rxjs__WEBPACK_IMPORTED_MODULE_9__["of"])(null);
      }

      return this._fetchIcon(config).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["tap"])(function (svgText) {
        return config.svgText = svgText;
      }));
    }
    /**
     * Searches the cached element of the given SvgIconConfig for a nested icon element whose "id"
     * tag matches the specified name. If found, copies the nested element to a new SVG element and
     * returns it. Returns null if no matching element is found.
     */

  }, {
    key: "_extractSvgIconFromSet",
    value: function _extractSvgIconFromSet(iconSet, iconName, options) {
      // Use the `id="iconName"` syntax in order to escape special
      // characters in the ID (versus using the #iconName syntax).
      var iconSource = iconSet.querySelector("[id=\"".concat(iconName, "\"]"));

      if (!iconSource) {
        return null;
      } // Clone the element and remove the ID to prevent multiple elements from being added
      // to the page with the same ID.


      var iconElement = iconSource.cloneNode(true);
      iconElement.removeAttribute('id'); // If the icon node is itself an <svg> node, clone and return it directly. If not, set it as
      // the content of a new <svg> node.

      if (iconElement.nodeName.toLowerCase() === 'svg') {
        return this._setSvgAttributes(iconElement, options);
      } // If the node is a <symbol>, it won't be rendered so we have to convert it into <svg>. Note
      // that the same could be achieved by referring to it via <use href="#id">, however the <use>
      // tag is problematic on Firefox, because it needs to include the current page path.


      if (iconElement.nodeName.toLowerCase() === 'symbol') {
        return this._setSvgAttributes(this._toSvgElement(iconElement), options);
      } // createElement('SVG') doesn't work as expected; the DOM ends up with
      // the correct nodes, but the SVG content doesn't render. Instead we
      // have to create an empty SVG node using innerHTML and append its content.
      // Elements created using DOMParser.parseFromString have the same problem.
      // http://stackoverflow.com/questions/23003278/svg-innerhtml-in-firefox-can-not-display


      var svg = this._svgElementFromString('<svg></svg>'); // Clone the node so we don't remove it from the parent icon set element.


      svg.appendChild(iconElement);
      return this._setSvgAttributes(svg, options);
    }
    /**
     * Creates a DOM element from the given SVG string.
     */

  }, {
    key: "_svgElementFromString",
    value: function _svgElementFromString(str) {
      var div = this._document.createElement('DIV');

      div.innerHTML = str;
      var svg = div.querySelector('svg'); // TODO: add an ngDevMode check

      if (!svg) {
        throw Error('<svg> tag not found');
      }

      return svg;
    }
    /**
     * Converts an element into an SVG node by cloning all of its children.
     */

  }, {
    key: "_toSvgElement",
    value: function _toSvgElement(element) {
      var svg = this._svgElementFromString('<svg></svg>');

      var attributes = element.attributes; // Copy over all the attributes from the `symbol` to the new SVG, except the id.

      for (var i = 0; i < attributes.length; i++) {
        var _attributes$i = attributes[i],
            name = _attributes$i.name,
            value = _attributes$i.value;

        if (name !== 'id') {
          svg.setAttribute(name, value);
        }
      }

      for (var _i = 0; _i < element.childNodes.length; _i++) {
        if (element.childNodes[_i].nodeType === this._document.ELEMENT_NODE) {
          svg.appendChild(element.childNodes[_i].cloneNode(true));
        }
      }

      return svg;
    }
    /**
     * Sets the default attributes for an SVG element to be used as an icon.
     */

  }, {
    key: "_setSvgAttributes",
    value: function _setSvgAttributes(svg, options) {
      svg.setAttribute('fit', '');
      svg.setAttribute('height', '100%');
      svg.setAttribute('width', '100%');
      svg.setAttribute('preserveAspectRatio', 'xMidYMid meet');
      svg.setAttribute('focusable', 'false'); // Disable IE11 default behavior to make SVGs focusable.

      if (options && options.viewBox) {
        svg.setAttribute('viewBox', options.viewBox);
      }

      return svg;
    }
    /**
     * Returns an Observable which produces the string contents of the given icon. Results may be
     * cached, so future calls with the same URL may not cause another HTTP request.
     */

  }, {
    key: "_fetchIcon",
    value: function _fetchIcon(iconConfig) {
      var _this4 = this;

      var _a;

      var safeUrl = iconConfig.url,
          options = iconConfig.options;
      var withCredentials = (_a = options === null || options === void 0 ? void 0 : options.withCredentials) !== null && _a !== void 0 ? _a : false;

      if (!this._httpClient) {
        throw getMatIconNoHttpProviderError();
      } // TODO: add an ngDevMode check


      if (safeUrl == null) {
        throw Error("Cannot fetch icon from URL \"".concat(safeUrl, "\"."));
      }

      var url = this._sanitizer.sanitize(_angular_core__WEBPACK_IMPORTED_MODULE_5__["SecurityContext"].RESOURCE_URL, safeUrl); // TODO: add an ngDevMode check


      if (!url) {
        throw getMatIconFailedToSanitizeUrlError(safeUrl);
      } // Store in-progress fetches to avoid sending a duplicate request for a URL when there is
      // already a request in progress for that URL. It's necessary to call share() on the
      // Observable returned by http.get() so that multiple subscribers don't cause multiple XHRs.


      var inProgressFetch = this._inProgressUrlFetches.get(url);

      if (inProgressFetch) {
        return inProgressFetch;
      }

      var req = this._httpClient.get(url, {
        responseType: 'text',
        withCredentials: withCredentials
      }).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["finalize"])(function () {
        return _this4._inProgressUrlFetches.delete(url);
      }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["share"])());

      this._inProgressUrlFetches.set(url, req);

      return req;
    }
    /**
     * Registers an icon config by name in the specified namespace.
     * @param namespace Namespace in which to register the icon config.
     * @param iconName Name under which to register the config.
     * @param config Config to be registered.
     */

  }, {
    key: "_addSvgIconConfig",
    value: function _addSvgIconConfig(namespace, iconName, config) {
      this._svgIconConfigs.set(iconKey(namespace, iconName), config);

      return this;
    }
    /**
     * Registers an icon set config in the specified namespace.
     * @param namespace Namespace in which to register the icon config.
     * @param config Config to be registered.
     */

  }, {
    key: "_addSvgIconSetConfig",
    value: function _addSvgIconSetConfig(namespace, config) {
      var configNamespace = this._iconSetConfigs.get(namespace);

      if (configNamespace) {
        configNamespace.push(config);
      } else {
        this._iconSetConfigs.set(namespace, [config]);
      }

      return this;
    }
    /** Parses a config's text into an SVG element. */

  }, {
    key: "_svgElementFromConfig",
    value: function _svgElementFromConfig(config) {
      if (!config.svgElement) {
        var svg = this._svgElementFromString(config.svgText);

        this._setSvgAttributes(svg, config.options);

        config.svgElement = svg;
      }

      return config.svgElement;
    }
  }]);

  return MatIconRegistry;
}();

MatIconRegistry.ɵfac = function MatIconRegistry_Factory(t) {
  return new (t || MatIconRegistry)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_11__["HttpClient"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["DomSanitizer"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"]));
};

MatIconRegistry.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"])({
  factory: function MatIconRegistry_Factory() {
    return new MatIconRegistry(Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_11__["HttpClient"], 8), Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"])(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["DomSanitizer"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"])(_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"], 8), Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"]));
  },
  token: MatIconRegistry,
  providedIn: "root"
});

MatIconRegistry.ctorParameters = function () {
  return [{
    type: _angular_common_http__WEBPACK_IMPORTED_MODULE_11__["HttpClient"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }]
  }, {
    type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["DomSanitizer"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"]]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatIconRegistry, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [{
      type: _angular_common_http__WEBPACK_IMPORTED_MODULE_11__["HttpClient"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }]
    }, {
      type: _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["DomSanitizer"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"]]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"]
    }];
  }, null);
})();
/** @docs-private */


function ICON_REGISTRY_PROVIDER_FACTORY(parentRegistry, httpClient, sanitizer, errorHandler, document) {
  return parentRegistry || new MatIconRegistry(httpClient, sanitizer, document, errorHandler);
}
/** @docs-private */


var ICON_REGISTRY_PROVIDER = {
  // If there is already an MatIconRegistry available, use that. Otherwise, provide a new one.
  provide: MatIconRegistry,
  deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_5__["SkipSelf"](), MatIconRegistry], [new _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"](), _angular_common_http__WEBPACK_IMPORTED_MODULE_11__["HttpClient"]], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_12__["DomSanitizer"], _angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"], [new _angular_core__WEBPACK_IMPORTED_MODULE_5__["Optional"](), _angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"]]],
  useFactory: ICON_REGISTRY_PROVIDER_FACTORY
};
/** Clones an SVGElement while preserving type information. */

function cloneSvg(svg) {
  return svg.cloneNode(true);
}
/** Returns the cache key to use for an icon namespace and name. */


function iconKey(namespace, name) {
  return namespace + ':' + name;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Boilerplate for applying mixins to MatIcon.

/** @docs-private */


var MatIconBase = function MatIconBase(_elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatIconBase);

  this._elementRef = _elementRef;
};

var _MatIconMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["mixinColor"])(MatIconBase);
/**
 * Injection token used to provide the current location to `MatIcon`.
 * Used to handle server-side rendering and to stub out during unit tests.
 * @docs-private
 */


var MAT_ICON_LOCATION = new _angular_core__WEBPACK_IMPORTED_MODULE_5__["InjectionToken"]('mat-icon-location', {
  providedIn: 'root',
  factory: MAT_ICON_LOCATION_FACTORY
});
/** @docs-private */

function MAT_ICON_LOCATION_FACTORY() {
  var _document = Object(_angular_core__WEBPACK_IMPORTED_MODULE_5__["inject"])(_angular_common__WEBPACK_IMPORTED_MODULE_8__["DOCUMENT"]);

  var _location = _document ? _document.location : null;

  return {
    // Note that this needs to be a function, rather than a property, because Angular
    // will only resolve it once, but we want the current path on each call.
    getPathname: function getPathname() {
      return _location ? _location.pathname + _location.search : '';
    }
  };
}
/** SVG attributes that accept a FuncIRI (e.g. `url(<something>)`). */


var funcIriAttributes = ['clip-path', 'color-profile', 'src', 'cursor', 'fill', 'filter', 'marker', 'marker-start', 'marker-mid', 'marker-end', 'mask', 'stroke'];

var ɵ0 = function ɵ0(attr) {
  return "[".concat(attr, "]");
};
/** Selector that can be used to find all elements that are using a `FuncIRI`. */


var funcIriAttributeSelector = funcIriAttributes.map(ɵ0).join(', ');
/** Regex that can be used to extract the id out of a FuncIRI. */

var funcIriPattern = /^url\(['"]?#(.*?)['"]?\)$/;
/**
 * Component to display an icon. It can be used in the following ways:
 *
 * - Specify the svgIcon input to load an SVG icon from a URL previously registered with the
 *   addSvgIcon, addSvgIconInNamespace, addSvgIconSet, or addSvgIconSetInNamespace methods of
 *   MatIconRegistry. If the svgIcon value contains a colon it is assumed to be in the format
 *   "[namespace]:[name]", if not the value will be the name of an icon in the default namespace.
 *   Examples:
 *     `<mat-icon svgIcon="left-arrow"></mat-icon>
 *     <mat-icon svgIcon="animals:cat"></mat-icon>`
 *
 * - Use a font ligature as an icon by putting the ligature text in the content of the `<mat-icon>`
 *   component. By default the Material icons font is used as described at
 *   http://google.github.io/material-design-icons/#icon-font-for-the-web. You can specify an
 *   alternate font by setting the fontSet input to either the CSS class to apply to use the
 *   desired font, or to an alias previously registered with MatIconRegistry.registerFontClassAlias.
 *   Examples:
 *     `<mat-icon>home</mat-icon>
 *     <mat-icon fontSet="myfont">sun</mat-icon>`
 *
 * - Specify a font glyph to be included via CSS rules by setting the fontSet input to specify the
 *   font, and the fontIcon input to specify the icon. Typically the fontIcon will specify a
 *   CSS class which causes the glyph to be displayed via a :before selector, as in
 *   https://fortawesome.github.io/Font-Awesome/examples/
 *   Example:
 *     `<mat-icon fontSet="fa" fontIcon="alarm"></mat-icon>`
 */

var MatIcon = /*#__PURE__*/function (_MatIconMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MatIcon, _MatIconMixinBase2);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MatIcon);

  function MatIcon(elementRef, _iconRegistry, ariaHidden, _location, _errorHandler) {
    var _this5;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatIcon);

    _this5 = _super.call(this, elementRef);
    _this5._iconRegistry = _iconRegistry;
    _this5._location = _location;
    _this5._errorHandler = _errorHandler;
    _this5._inline = false;
    /** Subscription to the current in-progress SVG icon request. */

    _this5._currentIconFetch = rxjs__WEBPACK_IMPORTED_MODULE_9__["Subscription"].EMPTY; // If the user has not explicitly set aria-hidden, mark the icon as hidden, as this is
    // the right thing to do for the majority of icon use-cases.

    if (!ariaHidden) {
      elementRef.nativeElement.setAttribute('aria-hidden', 'true');
    }

    return _this5;
  }
  /**
   * Whether the icon should be inlined, automatically sizing the icon to match the font size of
   * the element the icon is contained in.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__["default"])(MatIcon, [{
    key: "inline",
    get: function get() {
      return this._inline;
    },
    set: function set(inline) {
      this._inline = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_7__["coerceBooleanProperty"])(inline);
    }
    /** Font set that the icon is a part of. */

  }, {
    key: "fontSet",
    get: function get() {
      return this._fontSet;
    },
    set: function set(value) {
      this._fontSet = this._cleanupFontValue(value);
    }
    /** Name of an icon within a font set. */

  }, {
    key: "fontIcon",
    get: function get() {
      return this._fontIcon;
    },
    set: function set(value) {
      this._fontIcon = this._cleanupFontValue(value);
    }
    /**
     * Splits an svgIcon binding value into its icon set and icon name components.
     * Returns a 2-element array of [(icon set), (icon name)].
     * The separator for the two fields is ':'. If there is no separator, an empty
     * string is returned for the icon set and the entire value is returned for
     * the icon name. If the argument is falsy, returns an array of two empty strings.
     * Throws an error if the name contains two or more ':' separators.
     * Examples:
     *   `'social:cake' -> ['social', 'cake']
     *   'penguin' -> ['', 'penguin']
     *   null -> ['', '']
     *   'a:b:c' -> (throws Error)`
     */

  }, {
    key: "_splitIconName",
    value: function _splitIconName(iconName) {
      if (!iconName) {
        return ['', ''];
      }

      var parts = iconName.split(':');

      switch (parts.length) {
        case 1:
          return ['', parts[0]];
        // Use default namespace.

        case 2:
          return parts;

        default:
          throw Error("Invalid icon name: \"".concat(iconName, "\""));
        // TODO: add an ngDevMode check
      }
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var _this6 = this;

      // Only update the inline SVG icon if the inputs changed, to avoid unnecessary DOM operations.
      var svgIconChanges = changes['svgIcon'];
      this._svgNamespace = null;
      this._svgName = null;

      if (svgIconChanges) {
        this._currentIconFetch.unsubscribe();

        if (this.svgIcon) {
          var _this$_splitIconName = this._splitIconName(this.svgIcon),
              _this$_splitIconName2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__["default"])(_this$_splitIconName, 2),
              namespace = _this$_splitIconName2[0],
              iconName = _this$_splitIconName2[1];

          if (namespace) {
            this._svgNamespace = namespace;
          }

          if (iconName) {
            this._svgName = iconName;
          }

          this._currentIconFetch = this._iconRegistry.getNamedSvgIcon(iconName, namespace).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_10__["take"])(1)).subscribe(function (svg) {
            return _this6._setSvgElement(svg);
          }, function (err) {
            var errorMessage = "Error retrieving icon ".concat(namespace, ":").concat(iconName, "! ").concat(err.message);

            _this6._errorHandler.handleError(new Error(errorMessage));
          });
        } else if (svgIconChanges.previousValue) {
          this._clearSvgElement();
        }
      }

      if (this._usingFontIcon()) {
        this._updateFontIconClasses();
      }
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      // Update font classes because ngOnChanges won't be called if none of the inputs are present,
      // e.g. <mat-icon>arrow</mat-icon> In this case we need to add a CSS class for the default font.
      if (this._usingFontIcon()) {
        this._updateFontIconClasses();
      }
    }
  }, {
    key: "ngAfterViewChecked",
    value: function ngAfterViewChecked() {
      var cachedElements = this._elementsWithExternalReferences;

      if (cachedElements && cachedElements.size) {
        var newPath = this._location.getPathname(); // We need to check whether the URL has changed on each change detection since
        // the browser doesn't have an API that will let us react on link clicks and
        // we can't depend on the Angular router. The references need to be updated,
        // because while most browsers don't care whether the URL is correct after
        // the first render, Safari will break if the user navigates to a different
        // page and the SVG isn't re-rendered.


        if (newPath !== this._previousPath) {
          this._previousPath = newPath;

          this._prependPathToReferences(newPath);
        }
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._currentIconFetch.unsubscribe();

      if (this._elementsWithExternalReferences) {
        this._elementsWithExternalReferences.clear();
      }
    }
  }, {
    key: "_usingFontIcon",
    value: function _usingFontIcon() {
      return !this.svgIcon;
    }
  }, {
    key: "_setSvgElement",
    value: function _setSvgElement(svg) {
      this._clearSvgElement(); // Workaround for IE11 and Edge ignoring `style` tags inside dynamically-created SVGs.
      // See: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/10898469/
      // Do this before inserting the element into the DOM, in order to avoid a style recalculation.


      var styleTags = svg.querySelectorAll('style');

      for (var i = 0; i < styleTags.length; i++) {
        styleTags[i].textContent += ' ';
      } // Note: we do this fix here, rather than the icon registry, because the
      // references have to point to the URL at the time that the icon was created.


      var path = this._location.getPathname();

      this._previousPath = path;

      this._cacheChildrenWithExternalReferences(svg);

      this._prependPathToReferences(path);

      this._elementRef.nativeElement.appendChild(svg);
    }
  }, {
    key: "_clearSvgElement",
    value: function _clearSvgElement() {
      var layoutElement = this._elementRef.nativeElement;
      var childCount = layoutElement.childNodes.length;

      if (this._elementsWithExternalReferences) {
        this._elementsWithExternalReferences.clear();
      } // Remove existing non-element child nodes and SVGs, and add the new SVG element. Note that
      // we can't use innerHTML, because IE will throw if the element has a data binding.


      while (childCount--) {
        var child = layoutElement.childNodes[childCount]; // 1 corresponds to Node.ELEMENT_NODE. We remove all non-element nodes in order to get rid
        // of any loose text nodes, as well as any SVG elements in order to remove any old icons.

        if (child.nodeType !== 1 || child.nodeName.toLowerCase() === 'svg') {
          layoutElement.removeChild(child);
        }
      }
    }
  }, {
    key: "_updateFontIconClasses",
    value: function _updateFontIconClasses() {
      if (!this._usingFontIcon()) {
        return;
      }

      var elem = this._elementRef.nativeElement;
      var fontSetClass = this.fontSet ? this._iconRegistry.classNameForFontAlias(this.fontSet) : this._iconRegistry.getDefaultFontSetClass();

      if (fontSetClass != this._previousFontSetClass) {
        if (this._previousFontSetClass) {
          elem.classList.remove(this._previousFontSetClass);
        }

        if (fontSetClass) {
          elem.classList.add(fontSetClass);
        }

        this._previousFontSetClass = fontSetClass;
      }

      if (this.fontIcon != this._previousFontIconClass) {
        if (this._previousFontIconClass) {
          elem.classList.remove(this._previousFontIconClass);
        }

        if (this.fontIcon) {
          elem.classList.add(this.fontIcon);
        }

        this._previousFontIconClass = this.fontIcon;
      }
    }
    /**
     * Cleans up a value to be used as a fontIcon or fontSet.
     * Since the value ends up being assigned as a CSS class, we
     * have to trim the value and omit space-separated values.
     */

  }, {
    key: "_cleanupFontValue",
    value: function _cleanupFontValue(value) {
      return typeof value === 'string' ? value.trim().split(' ')[0] : value;
    }
    /**
     * Prepends the current path to all elements that have an attribute pointing to a `FuncIRI`
     * reference. This is required because WebKit browsers require references to be prefixed with
     * the current path, if the page has a `base` tag.
     */

  }, {
    key: "_prependPathToReferences",
    value: function _prependPathToReferences(path) {
      var elements = this._elementsWithExternalReferences;

      if (elements) {
        elements.forEach(function (attrs, element) {
          attrs.forEach(function (attr) {
            element.setAttribute(attr.name, "url('".concat(path, "#").concat(attr.value, "')"));
          });
        });
      }
    }
    /**
     * Caches the children of an SVG element that have `url()`
     * references that we need to prefix with the current path.
     */

  }, {
    key: "_cacheChildrenWithExternalReferences",
    value: function _cacheChildrenWithExternalReferences(element) {
      var elementsWithFuncIri = element.querySelectorAll(funcIriAttributeSelector);
      var elements = this._elementsWithExternalReferences = this._elementsWithExternalReferences || new Map();

      var _loop = function _loop(i) {
        funcIriAttributes.forEach(function (attr) {
          var elementWithReference = elementsWithFuncIri[i];
          var value = elementWithReference.getAttribute(attr);
          var match = value ? value.match(funcIriPattern) : null;

          if (match) {
            var attributes = elements.get(elementWithReference);

            if (!attributes) {
              attributes = [];
              elements.set(elementWithReference, attributes);
            }

            attributes.push({
              name: attr,
              value: match[1]
            });
          }
        });
      };

      for (var i = 0; i < elementsWithFuncIri.length; i++) {
        _loop(i);
      }
    }
  }]);

  return MatIcon;
}(_MatIconMixinBase);

MatIcon.ɵfac = function MatIcon_Factory(t) {
  return new (t || MatIcon)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](MatIconRegistry), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinjectAttribute"]('aria-hidden'), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](MAT_ICON_LOCATION), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"]));
};

MatIcon.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineComponent"]({
  type: MatIcon,
  selectors: [["mat-icon"]],
  hostAttrs: ["role", "img", 1, "mat-icon", "notranslate"],
  hostVars: 7,
  hostBindings: function MatIcon_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵattribute"]("data-mat-icon-type", ctx._usingFontIcon() ? "font" : "svg")("data-mat-icon-name", ctx._svgName || ctx.fontIcon)("data-mat-icon-namespace", ctx._svgNamespace || ctx.fontSet);
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵclassProp"]("mat-icon-inline", ctx.inline)("mat-icon-no-color", ctx.color !== "primary" && ctx.color !== "accent" && ctx.color !== "warn");
    }
  },
  inputs: {
    color: "color",
    inline: "inline",
    fontSet: "fontSet",
    fontIcon: "fontIcon",
    svgIcon: "svgIcon"
  },
  exportAs: ["matIcon"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c0,
  decls: 1,
  vars: 0,
  template: function MatIcon_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵprojection"](0);
    }
  },
  styles: [".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatIcon.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
  }, {
    type: MatIconRegistry
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Attribute"],
      args: ['aria-hidden']
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
      args: [MAT_ICON_LOCATION]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"]
  }];
};

MatIcon.propDecorators = {
  inline: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  svgIcon: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  fontSet: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }],
  fontIcon: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatIcon, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Component"],
    args: [{
      template: '<ng-content></ng-content>',
      selector: 'mat-icon',
      exportAs: 'matIcon',
      inputs: ['color'],
      host: {
        'role': 'img',
        'class': 'mat-icon notranslate',
        '[attr.data-mat-icon-type]': '_usingFontIcon() ? "font" : "svg"',
        '[attr.data-mat-icon-name]': '_svgName || fontIcon',
        '[attr.data-mat-icon-namespace]': '_svgNamespace || fontSet',
        '[class.mat-icon-inline]': 'inline',
        '[class.mat-icon-no-color]': 'color !== "primary" && color !== "accent" && color !== "warn"'
      },
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-icon{background-repeat:no-repeat;display:inline-block;fill:currentColor;height:24px;width:24px}.mat-icon.mat-icon-inline{font-size:inherit;height:inherit;line-height:inherit;width:inherit}[dir=rtl] .mat-icon-rtl-mirror{transform:scale(-1, 1)}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon{display:block}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-icon{margin:auto}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ElementRef"]
    }, {
      type: MatIconRegistry
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Attribute"],
        args: ['aria-hidden']
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Inject"],
        args: [MAT_ICON_LOCATION]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["ErrorHandler"]
    }];
  }, {
    inline: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    fontSet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    fontIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }],
    svgIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatIconModule = function MatIconModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, MatIconModule);
};

MatIconModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineNgModule"]({
  type: MatIconModule
});
MatIconModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjector"]({
  factory: function MatIconModule_Factory(t) {
    return new (t || MatIconModule)();
  },
  imports: [[_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵsetNgModuleScope"](MatIconModule, {
    declarations: function declarations() {
      return [MatIcon];
    },
    imports: function imports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]];
    },
    exports: function exports() {
      return [MatIcon, _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵsetClassMetadata"](MatIconModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_5__["NgModule"],
    args: [{
      imports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]],
      exports: [MatIcon, _angular_material_core__WEBPACK_IMPORTED_MODULE_6__["MatCommonModule"]],
      declarations: [MatIcon]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "NK4k":
/*!*****************************************************************!*\
  !*** ./src/app/core/components/admin/log/logDto.component.scss ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".card .card-header .card-title {\n  margin-bottom: 3px !important;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGxvZ0R0by5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLDZCQUFBO0FBQ0oiLCJmaWxlIjoibG9nRHRvLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNhcmQgLmNhcmQtaGVhZGVyIC5jYXJkLXRpdGxlIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDNweCAhaW1wb3J0YW50O1xyXG59Il19 */");

/***/ }),

/***/ "PD0Y":
/*!***************************************************************************!*\
  !*** ./src/app/core/components/screens/visit-add/visit-add.component.css ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".status-tables {\r\n    margin-top: 32px;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 24px;\r\n  }\r\n  \r\n  .status-table {\r\n    margin-bottom: 24px;\r\n  }\r\n  \r\n  .mr-2 {\r\n    margin-right: 8px;\r\n  }\r\n  \r\n  @-webkit-keyframes highlight {\r\n    0% {\r\n      background-color: #72c579; \r\n    }\r\n    100% {\r\n      background-color: white;\r\n    }\r\n    50% {\r\n      background-color: #72c579;\r\n    }\r\n    75% {\r\n      background-color: #72c579;\r\n    }\r\n    100% {\r\n      background-color: white;\r\n    }\r\n  }\r\n  \r\n  @keyframes highlight {\r\n    0% {\r\n      background-color: #72c579; \r\n    }\r\n    100% {\r\n      background-color: white;\r\n    }\r\n    50% {\r\n      background-color: #72c579;\r\n    }\r\n    75% {\r\n      background-color: #72c579;\r\n    }\r\n    100% {\r\n      background-color: white;\r\n    }\r\n  }\r\n  \r\n  .highlight {\r\n    -webkit-animation: highlight 2s infinite;\r\n            animation: highlight 2s infinite;\r\n  }\r\n  \r\n  .card-category {\r\n    font-size: 14px;\r\n    margin-top: 15px !important;\r\n    padding: 10px 15px !important;\r\n  }\r\n  \r\n  mat-chip {\r\n    min-height: 24px;\r\n    padding: 4px 12px;\r\n    pointer-events: none !important;\r\n  }\r\n  \r\n  .visitors-container {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 12px;\r\n  }\r\n  \r\n  .visitors-list {\r\n    flex: 1;\r\n  }\r\n  \r\n  .total-visitors mat-chip {\r\n    font-size: 12px !important;\r\n    pointer-events: none !important;\r\n  }\r\n  \r\n  .no-data-message {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 32px;\r\n    text-align: center;\r\n    background: #f5f5f5;\r\n    border-radius: 8px;\r\n    margin: 16px 0;\r\n  }\r\n  \r\n  .no-data-message mat-icon {\r\n    font-size: 48px;\r\n    width: 48px;\r\n    height: 48px;\r\n    color: #9e9e9e;\r\n    margin-bottom: 16px;\r\n  }\r\n  \r\n  .no-data-message p {\r\n    color: #666;\r\n    font-size: 16px;\r\n    margin: 0;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .no-data-message {\r\n      padding: 24px;\r\n    }\r\n  \r\n    .no-data-message mat-icon {\r\n      font-size: 36px;\r\n      width: 36px;\r\n      height: 36px;\r\n      margin-bottom: 12px;\r\n    }\r\n  \r\n    .no-data-message p {\r\n      font-size: 14px;\r\n    }\r\n  }\r\n  \r\n  /* Snackbar stilleri */\r\n  \r\n  ::ng-deep .success-snackbar {\r\n    background: #4caf50;\r\n    color: white;\r\n  }\r\n  \r\n  ::ng-deep .error-snackbar {\r\n    background: #f44336;\r\n    color: white;\r\n  }\r\n  \r\n  ::ng-deep .success-snackbar .mat-simple-snackbar-action,\r\n  ::ng-deep .error-snackbar .mat-simple-snackbar-action {\r\n    color: white;\r\n  }\r\n  \r\n  /* Ziyaretçi bilgileri için stiller */\r\n  \r\n  .visitor-info {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    gap: 12px;\r\n    padding: 8px 0;\r\n  }\r\n  \r\n  .visitor-names {\r\n    flex: 1;\r\n    font-size: 14px;\r\n  }\r\n  \r\n  .visitor-count {\r\n    min-height: 24px;\r\n    padding: 4px 12px;\r\n    font-size: 12px !important;\r\n  }\r\n  \r\n  /* Araç/Yaya chip'leri için stiller */\r\n  \r\n  .vehicle-chip {\r\n    background: #e8f5e9 !important;\r\n    color: #2e7d32 !important;\r\n    min-height: 24px;\r\n    padding: 4px 12px;\r\n  }\r\n  \r\n  .pedestrian-chip {\r\n    background: #f5f5f5 !important;\r\n    color: #616161 !important;\r\n    min-height: 24px;\r\n    padding: 4px 12px;\r\n  }\r\n  \r\n  .vehicle-chip mat-icon,\r\n  .pedestrian-chip mat-icon {\r\n    font-size: 18px;\r\n    height: 18px;\r\n    width: 18px;\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  /* Tablo hücresi düzenlemeleri */\r\n  \r\n  .mat-cell {\r\n    padding: 12px 16px;\r\n  }\r\n  \r\n  .mat-header-cell {\r\n    padding: 0 16px;\r\n    font-weight: 500;\r\n    color: rgba(0, 0, 0, 0.87);\r\n  }\r\n  \r\n  /* Chip listesi düzenlemeleri */\r\n  \r\n  mat-chip-list {\r\n    pointer-events: none;\r\n  }\r\n  \r\n  mat-chip {\r\n    pointer-events: none !important;\r\n  }\r\n  \r\n  /* Tablo genel stilleri */\r\n  \r\n  .mat-elevation-z8 {\r\n    border-radius: 8px;\r\n    overflow: hidden;\r\n  }\r\n  \r\n  table {\r\n    width: 100%;\r\n  }\r\n  \r\n  /* Responsive düzenlemeler */\r\n  \r\n  @media (max-width: 1024px) {\r\n    .status-tables {\r\n      grid-template-columns: 1fr;\r\n    }\r\n  \r\n    .card {\r\n      margin-bottom: 24px;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .container-fluid {\r\n      padding: 16px !important;\r\n    }\r\n  \r\n    .card-header {\r\n      margin: -15px 10px 0;\r\n      padding: 12px !important;\r\n    }\r\n  \r\n    .card-title {\r\n      font-size: 18px;\r\n    }\r\n  \r\n    .card-category {\r\n      font-size: 14px;\r\n      margin-top: 15px !important;\r\n      padding: 10px 15px !important;\r\n    }\r\n  \r\n    .mat-table {\r\n      display: block;\r\n      overflow-x: auto;\r\n      white-space: nowrap;\r\n    }\r\n  \r\n    .mat-cell,\r\n    .mat-header-cell {\r\n      padding: 8px !important;\r\n    }\r\n  \r\n    .visitor-info {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n      gap: 8px;\r\n    }\r\n  \r\n    .visitor-chips {\r\n      width: 100%;\r\n      margin-bottom: 8px;\r\n    }\r\n  \r\n    .total-visitor-chip {\r\n      width: auto;\r\n    }\r\n  \r\n    .mat-chip {\r\n      font-size: 12px !important;\r\n      height: 24px !important;\r\n    }\r\n  \r\n    .mat-chip mat-icon {\r\n      font-size: 14px;\r\n      height: 14px;\r\n      width: 14px;\r\n    }\r\n  \r\n    .date-tabs {\r\n      display: flex;\r\n      flex-wrap: wrap;\r\n      gap: 8px;\r\n      margin-bottom: 16px;\r\n    }\r\n  \r\n    .date-tabs button {\r\n      flex: 1;\r\n      min-width: 0;\r\n      padding: 4px 8px;\r\n      font-size: 13px;\r\n    }\r\n  \r\n    .mat-form-field {\r\n      margin-bottom: 16px;\r\n    }\r\n  \r\n    .mat-paginator {\r\n      font-size: 12px;\r\n    }\r\n  \r\n    .mat-paginator-page-size {\r\n      margin-right: 8px;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: 480px) {\r\n    .container-fluid {\r\n      padding: 8px !important;\r\n    }\r\n  \r\n    .card {\r\n      margin-bottom: 16px;\r\n    }\r\n  \r\n    .card-header {\r\n      margin: -10px 5px 0;\r\n      padding: 10px !important;\r\n    }\r\n  \r\n    .mat-cell,\r\n    .mat-header-cell {\r\n      padding: 6px !important;\r\n      font-size: 12px;\r\n    }\r\n  \r\n    .mat-chip {\r\n      font-size: 11px !important;\r\n      height: 22px !important;\r\n      padding: 2px 8px !important;\r\n    }\r\n  \r\n    .mat-chip mat-icon {\r\n      font-size: 12px;\r\n      height: 12px;\r\n      width: 12px;\r\n      margin-right: 2px;\r\n    }\r\n  \r\n    .date-tabs button {\r\n      font-size: 12px;\r\n      padding: 2px 6px;\r\n    }\r\n  \r\n    .mat-form-field {\r\n      font-size: 14px;\r\n    }\r\n  \r\n    .mat-paginator-page-size-select {\r\n      margin: 0 4px;\r\n    }\r\n  }\r\n  \r\n  /* Tablo stilleri */\r\n  \r\n  .mat-table {\r\n    width: 100%;\r\n    background: white;\r\n  }\r\n  \r\n  .mat-row:hover {\r\n    background: #f5f5f5;\r\n  }\r\n  \r\n  /* Chip stilleri */\r\n  \r\n  .mat-chip-list {\r\n    display: inline-flex;\r\n  }\r\n  \r\n  .mat-chip {\r\n    font-size: 13px !important;\r\n    height: 24px !important;\r\n    line-height: 24px !important;\r\n  }\r\n  \r\n  .visitor-count {\r\n    background: #e3f2fd !important;\r\n    color: #1976d2 !important;\r\n  }\r\n  \r\n  .vehicle-chip mat-icon,\r\n  .pedestrian-chip mat-icon {\r\n    margin-right: 4px;\r\n    font-size: 16px;\r\n    width: 16px;\r\n    height: 16px;\r\n    vertical-align: text-bottom;\r\n  }\r\n  \r\n  /* Card stilleri */\r\n  \r\n  .card-header {\r\n    padding: 15px !important;\r\n    margin: -20px 15px 0;\r\n  }\r\n  \r\n  .card-header-success {\r\n    background: linear-gradient(60deg, #66bb6a, #43a047);\r\n  }\r\n  \r\n  .card-header-danger {\r\n    background: linear-gradient(60deg, #ef5350, #e53935);\r\n  }\r\n  \r\n  /* Tablo container stilleri */\r\n  \r\n  .mat-elevation-z8 {\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1) !important;\r\n  }\r\n  \r\n  .visitor-chips {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 8px;\r\n    flex: 1;\r\n  }\r\n  \r\n  .visitor-icon {\r\n    font-size: 16px;\r\n    height: 16px;\r\n    width: 16px;\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  .primary-visitor-chip {\r\n    background: #e3f2fd !important;\r\n    color: #1976d2 !important;\r\n    font-weight: 500;\r\n    min-height: 28px;\r\n  }\r\n  \r\n  .secondary-visitor-chip {\r\n    background: #f5f5f5 !important;\r\n    color: #616161 !important;\r\n    min-height: 28px;\r\n  }\r\n  \r\n  .total-visitor-chip {\r\n    background: #e8f5e9 !important;\r\n    color: #2e7d32 !important;\r\n    font-size: 12px !important;\r\n    min-height: 24px;\r\n    padding: 0 8px;\r\n  }\r\n  \r\n  .total-visitor-chip mat-icon {\r\n    font-size: 16px;\r\n    height: 16px;\r\n    width: 16px;\r\n    margin-right: 4px;\r\n  }\r\n  \r\n  /* Responsive tasarım için */\r\n  \r\n  @media (max-width: 768px) {\r\n    .visitor-info {\r\n      flex-direction: column;\r\n      align-items: flex-start;\r\n    }\r\n  \r\n    .visitor-chips {\r\n      margin-bottom: 8px;\r\n    }\r\n  \r\n    .total-visitor-chip {\r\n      align-self: flex-end;\r\n    }\r\n  }\r\n  \r\n  /* Hover efekti */\r\n  \r\n  .mat-chip {\r\n    transition: transform 0.2s ease;\r\n  }\r\n  \r\n  .mat-chip:hover {\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  }\r\n  \r\n  /* Chip içindeki ikonların hizalaması */\r\n  \r\n  .mat-chip mat-icon {\r\n    vertical-align: middle;\r\n  }\r\n  \r\n  /* Chip listesi container'ı */\r\n  \r\n  .mat-chip-list {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 6px;\r\n  }\r\n  \r\n  .visitor-actions {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n  }\r\n  \r\n  .visitor-actions button {\r\n    min-width: 36px;\r\n    width: 36px;\r\n    height: 36px;\r\n    padding: 0;\r\n    margin-left: 4px;\r\n  }\r\n  \r\n  .visitor-actions button mat-icon {\r\n    font-size: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    line-height: 20px;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .visitor-actions {\r\n      width: 100%;\r\n      justify-content: space-between;\r\n    }\r\n    \r\n    .visitor-actions button {\r\n      min-width: 32px;\r\n      width: 32px;\r\n      height: 32px;\r\n    }\r\n  \r\n    .visitor-actions button mat-icon {\r\n      font-size: 18px;\r\n      width: 18px;\r\n      height: 18px;\r\n      line-height: 18px;\r\n    }\r\n  }\r\n  \r\n  .show-all-btn {\r\n    display: flex;\r\n    align-items: center;\r\n    gap: 8px;\r\n    padding: 4px 12px;\r\n    height: 32px;\r\n    font-size: 13px;\r\n    border-radius: 16px;\r\n    background: white;\r\n    transition: all 0.2s ease;\r\n    color: #1976d2;\r\n  }\r\n  \r\n  .show-all-btn:hover {\r\n    background: #1976d2;\r\n    color: black;\r\n    transform: translateY(-1px);\r\n    box-shadow: 0 2px 4px rgba(0,0,0,0.1);\r\n  }\r\n  \r\n  .show-all-btn:hover mat-icon {\r\n    color: white;\r\n  }\r\n  \r\n  .show-all-btn mat-icon {\r\n    font-size: 18px;\r\n    width: 18px;\r\n    height: 18px;\r\n    margin: 0;\r\n    color: #1976d2;\r\n    transition: color 0.2s ease;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .show-all-btn {\r\n      padding: 4px 8px;\r\n      height: 28px;\r\n      font-size: 12px;\r\n    }\r\n  \r\n    .show-all-btn mat-icon {\r\n      font-size: 16px;\r\n      width: 16px;\r\n      height: 16px;\r\n    }\r\n  }\r\n  \r\n  /* Tarih seçim butonları */\r\n  \r\n  .date-tabs {\r\n    display: flex;\r\n    justify-content: center;\r\n    gap: 16px;\r\n    margin: 24px auto;\r\n    max-width: 600px;\r\n    background: #f5f5f5;\r\n    padding: 8px;\r\n    border-radius: 12px;\r\n  }\r\n  \r\n  .date-tabs button {\r\n    flex: 1;\r\n    min-width: 140px;\r\n    padding: 12px 24px;\r\n    border-radius: 8px;\r\n    border: none;\r\n    background: transparent;\r\n    color: #666;\r\n    font-weight: 500;\r\n    transition: all 0.3s ease;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 8px;\r\n    position: relative;\r\n    overflow: hidden;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .date-tabs button.active {\r\n    background: #ab47bc !important;\r\n    color: white !important;\r\n    box-shadow: 0 4px 12px rgba(171, 71, 188, 0.2);\r\n    transform: translateY(-1px);\r\n  }\r\n  \r\n  .date-tabs button.active mat-icon {\r\n    color: white !important;\r\n    transform: scale(1.1);\r\n  }\r\n  \r\n  .date-tabs button.active span {\r\n    color: white !important;\r\n    transform: scale(1.05);\r\n  }\r\n  \r\n  .date-tabs button:not(.active):hover {\r\n    background: rgba(171, 71, 188, 0.1);\r\n    color: #ab47bc;\r\n    transform: translateY(-1px);\r\n  }\r\n  \r\n  .date-tabs button mat-icon {\r\n    font-size: 20px;\r\n    width: 20px;\r\n    height: 20px;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  .date-tabs button:hover mat-icon {\r\n    transform: translateY(-2px);\r\n  }\r\n  \r\n  .date-tabs button span {\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    transition: all 0.3s ease;\r\n  }\r\n  \r\n  @media (max-width: 768px) {\r\n    .date-tabs {\r\n      flex-direction: row;\r\n      flex-wrap: wrap;\r\n      gap: 8px;\r\n      padding: 8px;\r\n      margin: 16px auto;\r\n    }\r\n  \r\n    .date-tabs button {\r\n      min-width: 0;\r\n      padding: 8px 16px;\r\n      font-size: 13px;\r\n    }\r\n  \r\n    .date-tabs button mat-icon {\r\n      font-size: 18px;\r\n      width: 18px;\r\n      height: 18px;\r\n    }\r\n  }\r\n  \r\n  @media (max-width: 480px) {\r\n    .date-tabs {\r\n      flex-direction: column;\r\n      width: 100%;\r\n    }\r\n  \r\n    .date-tabs button {\r\n      width: 100%;\r\n      padding: 10px;\r\n    }\r\n  }\r\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "PMyv":
/*!***********************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/TextMessageFormat.js ***!
  \***********************************************************************/
/*! exports provided: TextMessageFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TextMessageFormat", function() { return TextMessageFormat; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");


// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// Not exported from index

/** @private */
var TextMessageFormat = /*#__PURE__*/function () {
  function TextMessageFormat() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, TextMessageFormat);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(TextMessageFormat, null, [{
    key: "write",
    value: function write(output) {
      return "".concat(output).concat(TextMessageFormat.RecordSeparator);
    }
  }, {
    key: "parse",
    value: function parse(input) {
      if (input[input.length - 1] !== TextMessageFormat.RecordSeparator) {
        throw new Error("Message is incomplete.");
      }

      var messages = input.split(TextMessageFormat.RecordSeparator);
      messages.pop();
      return messages;
    }
  }]);

  return TextMessageFormat;
}();
TextMessageFormat.RecordSeparatorCode = 0x1e;
TextMessageFormat.RecordSeparator = String.fromCharCode(TextMessageFormat.RecordSeparatorCode);

/***/ }),

/***/ "QXas":
/*!***********************************************************************!*\
  !*** ./src/app/core/components/admin/group/Services/group.service.ts ***!
  \***********************************************************************/
/*! exports provided: GroupService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupService", function() { return GroupService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var GroupService = /** @class */ (function () {
    function GroupService(_httpClient) {
        this._httpClient = _httpClient;
    }
    GroupService.prototype.getGroupList = function () {
        return this._httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/groups/");
    };
    GroupService.prototype.getGroupById = function (id) {
        return this._httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/groups/" + id));
    };
    GroupService.prototype.getGroupClaims = function (id) {
        return this._httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/group-claims/groups/" + id));
    };
    GroupService.prototype.getGroupUsers = function (id) {
        return this._httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/user-groups/groups/" + id + "/users"));
    };
    GroupService.prototype.addGroup = function (group) {
        var result = this._httpClient.post(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/groups/", group, { responseType: "text" });
        return result;
    };
    GroupService.prototype.updateGroup = function (group) {
        var result = this._httpClient.put(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/groups/", group, { responseType: "text" });
        return result;
    };
    GroupService.prototype.deleteGroup = function (id) {
        return this._httpClient.request("delete", _environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/groups/" + id));
    };
    GroupService.prototype.saveGroupClaims = function (groupId, claims) {
        var result = this._httpClient.put(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/group-claims/", { GroupId: groupId, ClaimIds: claims }, { responseType: "text" });
        return result;
    };
    GroupService.prototype.saveGroupUsers = function (groupId, userIds) {
        var result = this._httpClient.put(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/user-groups/groups/", { GroupId: groupId, UserIds: userIds }, { responseType: "text" });
        return result;
    };
    GroupService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    GroupService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: "root",
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], GroupService);
    return GroupService;
}());



/***/ }),

/***/ "Rlqr":
/*!****************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/HttpClient.js ***!
  \****************************************************************/
/*! exports provided: HttpResponse, HttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpResponse", function() { return HttpResponse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpClient", function() { return HttpClient; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");



// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

/** Represents an HTTP response. */
var HttpResponse = function HttpResponse(statusCode, statusText, content) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, HttpResponse);

  this.statusCode = statusCode;
  this.statusText = statusText;
  this.content = content;
};
/** Abstraction over an HTTP client.
 *
 * This class provides an abstraction over an HTTP client so that a different implementation can be provided on different platforms.
 */

var HttpClient = /*#__PURE__*/function () {
  function HttpClient() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__["default"])(this, HttpClient);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(HttpClient, [{
    key: "get",
    value: function get(url, options) {
      return this.send(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {}, {
        method: "GET",
        url: url
      }));
    }
  }, {
    key: "post",
    value: function post(url, options) {
      return this.send(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {}, {
        method: "POST",
        url: url
      }));
    }
  }, {
    key: "delete",
    value: function _delete(url, options) {
      return this.send(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])({}, options), {}, {
        method: "DELETE",
        url: url
      }));
    }
    /** Gets all cookies that apply to the specified URL.
     *
     * @param url The URL that the cookies are valid for.
     * @returns {string} A string containing all the key-value cookie pairs for the specified URL.
     */
    // @ts-ignore

  }, {
    key: "getCookieString",
    value: function getCookieString(url) {
      return "";
    }
  }]);

  return HttpClient;
}();

/***/ }),

/***/ "Ry6g":
/*!*****************************************************************!*\
  !*** ./src/app/core/components/admin/banuLog/models/BanuLog.ts ***!
  \*****************************************************************/
/*! exports provided: BanuLog */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BanuLog", function() { return BanuLog; });
var BanuLog = /** @class */ (function () {
    function BanuLog() {
    }
    return BanuLog;
}());



/***/ }),

/***/ "TAJw":
/*!******************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/screens/security-transactions/security-transactions.component.html ***!
  \******************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid\" style=\"padding-top: 35px;\">\r\n  <div class=\"card\">\r\n    <div class=\"card-header card-header-primary\">\r\n      <h4 class=\"card-title\">Güvenlik İşlemleri</h4>\r\n      <p class=\"card-category\">Ziyaretçi Giriş/Çıkış Takibi</p>\r\n    </div>\r\n    <div class=\"card-body\">\r\n      <!-- Tab Butonları -->\r\n      <div class=\"date-tabs\">\r\n        <button mat-button \r\n                [class.active]=\"selectedTab === 'today'\"\r\n                (click)=\"filterByDate('today')\">\r\n          <mat-icon>today</mat-icon>\r\n          <span>Bugün</span>\r\n        </button>\r\n        <button mat-button \r\n                [class.active]=\"selectedTab === 'tomorrow'\"\r\n                (click)=\"filterByDate('tomorrow')\">\r\n          <mat-icon>event</mat-icon>\r\n          <span>Yarın</span>\r\n        </button>\r\n        <button mat-button \r\n                [class.active]=\"selectedTab === 'twoDaysLater'\"\r\n                (click)=\"filterByDate('twoDaysLater')\">\r\n          <mat-icon>event_note</mat-icon>\r\n          <span>2 Gün Sonraki</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!-- Arama Alanı -->\r\n      <mat-form-field appearance=\"outline\" class=\"w-100\">\r\n        <mat-label>Ara</mat-label>\r\n        <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"İsim, soyisim veya plaka ile arama yapın\" #input>\r\n        <mat-icon matSuffix>search</mat-icon>\r\n      </mat-form-field>\r\n\r\n      <!-- Tablo -->\r\n      <div class=\"mat-elevation-z8\">\r\n        <table mat-table [dataSource]=\"dataSource\" matSort *ngIf=\"dataSource.data.length > 0\">\r\n          \r\n          <ng-container matColumnDef=\"visitors\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Ziyaretçiler </th>\r\n            <td mat-cell *matCellDef=\"let row\">\r\n              <div class=\"visitor-info\">\r\n                <div class=\"visitor-chips\">\r\n                  <mat-chip-list>\r\n                    <!-- Tüm ziyaretçiler -->\r\n                    <mat-chip *ngFor=\"let visitorName of (getAllVisitorNames(row)).visitorNames; let i = index\" \r\n                             [class.primary-visitor-chip]=\"i === 0\"\r\n                             [class.secondary-visitor-chip]=\"i !== 0\">\r\n                      <mat-icon class=\"visitor-icon\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\r\n                      {{visitorName}}\r\n                    </mat-chip>\r\n                  </mat-chip-list>\r\n                </div>\r\n                <div class=\"visitor-actions\">\r\n                  <mat-chip class=\"total-visitor-chip\">\r\n                    <mat-icon>group</mat-icon>\r\n                    {{(getAllVisitorNames(row)).totalVisitors}} Kişi\r\n                  </mat-chip>\r\n                  <button mat-stroked-button color=\"primary\" \r\n                          (click)=\"showAllVisitors(row)\"\r\n                          matTooltip=\"Tüm Ziyaretçileri Göster\"\r\n                          *ngIf=\"row.multiVisiters?.length > 2\"\r\n                          class=\"show-all-btn\">\r\n                    <mat-icon>people_alt</mat-icon>\r\n                    Tümünü Gör\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"licensePlate\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Araç/Yaya </th>\r\n            <td mat-cell *matCellDef=\"let row\">\r\n              <mat-chip-list>\r\n                <ng-container *ngIf=\"row.visit.vehicleEntry; else pedestrian\">\r\n                  <mat-chip class=\"vehicle-chip\">\r\n                    <mat-icon>directions_car</mat-icon>\r\n                    {{row.visit.visitorLicensePlate || 'Plaka Girilmemiş'}}\r\n                  </mat-chip>\r\n                </ng-container>\r\n                <ng-template #pedestrian>\r\n                  <mat-chip class=\"pedestrian-chip\">\r\n                    <mat-icon>directions_walk</mat-icon>\r\n                    Yaya\r\n                  </mat-chip>\r\n                </ng-template>\r\n              </mat-chip-list>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"entryDate\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Giriş Tarihi </th>\r\n            <td mat-cell *matCellDef=\"let row\"> \r\n              {{row.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}} \r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"exitDate\">\r\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Çıkış Tarihi </th>\r\n            <td mat-cell *matCellDef=\"let row\"> \r\n              {{row.visit.visitEndDate && row.visit.visitEndDate !== '0001-01-01T00:00:00' ? \r\n                (row.visit.visitEndDate | date:'dd/MM/yyyy HH:mm') : 'Çıkış Yapılmadı'}} \r\n            </td>\r\n          </ng-container>\r\n\r\n          <ng-container matColumnDef=\"actions\">\r\n            <th mat-header-cell *matHeaderCellDef> İşlemler </th>\r\n            <td mat-cell *matCellDef=\"let row\">\r\n              <button mat-mini-fab color=\"primary\" class=\"mr-2\" \r\n                      (click)=\"approveVisit(row)\"\r\n                      [disabled]=\"row.status === 'approved'\"\r\n                      matTooltip=\"Ziyareti Onayla\">\r\n                <mat-icon>check</mat-icon>\r\n              </button>\r\n              <button mat-mini-fab color=\"warn\" \r\n                      (click)=\"rejectVisit(row)\"\r\n                      [disabled]=\"row.status === 'rejected'\"\r\n                      matTooltip=\"Ziyareti Reddet\">\r\n                <mat-icon>close</mat-icon>\r\n              </button>\r\n            </td>\r\n          </ng-container>\r\n\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n\r\n        <div class=\"no-data-message\" *ngIf=\"!dataSource.data.length\">\r\n          <mat-icon>info</mat-icon>\r\n          <p>Henüz bekleyen ziyaret bulunmamaktadır.</p>\r\n        </div>\r\n\r\n     \r\n      </div>\r\n\r\n      <div class=\"status-tables\">\r\n        <div class=\"status-table\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header card-header-success\">\r\n              <h4 class=\"card-title\">\r\n                <mat-icon>check_circle</mat-icon>\r\n                Onaylanan Ziyaretler\r\n              </h4>\r\n              <p class=\"card-category\">Ziyaret Durum</p>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"mat-elevation-z8\">\r\n                <table mat-table [dataSource]=\"approvedDataSource\" matSort #approvedSort=\"matSort\" *ngIf=\"approvedDataSource.data.length > 0\">\r\n                  \r\n                  <ng-container matColumnDef=\"visitors\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Ziyaretçiler </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                      <div class=\"visitor-info\">\r\n                        <div class=\"visitor-chips\">\r\n                          <mat-chip-list>\r\n                            <mat-chip *ngFor=\"let visitorName of (getAllVisitorNames(row)).visitorNames; let i = index\" \r\n                                     [class.primary-visitor-chip]=\"i === 0\"\r\n                                     [class.secondary-visitor-chip]=\"i !== 0\">\r\n                              <mat-icon class=\"visitor-icon\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\r\n                              {{visitorName}}\r\n                            </mat-chip>\r\n                          </mat-chip-list>\r\n                        </div>\r\n                        <div class=\"visitor-actions\">\r\n                          <mat-chip class=\"total-visitor-chip\">\r\n                            <mat-icon>group</mat-icon>\r\n                            {{getAllVisitorNames(row).totalVisitors}} Kişi\r\n                          </mat-chip>\r\n                          <button mat-stroked-button color=\"primary\" \r\n                                  (click)=\"showAllVisitors(row)\"\r\n                                  matTooltip=\"Tüm Ziyaretçileri Göster\"\r\n                                  *ngIf=\"row.multiVisiters?.length > 2\"\r\n                                  class=\"show-all-btn\">\r\n                            <mat-icon>people_alt</mat-icon>\r\n                            Tümünü Gör\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"licensePlate\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Araç/Yaya </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                      <mat-chip-list>\r\n                        <ng-container *ngIf=\"row.isVehicle; else pedestrianApproved\">\r\n                          <mat-chip class=\"vehicle-chip\">\r\n                            <mat-icon>directions_car</mat-icon>\r\n                            {{row.licensePlate}}\r\n                          </mat-chip>\r\n                        </ng-container>\r\n                        <ng-template #pedestrianApproved>\r\n                          <mat-chip class=\"pedestrian-chip\">\r\n                            <mat-icon>directions_walk</mat-icon>\r\n                            Yaya\r\n                          </mat-chip>\r\n                        </ng-template>\r\n                      </mat-chip-list>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"entryDate\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Giriş Tarihi </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.visit.visitStartDate| date:'dd/MM/yyyy HH:mm'}} </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"exitDate\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Çıkış Tarihi </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.visit.visitEndDate | date:'dd/MM/yyyy HH:mm' || 'Çıkış Yapılmadı'}} </td>\r\n                  </ng-container>\r\n\r\n                  <tr mat-header-row *matHeaderRowDef=\"approvedColumns\"></tr>\r\n                  <tr mat-row *matRowDef=\"let row; columns: approvedColumns;\"></tr>\r\n                </table>\r\n\r\n                <div class=\"no-data-message\" *ngIf=\"!approvedDataSource.data.length\">\r\n                  <mat-icon>info</mat-icon>\r\n                  <p>Henüz onaylanan ziyaret bulunmamaktadır.</p>\r\n                </div>\r\n\r\n                <mat-paginator #approvedPaginator [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"status-table\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header card-header-danger\">\r\n              <h4 class=\"card-title\">\r\n                <mat-icon>cancel</mat-icon>\r\n                Reddedilen Ziyaretler\r\n              </h4>\r\n              <p class=\"card-category\">Ziyaret Durum</p>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"mat-elevation-z8\">\r\n                <table mat-table [dataSource]=\"rejectedDataSource\" matSort #rejectedSort=\"matSort\" *ngIf=\"rejectedDataSource.data.length > 0\">\r\n                  \r\n                  <ng-container matColumnDef=\"visitors\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Ziyaretçiler </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                      <div class=\"visitor-info\">\r\n                        <div class=\"visitor-chips\">\r\n                          <mat-chip-list>\r\n                            <mat-chip *ngFor=\"let visitorName of (getAllVisitorNames(row)).visitorNames; let i = index\" \r\n                                     [class.primary-visitor-chip]=\"i === 0\"\r\n                                     [class.secondary-visitor-chip]=\"i !== 0\">\r\n                              <mat-icon class=\"visitor-icon\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\r\n                              {{visitorName}}\r\n                            </mat-chip>\r\n                          </mat-chip-list>\r\n                        </div>\r\n                        <div class=\"visitor-actions\">\r\n                          <mat-chip class=\"total-visitor-chip\">\r\n                            <mat-icon>group</mat-icon>\r\n                            {{(getAllVisitorNames(row)).totalVisitors}} Kişi\r\n                          </mat-chip>\r\n                          <button mat-stroked-button color=\"primary\" \r\n                                  (click)=\"showAllVisitors(row)\"\r\n                                  matTooltip=\"Tüm Ziyaretçileri Göster\"\r\n                                  *ngIf=\"row.multiVisiters?.length > 2\"\r\n                                  class=\"show-all-btn\">\r\n                            <mat-icon>people_alt</mat-icon>\r\n                            Tümünü Gör\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"licensePlate\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Araç/Yaya </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                      <mat-chip-list>\r\n                        <ng-container *ngIf=\"row.visit.vehicleEntry; else pedestrianRejected\">\r\n                          <mat-chip class=\"vehicle-chip\">\r\n                            <mat-icon>directions_car</mat-icon>\r\n                            {{row.visit.visitorLicensePlate}}\r\n                          </mat-chip>\r\n                        </ng-container>\r\n                        <ng-template #pedestrianRejected>\r\n                          <mat-chip class=\"pedestrian-chip\">\r\n                            <mat-icon>directions_walk</mat-icon>\r\n                            Yaya\r\n                          </mat-chip>\r\n                        </ng-template>\r\n                      </mat-chip-list>\r\n                    </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"entryDate\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Giriş Tarihi </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.visit.visitStartDate | date:'dd/MM/yyyy HH:mm'}} </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"exitDate\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> Çıkış Tarihi </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.visit.visitEndDate | date:'dd/MM/yyyy HH:mm' || 'Çıkış Yapılmadı'}} </td>\r\n                  </ng-container>\r\n\r\n                  <ng-container matColumnDef=\"rejectReason\">\r\n                    <th mat-header-cell *matHeaderCellDef> Red Sebebi </th>\r\n                    <td mat-cell *matCellDef=\"let row\"> {{row.visit.reasonForRejection}} </td>\r\n                  </ng-container>\r\n\r\n                  <tr mat-header-row *matHeaderRowDef=\"rejectedColumns\"></tr>\r\n                  <tr mat-row *matRowDef=\"let row; columns: rejectedColumns;\"></tr>\r\n                </table>\r\n\r\n                <div class=\"no-data-message\" *ngIf=\"!rejectedDataSource.data.length\">\r\n                  <mat-icon>info</mat-icon>\r\n                  <p>Henüz reddedilen ziyaret bulunmamaktadır.</p>\r\n                </div>\r\n\r\n                <mat-paginator #rejectedPaginator [pageSizeOptions]=\"[5, 10, 25]\"></mat-paginator>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "TP/T":
/*!******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/user/user.component.html ***!
  \******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 class=\"card-title \">{{'UserList'|translate}}</h4>\r\n            <a *ngIf=\"checkClaim('CreateUserCommand')\" class=\"pull-right\" data-toggle=\"modal\" data-target=\"#user\"> <i\r\n                style=\"color:white\" title=\"{{'Add'| translate}}\" class=\"far fa-plus-square fa-2x\"></i></a>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n\r\n              <div class=\"col-md-4 pull-right\">\r\n                  <mat-form-field>\r\n                      <mat-label>{{'Filter' |translate}}</mat-label>\r\n                      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"userId\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'ID' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.userId}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"email\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Email' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"fullName\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'FullName' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.fullName}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"status\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Status' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\">\r\n                    <mat-checkbox [checked]=\"element.status\" [disabled]=\"true\">\r\n                    </mat-checkbox>\r\n                  </td>\r\n\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"mobilePhones\" >\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'MobilePhones' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.mobilePhones}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"address\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Address' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.address}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"notes\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Notes' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.notes}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"reqLimit\" >\r\n                  <th mat-header-cell *matHeaderCellDef> {{'Req Limit' |translate}}</th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.reqLimit}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"passwordChange\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UserChangePasswordCommand')\" data-toggle=\"modal\" data-target=\"#passwordChange\" (click)=\"setUserId(element.userId)\"><i\r\n                        title=\"{{('ChangePassword' | translate)}}\" style=\"color:slateblue;\" class=\"fas fa-key\"\r\n                        aria-hidden=\"true\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"updateClaim\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateUserClaimCommand')\" data-toggle=\"modal\" data-target=\"#claimsPermissions\"\r\n                      (click)=\"getUserClaimsPermissions(element.userId)\"><i title=\"{{('UsersClaims' | translate)}}\"\r\n                        style=\"color:green;\" class=\"fas fa-user-shield\" aria-hidden=\"true\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n               \r\n\r\n                <ng-container matColumnDef=\"updateGroupClaim\">\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateGroupClaimCommand')\" data-toggle=\"modal\" data-target=\"#groupPermissions\"\r\n                      (click)=\"getUserGroupPermissions(element.userId)\"><i title=\"{{'UsersGroups' | translate}}\"\r\n                        style=\"color:royalblue;\" class=\"fas fa-user-lock\" aria-hidden=\"true\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"update\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateUserCommand')\" data-toggle=\"modal\" data-target=\"#user\" (click)=\"getUserById(element.userId)\"><i\r\n                        title=\"{{'Update' | translate}}\" style=\"color:#ff5722;\" class=\"far fa-edit\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"updateReqLimit\">\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateUserCommand')\" \r\n                       data-toggle=\"modal\" \r\n                       data-target=\"#reqLimitModal\"\r\n                       (click)=\"setSelectedUserId(element.userId)\">\r\n                      <i title=\"{{'Update Request Limit' | translate}}\" \r\n                         style=\"color:#2196F3;\" \r\n                         class=\"fas fa-arrow-up\">\r\n                      </i>\r\n                    </a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\">\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('DeleteUserCommand')\" (confirm)=\"deleteUser(element.userId)\" [swal]=\"deleteSwal\"><i title=\"{{'Delete' | translate}}\" style=\"color:#D9534E;\"\r\n                        class=\"fas fa-trash-alt\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                  <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                </tr>\r\n              </table>\r\n              <mat-paginator [pageSizeOptions]=\"[10, 25,50,100]\"></mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal modal-angular fade\" id=\"user\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary text-white\">\r\n        <h4 class=\"modal-title\">\r\n          <i class=\"material-icons mr-2\">person_add</i>\r\n          {{'UserForm'| translate}}\r\n        </h4>\r\n        <button type=\"button\" #closeButton class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(userAddForm)\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form *ngIf=\"userAddForm\" [formGroup]=\"userAddForm\" (ngSubmit)=\"save()\" class=\"p-3\">\r\n          <div class=\"row mb-4\">\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                <mat-label>{{'FullName'|translate}}</mat-label>\r\n                <input matInput type=\"text\" formControlName=\"fullName\" required>\r\n                <mat-icon matPrefix class=\"mr-2\">person</mat-icon>\r\n                <mat-error *ngIf=\"userAddForm.get('fullName')!.hasError('required') && userAddForm.get('fullName')!.touched\">\r\n                  {{'Required'| translate}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                <mat-label>{{'Email'|translate}}</mat-label>\r\n                <input matInput type=\"email\" formControlName=\"email\" required minlength=\"10\" maxlength=\"50\" [(ngModel)]=\"userEmail\" (ngModelChange)=\"validateEmail()\">\r\n                <mat-icon matPrefix class=\"mr-2\">email</mat-icon>\r\n                \r\n                <mat-error *ngIf=\"userAddForm.get('email')!.hasError('minlength') && userAddForm.get('email')!.touched\">\r\n                  E-posta en az 10 karakter olmalıdır.\r\n                </mat-error>\r\n                <mat-error *ngIf=\"userAddForm.get('email')!.hasError('maxlength') && userAddForm.get('email')!.touched\">\r\n                  E-posta en fazla 50 karakter olmalıdır.\r\n                </mat-error>\r\n              </mat-form-field>\r\n              <div *ngIf=\"!notValidEmail\" class=\"error-message\">E-posta en az 10 karakter olmalıdır.</div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"row mb-4\">\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                <mat-label>{{'MobilePhones'|translate}}</mat-label>\r\n                <input matInput type=\"tel\" formControlName=\"mobilePhones\">\r\n                <mat-icon matPrefix class=\"mr-2\">phone</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n\r\n            <div class=\"col-md-6\">\r\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                <mat-label>{{'Notes'|translate}}</mat-label>\r\n                <textarea matInput formControlName=\"notes\" rows=\"1\"></textarea>\r\n                <mat-icon matPrefix class=\"mr-2\">note</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n         \r\n        \r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                <mat-label>{{'Address'|translate}}</mat-label>\r\n                <textarea matInput formControlName=\"address\" rows=\"2\"></textarea>\r\n                <mat-icon matPrefix class=\"mr-2\">location_on</mat-icon>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"d-flex justify-content-end mt-4\">\r\n            <button mat-button type=\"button\" class=\"mr-2\" data-dismiss=\"modal\" (click)=\"clearFormGroup(userAddForm)\">\r\n              <mat-icon>close</mat-icon>\r\n              {{'Cancel' |translate}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!userAddForm.valid\">\r\n              <mat-icon>save</mat-icon>\r\n              {{'Save' |translate}}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal modal-angular fade\" id=\"passwordChange\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" #closeButton class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(passwordForm)\"><span aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"margin-top\">\r\n          {{'Change Password' | translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n        <form *ngIf=\"passwordForm\" [formGroup]=\"passwordForm\" (ngSubmit)=\"savePassword()\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"{{'Password'|translate}}\" type=\"password\" id=\"password\" name=\"password\"\r\n                  formControlName=\"password\">\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"passwordForm.get('password')!.hasError('required') && passwordForm.get('password')!.touched\">\r\n                  {{'Required'| translate}}\r\n                </div>\r\n              </mat-form-field>\r\n\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"{{'ConfirmPassword'|translate}}\" type=\"password\" id=\"confirmPassword\"\r\n                  name=\"confirmPassword\" formControlName=\"confirmPassword\">\r\n                <div class=\"alert alert-danger\"\r\n                  *ngIf=\"passwordForm.get('confirmPassword')!.hasError('required') && passwordForm.get('confirmPassword')!.touched\">\r\n                  Parola onay alanı zorunludur!</div>\r\n                <div class=\"alert alert-danger\" *ngIf=\"passwordForm.get('confirmPassword')!.hasError('mustMatch')\">\r\n                  {{'ConfirmPassword'| translate}}\r\n                </div>\r\n              </mat-form-field>\r\n\r\n            </div>\r\n          </div>\r\n\r\n          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save' |translate}}</button>\r\n          <div class=\"clearfix\"></div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"modal modal-angular fade\" id=\"groupPermissions\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span\r\n            aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"margin-top\">\r\n          {{'Permissions'| translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n\r\n        <ng-multiselect-dropdown [settings]=\"dropdownSettings\" [placeholder]=\"'Groups'\" [data]=\"groupDropdownList\"\r\n          [(ngModel)]=\"groupSelectedItems\" (onSelect)=\"onItemSelect('Group')\" (onSelectAll)=\"onSelectAll('Group')\"\r\n          (onDeSelect)=\"onItemDeSelect('Group')\">\r\n        </ng-multiselect-dropdown>\r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <a class=\"btn btn-primary pull-right\" (click)=\"saveUserGroupsPermissions()\"> {{'Save' |translate}}</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal modal-angular fade\" id=\"claimsPermissions\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span\r\n            aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"margin-top\">\r\n          {{'Permissions'| translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n\r\n        <ng-multiselect-dropdown [settings]=\"dropdownSettings\" [placeholder]=\"'Claims'\" [data]=\"claimDropdownList\"\r\n          [(ngModel)]=\"claimSelectedItems\" (onSelect)=\"onItemSelect('Claim')\" (onSelectAll)=\"onSelectAll('Claim')\"\r\n          (onDeSelect)=\"onItemDeSelect('Claim')\">\r\n        </ng-multiselect-dropdown>\r\n\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <a class=\"btn btn-primary pull-right\" (click)=\"saveUserClaimsPermission()\"> {{'Save' |translate}}</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal modal-angular fade\" id=\"reqLimitModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-primary text-white\">\r\n        <h4 class=\"modal-title\">\r\n          <i class=\"fas fa-arrow-up mr-2\"></i>\r\n          {{'Update Request Limit' | translate}}\r\n        </h4>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <form [formGroup]=\"reqLimitForm\" (ngSubmit)=\"saveRequestLimit()\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <mat-form-field class=\"w-100\" appearance=\"outline\">\r\n                <mat-label>{{'Request Limit' | translate}}</mat-label>\r\n                <input matInput type=\"number\" formControlName=\"reqLimit\" min=\"1\">\r\n                <mat-error *ngIf=\"reqLimitForm.get('reqLimit')?.hasError('required')\">\r\n                  {{'Required' | translate}}\r\n                </mat-error>\r\n                <mat-error *ngIf=\"reqLimitForm.get('reqLimit')?.hasError('min')\">\r\n                  {{'Must be greater than 0' | translate}}\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"d-flex justify-content-end mt-3\">\r\n            <button mat-button type=\"button\" class=\"mr-2\" data-dismiss=\"modal\">\r\n              {{'Cancel' | translate}}\r\n            </button>\r\n            <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!reqLimitForm.valid\">\r\n              {{'Save' | translate}}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon=\"error\" [showCancelButton]=\"true\"\r\n  [confirmButtonText]=\"'OK'\" [cancelButtonText]=\"'Cancel'\">\r\n</swal>\r\n\r\n\r\n\r\n\r\n");

/***/ }),

/***/ "UUBT":
/*!********************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/login/login.component.html ***!
  \********************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"login-container\">\r\n  <div class=\"login-background\"></div>\r\n  <div class=\"login-card\">\r\n    <div class=\"login-header\">\r\n      <div class=\"logo-wrapper\">\r\n        <img src=\"../../../../../assets/img/analogo.jpg\" alt=\"Logo\" class=\"logo\">\r\n      </div>\r\n      <h1 class=\"title\">Misafir Takip Sistemi</h1>\r\n      <p class=\"subtitle\">{{'Login' | translate}}</p>\r\n    </div>\r\n\r\n    <form (submit)=\"login()\" class=\"login-form\">\r\n      <mat-form-field appearance=\"outline\" class=\"form-field\">\r\n        <mat-label>{{'Email' | translate}}</mat-label>\r\n        <input matInput name=\"email\" [(ngModel)]=\"loginUser.email\" required autocomplete=\"email\">\r\n        <mat-icon matPrefix>email</mat-icon>\r\n        <mat-error>{{'Required' | translate}}</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"form-field\">\r\n        <mat-label>{{'Password' | translate}}</mat-label>\r\n        <input matInput [type]=\"hidePassword ? 'password' : 'text'\" name=\"password\" [(ngModel)]=\"loginUser.password\" required autocomplete=\"current-password\">\r\n        <mat-icon matPrefix>lock</mat-icon>\r\n        <mat-icon matSuffix (click)=\"hidePassword = !hidePassword\" class=\"cursor-pointer\" [attr.aria-label]=\"hidePassword ? 'Show password' : 'Hide password'\">\r\n          {{hidePassword ? 'visibility_off' : 'visibility'}}\r\n        </mat-icon>\r\n        <mat-error>{{'Required' | translate}}</mat-error>\r\n      </mat-form-field>\r\n\r\n     \r\n\r\n      <button mat-flat-button color=\"primary\" type=\"submit\" class=\"login-button\">\r\n        <mat-icon>login</mat-icon>\r\n        <span>{{'Login'| translate}}</span>\r\n      </button>\r\n\r\n      <div class=\"forgot-password\">\r\n        <a href=\"https://eposta.bandirma.edu.tr/SifreSifirla\" target=\"_blank\">Şifremi Unuttum?</a>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n");

/***/ }),

/***/ "V0Ej":
/*!********************************************************************!*\
  !*** ./src/app/core/components/admin/banuLog/banuLog.component.ts ***!
  \********************************************************************/
/*! exports provided: BanuLogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BanuLogComponent", function() { return BanuLogComponent; });
/* harmony import */ var _raw_loader_banulog_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./banulog.component.html */ "nLdG");
/* harmony import */ var _banuLog_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./banuLog.component.scss */ "oMfd");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/components/admin/login/Services/auth.service */ "a9M/");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var _models_BanuLog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./models/BanuLog */ "Ry6g");
/* harmony import */ var _services_BanuLog_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./services/BanuLog.service */ "pn4S");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var BanuLogComponent = /** @class */ (function () {
    function BanuLogComponent(banuLogService, lookupService, alertifyService, formBuilder, authService, datePipe) {
        this.banuLogService = banuLogService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.datePipe = datePipe;
        this.displayedColumns = ['createdDate', 'transactorFullName', 'transactorId', 'transactionsDescription', 'transactionType'];
        this.banuLog = new _models_BanuLog__WEBPACK_IMPORTED_MODULE_11__["BanuLog"]();
        this.basePageIndex = 1;
        this.basePageCount = 100;
        this.startDate = null;
        this.endDate = null;
        this.formattedStartDate = '';
        this.formattedEndDate = '';
        this.selectedProcessType = '';
        this.searchName = '';
        this.isSearch = false;
        this.filters = [];
        this.filteredAllResult = null;
        this.allResult = null;
        this.filterResult = [];
        this.page = 1;
        this.pageCount = [];
        this.allPageCount = [];
        this.pageSize = 100;
        this.selectedPageCount = null;
    }
    BanuLogComponent.prototype.getVisiblePages = function () {
        var totalPages = this.pageCount.length;
        var currentPage = this.page;
        var visiblePages = [];
        if (totalPages <= 7) {
            // Toplam sayfa sayısı 7 veya daha azsa hepsini göster
            return this.pageCount;
        }
        // İlk sayfayı her zaman göster
        visiblePages.push(1);
        if (currentPage > 4) {
            visiblePages.push(-1); // "..." için
        }
        // Aktif sayfanın etrafındaki sayfaları göster
        for (var i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {
            visiblePages.push(i);
        }
        if (currentPage < totalPages - 3) {
            visiblePages.push(-1); // "..." için
        }
        // Son sayfayı her zaman göster
        visiblePages.push(totalPages);
        return visiblePages;
    };
    BanuLogComponent.prototype.getAllVisiblePages = function () {
        var totalPages = this.allPageCount.length;
        var currentPage = this.basePageIndex;
        var visiblePages = [];
        if (totalPages <= 7) {
            // Toplam sayfa sayısı 7 veya daha azsa hepsini göster
            return this.allPageCount;
        }
        // İlk sayfayı her zaman göster
        visiblePages.push(1);
        if (currentPage > 4) {
            visiblePages.push(-1); // "..." için
        }
        // Aktif sayfanın etrafındaki sayfaları göster
        for (var i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {
            visiblePages.push(i);
        }
        if (currentPage < totalPages - 3) {
            visiblePages.push(-1); // "..." için
        }
        // Son sayfayı her zaman göster
        visiblePages.push(totalPages);
        return visiblePages;
    };
    BanuLogComponent.prototype.ngAfterViewInit = function () {
        this.getBanuLogList();
    };
    BanuLogComponent.prototype.ngOnInit = function () {
        this.createBanuLogAddForm();
    };
    BanuLogComponent.prototype.getBanuLogList = function () {
        var _this = this;
        this.banuLogService.getBanuLogByPagingList(this.basePageIndex, this.basePageCount).subscribe(function (res) {
            _this.banuLogList = res.data;
            _this.allResult = res;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](res.data);
            _this.allPageCount = [];
            for (var index = 1; index < res.totalPages + 1; index++) {
                _this.allPageCount.push(index);
            }
            _this.configDataTable();
        });
    };
    BanuLogComponent.prototype.save = function () {
        if (this.banuLogAddForm.valid) {
            this.banuLog = Object.assign({}, this.banuLogAddForm.value);
            if (this.banuLog.id == "")
                this.addBanuLog();
            else
                this.updateBanuLog();
        }
    };
    BanuLogComponent.prototype.addBanuLog = function () {
        var _this = this;
        this.banuLogService.addBanuLog(this.banuLog).subscribe(function (data) {
            _this.getBanuLogList();
            _this.banuLog = new _models_BanuLog__WEBPACK_IMPORTED_MODULE_11__["BanuLog"]();
            jQuery('#banulog').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.banuLogAddForm);
        });
    };
    BanuLogComponent.prototype.updateBanuLog = function () {
        var _this = this;
        this.banuLogService.updateBanuLog(this.banuLog).subscribe(function (data) {
            var index = _this.banuLogList.findIndex(function (x) { return x.id == _this.banuLog.id; });
            _this.banuLogList[index] = _this.banuLog;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](_this.banuLogList);
            _this.configDataTable();
            _this.banuLog = new _models_BanuLog__WEBPACK_IMPORTED_MODULE_11__["BanuLog"]();
            jQuery('#banulog').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.banuLogAddForm);
        });
    };
    BanuLogComponent.prototype.createBanuLogAddForm = function () {
        this.banuLogAddForm = this.formBuilder.group({
            id: [0],
            createdDate: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactorFullName: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactorId: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactionsDescription: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactionType: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
    };
    BanuLogComponent.prototype.onPageCountChange = function (event) {
        this.page = event.value;
        this.onSearch();
    };
    BanuLogComponent.prototype.onPageChange = function (newPage) {
        if (newPage >= 1 && newPage <= this.pageCount.length) {
            this.page = newPage;
            this.onSearch();
        }
    };
    BanuLogComponent.prototype.onAllPageCountChange = function (event) {
        this.basePageIndex = event.value;
        this.getBanuLogList();
    };
    BanuLogComponent.prototype.onAllPageChange = function (newPage) {
        if (newPage >= 1 && newPage <= this.allPageCount.length) {
            this.basePageIndex = newPage;
            this.getBanuLogList();
        }
    };
    BanuLogComponent.prototype.deleteBanuLog = function (banuLogId) {
        var _this = this;
        this.banuLogService.deleteBanuLog(banuLogId).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            _this.banuLogList = _this.banuLogList.filter(function (x) { return x.id != banuLogId; });
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](_this.banuLogList);
            _this.configDataTable();
        });
    };
    BanuLogComponent.prototype.onStartDateChange = function () {
        if (this.startDate) {
            this.formattedStartDate = this.datePipe.transform(this.startDate, 'dd-MM-yyyy') || '';
            this.page = 1;
        }
    };
    BanuLogComponent.prototype.onEndDateChange = function () {
        if (this.endDate) {
            this.formattedEndDate = this.datePipe.transform(this.endDate, 'dd-MM-yyyy') || '';
            (this.formattedEndDate);
            this.page = 1;
        }
    };
    BanuLogComponent.prototype.getBanuLogById = function (banuLogId) {
        var _this = this;
        this.clearFormGroup(this.banuLogAddForm);
        this.banuLogService.getBanuLogById(banuLogId).subscribe(function (data) {
            _this.banuLog = data;
            _this.banuLogAddForm.patchValue(data);
        });
    };
    BanuLogComponent.prototype.createPdf = function () {
        var _this = this;
        if (this.filterResult.length == 0 && this.isSearch == true) {
            this.alertifyService.error("PDF oluşturulacak bir veri yok!");
            return;
        }
        this.banuLogService.getBanuLogFilterListToPdf(this.filters).subscribe(function (response) {
            var _a;
            // Blob nesnesini oluştur
            var file = new Blob([response.body], { type: (_a = response.body) === null || _a === void 0 ? void 0 : _a.type });
            var contentType = response.headers.get('Content-Type');
            var format = contentType === null || contentType === void 0 ? void 0 : contentType.split('/')[1];
            // Dosya adını HTTP yanıt başlıklarından al
            var fileName = "BanuLogs_" + new Date().toISOString() + "." + format;
            var contentDisposition = response.headers.get('Content-Disposition');
            if (contentDisposition) {
                var matches = contentDisposition.match(/filename="?([^"]+)"?/);
                if ((matches === null || matches === void 0 ? void 0 : matches.length) > 1) {
                    fileName = matches[1];
                }
            }
            var fileURL = URL.createObjectURL(file);
            var a = document.createElement('a');
            a.href = fileURL;
            a.download = fileName;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }, function (error) {
            _this.alertifyService.error("PDF oluşturulurken bir hata oluştu!");
        });
    };
    BanuLogComponent.prototype.onSearch = function () {
        var _this = this;
        this.isSearch = true;
        this.filters = [];
        if (this.formattedStartDate != '' && this.formattedStartDate != null) {
            this.filters.push({
                key: 'CreatedDate',
                operation: 'GreaterThanOrEqual',
                value: this.formattedStartDate
            });
        }
        if (this.formattedEndDate != '' && this.formattedEndDate != null) {
            this.filters.push({
                key: 'CreatedDate',
                operation: 'LessThanOrEqual',
                value: this.formattedEndDate
            });
        }
        if (this.searchName != '' && this.searchName != null) {
            this.filters.push({
                key: 'TransactorFullName',
                operation: 'Contains',
                value: this.searchName
            });
        }
        if (this.selectedProcessType != '' && this.selectedProcessType != null) {
            this.filters.push({
                key: 'TransactionType',
                operation: 'Contains',
                value: this.selectedProcessType
            });
        }
        this.banuLogService.getBanuLogGlobalFilterList(this.filters, this.page, this.pageSize).subscribe(function (res) {
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](res.data);
            _this.filteredAllResult = res;
            _this.filterResult = res.data;
            _this.configDataTable();
            _this.pageCount = [];
            for (var index = 1; index < res.totalPages + 1; index++) {
                _this.pageCount.push(index);
            }
        });
    };
    BanuLogComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    BanuLogComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    BanuLogComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    BanuLogComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    BanuLogComponent.ctorParameters = function () { return [
        { type: _services_BanuLog_service__WEBPACK_IMPORTED_MODULE_12__["BanuLogService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_10__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
        { type: app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] }
    ]; };
    BanuLogComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"],] }]
    };
    BanuLogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-banuLog',
            template: _raw_loader_banulog_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_banuLog_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_services_BanuLog_service__WEBPACK_IMPORTED_MODULE_12__["BanuLogService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_10__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"]])
    ], BanuLogComponent);
    return BanuLogComponent;
}());



/***/ }),

/***/ "VTBJ":
/*!******************************************************************!*\
  !*** ./node_modules/@babel/runtime/helpers/esm/objectSpread2.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _objectSpread2; });
/* harmony import */ var _babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/defineProperty */ "rePB");


function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(Object(source), true).forEach(function (key) {
        Object(_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__["default"])(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(Object(source)).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

/***/ }),

/***/ "VUeu":
/*!******************************************************************!*\
  !*** ./src/app/core/tables/spark-table/spark-table.component.ts ***!
  \******************************************************************/
/*! exports provided: SparkTableComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SparkTableComponent", function() { return SparkTableComponent; });
/* harmony import */ var _raw_loader_spark_table_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./spark-table.component.html */ "Jnle");
/* harmony import */ var _spark_table_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./spark-table.component.css */ "4+oF");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_components_admin_banuLog_models_BanuLog__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/components/admin/banuLog/models/BanuLog */ "Ry6g");
/* harmony import */ var app_core_components_admin_banuLog_services_BanuLog_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/components/admin/banuLog/services/BanuLog.service */ "pn4S");
/* harmony import */ var app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/core/components/admin/login/Services/auth.service */ "a9M/");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var SparkTableComponent = /** @class */ (function () {
    function SparkTableComponent(banuLogService, lookupService, alertifyService, formBuilder, authService, datePipe) {
        this.banuLogService = banuLogService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.datePipe = datePipe;
        this.displayedColumns = ['id', 'createdDate', 'transactorFullName', 'transactorId', 'transactionsDescription', 'transactionType', 'update', 'delete'];
        this.banuLog = new app_core_components_admin_banuLog_models_BanuLog__WEBPACK_IMPORTED_MODULE_8__["BanuLog"]();
        this.startDate = null;
        this.endDate = null;
        this.formattedStartDate = '';
        this.formattedEndDate = '';
        this.selectedProcessType = '';
        this.searchName = '';
        this.isSearch = false;
        this.filters = [];
        this.filterResult = [];
    }
    SparkTableComponent.prototype.ngAfterViewInit = function () {
        this.getBanuLogList();
    };
    SparkTableComponent.prototype.ngOnInit = function () {
        this.createBanuLogAddForm();
    };
    SparkTableComponent.prototype.getBanuLogList = function () {
        var _this = this;
        this.banuLogService.getBanuLogList().subscribe(function (data) {
            _this.banuLogList = data;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    SparkTableComponent.prototype.createBanuLogAddForm = function () {
        this.banuLogAddForm = this.formBuilder.group({
            id: [0],
            createdDate: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactorFullName: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactorId: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactionsDescription: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactionType: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
    };
    SparkTableComponent.prototype.deleteBanuLog = function (banuLogId) {
        var _this = this;
        this.banuLogService.deleteBanuLog(banuLogId).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            _this.banuLogList = _this.banuLogList.filter(function (x) { return x.id != banuLogId; });
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](_this.banuLogList);
            _this.configDataTable();
        });
    };
    SparkTableComponent.prototype.onStartDateChange = function () {
        if (this.startDate) {
            this.formattedStartDate = this.datePipe.transform(this.startDate, 'dd-MM-yyyy') || '';
        }
    };
    SparkTableComponent.prototype.onEndDateChange = function () {
        if (this.endDate) {
            this.formattedEndDate = this.datePipe.transform(this.endDate, 'dd-MM-yyyy') || '';
        }
    };
    SparkTableComponent.prototype.getBanuLogById = function (banuLogId) {
        var _this = this;
        this.clearFormGroup(this.banuLogAddForm);
        this.banuLogService.getBanuLogById(banuLogId).subscribe(function (data) {
            _this.banuLog = data;
            _this.banuLogAddForm.patchValue(data);
        });
    };
    SparkTableComponent.prototype.createPdf = function () {
        var _this = this;
        if (this.filterResult.length == 0 && this.isSearch == true) {
            this.alertifyService.error("Pdf oluşturulacak bir veri yok!");
            return;
        }
        this.banuLogService.getBanuLogListToPdf(this.filterResult.length == 0 && this.isSearch == false ? this.banuLogList : this.filterResult).subscribe(function (response) {
            // PDF dosyasını Blob olarak alıyoruz
            var fileURL = URL.createObjectURL(response);
            var a = document.createElement('a');
            a.href = fileURL;
            a.download = 'BanuLogs.pdf';
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }, function (error) {
            _this.alertifyService.error("PDF oluşturulurken bir hata oluştu!");
        });
    };
    SparkTableComponent.prototype.onSearch = function () {
        var _this = this;
        this.isSearch = true;
        this.filters = [];
        // Start Date filtresi ekleniyor
        if (this.formattedStartDate != '' && this.formattedStartDate != null) {
            this.filters.push({
                key: 'CreatedDate',
                operation: 'GreaterThanOrEqual',
                value: this.formattedStartDate
            });
        }
        // End Date filtresi ekleniyor
        if (this.formattedEndDate != '' && this.formattedEndDate != null) {
            this.filters.push({
                key: 'CreatedDate',
                operation: 'LessThanOrEqual',
                value: this.formattedEndDate
            });
        }
        // Name filtresi ekleniyor
        if (this.searchName != '' && this.searchName != null) {
            this.filters.push({
                key: 'TransactorFullName',
                operation: 'Contains',
                value: this.searchName
            });
        }
        // Process Type filtresi ekleniyor
        if (this.selectedProcessType != '' && this.selectedProcessType != null) {
            this.filters.push({
                key: 'TransactionType',
                operation: 'Contains',
                value: this.selectedProcessType
            });
        }
        this.banuLogService.getBanuLogGlobalFilterList(this.filters, 1, 5).subscribe(function (data) {
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](data.data);
            _this.filterResult = data.data;
            _this.configDataTable();
        });
    };
    SparkTableComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    SparkTableComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    SparkTableComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    SparkTableComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    SparkTableComponent.ctorParameters = function () { return [
        { type: app_core_components_admin_banuLog_services_BanuLog_service__WEBPACK_IMPORTED_MODULE_9__["BanuLogService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_12__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_11__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
        { type: app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_10__["AuthService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] }
    ]; };
    SparkTableComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"],] }]
    };
    SparkTableComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-spark-table',
            template: _raw_loader_spark_table_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_spark_table_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [app_core_components_admin_banuLog_services_BanuLog_service__WEBPACK_IMPORTED_MODULE_9__["BanuLogService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_12__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_11__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_10__["AuthService"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"]])
    ], SparkTableComponent);
    return SparkTableComponent;
}());



/***/ }),

/***/ "W7d8":
/*!**************************************************************************!*\
  !*** ./src/app/core/components/screens/visit-add/visit-add.component.ts ***!
  \**************************************************************************/
/*! exports provided: VisitAddComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisitAddComponent", function() { return VisitAddComponent; });
/* harmony import */ var _raw_loader_visit_add_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./visit-add.component.html */ "8z5B");
/* harmony import */ var _visit_add_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./visit-add.component.css */ "PD0Y");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/form-field */ "kmnG");
/* harmony import */ var _services_alertify_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../services/alertify.service */ "DAyg");
/* harmony import */ var _admin_multiVisiters_services_multivisiters_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../admin/multiVisiters/services/multivisiters.service */ "k9Mz");
/* harmony import */ var _admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../admin/visit/services/visit.service */ "vCDI");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (undefined && undefined.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};








var VisitAddComponent = /** @class */ (function () {
    function VisitAddComponent(datePipe, visitService, multiVisitersService, alertifyService) {
        this.datePipe = datePipe;
        this.visitService = visitService;
        this.multiVisitersService = multiVisitersService;
        this.alertifyService = alertifyService;
        this.selectedTab = 'vehicle';
        this.vehicleData = {
            plate: '',
            visitStartDate: null,
            visitEndDate: null
        };
        this.vehicleVisitors = [
            { name: '' }
        ];
        this.pedestrianVisitors = [
            { name: '' }
        ];
        this.formattedStartDate = '';
        this.formattedEndDate = '';
        this.dateFilter = function (date) {
            if (!date)
                return false;
            var today = new Date();
            today.setHours(0, 0, 0, 0);
            return date >= today;
        };
    }
    VisitAddComponent.prototype.ngOnInit = function () {
    };
    VisitAddComponent.prototype.switchTab = function (tab) {
        this.selectedTab = tab;
    };
    VisitAddComponent.prototype.addVisitor = function () {
        this.vehicleVisitors.push({ name: '' });
    };
    VisitAddComponent.prototype.removeVisitor = function (index) {
        if (index !== 0) {
            this.vehicleVisitors.splice(index, 1);
        }
    };
    VisitAddComponent.prototype.addPedestrianVisitor = function () {
        this.pedestrianVisitors.push({ name: '' });
    };
    VisitAddComponent.prototype.removePedestrianVisitor = function (index) {
        if (index !== 0) {
            this.pedestrianVisitors.splice(index, 1);
        }
    };
    VisitAddComponent.prototype.onStartDateChange = function () {
        if (this.vehicleData.visitStartDate) {
            this.formattedStartDate = this.datePipe.transform(this.vehicleData.visitStartDate, 'dd/MM/yyyy') || '';
        }
    };
    VisitAddComponent.prototype.onEndDateChange = function () {
        if (this.vehicleData.visitEndDate) {
            this.formattedEndDate = this.datePipe.transform(this.vehicleData.visitEndDate, 'dd/MM/yyyy') || '';
        }
    };
    VisitAddComponent.prototype.saveVisit = function (isVehicle) {
        return __awaiter(this, void 0, void 0, function () {
            var visitors, mainVisitor, additionalVisitors, startDate, endDate, mainVisitRequest, saveVisitObservable;
            var _this = this;
            return __generator(this, function (_a) {
                try {
                    visitors = isVehicle ? this.vehicleVisitors : this.pedestrianVisitors;
                    mainVisitor = visitors[0];
                    additionalVisitors = visitors.slice(1).filter(function (v) { return v.name.trim() !== ''; });
                    startDate = new Date(this.vehicleData.visitStartDate);
                    endDate = new Date(this.vehicleData.visitEndDate);
                    startDate.setMinutes(startDate.getMinutes() - startDate.getTimezoneOffset());
                    endDate.setMinutes(endDate.getMinutes() - endDate.getTimezoneOffset());
                    mainVisitRequest = {
                        personnelId: 0,
                        visitorFullName: mainVisitor.name,
                        vehicleEntry: isVehicle,
                        multiPersonVisit: additionalVisitors.length > 0,
                        isExit: false,
                        status: true,
                        isConfirm: false,
                        isReject: false,
                        visitStartDate: startDate,
                        visitEndDate: endDate,
                        visitorLicensePlate: isVehicle ? this.vehicleData.plate : undefined,
                        multiVisitersList: additionalVisitors.map(function (visitor) { return ({
                            visitorFullName: visitor.name
                        }); })
                    };
                    saveVisitObservable = isVehicle ?
                        this.visitService.vehicleEntrance(mainVisitRequest) :
                        this.visitService.pedestrianEntrance(mainVisitRequest);
                    saveVisitObservable.subscribe({
                        next: function (response) {
                            _this.alertifyService.success(response);
                            _this.resetForm();
                        },
                        error: function (error) {
                            console.error('Error creating visit:', error);
                            _this.alertifyService.error(error.error);
                        }
                    });
                }
                catch (error) {
                    console.error('Error in save process:', error);
                    this.alertifyService.error(error.message);
                }
                return [2 /*return*/];
            });
        });
    };
    VisitAddComponent.prototype.resetForm = function () {
        this.vehicleData = {
            plate: '',
            visitStartDate: null,
            visitEndDate: null
        };
        this.vehicleVisitors = [{ name: '' }];
        this.pedestrianVisitors = [{ name: '' }];
        this.formattedStartDate = '';
        this.formattedEndDate = '';
    };
    VisitAddComponent.ctorParameters = function () { return [
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] },
        { type: _admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_7__["VisitService"] },
        { type: _admin_multiVisiters_services_multivisiters_service__WEBPACK_IMPORTED_MODULE_6__["MultiVisitersService"] },
        { type: _services_alertify_service__WEBPACK_IMPORTED_MODULE_5__["AlertifyService"] }
    ]; };
    VisitAddComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-visit-add',
            template: _raw_loader_visit_add_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            providers: [
                _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"],
                {
                    provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_4__["MAT_FORM_FIELD_DEFAULT_OPTIONS"],
                    useValue: { hideRequiredMarker: true }
                }
            ],
            styles: [_visit_add_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"],
            _admin_visit_services_visit_service__WEBPACK_IMPORTED_MODULE_7__["VisitService"],
            _admin_multiVisiters_services_multivisiters_service__WEBPACK_IMPORTED_MODULE_6__["MultiVisitersService"],
            _services_alertify_service__WEBPACK_IMPORTED_MODULE_5__["AlertifyService"]])
    ], VisitAddComponent);
    return VisitAddComponent;
}());



/***/ }),

/***/ "WFWO":
/*!**********************************************************************************!*\
  !*** ./src/app/core/components/admin/multiVisiters/multiVisiters.component.scss ***!
  \**********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJtdWx0aVZpc2l0ZXJzLmNvbXBvbmVudC5zY3NzIn0= */");

/***/ }),

/***/ "WWwI":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/multiVisiters/multivisiters.component.html ***!
  \************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 class=\"card-title \">{{'MultiVisitersList'| translate}}</h4>\r\n            <a *ngIf=\"checkClaim('CreateMultiVisitersCommand')\" class=\"pull-right\" data-toggle=\"modal\" data-target=\"#multivisiters\"> <i style=\"color:white\"  title=\"{{'Add'| translate}}\" class=\"far fa-plus-square fa-2x\"></i></a>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n              \r\n              <div class=\"col-md-4 pull-right\">\r\n                <mat-form-field>\r\n                  <mat-label>Filter</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                </mat-form-field>\r\n              </div>\r\n\t\t\t\t\t\t\t<table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n                   <ng-container matColumnDef=\"id\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.id}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"createdDate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.createdDate}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"visitId\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VisitId'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.visitId}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"visitorFullName\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'VisitorFullName'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.visitorFullName}}</td>\r\n\t\t\t\t   </ng-container>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"update\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell\r\n                    *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateMultiVisitersCommand')\" data-toggle=\"modal\" data-target=\"#multivisiters\"  (click)=\"getMultiVisitersById(element.id)\">\r\n                      <i title=\"{{'Update'| translate}}\" style=\"color:#ff5722;\" class=\"far fa-edit\"></i>\r\n                    </a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td  style=\"width: 25px;\" mat-cell\r\n                    *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('DeleteMultiVisitersCommand')\" (confirm)=\"deleteMultiVisiters(element.id)\" [swal]=\"deleteSwal\"><i title=\"{{'Delete'| translate}}\" style=\"color: #D9534E;\"class=\"fas fa-trash-alt\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                  <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                </tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<mat-paginator [pageSizeOptions]=\"[10, 25, 50, 100]\"></mat-paginator>\r\n\t\t\t\t\t\t\t</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal modal-angular fade\" id=\"multivisiters\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(multiVisitersAddForm)\"><span aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"margin-top\">\r\n           {{'MultiVisitersForm'| translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n        <form *ngIf=\"multiVisitersAddForm\" [formGroup]=\"multiVisitersAddForm\" (ngSubmit)=\"save()\">\r\n          \r\n\t\t\t\t\t<div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"createdDate\" type=\"date\" id=\"createdDate\" name=\"createdDate\"\r\n                       formControlName=\"createdDate\" />\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"multiVisitersAddForm.get('createdDate')!.hasError('createdDate') && multiVisitersAddForm.get('createdDate')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<select class=\"browser-default custom-select\" formControlName=\"visitId\">\r\n\t\t\t\t\t\t\t\t<option *ngFor=\"let item of multiVisiterslookUp\" [value]=\"item.id\"> {{item.label}}</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"visitorFullName\" type=\"text\" id=\"visitorFullName\" name=\"visitorFullName\"\r\n                       formControlName=\"visitorFullName\" />\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"multiVisitersAddForm.get('visitorFullName')!.hasError('visitorFullName') && multiVisitersAddForm.get('visitorFullName')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n                   \r\n          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save'|translate}}</button>\r\n          <div class=\"clearfix\"></div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon = \"error\" [showCancelButton]=\"true\"\r\n\t[confirmButtonText] = \"'OK'\"[cancelButtonText] = \"'Cancel'\" >\r\n</swal>\r\n\r\n");

/***/ }),

/***/ "Wp6s":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/card.js ***!
  \**********************************************************************/
/*! exports provided: MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCard", function() { return MatCard; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardActions", function() { return MatCardActions; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardAvatar", function() { return MatCardAvatar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardContent", function() { return MatCardContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardFooter", function() { return MatCardFooter; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardHeader", function() { return MatCardHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardImage", function() { return MatCardImage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardLgImage", function() { return MatCardLgImage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardMdImage", function() { return MatCardMdImage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardModule", function() { return MatCardModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardSmImage", function() { return MatCardSmImage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardSubtitle", function() { return MatCardSubtitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardTitle", function() { return MatCardTitle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardTitleGroup", function() { return MatCardTitleGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCardXlImage", function() { return MatCardXlImage; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/material/core */ "FKr1");




/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Content of a card, needed as it's used as a selector in the API.
 * @docs-private
 */


var _c0 = ["*", [["mat-card-footer"]]];
var _c1 = ["*", "mat-card-footer"];
var _c2 = [[["", "mat-card-avatar", ""], ["", "matCardAvatar", ""]], [["mat-card-title"], ["mat-card-subtitle"], ["", "mat-card-title", ""], ["", "mat-card-subtitle", ""], ["", "matCardTitle", ""], ["", "matCardSubtitle", ""]], "*"];
var _c3 = ["[mat-card-avatar], [matCardAvatar]", "mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]", "*"];
var _c4 = [[["mat-card-title"], ["mat-card-subtitle"], ["", "mat-card-title", ""], ["", "mat-card-subtitle", ""], ["", "matCardTitle", ""], ["", "matCardSubtitle", ""]], [["img"]], "*"];
var _c5 = ["mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]", "img", "*"];

var MatCardContent = function MatCardContent() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardContent);
};

MatCardContent.ɵfac = function MatCardContent_Factory(t) {
  return new (t || MatCardContent)();
};

MatCardContent.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardContent,
  selectors: [["mat-card-content"], ["", "mat-card-content", ""], ["", "matCardContent", ""]],
  hostAttrs: [1, "mat-card-content"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardContent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: 'mat-card-content, [mat-card-content], [matCardContent]',
      host: {
        'class': 'mat-card-content'
      }
    }]
  }], null, null);
})();
/**
 * Title of a card, needed as it's used as a selector in the API.
 * @docs-private
 */


var MatCardTitle = function MatCardTitle() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardTitle);
};

MatCardTitle.ɵfac = function MatCardTitle_Factory(t) {
  return new (t || MatCardTitle)();
};

MatCardTitle.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardTitle,
  selectors: [["mat-card-title"], ["", "mat-card-title", ""], ["", "matCardTitle", ""]],
  hostAttrs: [1, "mat-card-title"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardTitle, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: "mat-card-title, [mat-card-title], [matCardTitle]",
      host: {
        'class': 'mat-card-title'
      }
    }]
  }], null, null);
})();
/**
 * Sub-title of a card, needed as it's used as a selector in the API.
 * @docs-private
 */


var MatCardSubtitle = function MatCardSubtitle() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardSubtitle);
};

MatCardSubtitle.ɵfac = function MatCardSubtitle_Factory(t) {
  return new (t || MatCardSubtitle)();
};

MatCardSubtitle.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardSubtitle,
  selectors: [["mat-card-subtitle"], ["", "mat-card-subtitle", ""], ["", "matCardSubtitle", ""]],
  hostAttrs: [1, "mat-card-subtitle"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardSubtitle, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: "mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]",
      host: {
        'class': 'mat-card-subtitle'
      }
    }]
  }], null, null);
})();
/**
 * Action section of a card, needed as it's used as a selector in the API.
 * @docs-private
 */


var MatCardActions = function MatCardActions() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardActions);

  /** Position of the actions inside the card. */
  this.align = 'start';
};

MatCardActions.ɵfac = function MatCardActions_Factory(t) {
  return new (t || MatCardActions)();
};

MatCardActions.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardActions,
  selectors: [["mat-card-actions"]],
  hostAttrs: [1, "mat-card-actions"],
  hostVars: 2,
  hostBindings: function MatCardActions_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("mat-card-actions-align-end", ctx.align === "end");
    }
  },
  inputs: {
    align: "align"
  },
  exportAs: ["matCardActions"]
});
MatCardActions.propDecorators = {
  align: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardActions, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: 'mat-card-actions',
      exportAs: 'matCardActions',
      host: {
        'class': 'mat-card-actions',
        '[class.mat-card-actions-align-end]': 'align === "end"'
      }
    }]
  }], function () {
    return [];
  }, {
    align: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Input"]
    }]
  });
})();
/**
 * Footer of a card, needed as it's used as a selector in the API.
 * @docs-private
 */


var MatCardFooter = function MatCardFooter() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardFooter);
};

MatCardFooter.ɵfac = function MatCardFooter_Factory(t) {
  return new (t || MatCardFooter)();
};

MatCardFooter.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardFooter,
  selectors: [["mat-card-footer"]],
  hostAttrs: [1, "mat-card-footer"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardFooter, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: 'mat-card-footer',
      host: {
        'class': 'mat-card-footer'
      }
    }]
  }], null, null);
})();
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * @docs-private
 */


var MatCardImage = function MatCardImage() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardImage);
};

MatCardImage.ɵfac = function MatCardImage_Factory(t) {
  return new (t || MatCardImage)();
};

MatCardImage.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardImage,
  selectors: [["", "mat-card-image", ""], ["", "matCardImage", ""]],
  hostAttrs: [1, "mat-card-image"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardImage, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: '[mat-card-image], [matCardImage]',
      host: {
        'class': 'mat-card-image'
      }
    }]
  }], null, null);
})();
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * @docs-private
 */


var MatCardSmImage = function MatCardSmImage() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardSmImage);
};

MatCardSmImage.ɵfac = function MatCardSmImage_Factory(t) {
  return new (t || MatCardSmImage)();
};

MatCardSmImage.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardSmImage,
  selectors: [["", "mat-card-sm-image", ""], ["", "matCardImageSmall", ""]],
  hostAttrs: [1, "mat-card-sm-image"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardSmImage, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: '[mat-card-sm-image], [matCardImageSmall]',
      host: {
        'class': 'mat-card-sm-image'
      }
    }]
  }], null, null);
})();
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * @docs-private
 */


var MatCardMdImage = function MatCardMdImage() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardMdImage);
};

MatCardMdImage.ɵfac = function MatCardMdImage_Factory(t) {
  return new (t || MatCardMdImage)();
};

MatCardMdImage.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardMdImage,
  selectors: [["", "mat-card-md-image", ""], ["", "matCardImageMedium", ""]],
  hostAttrs: [1, "mat-card-md-image"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardMdImage, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: '[mat-card-md-image], [matCardImageMedium]',
      host: {
        'class': 'mat-card-md-image'
      }
    }]
  }], null, null);
})();
/**
 * Image used in a card, needed to add the mat- CSS styling.
 * @docs-private
 */


var MatCardLgImage = function MatCardLgImage() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardLgImage);
};

MatCardLgImage.ɵfac = function MatCardLgImage_Factory(t) {
  return new (t || MatCardLgImage)();
};

MatCardLgImage.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardLgImage,
  selectors: [["", "mat-card-lg-image", ""], ["", "matCardImageLarge", ""]],
  hostAttrs: [1, "mat-card-lg-image"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardLgImage, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: '[mat-card-lg-image], [matCardImageLarge]',
      host: {
        'class': 'mat-card-lg-image'
      }
    }]
  }], null, null);
})();
/**
 * Large image used in a card, needed to add the mat- CSS styling.
 * @docs-private
 */


var MatCardXlImage = function MatCardXlImage() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardXlImage);
};

MatCardXlImage.ɵfac = function MatCardXlImage_Factory(t) {
  return new (t || MatCardXlImage)();
};

MatCardXlImage.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardXlImage,
  selectors: [["", "mat-card-xl-image", ""], ["", "matCardImageXLarge", ""]],
  hostAttrs: [1, "mat-card-xl-image"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardXlImage, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: '[mat-card-xl-image], [matCardImageXLarge]',
      host: {
        'class': 'mat-card-xl-image'
      }
    }]
  }], null, null);
})();
/**
 * Avatar image used in a card, needed to add the mat- CSS styling.
 * @docs-private
 */


var MatCardAvatar = function MatCardAvatar() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardAvatar);
};

MatCardAvatar.ɵfac = function MatCardAvatar_Factory(t) {
  return new (t || MatCardAvatar)();
};

MatCardAvatar.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineDirective"]({
  type: MatCardAvatar,
  selectors: [["", "mat-card-avatar", ""], ["", "matCardAvatar", ""]],
  hostAttrs: [1, "mat-card-avatar"]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardAvatar, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Directive"],
    args: [{
      selector: '[mat-card-avatar], [matCardAvatar]',
      host: {
        'class': 'mat-card-avatar'
      }
    }]
  }], null, null);
})();
/**
 * A basic content container component that adds the styles of a Material design card.
 *
 * While this component can be used alone, it also provides a number
 * of preset styles for common card sections, including:
 * - mat-card-title
 * - mat-card-subtitle
 * - mat-card-content
 * - mat-card-actions
 * - mat-card-footer
 */


var MatCard = // @breaking-change 9.0.0 `_animationMode` parameter to be made required.
function MatCard(_animationMode) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCard);

  this._animationMode = _animationMode;
};

MatCard.ɵfac = function MatCard_Factory(t) {
  return new (t || MatCard)(_angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["ANIMATION_MODULE_TYPE"], 8));
};

MatCard.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
  type: MatCard,
  selectors: [["mat-card"]],
  hostAttrs: [1, "mat-card", "mat-focus-indicator"],
  hostVars: 2,
  hostBindings: function MatCard_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵclassProp"]("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
    }
  },
  exportAs: ["matCard"],
  ngContentSelectors: _c1,
  decls: 2,
  vars: 0,
  template: function MatCard_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojectionDef"](_c0);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](0);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](1, 1);
    }
  },
  styles: [".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatCard.ctorParameters = function () {
  return [{
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCard, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
    args: [{
      selector: 'mat-card',
      exportAs: 'matCard',
      template: "<ng-content></ng-content>\n<ng-content select=\"mat-card-footer\"></ng-content>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectionStrategy"].OnPush,
      host: {
        'class': 'mat-card mat-focus-indicator',
        '[class._mat-animation-noopable]': '_animationMode === "NoopAnimations"'
      },
      styles: [".mat-card{transition:box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);display:block;position:relative;padding:16px;border-radius:4px}._mat-animation-noopable.mat-card{transition:none;animation:none}.mat-card .mat-divider-horizontal{position:absolute;left:0;width:100%}[dir=rtl] .mat-card .mat-divider-horizontal{left:auto;right:0}.mat-card .mat-divider-horizontal.mat-divider-inset{position:static;margin:0}[dir=rtl] .mat-card .mat-divider-horizontal.mat-divider-inset{margin-right:0}.cdk-high-contrast-active .mat-card{outline:solid 1px}.mat-card-actions,.mat-card-subtitle,.mat-card-content{display:block;margin-bottom:16px}.mat-card-title{display:block;margin-bottom:8px}.mat-card-actions{margin-left:-8px;margin-right:-8px;padding:8px 0}.mat-card-actions-align-end{display:flex;justify-content:flex-end}.mat-card-image{width:calc(100% + 32px);margin:0 -16px 16px -16px}.mat-card-footer{display:block;margin:0 -16px -16px -16px}.mat-card-actions .mat-button,.mat-card-actions .mat-raised-button,.mat-card-actions .mat-stroked-button{margin:0 8px}.mat-card-header{display:flex;flex-direction:row}.mat-card-header .mat-card-title{margin-bottom:12px}.mat-card-header-text{margin:0 16px}.mat-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;object-fit:cover}.mat-card-title-group{display:flex;justify-content:space-between}.mat-card-sm-image{width:80px;height:80px}.mat-card-md-image{width:112px;height:112px}.mat-card-lg-image{width:152px;height:152px}.mat-card-xl-image{width:240px;height:240px;margin:-8px}.mat-card-title-group>.mat-card-xl-image{margin:-8px 0 8px}@media(max-width: 599px){.mat-card-title-group{margin:0}.mat-card-xl-image{margin-left:0;margin-right:0}}.mat-card>:first-child,.mat-card-content>:first-child{margin-top:0}.mat-card>:last-child:not(.mat-card-footer),.mat-card-content>:last-child:not(.mat-card-footer){margin-bottom:0}.mat-card-image:first-child{margin-top:-16px;border-top-left-radius:inherit;border-top-right-radius:inherit}.mat-card>.mat-card-actions:last-child{margin-bottom:-8px;padding-bottom:0}.mat-card-actions .mat-button:first-child,.mat-card-actions .mat-raised-button:first-child,.mat-card-actions .mat-stroked-button:first-child{margin-left:0;margin-right:0}.mat-card-title:not(:first-child),.mat-card-subtitle:not(:first-child){margin-top:-4px}.mat-card-header .mat-card-subtitle:not(:first-child){margin-top:-8px}.mat-card>.mat-card-xl-image:first-child{margin-top:-8px}.mat-card>.mat-card-xl-image:last-child{margin-bottom:-8px}\n"]
    }]
  }], function () {
    return [{
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_2__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, null);
})();
/**
 * Component intended to be used within the `<mat-card>` component. It adds styles for a
 * preset header section (i.e. a title, subtitle, and avatar layout).
 * @docs-private
 */


var MatCardHeader = function MatCardHeader() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardHeader);
};

MatCardHeader.ɵfac = function MatCardHeader_Factory(t) {
  return new (t || MatCardHeader)();
};

MatCardHeader.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
  type: MatCardHeader,
  selectors: [["mat-card-header"]],
  hostAttrs: [1, "mat-card-header"],
  ngContentSelectors: _c3,
  decls: 4,
  vars: 0,
  consts: [[1, "mat-card-header-text"]],
  template: function MatCardHeader_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojectionDef"](_c2);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](0);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](1, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](2, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](3, 2);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardHeader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
    args: [{
      selector: 'mat-card-header',
      template: "<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content>\n<div class=\"mat-card-header-text\">\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content></ng-content>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectionStrategy"].OnPush,
      host: {
        'class': 'mat-card-header'
      }
    }]
  }], null, null);
})();
/**
 * Component intended to be used within the `<mat-card>` component. It adds styles for a preset
 * layout that groups an image with a title section.
 * @docs-private
 */


var MatCardTitleGroup = function MatCardTitleGroup() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardTitleGroup);
};

MatCardTitleGroup.ɵfac = function MatCardTitleGroup_Factory(t) {
  return new (t || MatCardTitleGroup)();
};

MatCardTitleGroup.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineComponent"]({
  type: MatCardTitleGroup,
  selectors: [["mat-card-title-group"]],
  hostAttrs: [1, "mat-card-title-group"],
  ngContentSelectors: _c5,
  decls: 4,
  vars: 0,
  template: function MatCardTitleGroup_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojectionDef"](_c4);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementStart"](0, "div");
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](2, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵprojection"](3, 2);
    }
  },
  encapsulation: 2,
  changeDetection: 0
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardTitleGroup, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["Component"],
    args: [{
      selector: 'mat-card-title-group',
      template: "<div>\n  <ng-content\n      select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content>\n</div>\n<ng-content select=\"img\"></ng-content>\n<ng-content></ng-content>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_1__["ChangeDetectionStrategy"].OnPush,
      host: {
        'class': 'mat-card-title-group'
      }
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatCardModule = function MatCardModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatCardModule);
};

MatCardModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineNgModule"]({
  type: MatCardModule
});
MatCardModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjector"]({
  factory: function MatCardModule_Factory(t) {
    return new (t || MatCardModule)();
  },
  imports: [[_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵsetNgModuleScope"](MatCardModule, {
    declarations: function declarations() {
      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar];
    },
    imports: function imports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"]];
    },
    exports: function exports() {
      return [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"]];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵsetClassMetadata"](MatCardModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_1__["NgModule"],
    args: [{
      imports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"]],
      exports: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar, _angular_material_core__WEBPACK_IMPORTED_MODULE_3__["MatCommonModule"]],
      declarations: [MatCard, MatCardHeader, MatCardTitleGroup, MatCardContent, MatCardTitle, MatCardSubtitle, MatCardActions, MatCardFooter, MatCardSmImage, MatCardMdImage, MatCardLgImage, MatCardImage, MatCardXlImage, MatCardAvatar]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "XDwk":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/translate/translate.component.html ***!
  \****************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 class=\"card-title \">{{'TranslateList'|translate}}</h4>\r\n            <a *ngIf=\"checkClaim('CreateTranslateCommand')\" class=\"pull-right\" data-toggle=\"modal\"\r\n              data-target=\"#translate\"> <i style=\"color:white\"  title=\"{{'Add'| translate}}\"  class=\"far fa-plus-square fa-2x\"></i></a>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n\r\n              <div class=\"col-md-4 pull-right\">\r\n                <mat-form-field>\r\n                  <mat-label>{{'Filter' |translate}}</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"id\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"language\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'LangCode' |translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.language}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"code\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Code'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"value\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Value'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"update\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateTranslateCommand')\" data-toggle=\"modal\" data-target=\"#translate\" (click)=\"getTranslateById(element.id)\">\r\n                      <i title=\"{{'Update' | translate}}\" style=\"color:#ff5722;\" class=\"far fa-edit\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\">\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('DeleteTranslateCommand')\" (confirm)=\"deleteTranslate(element.id)\" [swal]=\"deleteSwal\"><i title=\"{{'Delete' | translate}}\" style=\"color:#D9534E;\" class=\"fas fa-trash-alt\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                  <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                </tr>\r\n              </table>\r\n              <mat-paginator [pageSizeOptions]=\"[10, 25,50,100]\"></mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal modal-angular fade\" id=\"translate\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(translateAddForm)\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        <h4 class=\"margin-top\">\r\n          {{'TranslateForm'|translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n        <form *ngIf=\"translateAddForm\" [formGroup]=\"translateAddForm\" (ngSubmit)=\"save()\">\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col-md-12\">\r\n              <select class=\"browser-default custom-select\" name=\"langId\" formControlName=\"langId\">\r\n                <option *ngFor=\"let item of langugelookUp\" [ngValue]=\"item.id\"> {{item.label}}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"{{'Code'|translate}}\" type=\"text\" id=\"code\" name=\"code\"\r\n                  formControlName=\"code\" />\r\n                <div class=\"alert alert-danger\"\r\n                  *ngIf=\"translateAddForm.get('code')!.hasError('code') && translateAddForm.get('code')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"{{'Value'|translate}}\" type=\"text\" id=\"value\" name=\"value\"\r\n                  formControlName=\"value\" />\r\n                <div class=\"alert alert-danger\"\r\n                  *ngIf=\"translateAddForm.get('value')!.hasError('value') && translateAddForm.get('value')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save' |translate}}</button>\r\n          <div class=\"clearfix\"></div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon=\"error\" [showCancelButton]=\"true\"\r\n  [confirmButtonText]=\"'OK'\" [cancelButtonText]=\"'Cancel'\">\r\n</swal>");

/***/ }),

/***/ "XE5m":
/*!*************************************************************!*\
  !*** ./src/app/core/components/admin/visit/models/Visit.ts ***!
  \*************************************************************/
/*! exports provided: Visit */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Visit", function() { return Visit; });
var Visit = /** @class */ (function () {
    function Visit() {
    }
    return Visit;
}());



/***/ }),

/***/ "XtHf":
/*!**************************************************************************!*\
  !*** ./src/app/core/components/screens/banu-logs/banu-logs.component.ts ***!
  \**************************************************************************/
/*! exports provided: BanuLogsComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BanuLogsComponent", function() { return BanuLogsComponent; });
/* harmony import */ var _raw_loader_banu_logs_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./banu-logs.component.html */ "u4eJ");
/* harmony import */ var _banu_logs_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./banu-logs.component.css */ "hdoO");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/components/admin/login/Services/auth.service */ "a9M/");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var _admin_banuLog_models_BanuLog__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../admin/banuLog/models/BanuLog */ "Ry6g");
/* harmony import */ var _admin_banuLog_services_BanuLog_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../admin/banuLog/services/BanuLog.service */ "pn4S");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var BanuLogsComponent = /** @class */ (function () {
    function BanuLogsComponent(banuLogService, lookupService, alertifyService, formBuilder, authService, datePipe) {
        this.banuLogService = banuLogService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.datePipe = datePipe;
        this.displayedColumns = ['createdDate', 'transactorFullName', 'transactorId', 'transactionsDescription', 'transactionType'];
        this.banuLog = new _admin_banuLog_models_BanuLog__WEBPACK_IMPORTED_MODULE_11__["BanuLog"]();
        this.basePageIndex = 1;
        this.basePageCount = 100;
        this.startDate = null;
        this.endDate = null;
        this.formattedStartDate = '';
        this.formattedEndDate = '';
        this.selectedProcessType = '';
        this.searchName = '';
        this.isSearch = false;
        this.filters = [];
        this.filteredAllResult = null;
        this.allResult = null;
        this.filterResult = [];
        this.page = 1;
        this.pageCount = [];
        this.allPageCount = [];
        this.pageSize = 100;
        this.selectedPageCount = null;
    }
    BanuLogsComponent.prototype.getVisiblePages = function () {
        var totalPages = this.pageCount.length;
        var currentPage = this.page;
        var visiblePages = [];
        if (totalPages <= 7) {
            // Toplam sayfa sayısı 7 veya daha azsa hepsini göster
            return this.pageCount;
        }
        // İlk sayfayı her zaman göster
        visiblePages.push(1);
        if (currentPage > 4) {
            visiblePages.push(-1); // "..." için
        }
        // Aktif sayfanın etrafındaki sayfaları göster
        for (var i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {
            visiblePages.push(i);
        }
        if (currentPage < totalPages - 3) {
            visiblePages.push(-1); // "..." için
        }
        // Son sayfayı her zaman göster
        visiblePages.push(totalPages);
        return visiblePages;
    };
    BanuLogsComponent.prototype.getAllVisiblePages = function () {
        var totalPages = this.allPageCount.length;
        var currentPage = this.basePageIndex;
        var visiblePages = [];
        if (totalPages <= 7) {
            // Toplam sayfa sayısı 7 veya daha azsa hepsini göster
            return this.allPageCount;
        }
        // İlk sayfayı her zaman göster
        visiblePages.push(1);
        if (currentPage > 4) {
            visiblePages.push(-1); // "..." için
        }
        // Aktif sayfanın etrafındaki sayfaları göster
        for (var i = Math.max(2, currentPage - 2); i <= Math.min(totalPages - 1, currentPage + 2); i++) {
            visiblePages.push(i);
        }
        if (currentPage < totalPages - 3) {
            visiblePages.push(-1); // "..." için
        }
        // Son sayfayı her zaman göster
        visiblePages.push(totalPages);
        return visiblePages;
    };
    BanuLogsComponent.prototype.ngAfterViewInit = function () {
        this.getBanuLogList();
    };
    BanuLogsComponent.prototype.ngOnInit = function () {
        this.createBanuLogAddForm();
    };
    BanuLogsComponent.prototype.getBanuLogList = function () {
        var _this = this;
        this.banuLogService.getBanuLogByPagingListSecurity(this.basePageIndex, this.basePageCount).subscribe(function (res) {
            _this.banuLogList = res.data;
            _this.allResult = res;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](res.data);
            _this.allPageCount = [];
            for (var index = 1; index < res.totalPages + 1; index++) {
                _this.allPageCount.push(index);
            }
            _this.configDataTable();
        });
    };
    BanuLogsComponent.prototype.save = function () {
        if (this.banuLogAddForm.valid) {
            this.banuLog = Object.assign({}, this.banuLogAddForm.value);
            if (this.banuLog.id == "")
                this.addBanuLog();
            else
                this.updateBanuLog();
        }
    };
    BanuLogsComponent.prototype.addBanuLog = function () {
        var _this = this;
        this.banuLogService.addBanuLog(this.banuLog).subscribe(function (data) {
            _this.getBanuLogList();
            _this.banuLog = new _admin_banuLog_models_BanuLog__WEBPACK_IMPORTED_MODULE_11__["BanuLog"]();
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.banuLogAddForm);
        });
    };
    BanuLogsComponent.prototype.updateBanuLog = function () {
        var _this = this;
        this.banuLogService.updateBanuLog(this.banuLog).subscribe(function (data) {
            var index = _this.banuLogList.findIndex(function (x) { return x.id == _this.banuLog.id; });
            _this.banuLogList[index] = _this.banuLog;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](_this.banuLogList);
            _this.configDataTable();
            _this.banuLog = new _admin_banuLog_models_BanuLog__WEBPACK_IMPORTED_MODULE_11__["BanuLog"]();
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.banuLogAddForm);
        });
    };
    BanuLogsComponent.prototype.createBanuLogAddForm = function () {
        this.banuLogAddForm = this.formBuilder.group({
            id: [0],
            createdDate: [null, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactorFullName: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactorId: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactionsDescription: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required],
            transactionType: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_4__["Validators"].required]
        });
    };
    BanuLogsComponent.prototype.onPageCountChange = function (event) {
        this.page = event.value;
        this.onSearch();
    };
    BanuLogsComponent.prototype.onPageChange = function (newPage) {
        if (newPage >= 1 && newPage <= this.pageCount.length) {
            this.page = newPage;
            this.onSearch();
        }
    };
    BanuLogsComponent.prototype.onAllPageCountChange = function (event) {
        this.basePageIndex = event.value;
        this.getBanuLogList();
    };
    BanuLogsComponent.prototype.onAllPageChange = function (newPage) {
        if (newPage >= 1 && newPage <= this.allPageCount.length) {
            this.basePageIndex = newPage;
            this.getBanuLogList();
        }
    };
    BanuLogsComponent.prototype.deleteBanuLog = function (banuLogId) {
        var _this = this;
        this.banuLogService.deleteBanuLog(banuLogId).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            _this.banuLogList = _this.banuLogList.filter(function (x) { return x.id != banuLogId; });
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](_this.banuLogList);
            _this.configDataTable();
        });
    };
    BanuLogsComponent.prototype.onStartDateChange = function () {
        if (this.startDate) {
            this.formattedStartDate = this.datePipe.transform(this.startDate, 'dd-MM-yyyy') || '';
            this.page = 1;
        }
    };
    BanuLogsComponent.prototype.onEndDateChange = function () {
        if (this.endDate) {
            this.formattedEndDate = this.datePipe.transform(this.endDate, 'dd-MM-yyyy') || '';
            this.page = 1;
        }
    };
    BanuLogsComponent.prototype.getBanuLogById = function (banuLogId) {
        var _this = this;
        this.clearFormGroup(this.banuLogAddForm);
        this.banuLogService.getBanuLogById(banuLogId).subscribe(function (data) {
            _this.banuLog = data;
            _this.banuLogAddForm.patchValue(data);
        });
    };
    BanuLogsComponent.prototype.createPdf = function () {
        var _this = this;
        if (this.filterResult.length == 0 && this.isSearch == true) {
            this.alertifyService.error("PDF oluşturulacak bir veri yok!");
            return;
        }
        this.banuLogService.getBanuLogFilterListToPdfSecurity(this.filters).subscribe(function (response) {
            var _a;
            // Blob nesnesini oluştur
            var file = new Blob([response.body], { type: (_a = response.body) === null || _a === void 0 ? void 0 : _a.type });
            var contentType = response.headers.get('Content-Type');
            var format = contentType === null || contentType === void 0 ? void 0 : contentType.split('/')[1];
            var fileName = "BanuLogs_" + new Date().toISOString() + "." + format;
            var contentDisposition = response.headers.get('Content-Disposition');
            if (contentDisposition) {
                var matches = contentDisposition.match(/filename="?([^"]+)"?/);
                if ((matches === null || matches === void 0 ? void 0 : matches.length) > 1) {
                    fileName = matches[1];
                }
            }
            var fileURL = URL.createObjectURL(file);
            var a = document.createElement('a');
            a.href = fileURL;
            a.download = fileName;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
        }, function (error) {
            _this.alertifyService.error("PDF oluşturulurken bir hata oluştu!");
        });
    };
    BanuLogsComponent.prototype.onSearch = function () {
        var _this = this;
        this.isSearch = true;
        this.filters = [];
        if (this.formattedStartDate != '' && this.formattedStartDate != null) {
            this.filters.push({
                key: 'CreatedDate',
                operation: 'GreaterThanOrEqual',
                value: this.formattedStartDate
            });
        }
        if (this.formattedEndDate != '' && this.formattedEndDate != null) {
            this.filters.push({
                key: 'CreatedDate',
                operation: 'LessThanOrEqual',
                value: this.formattedEndDate
            });
        }
        if (this.searchName != '' && this.searchName != null) {
            this.filters.push({
                key: 'TransactorFullName',
                operation: 'Contains',
                value: this.searchName
            });
        }
        if (this.selectedProcessType != '' && this.selectedProcessType != null) {
            this.filters.push({
                key: 'TransactionType',
                operation: 'Contains',
                value: this.selectedProcessType
            });
        }
        this.banuLogService.getBanuLogGlobalFilterListSecurity(this.filters, this.page, this.pageSize).subscribe(function (res) {
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_7__["MatTableDataSource"](res.data);
            _this.filteredAllResult = res;
            _this.filterResult = res.data;
            _this.configDataTable();
            _this.pageCount = [];
            for (var index = 1; index < res.totalPages + 1; index++) {
                _this.pageCount.push(index);
            }
        }, function (error) {
            _this.alertifyService.error(error.error.message);
        });
    };
    BanuLogsComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    BanuLogsComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    BanuLogsComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    BanuLogsComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    BanuLogsComponent.ctorParameters = function () { return [
        { type: _admin_banuLog_services_BanuLog_service__WEBPACK_IMPORTED_MODULE_12__["BanuLogService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_10__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"] },
        { type: app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"] },
        { type: _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"] }
    ]; };
    BanuLogsComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_5__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_3__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_6__["MatSort"],] }]
    };
    BanuLogsComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-banu-logs',
            template: _raw_loader_banu_logs_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_banu_logs_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_admin_banuLog_services_BanuLog_service__WEBPACK_IMPORTED_MODULE_12__["BanuLogService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_10__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_9__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_4__["FormBuilder"], app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_8__["AuthService"], _angular_common__WEBPACK_IMPORTED_MODULE_2__["DatePipe"]])
    ], BanuLogsComponent);
    return BanuLogsComponent;
}());



/***/ }),

/***/ "XvJy":
/*!******************************************************************!*\
  !*** ./src/app/core/components/admin/user/models/passwordDto.ts ***!
  \******************************************************************/
/*! exports provided: PasswordDto */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PasswordDto", function() { return PasswordDto; });
var PasswordDto = /** @class */ (function () {
    function PasswordDto() {
    }
    return PasswordDto;
}());



/***/ }),

/***/ "YEgF":
/*!*******************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/MessageBuffer.js ***!
  \*******************************************************************/
/*! exports provided: MessageBuffer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MessageBuffer", function() { return MessageBuffer; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./IHubProtocol */ "++1n");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Utils */ "ftFU");





// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.


/** @private */

var MessageBuffer = /*#__PURE__*/function () {
  function MessageBuffer(protocol, connection, bufferSize) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MessageBuffer);

    this._bufferSize = 100000;
    this._messages = [];
    this._totalMessageCount = 0;
    this._waitForSequenceMessage = false; // Message IDs start at 1 and always increment by 1

    this._nextReceivingSequenceId = 1;
    this._latestReceivedSequenceId = 0;
    this._bufferedByteCount = 0;
    this._reconnectInProgress = false;
    this._protocol = protocol;
    this._connection = connection;
    this._bufferSize = bufferSize;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_4__["default"])(MessageBuffer, [{
    key: "_send",
    value: function () {
      var _send2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee(message) {
        var serializedMessage, backpressurePromise, backpressurePromiseResolver, backpressurePromiseRejector;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                serializedMessage = this._protocol.writeMessage(message);
                backpressurePromise = Promise.resolve(); // Only count invocation messages. Acks, pings, etc. don't need to be resent on reconnect

                if (this._isInvocationMessage(message)) {
                  this._totalMessageCount++;

                  backpressurePromiseResolver = function backpressurePromiseResolver() {};

                  backpressurePromiseRejector = function backpressurePromiseRejector() {};

                  if (Object(_Utils__WEBPACK_IMPORTED_MODULE_6__["isArrayBuffer"])(serializedMessage)) {
                    this._bufferedByteCount += serializedMessage.byteLength;
                  } else {
                    this._bufferedByteCount += serializedMessage.length;
                  }

                  if (this._bufferedByteCount >= this._bufferSize) {
                    backpressurePromise = new Promise(function (resolve, reject) {
                      backpressurePromiseResolver = resolve;
                      backpressurePromiseRejector = reject;
                    });
                  }

                  this._messages.push(new BufferedItem(serializedMessage, this._totalMessageCount, backpressurePromiseResolver, backpressurePromiseRejector));
                }

                _context.prev = 3;

                if (this._reconnectInProgress) {
                  _context.next = 7;
                  break;
                }

                _context.next = 7;
                return this._connection.send(serializedMessage);

              case 7:
                _context.next = 12;
                break;

              case 9:
                _context.prev = 9;
                _context.t0 = _context["catch"](3);

                this._disconnected();

              case 12:
                _context.next = 14;
                return backpressurePromise;

              case 14:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[3, 9]]);
      }));

      function _send(_x) {
        return _send2.apply(this, arguments);
      }

      return _send;
    }()
  }, {
    key: "_ack",
    value: function _ack(ackMessage) {
      var newestAckedMessage = -1; // Find index of newest message being acked

      for (var index = 0; index < this._messages.length; index++) {
        var element = this._messages[index];

        if (element._id <= ackMessage.sequenceId) {
          newestAckedMessage = index;

          if (Object(_Utils__WEBPACK_IMPORTED_MODULE_6__["isArrayBuffer"])(element._message)) {
            this._bufferedByteCount -= element._message.byteLength;
          } else {
            this._bufferedByteCount -= element._message.length;
          } // resolve items that have already been sent and acked


          element._resolver();
        } else if (this._bufferedByteCount < this._bufferSize) {
          // resolve items that now fall under the buffer limit but haven't been acked
          element._resolver();
        } else {
          break;
        }
      }

      if (newestAckedMessage !== -1) {
        // We're removing everything including the message pointed to, so add 1
        this._messages = this._messages.slice(newestAckedMessage + 1);
      }
    }
  }, {
    key: "_shouldProcessMessage",
    value: function _shouldProcessMessage(message) {
      if (this._waitForSequenceMessage) {
        if (message.type !== _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Sequence) {
          return false;
        } else {
          this._waitForSequenceMessage = false;
          return true;
        }
      } // No special processing for acks, pings, etc.


      if (!this._isInvocationMessage(message)) {
        return true;
      }

      var currentId = this._nextReceivingSequenceId;
      this._nextReceivingSequenceId++;

      if (currentId <= this._latestReceivedSequenceId) {
        if (currentId === this._latestReceivedSequenceId) {
          // Should only hit this if we just reconnected and the server is sending
          // Messages it has buffered, which would mean it hasn't seen an Ack for these messages
          this._ackTimer();
        } // Ignore, this is a duplicate message


        return false;
      }

      this._latestReceivedSequenceId = currentId; // Only start the timer for sending an Ack message when we have a message to ack. This also conveniently solves
      // timer throttling by not having a recursive timer, and by starting the timer via a network call (recv)

      this._ackTimer();

      return true;
    }
  }, {
    key: "_resetSequence",
    value: function _resetSequence(message) {
      if (message.sequenceId > this._nextReceivingSequenceId) {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this._connection.stop(new Error("Sequence ID greater than amount of messages we've received."));

        return;
      }

      this._nextReceivingSequenceId = message.sequenceId;
    }
  }, {
    key: "_disconnected",
    value: function _disconnected() {
      this._reconnectInProgress = true;
      this._waitForSequenceMessage = true;
    }
  }, {
    key: "_resend",
    value: function () {
      var _resend2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee2() {
        var sequenceId, messages, _iterator, _step, element;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                sequenceId = this._messages.length !== 0 ? this._messages[0]._id : this._totalMessageCount + 1;
                _context2.next = 3;
                return this._connection.send(this._protocol.writeMessage({
                  type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Sequence,
                  sequenceId: sequenceId
                }));

              case 3:
                // Get a local variable to the _messages, just in case messages are acked while resending
                // Which would slice the _messages array (which creates a new copy)
                messages = this._messages;
                _iterator = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(messages);
                _context2.prev = 5;

                _iterator.s();

              case 7:
                if ((_step = _iterator.n()).done) {
                  _context2.next = 13;
                  break;
                }

                element = _step.value;
                _context2.next = 11;
                return this._connection.send(element._message);

              case 11:
                _context2.next = 7;
                break;

              case 13:
                _context2.next = 18;
                break;

              case 15:
                _context2.prev = 15;
                _context2.t0 = _context2["catch"](5);

                _iterator.e(_context2.t0);

              case 18:
                _context2.prev = 18;

                _iterator.f();

                return _context2.finish(18);

              case 21:
                this._reconnectInProgress = false;

              case 22:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[5, 15, 18, 21]]);
      }));

      function _resend() {
        return _resend2.apply(this, arguments);
      }

      return _resend;
    }()
  }, {
    key: "_dispose",
    value: function _dispose(error) {
      error !== null && error !== void 0 ? error : error = new Error("Unable to reconnect to server."); // Unblock backpressure if any

      var _iterator2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this._messages),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var element = _step2.value;

          element._rejector(error);
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }, {
    key: "_isInvocationMessage",
    value: function _isInvocationMessage(message) {
      // There is no way to check if something implements an interface.
      // So we individually check the messages in a switch statement.
      // To make sure we don't miss any message types we rely on the compiler
      // seeing the function returns a value and it will do the
      // exhaustive check for us on the switch statement, since we don't use 'case default'
      switch (message.type) {
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Invocation:
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].StreamItem:
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Completion:
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].StreamInvocation:
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].CancelInvocation:
          return true;

        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Close:
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Sequence:
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Ping:
        case _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Ack:
          return false;
      }
    }
  }, {
    key: "_ackTimer",
    value: function _ackTimer() {
      var _this = this;

      if (this._ackTimerHandle === undefined) {
        this._ackTimerHandle = setTimeout( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.mark(function _callee3() {
          return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default.a.wrap(function _callee3$(_context3) {
            while (1) {
              switch (_context3.prev = _context3.next) {
                case 0:
                  _context3.prev = 0;

                  if (_this._reconnectInProgress) {
                    _context3.next = 4;
                    break;
                  }

                  _context3.next = 4;
                  return _this._connection.send(_this._protocol.writeMessage({
                    type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_5__["MessageType"].Ack,
                    sequenceId: _this._latestReceivedSequenceId
                  }));

                case 4:
                  _context3.next = 8;
                  break;

                case 6:
                  _context3.prev = 6;
                  _context3.t0 = _context3["catch"](0);

                case 8:
                  clearTimeout(_this._ackTimerHandle);
                  _this._ackTimerHandle = undefined; // 1 second delay so we don't spam Ack messages if there are many messages being received at once.

                case 10:
                case "end":
                  return _context3.stop();
              }
            }
          }, _callee3, null, [[0, 6]]);
        })), 1000);
      }
    }
  }]);

  return MessageBuffer;
}();

var BufferedItem = function BufferedItem(message, id, resolver, rejector) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, BufferedItem);

  this._message = message;
  this._id = id;
  this._resolver = resolver;
  this._rejector = rejector;
};

/***/ }),

/***/ "YK1k":
/*!****************************************************************!*\
  !*** ./src/app/core/components/admin/visit/visit.component.ts ***!
  \****************************************************************/
/*! exports provided: VisitComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisitComponent", function() { return VisitComponent; });
/* harmony import */ var _raw_loader_visit_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./visit.component.html */ "HfsZ");
/* harmony import */ var _visit_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./visit.component.scss */ "m+o/");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/components/admin/login/Services/auth.service */ "a9M/");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var _models_Visit__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./models/Visit */ "XE5m");
/* harmony import */ var _services_visit_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./services/visit.service */ "vCDI");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var VisitComponent = /** @class */ (function () {
    function VisitComponent(visitService, lookupService, alertifyService, formBuilder, authService) {
        this.visitService = visitService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.displayedColumns = ['createdDate', 'personnelId', 'visitorFullName', 'visitorLicensePlate', 'vehicleEntry', 'multiPersonVisit', 'isConfirm', 'isExit', 'status', 'isReject', 'approvalDate', 'exitDate', 'visitStartDate', 'visitEndDate'];
        this.pageSize = 50;
        this.page = 1;
        this.totalPages = 0;
        this.totalItemCount = 0;
        this.visitList = [];
        this.visit = new _models_Visit__WEBPACK_IMPORTED_MODULE_10__["Visit"]();
    }
    VisitComponent.prototype.ngAfterViewInit = function () {
        this.getVisitList();
    };
    VisitComponent.prototype.ngOnInit = function () {
        this.getVisitList();
    };
    VisitComponent.prototype.getVisitList = function () {
        var _this = this;
        this.visitService.getVisitListByPaging(this.page, this.pageSize).subscribe(function (data) {
            _this.visitList = data.data;
            _this.totalPages = data.totalPages;
            _this.totalItemCount = data.totalItemCount;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.visitList);
            _this.configDataTable();
        });
    };
    VisitComponent.prototype.onPageChange = function (newPage) {
        if (newPage >= 1 && newPage <= this.totalPages) {
            this.page = newPage;
            this.getVisitList();
        }
    };
    VisitComponent.prototype.getPagination = function () {
        var pages = [];
        if (this.totalPages <= 7) {
            for (var i = 1; i <= this.totalPages; i++)
                pages.push(i);
        }
        else {
            pages.push(1);
            if (this.page > 4)
                pages.push(-1);
            for (var i = Math.max(2, this.page - 2); i <= Math.min(this.totalPages - 1, this.page + 2); i++) {
                pages.push(i);
            }
            if (this.page < this.totalPages - 3)
                pages.push(-1);
            pages.push(this.totalPages);
        }
        return pages;
    };
    VisitComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    VisitComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    VisitComponent.ctorParameters = function () { return [
        { type: _services_visit_service__WEBPACK_IMPORTED_MODULE_11__["VisitService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"] }
    ]; };
    VisitComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    VisitComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-visit',
            template: _raw_loader_visit_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_visit_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_services_visit_service__WEBPACK_IMPORTED_MODULE_11__["VisitService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_9__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_8__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], app_core_components_admin_login_Services_auth_service__WEBPACK_IMPORTED_MODULE_7__["AuthService"]])
    ], VisitComponent);
    return VisitComponent;
}());



/***/ }),

/***/ "YXKi":
/*!*********************************************************************!*\
  !*** ./src/app/core/components/admin/translate/models/Translate.ts ***!
  \*********************************************************************/
/*! exports provided: Translate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Translate", function() { return Translate; });
var Translate = /** @class */ (function () {
    function Translate() {
    }
    return Translate;
}());



/***/ }),

/***/ "YlYE":
/*!*******************************************************************!*\
  !*** ./src/app/core/components/admin/language/models/language.ts ***!
  \*******************************************************************/
/*! exports provided: Language */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Language", function() { return Language; });
var Language = /** @class */ (function () {
    function Language() {
    }
    return Language;
}());



/***/ }),

/***/ "Ysxs":
/*!***********************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/DefaultHttpClient.js ***!
  \***********************************************************************/
/*! exports provided: DefaultHttpClient */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultHttpClient", function() { return DefaultHttpClient; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./Errors */ "9BRb");
/* harmony import */ var _FetchHttpClient__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./FetchHttpClient */ "1/4N");
/* harmony import */ var _HttpClient__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HttpClient */ "Rlqr");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Utils */ "ftFU");
/* harmony import */ var _XhrHttpClient__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./XhrHttpClient */ "Id6e");




// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.





/** Default implementation of {@link @microsoft/signalr.HttpClient}. */

var DefaultHttpClient = /*#__PURE__*/function (_HttpClient) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_2__["default"])(DefaultHttpClient, _HttpClient);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_3__["default"])(DefaultHttpClient);

  /** Creates a new instance of the {@link @microsoft/signalr.DefaultHttpClient}, using the provided {@link @microsoft/signalr.ILogger} to log messages. */
  function DefaultHttpClient(logger) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, DefaultHttpClient);

    _this = _super.call(this);

    if (typeof fetch !== "undefined" || _Utils__WEBPACK_IMPORTED_MODULE_7__["Platform"].isNode) {
      _this._httpClient = new _FetchHttpClient__WEBPACK_IMPORTED_MODULE_5__["FetchHttpClient"](logger);
    } else if (typeof XMLHttpRequest !== "undefined") {
      _this._httpClient = new _XhrHttpClient__WEBPACK_IMPORTED_MODULE_8__["XhrHttpClient"](logger);
    } else {
      throw new Error("No usable HttpClient found.");
    }

    return _this;
  }
  /** @inheritDoc */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(DefaultHttpClient, [{
    key: "send",
    value: function send(request) {
      // Check that abort was not signaled before calling send
      if (request.abortSignal && request.abortSignal.aborted) {
        return Promise.reject(new _Errors__WEBPACK_IMPORTED_MODULE_4__["AbortError"]());
      }

      if (!request.method) {
        return Promise.reject(new Error("No method defined."));
      }

      if (!request.url) {
        return Promise.reject(new Error("No url defined."));
      }

      return this._httpClient.send(request);
    }
  }, {
    key: "getCookieString",
    value: function getCookieString(url) {
      return this._httpClient.getCookieString(url);
    }
  }]);

  return DefaultHttpClient;
}(_HttpClient__WEBPACK_IMPORTED_MODULE_6__["HttpClient"]);

/***/ }),

/***/ "Z3rW":
/*!***********************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/HandshakeProtocol.js ***!
  \***********************************************************************/
/*! exports provided: HandshakeProtocol */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HandshakeProtocol", function() { return HandshakeProtocol; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _TextMessageFormat__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./TextMessageFormat */ "PMyv");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Utils */ "ftFU");


// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.


/** @private */

var HandshakeProtocol = /*#__PURE__*/function () {
  function HandshakeProtocol() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, HandshakeProtocol);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(HandshakeProtocol, [{
    key: "writeHandshakeRequest",
    value: // Handshake request is always JSON
    function writeHandshakeRequest(handshakeRequest) {
      return _TextMessageFormat__WEBPACK_IMPORTED_MODULE_2__["TextMessageFormat"].write(JSON.stringify(handshakeRequest));
    }
  }, {
    key: "parseHandshakeResponse",
    value: function parseHandshakeResponse(data) {
      var messageData;
      var remainingData;

      if (Object(_Utils__WEBPACK_IMPORTED_MODULE_3__["isArrayBuffer"])(data)) {
        // Format is binary but still need to read JSON text from handshake response
        var binaryData = new Uint8Array(data);
        var separatorIndex = binaryData.indexOf(_TextMessageFormat__WEBPACK_IMPORTED_MODULE_2__["TextMessageFormat"].RecordSeparatorCode);

        if (separatorIndex === -1) {
          throw new Error("Message is incomplete.");
        } // content before separator is handshake response
        // optional content after is additional messages


        var responseLength = separatorIndex + 1;
        messageData = String.fromCharCode.apply(null, Array.prototype.slice.call(binaryData.slice(0, responseLength)));
        remainingData = binaryData.byteLength > responseLength ? binaryData.slice(responseLength).buffer : null;
      } else {
        var textData = data;

        var _separatorIndex = textData.indexOf(_TextMessageFormat__WEBPACK_IMPORTED_MODULE_2__["TextMessageFormat"].RecordSeparator);

        if (_separatorIndex === -1) {
          throw new Error("Message is incomplete.");
        } // content before separator is handshake response
        // optional content after is additional messages


        var _responseLength = _separatorIndex + 1;

        messageData = textData.substring(0, _responseLength);
        remainingData = textData.length > _responseLength ? textData.substring(_responseLength) : null;
      } // At this point we should have just the single handshake message


      var messages = _TextMessageFormat__WEBPACK_IMPORTED_MODULE_2__["TextMessageFormat"].parse(messageData);
      var response = JSON.parse(messages[0]);

      if (response.type) {
        throw new Error("Expected a handshake response from the server.");
      }

      var responseMessage = response; // multiple messages could have arrived with handshake
      // return additional data to be parsed as usual, or null if all parsed

      return [remainingData, responseMessage];
    }
  }]);

  return HandshakeProtocol;
}();

/***/ }),

/***/ "a0Xx":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/log/logdto.component.html ***!
  \*******************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n\t<div class=\"container-fluid\">\r\n\t\t<div class=\"row\">\r\n\t\t\t<div class=\"col-md-12\">\r\n\t\t\t\t<div class=\"card\">\r\n\t\t\t\t\t<div class=\"card-header card-header-danger\">\r\n\t\t\t\t\t\t<h4 class=\"card-title \">{{'LogList'|translate}}</h4>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"card-body\">\r\n\t\t\t\t\t\t<div class=\"table-responsive\">\r\n\r\n\t\t\t\t\t\t\t<div class=\"col-md-4 pull-right\">\r\n\t\t\t\t\t\t\t\t<mat-form-field>\r\n\t\t\t\t\t\t\t\t\t<mat-label>{{'Filter' |translate}}</mat-label>\r\n\t\t\t\t\t\t\t\t\t<input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n\t\t\t\t\t\t\t\t</mat-form-field>\r\n\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t<table mat-table [dataSource]=\"dataSource\" matSort>\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"id\">\r\n\t\t\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\r\n\t\t\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"level\">\r\n\t\t\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Level'|translate}} </th>\r\n\t\t\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let element\"> {{element.level}} </td>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"exceptionMessage\">\r\n\t\t\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'ExceptionMessage'|translate}} </th>\r\n\t\t\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let element\"> {{element.exceptionMessage}} </td>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"timeStamp\">\r\n\t\t\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TimeStamp'|translate}} </th>\r\n\t\t\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let element\"> {{element.timeStamp}} </td>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"user\">\r\n\t\t\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'User'|translate}} </th>\r\n\t\t\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let element\"> {{element.user}} </td>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"value\">\r\n\t\t\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Value'|translate}} </th>\r\n\t\t\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<ng-container matColumnDef=\"type\">\r\n\t\t\t\t\t\t\t\t\t<th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Type'|translate}} </th>\r\n\t\t\t\t\t\t\t\t\t<td mat-cell *matCellDef=\"let element\"> {{element.type}} </td>\r\n\t\t\t\t\t\t\t\t</ng-container>\r\n\r\n\t\t\t\t\t\t\t\t<tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n\t\t\t\t\t\t\t\t<tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n\t\t\t\t\t\t\t\t<tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n\t\t\t\t\t\t\t\t\t<td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\t<mat-paginator [pageSizeOptions]=\"[10, 25,50,100]\"></mat-paginator>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>");

/***/ }),

/***/ "b6ta":
/*!**********************************************************************!*\
  !*** ./src/app/core/components/admin/language/language.component.ts ***!
  \**********************************************************************/
/*! exports provided: LanguageComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LanguageComponent", function() { return LanguageComponent; });
/* harmony import */ var _raw_loader_language_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./language.component.html */ "MSb9");
/* harmony import */ var _language_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./language.component.scss */ "FVxW");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../login/Services/auth.service */ "a9M/");
/* harmony import */ var _models_language__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./models/language */ "YlYE");
/* harmony import */ var _services_Language_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./services/Language.service */ "wfAX");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var LanguageComponent = /** @class */ (function () {
    function LanguageComponent(languageService, lookupService, alertifyService, formBuilder, authService) {
        this.languageService = languageService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.displayedColumns = ['id', 'name', 'code', 'update', 'delete'];
        this.language = new _models_language__WEBPACK_IMPORTED_MODULE_10__["Language"]();
    }
    LanguageComponent.prototype.ngAfterViewInit = function () {
        this.getLanguageList();
    };
    LanguageComponent.prototype.ngOnInit = function () {
        this.createLanguageAddForm();
    };
    LanguageComponent.prototype.getLanguageList = function () {
        var _this = this;
        this.languageService.getLanguageList().subscribe(function (data) {
            _this.languageList = data;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    LanguageComponent.prototype.save = function () {
        if (this.languageAddForm.valid) {
            this.language = Object.assign({}, this.languageAddForm.value);
            if (this.language.id == 0)
                this.addLanguage();
            else
                this.updateLanguage();
        }
    };
    LanguageComponent.prototype.addLanguage = function () {
        var _this = this;
        this.languageService.addLanguage(this.language).subscribe(function (data) {
            _this.getLanguageList();
            _this.language = new _models_language__WEBPACK_IMPORTED_MODULE_10__["Language"]();
            jQuery('#language').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.languageAddForm);
        });
    };
    LanguageComponent.prototype.updateLanguage = function () {
        var _this = this;
        this.languageService.updateLanguage(this.language).subscribe(function (data) {
            var index = _this.languageList.findIndex(function (x) { return x.id == _this.language.id; });
            _this.languageList[index] = _this.language;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.languageList);
            _this.configDataTable();
            _this.language = new _models_language__WEBPACK_IMPORTED_MODULE_10__["Language"]();
            jQuery('#language').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.languageAddForm);
        });
    };
    LanguageComponent.prototype.createLanguageAddForm = function () {
        this.languageAddForm = this.formBuilder.group({
            id: [0],
            name: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            code: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
    };
    LanguageComponent.prototype.deleteLanguage = function (languageId) {
        var _this = this;
        this.languageService.deleteLanguage(languageId).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            _this.languageList = _this.languageList.filter(function (x) { return x.id != languageId; });
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.languageList);
            _this.configDataTable();
        });
    };
    LanguageComponent.prototype.getLanguageById = function (languageId) {
        var _this = this;
        this.clearFormGroup(this.languageAddForm);
        this.languageService.getLanguage(languageId).subscribe(function (data) {
            _this.language = data;
            _this.languageAddForm.patchValue(data);
        });
    };
    LanguageComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    LanguageComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    LanguageComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    LanguageComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    LanguageComponent.ctorParameters = function () { return [
        { type: _services_Language_service__WEBPACK_IMPORTED_MODULE_11__["LanguageService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__["AuthService"] }
    ]; };
    LanguageComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    LanguageComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-language',
            template: _raw_loader_language_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_language_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_services_Language_service__WEBPACK_IMPORTED_MODULE_11__["LanguageService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__["AuthService"]])
    ], LanguageComponent);
    return LanguageComponent;
}());



/***/ }),

/***/ "bSwM":
/*!**************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/checkbox.js ***!
  \**************************************************************************/
/*! exports provided: MAT_CHECKBOX_CLICK_ACTION, MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHECKBOX_CLICK_ACTION", function() { return MAT_CHECKBOX_CLICK_ACTION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR", function() { return MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHECKBOX_DEFAULT_OPTIONS", function() { return MAT_CHECKBOX_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY", function() { return MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_CHECKBOX_REQUIRED_VALIDATOR", function() { return MAT_CHECKBOX_REQUIRED_VALIDATOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCheckbox", function() { return MatCheckbox; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCheckboxChange", function() { return MatCheckboxChange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCheckboxModule", function() { return MatCheckboxModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCheckboxRequiredValidator", function() { return MatCheckboxRequiredValidator; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatCheckboxRequiredValidatorModule", function() { return _MatCheckboxRequiredValidatorModule; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/observers */ "GU7r");











/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token to be used to override the default options for `mat-checkbox`. */





var _c0 = ["input"];

var _c1 = function _c1() {
  return {
    enterDuration: 150
  };
};

var _c2 = ["*"];
var MAT_CHECKBOX_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('mat-checkbox-default-options', {
  providedIn: 'root',
  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY
});
/** @docs-private */

function MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {
  return {
    color: 'accent',
    clickAction: 'check-indeterminate'
  };
}
/**
 * Injection token that can be used to specify the checkbox click behavior.
 * @deprecated Injection token will be removed, use `MAT_CHECKBOX_DEFAULT_OPTIONS` instead.
 * @breaking-change 10.0.0
 */


var MAT_CHECKBOX_CLICK_ACTION = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["InjectionToken"]('mat-checkbox-click-action');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Increasing integer for generating unique ids for checkbox components.

var nextUniqueId = 0;
/**
 * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.
 * This allows it to support [(ngModel)].
 * @docs-private
 */

var MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(function () {
    return MatCheckbox;
  }),
  multi: true
};
/** Change event object emitted by MatCheckbox. */

var MatCheckboxChange = function MatCheckboxChange() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatCheckboxChange);
}; // Boilerplate for applying mixins to MatCheckbox.

/** @docs-private */


var MatCheckboxBase = function MatCheckboxBase(_elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatCheckboxBase);

  this._elementRef = _elementRef;
};

var _MatCheckboxMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinTabIndex"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinColor"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinDisableRipple"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["mixinDisabled"])(MatCheckboxBase))));
/**
 * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,
 * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or
 * disabled. Note that all additional accessibility attributes are taken care of by the component,
 * so there is no need to provide them yourself. However, if you want to omit a label and still
 * have the checkbox be accessible, you may supply an [aria-label] input.
 * See: https://material.io/design/components/selection-controls.html
 */


var MatCheckbox = /*#__PURE__*/function (_MatCheckboxMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MatCheckbox, _MatCheckboxMixinBase2);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MatCheckbox);

  function MatCheckbox(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex,
  /**
   * @deprecated `_clickAction` parameter to be removed, use
   * `MAT_CHECKBOX_DEFAULT_OPTIONS`
   * @breaking-change 10.0.0
   */
  _clickAction, _animationMode, _options) {
    var _this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatCheckbox);

    _this = _super.call(this, elementRef);
    _this._changeDetectorRef = _changeDetectorRef;
    _this._focusMonitor = _focusMonitor;
    _this._ngZone = _ngZone;
    _this._clickAction = _clickAction;
    _this._animationMode = _animationMode;
    _this._options = _options;
    /**
     * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will
     * take precedence so this may be omitted.
     */

    _this.ariaLabel = '';
    /**
     * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element
     */

    _this.ariaLabelledby = null;
    _this._uniqueId = "mat-checkbox-".concat(++nextUniqueId);
    /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */

    _this.id = _this._uniqueId;
    /** Whether the label should appear after or before the checkbox. Defaults to 'after' */

    _this.labelPosition = 'after';
    /** Name value will be applied to the input element if present */

    _this.name = null;
    /** Event emitted when the checkbox's `checked` value changes. */

    _this.change = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /** Event emitted when the checkbox's `indeterminate` value changes. */

    _this.indeterminateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_6__["EventEmitter"]();
    /**
     * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.
     * @docs-private
     */

    _this._onTouched = function () {};

    _this._currentAnimationClass = '';
    _this._currentCheckState = 0
    /* Init */
    ;

    _this._controlValueAccessorChangeFn = function () {};

    _this._checked = false;
    _this._disabled = false;
    _this._indeterminate = false;
    _this._options = _this._options || {};

    if (_this._options.color) {
      _this.color = _this.defaultColor = _this._options.color;
    }

    _this.tabIndex = parseInt(tabIndex) || 0; // TODO: Remove this after the `_clickAction` parameter is removed as an injection parameter.

    _this._clickAction = _this._clickAction || _this._options.clickAction;
    return _this;
  }
  /** Returns the unique id for the visual hidden input. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_0__["default"])(MatCheckbox, [{
    key: "inputId",
    get: function get() {
      return "".concat(this.id || this._uniqueId, "-input");
    }
    /** Whether the checkbox is required. */

  }, {
    key: "required",
    get: function get() {
      return this._required;
    },
    set: function set(value) {
      this._required = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_5__["coerceBooleanProperty"])(value);
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this2 = this;

      this._focusMonitor.monitor(this._elementRef, true).subscribe(function (focusOrigin) {
        if (!focusOrigin) {
          // When a focused element becomes disabled, the browser *immediately* fires a blur event.
          // Angular does not expect events to be raised during change detection, so any state change
          // (such as a form control's 'ng-touched') will cause a changed-after-checked error.
          // See https://github.com/angular/angular/issues/17793. To work around this, we defer
          // telling the form control it has been touched until the next tick.
          Promise.resolve().then(function () {
            _this2._onTouched();

            _this2._changeDetectorRef.markForCheck();
          });
        }
      });

      this._syncIndeterminate(this._indeterminate);
    } // TODO: Delete next major revision.

  }, {
    key: "ngAfterViewChecked",
    value: function ngAfterViewChecked() {}
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._focusMonitor.stopMonitoring(this._elementRef);
    }
    /**
     * Whether the checkbox is checked.
     */

  }, {
    key: "checked",
    get: function get() {
      return this._checked;
    },
    set: function set(value) {
      if (value != this.checked) {
        this._checked = value;

        this._changeDetectorRef.markForCheck();
      }
    }
    /**
     * Whether the checkbox is disabled. This fully overrides the implementation provided by
     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.
     */

  }, {
    key: "disabled",
    get: function get() {
      return this._disabled;
    },
    set: function set(value) {
      var newValue = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_5__["coerceBooleanProperty"])(value);

      if (newValue !== this.disabled) {
        this._disabled = newValue;

        this._changeDetectorRef.markForCheck();
      }
    }
    /**
     * Whether the checkbox is indeterminate. This is also known as "mixed" mode and can be used to
     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of
     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately
     * set to false.
     */

  }, {
    key: "indeterminate",
    get: function get() {
      return this._indeterminate;
    },
    set: function set(value) {
      var changed = value != this._indeterminate;
      this._indeterminate = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_5__["coerceBooleanProperty"])(value);

      if (changed) {
        if (this._indeterminate) {
          this._transitionCheckState(3
          /* Indeterminate */
          );
        } else {
          this._transitionCheckState(this.checked ? 1
          /* Checked */
          : 2
          /* Unchecked */
          );
        }

        this.indeterminateChange.emit(this._indeterminate);
      }

      this._syncIndeterminate(this._indeterminate);
    }
  }, {
    key: "_isRippleDisabled",
    value: function _isRippleDisabled() {
      return this.disableRipple || this.disabled;
    }
    /** Method being called whenever the label text changes. */

  }, {
    key: "_onLabelTextChange",
    value: function _onLabelTextChange() {
      // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox
      // component will be only marked for check, but no actual change detection runs automatically.
      // Instead of going back into the zone in order to trigger a change detection which causes
      // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger
      // an explicit change detection for the checkbox view and its children.
      this._changeDetectorRef.detectChanges();
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "writeValue",
    value: function writeValue(value) {
      this.checked = !!value;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this._controlValueAccessorChangeFn = fn;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this._onTouched = fn;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "setDisabledState",
    value: function setDisabledState(isDisabled) {
      this.disabled = isDisabled;
    }
  }, {
    key: "_getAriaChecked",
    value: function _getAriaChecked() {
      if (this.checked) {
        return 'true';
      }

      return this.indeterminate ? 'mixed' : 'false';
    }
  }, {
    key: "_transitionCheckState",
    value: function _transitionCheckState(newState) {
      var oldState = this._currentCheckState;
      var element = this._elementRef.nativeElement;

      if (oldState === newState) {
        return;
      }

      if (this._currentAnimationClass.length > 0) {
        element.classList.remove(this._currentAnimationClass);
      }

      this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);
      this._currentCheckState = newState;

      if (this._currentAnimationClass.length > 0) {
        element.classList.add(this._currentAnimationClass); // Remove the animation class to avoid animation when the checkbox is moved between containers

        var animationClass = this._currentAnimationClass;

        this._ngZone.runOutsideAngular(function () {
          setTimeout(function () {
            element.classList.remove(animationClass);
          }, 1000);
        });
      }
    }
  }, {
    key: "_emitChangeEvent",
    value: function _emitChangeEvent() {
      var event = new MatCheckboxChange();
      event.source = this;
      event.checked = this.checked;

      this._controlValueAccessorChangeFn(this.checked);

      this.change.emit(event);
    }
    /** Toggles the `checked` state of the checkbox. */

  }, {
    key: "toggle",
    value: function toggle() {
      this.checked = !this.checked;
    }
    /**
     * Event handler for checkbox input element.
     * Toggles checked state if element is not disabled.
     * Do not toggle on (change) event since IE doesn't fire change event when
     *   indeterminate checkbox is clicked.
     * @param event
     */

  }, {
    key: "_onInputClick",
    value: function _onInputClick(event) {
      var _this3 = this;

      // We have to stop propagation for click events on the visual hidden input element.
      // By default, when a user clicks on a label element, a generated click event will be
      // dispatched on the associated input element. Since we are using a label element as our
      // root container, the click event on the `checkbox` will be executed twice.
      // The real click event will bubble up, and the generated click event also tries to bubble up.
      // This will lead to multiple click events.
      // Preventing bubbling for the second event will solve that issue.
      event.stopPropagation(); // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click

      if (!this.disabled && this._clickAction !== 'noop') {
        // When user manually click on the checkbox, `indeterminate` is set to false.
        if (this.indeterminate && this._clickAction !== 'check') {
          Promise.resolve().then(function () {
            _this3._indeterminate = false;

            _this3.indeterminateChange.emit(_this3._indeterminate);
          });
        }

        this.toggle();

        this._transitionCheckState(this._checked ? 1
        /* Checked */
        : 2
        /* Unchecked */
        ); // Emit our custom change event if the native input emitted one.
        // It is important to only emit it, if the native input triggered one, because
        // we don't want to trigger a change event, when the `checked` variable changes for example.


        this._emitChangeEvent();
      } else if (!this.disabled && this._clickAction === 'noop') {
        // Reset native input when clicked with noop. The native checkbox becomes checked after
        // click, reset it to be align with `checked` value of `mat-checkbox`.
        this._inputElement.nativeElement.checked = this.checked;
        this._inputElement.nativeElement.indeterminate = this.indeterminate;
      }
    }
    /** Focuses the checkbox. */

  }, {
    key: "focus",
    value: function focus() {
      var origin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'keyboard';
      var options = arguments.length > 1 ? arguments[1] : undefined;

      this._focusMonitor.focusVia(this._inputElement, origin, options);
    }
  }, {
    key: "_onInteractionEvent",
    value: function _onInteractionEvent(event) {
      // We always have to stop propagation on the change event.
      // Otherwise the change event, from the input element, will bubble up and
      // emit its event object to the `change` output.
      event.stopPropagation();
    }
  }, {
    key: "_getAnimationClassForCheckStateTransition",
    value: function _getAnimationClassForCheckStateTransition(oldState, newState) {
      // Don't transition if animations are disabled.
      if (this._animationMode === 'NoopAnimations') {
        return '';
      }

      var animSuffix = '';

      switch (oldState) {
        case 0
        /* Init */
        :
          // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or
          // [checked] bound to it.
          if (newState === 1
          /* Checked */
          ) {
              animSuffix = 'unchecked-checked';
            } else if (newState == 3
          /* Indeterminate */
          ) {
              animSuffix = 'unchecked-indeterminate';
            } else {
            return '';
          }

          break;

        case 2
        /* Unchecked */
        :
          animSuffix = newState === 1
          /* Checked */
          ? 'unchecked-checked' : 'unchecked-indeterminate';
          break;

        case 1
        /* Checked */
        :
          animSuffix = newState === 2
          /* Unchecked */
          ? 'checked-unchecked' : 'checked-indeterminate';
          break;

        case 3
        /* Indeterminate */
        :
          animSuffix = newState === 1
          /* Checked */
          ? 'indeterminate-checked' : 'indeterminate-unchecked';
          break;
      }

      return "mat-checkbox-anim-".concat(animSuffix);
    }
    /**
     * Syncs the indeterminate value with the checkbox DOM node.
     *
     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a
     * property is supported on an element boils down to `if (propName in element)`. Domino's
     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during
     * server-side rendering.
     */

  }, {
    key: "_syncIndeterminate",
    value: function _syncIndeterminate(value) {
      var nativeCheckbox = this._inputElement;

      if (nativeCheckbox) {
        nativeCheckbox.nativeElement.indeterminate = value;
      }
    }
  }]);

  return MatCheckbox;
}(_MatCheckboxMixinBase);

MatCheckbox.ɵfac = function MatCheckbox_Factory(t) {
  return new (t || MatCheckbox)(_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["FocusMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵinjectAttribute"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MAT_CHECKBOX_CLICK_ACTION, 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__["ANIMATION_MODULE_TYPE"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdirectiveInject"](MAT_CHECKBOX_DEFAULT_OPTIONS, 8));
};

MatCheckbox.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineComponent"]({
  type: MatCheckbox,
  selectors: [["mat-checkbox"]],
  viewQuery: function MatCheckbox_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_c0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵviewQuery"](_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRipple"], 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx._inputElement = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵloadQuery"]()) && (ctx.ripple = _t.first);
    }
  },
  hostAttrs: [1, "mat-checkbox"],
  hostVars: 12,
  hostBindings: function MatCheckbox_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵhostProperty"]("id", ctx.id);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("tabindex", null);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵclassProp"]("mat-checkbox-indeterminate", ctx.indeterminate)("mat-checkbox-checked", ctx.checked)("mat-checkbox-disabled", ctx.disabled)("mat-checkbox-label-before", ctx.labelPosition == "before")("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
    }
  },
  inputs: {
    disableRipple: "disableRipple",
    color: "color",
    tabIndex: "tabIndex",
    ariaLabel: ["aria-label", "ariaLabel"],
    ariaLabelledby: ["aria-labelledby", "ariaLabelledby"],
    id: "id",
    labelPosition: "labelPosition",
    name: "name",
    required: "required",
    checked: "checked",
    disabled: "disabled",
    indeterminate: "indeterminate",
    ariaDescribedby: ["aria-describedby", "ariaDescribedby"],
    value: "value"
  },
  outputs: {
    change: "change",
    indeterminateChange: "indeterminateChange"
  },
  exportAs: ["matCheckbox"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c2,
  decls: 17,
  vars: 20,
  consts: [[1, "mat-checkbox-layout"], ["label", ""], [1, "mat-checkbox-inner-container"], ["type", "checkbox", 1, "mat-checkbox-input", "cdk-visually-hidden", 3, "id", "required", "checked", "disabled", "tabIndex", "change", "click"], ["input", ""], ["matRipple", "", 1, "mat-checkbox-ripple", "mat-focus-indicator", 3, "matRippleTrigger", "matRippleDisabled", "matRippleRadius", "matRippleCentered", "matRippleAnimation"], [1, "mat-ripple-element", "mat-checkbox-persistent-ripple"], [1, "mat-checkbox-frame"], [1, "mat-checkbox-background"], ["version", "1.1", "focusable", "false", "viewBox", "0 0 24 24", 0, "xml", "space", "preserve", 1, "mat-checkbox-checkmark"], ["fill", "none", "stroke", "white", "d", "M4.1,12.7 9,17.6 20.3,6.3", 1, "mat-checkbox-checkmark-path"], [1, "mat-checkbox-mixedmark"], [1, "mat-checkbox-label", 3, "cdkObserveContent"], ["checkboxLabel", ""], [2, "display", "none"]],
  template: function MatCheckbox_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](0, "label", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](2, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](3, "input", 3, 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("change", function MatCheckbox_Template_input_change_3_listener($event) {
        return ctx._onInteractionEvent($event);
      })("click", function MatCheckbox_Template_input_click_3_listener($event) {
        return ctx._onInputClick($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](5, "div", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](6, "div", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](7, "div", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](8, "div", 8);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnamespaceSVG"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](9, "svg", 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](10, "path", 10);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵnamespaceHTML"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelement"](11, "div", 11);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](12, "span", 12, 13);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵlistener"]("cdkObserveContent", function MatCheckbox_Template_span_cdkObserveContent_12_listener() {
        return ctx._onLabelTextChange();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementStart"](14, "span", 14);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵtext"](15, "\xA0");
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵprojection"](16);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵreference"](1);

      var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵreference"](13);

      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("for", ctx.inputId);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵclassProp"]("mat-checkbox-inner-container-no-side-margin", !_r2.textContent || !_r2.textContent.trim());
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("id", ctx.inputId)("required", ctx.required)("checked", ctx.checked)("disabled", ctx.disabled)("tabIndex", ctx.tabIndex);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵattribute"]("value", ctx.value)("name", ctx.name)("aria-label", ctx.ariaLabel || null)("aria-labelledby", ctx.ariaLabelledby)("aria-checked", ctx._getAriaChecked())("aria-describedby", ctx.ariaDescribedby);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵproperty"]("matRippleTrigger", _r0)("matRippleDisabled", ctx._isRippleDisabled())("matRippleRadius", 20)("matRippleCentered", true)("matRippleAnimation", _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵpureFunction0"](19, _c1));
    }
  },
  directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRipple"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_10__["CdkObserveContent"]],
  styles: ["@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatCheckbox.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["FocusMonitor"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Attribute"],
      args: ['tabindex']
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [MAT_CHECKBOX_CLICK_ACTION]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__["ANIMATION_MODULE_TYPE"]]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
      args: [MAT_CHECKBOX_DEFAULT_OPTIONS]
    }]
  }];
};

MatCheckbox.propDecorators = {
  ariaLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['aria-label']
  }],
  ariaLabelledby: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['aria-labelledby']
  }],
  ariaDescribedby: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
    args: ['aria-describedby']
  }],
  id: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  required: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  labelPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  name: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  change: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  indeterminateChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
  }],
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  _inputElement: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
    args: ['input']
  }],
  ripple: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
    args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRipple"]]
  }],
  checked: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }],
  indeterminate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatCheckbox, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Component"],
    args: [{
      selector: 'mat-checkbox',
      template: "<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label>\n  <div class=\"mat-checkbox-inner-container\"\n       [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\">\n    <input #input\n           class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\"\n           [id]=\"inputId\"\n           [required]=\"required\"\n           [checked]=\"checked\"\n           [attr.value]=\"value\"\n           [disabled]=\"disabled\"\n           [attr.name]=\"name\"\n           [tabIndex]=\"tabIndex\"\n           [attr.aria-label]=\"ariaLabel || null\"\n           [attr.aria-labelledby]=\"ariaLabelledby\"\n           [attr.aria-checked]=\"_getAriaChecked()\"\n           [attr.aria-describedby]=\"ariaDescribedby\"\n           (change)=\"_onInteractionEvent($event)\"\n           (click)=\"_onInputClick($event)\">\n    <div matRipple class=\"mat-checkbox-ripple mat-focus-indicator\"\n         [matRippleTrigger]=\"label\"\n         [matRippleDisabled]=\"_isRippleDisabled()\"\n         [matRippleRadius]=\"20\"\n         [matRippleCentered]=\"true\"\n         [matRippleAnimation]=\"{enterDuration: 150}\">\n      <div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div>\n    </div>\n    <div class=\"mat-checkbox-frame\"></div>\n    <div class=\"mat-checkbox-background\">\n      <svg version=\"1.1\"\n           focusable=\"false\"\n           class=\"mat-checkbox-checkmark\"\n           viewBox=\"0 0 24 24\"\n           xml:space=\"preserve\">\n        <path class=\"mat-checkbox-checkmark-path\"\n              fill=\"none\"\n              stroke=\"white\"\n              d=\"M4.1,12.7 9,17.6 20.3,6.3\"/>\n      </svg>\n      <!-- Element for rendering the indeterminate state checkbox. -->\n      <div class=\"mat-checkbox-mixedmark\"></div>\n    </div>\n  </div>\n  <span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\">\n    <!-- Add an invisible span so JAWS can read the label -->\n    <span style=\"display:none\">&nbsp;</span>\n    <ng-content></ng-content>\n  </span>\n</label>\n",
      exportAs: 'matCheckbox',
      host: {
        'class': 'mat-checkbox',
        '[id]': 'id',
        '[attr.tabindex]': 'null',
        '[class.mat-checkbox-indeterminate]': 'indeterminate',
        '[class.mat-checkbox-checked]': 'checked',
        '[class.mat-checkbox-disabled]': 'disabled',
        '[class.mat-checkbox-label-before]': 'labelPosition == "before"',
        '[class._mat-animation-noopable]': "_animationMode === 'NoopAnimations'"
      },
      providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR],
      inputs: ['disableRipple', 'color', 'tabIndex'],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectionStrategy"].OnPush,
      styles: ["@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox-layout{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;-moz-user-select:auto;-ms-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-frame{border-style:dotted}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_4__["FocusMonitor"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgZone"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Attribute"],
        args: ['tabindex']
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [MAT_CHECKBOX_CLICK_ACTION]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_9__["ANIMATION_MODULE_TYPE"]]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Inject"],
        args: [MAT_CHECKBOX_DEFAULT_OPTIONS]
      }]
    }];
  }, {
    ariaLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['aria-label']
    }],
    ariaLabelledby: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['aria-labelledby']
    }],
    id: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    labelPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    change: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    indeterminateChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Output"]
    }],
    required: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    checked: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    indeterminate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    ariaDescribedby: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"],
      args: ['aria-describedby']
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Input"]
    }],
    _inputElement: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
      args: ['input']
    }],
    ripple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["ViewChild"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRipple"]]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MAT_CHECKBOX_REQUIRED_VALIDATOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_7__["NG_VALIDATORS"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_6__["forwardRef"])(function () {
    return MatCheckboxRequiredValidator;
  }),
  multi: true
};
/**
 * Validator for Material checkbox's required attribute in template-driven checkbox.
 * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not
 * work with `mat-checkbox`.
 */

var MatCheckboxRequiredValidator = /*#__PURE__*/function (_CheckboxRequiredVali) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_1__["default"])(MatCheckboxRequiredValidator, _CheckboxRequiredVali);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_2__["default"])(MatCheckboxRequiredValidator);

  function MatCheckboxRequiredValidator() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatCheckboxRequiredValidator);

    return _super2.apply(this, arguments);
  }

  return MatCheckboxRequiredValidator;
}(_angular_forms__WEBPACK_IMPORTED_MODULE_7__["CheckboxRequiredValidator"]);

MatCheckboxRequiredValidator.ɵfac = function MatCheckboxRequiredValidator_Factory(t) {
  return ɵMatCheckboxRequiredValidator_BaseFactory(t || MatCheckboxRequiredValidator);
};

MatCheckboxRequiredValidator.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineDirective"]({
  type: MatCheckboxRequiredValidator,
  selectors: [["mat-checkbox", "required", "", "formControlName", ""], ["mat-checkbox", "required", "", "formControl", ""], ["mat-checkbox", "required", "", "ngModel", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵProvidersFeature"]([MAT_CHECKBOX_REQUIRED_VALIDATOR]), _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatCheckboxRequiredValidator_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵgetInheritedFactory"](MatCheckboxRequiredValidator);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatCheckboxRequiredValidator, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["Directive"],
    args: [{
      selector: "mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]",
      providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** This module is used by both original and MDC-based checkbox implementations. */


var _MatCheckboxRequiredValidatorModule = function _MatCheckboxRequiredValidatorModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, _MatCheckboxRequiredValidatorModule);
};

_MatCheckboxRequiredValidatorModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: _MatCheckboxRequiredValidatorModule
});
_MatCheckboxRequiredValidatorModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  factory: function _MatCheckboxRequiredValidatorModule_Factory(t) {
    return new (t || _MatCheckboxRequiredValidatorModule)();
  }
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](_MatCheckboxRequiredValidatorModule, {
    declarations: [MatCheckboxRequiredValidator],
    exports: [MatCheckboxRequiredValidator]
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](_MatCheckboxRequiredValidatorModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModule"],
    args: [{
      exports: [MatCheckboxRequiredValidator],
      declarations: [MatCheckboxRequiredValidator]
    }]
  }], null, null);
})();

var MatCheckboxModule = function MatCheckboxModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatCheckboxModule);
};

MatCheckboxModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineNgModule"]({
  type: MatCheckboxModule
});
MatCheckboxModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵdefineInjector"]({
  factory: function MatCheckboxModule_Factory(t) {
    return new (t || MatCheckboxModule)();
  },
  imports: [[_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRippleModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_10__["ObserversModule"], _MatCheckboxRequiredValidatorModule], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _MatCheckboxRequiredValidatorModule]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵɵsetNgModuleScope"](MatCheckboxModule, {
    declarations: function declarations() {
      return [MatCheckbox];
    },
    imports: function imports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRippleModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_10__["ObserversModule"], _MatCheckboxRequiredValidatorModule];
    },
    exports: function exports() {
      return [MatCheckbox, _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _MatCheckboxRequiredValidatorModule];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_6__["ɵsetClassMetadata"](MatCheckboxModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_6__["NgModule"],
    args: [{
      imports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatRippleModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_10__["ObserversModule"], _MatCheckboxRequiredValidatorModule],
      exports: [MatCheckbox, _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"], _MatCheckboxRequiredValidatorModule],
      declarations: [MatCheckbox]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "c0QP":
/*!****************************************************************!*\
  !*** ./src/app/core/components/admin/group/group.component.ts ***!
  \****************************************************************/
/*! exports provided: GroupComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GroupComponent", function() { return GroupComponent; });
/* harmony import */ var _raw_loader_group_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./group.component.html */ "M1xz");
/* harmony import */ var _group_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./group.component.scss */ "4w+6");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! environments/environment */ "AytR");
/* harmony import */ var _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../login/Services/auth.service */ "a9M/");
/* harmony import */ var _Models_group__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Models/group */ "8/hw");
/* harmony import */ var _Services_group_service__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./Services/group.service */ "QXas");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};













var GroupComponent = /** @class */ (function () {
    function GroupComponent(groupService, lookupService, alertifyService, formBuilder, authService) {
        this.groupService = groupService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.displayedColumns = ["groupName", "updateUserGroupClaims", "update"];
        this.group = new _Models_group__WEBPACK_IMPORTED_MODULE_11__["Group"]();
        this.isUserChange = false;
        this.isClaimChange = false;
    }
    GroupComponent.prototype.ngAfterViewInit = function () {
        this.getGroupList();
    };
    GroupComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.createGroupAddForm();
        this.dropdownSettings = environments_environment__WEBPACK_IMPORTED_MODULE_9__["environment"].getDropDownSetting;
        this.lookupService.getOperationClaimLookUp().subscribe(function (data) {
            _this.claimDropdownList = data;
        });
        this.lookupService.getUserLookUp().subscribe(function (data) {
            _this.userDropdownList = data;
            _this.formattedUserDropdownList = _this.userDropdownList.map(function (user) { return ({ id: user.id, label: user.label + " (" + user.email + ")" }); });
        });
    };
    GroupComponent.prototype.getGroupList = function () {
        var _this = this;
        this.groupService.getGroupList().subscribe(function (data) {
            _this.groupList = data,
                _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    GroupComponent.prototype.save = function () {
        if (this.groupAddForm.valid) {
            this.group = Object.assign({}, this.groupAddForm.value);
            if (this.group.id == 0)
                this.addGroup();
            else
                this.updateGroup();
        }
    };
    GroupComponent.prototype.addGroup = function () {
        var _this = this;
        this.groupService.addGroup(this.group).subscribe(function (data) {
            _this.getGroupList();
            _this.group = new _Models_group__WEBPACK_IMPORTED_MODULE_11__["Group"]();
            jQuery("#group").modal("hide");
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.groupAddForm);
        });
    };
    GroupComponent.prototype.updateGroup = function () {
        var _this = this;
        this.groupService.updateGroup(this.group).subscribe(function (data) {
            var index = _this.groupList.findIndex(function (x) { return x.id == _this.group.id; });
            _this.groupList[index] = _this.group;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.groupList);
            _this.configDataTable();
            _this.group = new _Models_group__WEBPACK_IMPORTED_MODULE_11__["Group"]();
            jQuery("#group").modal("hide");
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.groupAddForm);
        });
    };
    GroupComponent.prototype.createGroupAddForm = function () {
        this.groupAddForm = this.formBuilder.group({
            id: [0],
            groupName: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
        });
    };
    GroupComponent.prototype.deleteGroup = function (groupId) {
        var _this = this;
        this.groupService.deleteGroup(groupId).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            _this.groupList = _this.groupList.filter(function (x) { return x.id != groupId; });
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.groupList);
            _this.configDataTable();
        });
    };
    GroupComponent.prototype.getGroupById = function (groupId) {
        var _this = this;
        this.clearFormGroup(this.groupAddForm);
        this.groupService.getGroupById(groupId).subscribe(function (data) {
            _this.group = data;
            _this.groupAddForm.patchValue(data);
        });
    };
    GroupComponent.prototype.getGroupClaims = function (groupId) {
        var _this = this;
        this.groupId = groupId;
        this.groupService.getGroupClaims(groupId).subscribe(function (data) {
            _this.claimSelectedItems = data;
        });
    };
    GroupComponent.prototype.getGroupUsers = function (groupId) {
        var _this = this;
        this.groupId = groupId;
        this.groupService.getGroupUsers(groupId).subscribe(function (data) {
            _this.userSelectedItems = data;
        });
    };
    GroupComponent.prototype.saveGroupClaims = function () {
        var _this = this;
        if (this.isClaimChange) {
            var ids = this.claimSelectedItems.map(function (x) { return x.id; });
            this.groupService.saveGroupClaims(this.groupId, ids).subscribe(function (x) {
                jQuery("#groupClaims").modal("hide");
                _this.isClaimChange = false;
                _this.alertifyService.success(x);
            });
        }
    };
    GroupComponent.prototype.saveGroupUsers = function () {
        var _this = this;
        if (this.isUserChange) {
            var ids = this.userSelectedItems.map(function (x) { return x.id; });
            this.groupService.saveGroupUsers(this.groupId, ids).subscribe(function (x) {
                jQuery("#groupUsers").modal("hide");
                _this.isUserChange = false;
                _this.alertifyService.success(x);
            });
        }
    };
    GroupComponent.prototype.onItemSelect = function (comboType) {
        this.setComboStatus(comboType);
    };
    GroupComponent.prototype.onSelectAll = function (comboType) {
        this.setComboStatus(comboType);
    };
    GroupComponent.prototype.onItemDeSelect = function (comboType) {
        this.setComboStatus(comboType);
    };
    GroupComponent.prototype.setComboStatus = function (comboType) {
        if (comboType == "User")
            this.isUserChange = true;
        else if (comboType == "Claim")
            this.isClaimChange = true;
    };
    GroupComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == "id")
                group.get(key).setValue(0);
        });
    };
    GroupComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    GroupComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    GroupComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    GroupComponent.ctorParameters = function () { return [
        { type: _Services_group_service__WEBPACK_IMPORTED_MODULE_12__["GroupService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_10__["AuthService"] }
    ]; };
    GroupComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    GroupComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-group',
            template: _raw_loader_group_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_group_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_Services_group_service__WEBPACK_IMPORTED_MODULE_12__["GroupService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_10__["AuthService"]])
    ], GroupComponent);
    return GroupComponent;
}());



/***/ }),

/***/ "dNgK":
/*!***************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/snack-bar.js ***!
  \***************************************************************************/
/*! exports provided: MAT_SNACK_BAR_DATA, MAT_SNACK_BAR_DEFAULT_OPTIONS, MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY, MatSnackBar, MatSnackBarConfig, MatSnackBarContainer, MatSnackBarModule, MatSnackBarRef, SimpleSnackBar, matSnackBarAnimations */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SNACK_BAR_DATA", function() { return MAT_SNACK_BAR_DATA; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SNACK_BAR_DEFAULT_OPTIONS", function() { return MAT_SNACK_BAR_DEFAULT_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY", function() { return MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSnackBar", function() { return MatSnackBar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSnackBarConfig", function() { return MatSnackBarConfig; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSnackBarContainer", function() { return MatSnackBarContainer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSnackBarModule", function() { return MatSnackBarModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSnackBarRef", function() { return MatSnackBarRef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SimpleSnackBar", function() { return SimpleSnackBar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matSnackBarAnimations", function() { return matSnackBarAnimations; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/cdk/overlay */ "rDax");
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/cdk/portal */ "+rOU");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/material/button */ "bTqV");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/animations */ "R0Ic");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/cdk/layout */ "0MNC");















/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token that can be used to access the data that was passed in to a snack bar. */









function SimpleSnackBar_div_2_Template(rf, ctx) {
  if (rf & 1) {
    var _r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "button", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function SimpleSnackBar_div_2_Template_button_click_1_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r2);
      var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
      return ctx_r1.action();
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx_r0.data.action);
  }
}

function MatSnackBarContainer_ng_template_0_Template(rf, ctx) {}

var MAT_SNACK_BAR_DATA = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('MatSnackBarData');
/**
 * Configuration used when opening a snack-bar.
 */

var MatSnackBarConfig = function MatSnackBarConfig() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSnackBarConfig);

  /** The politeness level for the MatAriaLiveAnnouncer announcement. */
  this.politeness = 'assertive';
  /**
   * Message to be announced by the LiveAnnouncer. When opening a snackbar without a custom
   * component or template, the announcement message will default to the specified message.
   */

  this.announcementMessage = '';
  /** The length of time in milliseconds to wait before automatically dismissing the snack bar. */

  this.duration = 0;
  /** Data being injected into the child component. */

  this.data = null;
  /** The horizontal position to place the snack bar. */

  this.horizontalPosition = 'center';
  /** The vertical position to place the snack bar. */

  this.verticalPosition = 'bottom';
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Maximum amount of milliseconds that can be passed into setTimeout. */


var MAX_TIMEOUT = Math.pow(2, 31) - 1;
/**
 * Reference to a snack bar dispatched from the snack bar service.
 */

var MatSnackBarRef = /*#__PURE__*/function () {
  function MatSnackBarRef(containerInstance, _overlayRef) {
    var _this = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSnackBarRef);

    this._overlayRef = _overlayRef;
    /** Subject for notifying the user that the snack bar has been dismissed. */

    this._afterDismissed = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Subject for notifying the user that the snack bar has opened and appeared. */

    this._afterOpened = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Subject for notifying the user that the snack bar action was called. */

    this._onAction = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Whether the snack bar was dismissed using the action button. */

    this._dismissedByAction = false;
    this.containerInstance = containerInstance; // Dismiss snackbar on action.

    this.onAction().subscribe(function () {
      return _this.dismiss();
    });

    containerInstance._onExit.subscribe(function () {
      return _this._finishDismiss();
    });
  }
  /** Dismisses the snack bar. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MatSnackBarRef, [{
    key: "dismiss",
    value: function dismiss() {
      if (!this._afterDismissed.closed) {
        this.containerInstance.exit();
      }

      clearTimeout(this._durationTimeoutId);
    }
    /** Marks the snackbar action clicked. */

  }, {
    key: "dismissWithAction",
    value: function dismissWithAction() {
      if (!this._onAction.closed) {
        this._dismissedByAction = true;

        this._onAction.next();

        this._onAction.complete();
      }
    }
    /**
     * Marks the snackbar action clicked.
     * @deprecated Use `dismissWithAction` instead.
     * @breaking-change 8.0.0
     */

  }, {
    key: "closeWithAction",
    value: function closeWithAction() {
      this.dismissWithAction();
    }
    /** Dismisses the snack bar after some duration */

  }, {
    key: "_dismissAfter",
    value: function _dismissAfter(duration) {
      var _this2 = this;

      // Note that we need to cap the duration to the maximum value for setTimeout, because
      // it'll revert to 1 if somebody passes in something greater (e.g. `Infinity`). See #17234.
      this._durationTimeoutId = setTimeout(function () {
        return _this2.dismiss();
      }, Math.min(duration, MAX_TIMEOUT));
    }
    /** Marks the snackbar as opened */

  }, {
    key: "_open",
    value: function _open() {
      if (!this._afterOpened.closed) {
        this._afterOpened.next();

        this._afterOpened.complete();
      }
    }
    /** Cleans up the DOM after closing. */

  }, {
    key: "_finishDismiss",
    value: function _finishDismiss() {
      this._overlayRef.dispose();

      if (!this._onAction.closed) {
        this._onAction.complete();
      }

      this._afterDismissed.next({
        dismissedByAction: this._dismissedByAction
      });

      this._afterDismissed.complete();

      this._dismissedByAction = false;
    }
    /** Gets an observable that is notified when the snack bar is finished closing. */

  }, {
    key: "afterDismissed",
    value: function afterDismissed() {
      return this._afterDismissed;
    }
    /** Gets an observable that is notified when the snack bar has opened and appeared. */

  }, {
    key: "afterOpened",
    value: function afterOpened() {
      return this.containerInstance._onEnter;
    }
    /** Gets an observable that is notified when the snack bar action is called. */

  }, {
    key: "onAction",
    value: function onAction() {
      return this._onAction;
    }
  }]);

  return MatSnackBarRef;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * A component used to open as the default snack bar, matching material spec.
 * This should only be used internally by the snack bar service.
 */


var SimpleSnackBar = /*#__PURE__*/function () {
  function SimpleSnackBar(snackBarRef, data) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, SimpleSnackBar);

    this.snackBarRef = snackBarRef;
    this.data = data;
  }
  /** Performs the action on the snack bar. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(SimpleSnackBar, [{
    key: "action",
    value: function action() {
      this.snackBarRef.dismissWithAction();
    }
    /** If the action button should be shown. */

  }, {
    key: "hasAction",
    get: function get() {
      return !!this.data.action;
    }
  }]);

  return SimpleSnackBar;
}();

SimpleSnackBar.ɵfac = function SimpleSnackBar_Factory(t) {
  return new (t || SimpleSnackBar)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MatSnackBarRef), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MAT_SNACK_BAR_DATA));
};

SimpleSnackBar.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: SimpleSnackBar,
  selectors: [["simple-snack-bar"]],
  hostAttrs: [1, "mat-simple-snackbar"],
  decls: 3,
  vars: 2,
  consts: [["class", "mat-simple-snackbar-action", 4, "ngIf"], [1, "mat-simple-snackbar-action"], ["mat-button", "", 3, "click"]],
  template: function SimpleSnackBar_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "span");
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](2, SimpleSnackBar_div_2_Template, 3, 1, "div", 0);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx.data.message);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.hasAction);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_6__["NgIf"], _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButton"]],
  styles: [".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\n"],
  encapsulation: 2,
  changeDetection: 0
});

SimpleSnackBar.ctorParameters = function () {
  return [{
    type: MatSnackBarRef
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_SNACK_BAR_DATA]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](SimpleSnackBar, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'simple-snack-bar',
      template: "<span>{{data.message}}</span>\n<div class=\"mat-simple-snackbar-action\"  *ngIf=\"hasAction\">\n  <button mat-button (click)=\"action()\">{{data.action}}</button>\n</div>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].OnPush,
      host: {
        'class': 'mat-simple-snackbar'
      },
      styles: [".mat-simple-snackbar{display:flex;justify-content:space-between;align-items:center;line-height:20px;opacity:1}.mat-simple-snackbar-action{flex-shrink:0;margin:-8px -8px -8px 8px}.mat-simple-snackbar-action button{max-height:36px;min-width:0}[dir=rtl] .mat-simple-snackbar-action{margin-left:-8px;margin-right:8px}\n"]
    }]
  }], function () {
    return [{
      type: MatSnackBarRef
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_SNACK_BAR_DATA]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Animations used by the Material snack bar.
 * @docs-private
 */


var matSnackBarAnimations = {
  /** Animation that shows and hides a snack bar. */
  snackBarState: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["trigger"])('state', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["state"])('void, hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["style"])({
    transform: 'scale(0.8)',
    opacity: 0
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["state"])('visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["style"])({
    transform: 'scale(1)',
    opacity: 1
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["transition"])('* => visible', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["animate"])('150ms cubic-bezier(0, 0, 0.2, 1)')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["transition"])('* => void, * => hidden', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["animate"])('75ms cubic-bezier(0.4, 0.0, 1, 1)', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_12__["style"])({
    opacity: 0
  })))])
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Internal component that wraps user-provided snack bar content.
 * @docs-private
 */

var MatSnackBarContainer = /*#__PURE__*/function (_BasePortalOutlet) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_0__["default"])(MatSnackBarContainer, _BasePortalOutlet);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_1__["default"])(MatSnackBarContainer);

  function MatSnackBarContainer(_ngZone, _elementRef, _changeDetectorRef,
  /** The snack bar configuration. */
  snackBarConfig) {
    var _this3;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSnackBarContainer);

    _this3 = _super.call(this);
    _this3._ngZone = _ngZone;
    _this3._elementRef = _elementRef;
    _this3._changeDetectorRef = _changeDetectorRef;
    _this3.snackBarConfig = snackBarConfig;
    /** Whether the component has been destroyed. */

    _this3._destroyed = false;
    /** Subject for notifying that the snack bar has exited from view. */

    _this3._onExit = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** Subject for notifying that the snack bar has finished entering the view. */

    _this3._onEnter = new rxjs__WEBPACK_IMPORTED_MODULE_10__["Subject"]();
    /** The state of the snack bar animations. */

    _this3._animationState = 'void';
    /**
     * Attaches a DOM portal to the snack bar container.
     * @deprecated To be turned into a method.
     * @breaking-change 10.0.0
     */

    _this3.attachDomPortal = function (portal) {
      _this3._assertNotAttached();

      _this3._applySnackBarClasses();

      return _this3._portalOutlet.attachDomPortal(portal);
    }; // Based on the ARIA spec, `alert` and `status` roles have an
    // implicit `assertive` and `polite` politeness respectively.


    if (snackBarConfig.politeness === 'assertive' && !snackBarConfig.announcementMessage) {
      _this3._role = 'alert';
    } else if (snackBarConfig.politeness === 'off') {
      _this3._role = null;
    } else {
      _this3._role = 'status';
    }

    return _this3;
  }
  /** Attach a component portal as content to this snack bar container. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MatSnackBarContainer, [{
    key: "attachComponentPortal",
    value: function attachComponentPortal(portal) {
      this._assertNotAttached();

      this._applySnackBarClasses();

      return this._portalOutlet.attachComponentPortal(portal);
    }
    /** Attach a template portal as content to this snack bar container. */

  }, {
    key: "attachTemplatePortal",
    value: function attachTemplatePortal(portal) {
      this._assertNotAttached();

      this._applySnackBarClasses();

      return this._portalOutlet.attachTemplatePortal(portal);
    }
    /** Handle end of animations, updating the state of the snackbar. */

  }, {
    key: "onAnimationEnd",
    value: function onAnimationEnd(event) {
      var fromState = event.fromState,
          toState = event.toState;

      if (toState === 'void' && fromState !== 'void' || toState === 'hidden') {
        this._completeExit();
      }

      if (toState === 'visible') {
        // Note: we shouldn't use `this` inside the zone callback,
        // because it can cause a memory leak.
        var onEnter = this._onEnter;

        this._ngZone.run(function () {
          onEnter.next();
          onEnter.complete();
        });
      }
    }
    /** Begin animation of snack bar entrance into view. */

  }, {
    key: "enter",
    value: function enter() {
      if (!this._destroyed) {
        this._animationState = 'visible';

        this._changeDetectorRef.detectChanges();
      }
    }
    /** Begin animation of the snack bar exiting from view. */

  }, {
    key: "exit",
    value: function exit() {
      // Note: this one transitions to `hidden`, rather than `void`, in order to handle the case
      // where multiple snack bars are opened in quick succession (e.g. two consecutive calls to
      // `MatSnackBar.open`).
      this._animationState = 'hidden'; // Mark this element with an 'exit' attribute to indicate that the snackbar has
      // been dismissed and will soon be removed from the DOM. This is used by the snackbar
      // test harness.

      this._elementRef.nativeElement.setAttribute('mat-exit', '');

      return this._onExit;
    }
    /** Makes sure the exit callbacks have been invoked when the element is destroyed. */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroyed = true;

      this._completeExit();
    }
    /**
     * Waits for the zone to settle before removing the element. Helps prevent
     * errors where we end up removing an element which is in the middle of an animation.
     */

  }, {
    key: "_completeExit",
    value: function _completeExit() {
      var _this4 = this;

      this._ngZone.onMicrotaskEmpty.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["take"])(1)).subscribe(function () {
        _this4._onExit.next();

        _this4._onExit.complete();
      });
    }
    /** Applies the various positioning and user-configured CSS classes to the snack bar. */

  }, {
    key: "_applySnackBarClasses",
    value: function _applySnackBarClasses() {
      var element = this._elementRef.nativeElement;
      var panelClasses = this.snackBarConfig.panelClass;

      if (panelClasses) {
        if (Array.isArray(panelClasses)) {
          // Note that we can't use a spread here, because IE doesn't support multiple arguments.
          panelClasses.forEach(function (cssClass) {
            return element.classList.add(cssClass);
          });
        } else {
          element.classList.add(panelClasses);
        }
      }

      if (this.snackBarConfig.horizontalPosition === 'center') {
        element.classList.add('mat-snack-bar-center');
      }

      if (this.snackBarConfig.verticalPosition === 'top') {
        element.classList.add('mat-snack-bar-top');
      }
    }
    /** Asserts that no content is already attached to the container. */

  }, {
    key: "_assertNotAttached",
    value: function _assertNotAttached() {
      if (this._portalOutlet.hasAttached() && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('Attempting to attach snack bar content after content is already attached');
      }
    }
  }]);

  return MatSnackBarContainer;
}(_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["BasePortalOutlet"]);

MatSnackBarContainer.ɵfac = function MatSnackBarContainer_Factory(t) {
  return new (t || MatSnackBarContainer)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](MatSnackBarConfig));
};

MatSnackBarContainer.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({
  type: MatSnackBarContainer,
  selectors: [["snack-bar-container"]],
  viewQuery: function MatSnackBarContainer_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵviewQuery"](_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"], 3);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵloadQuery"]()) && (ctx._portalOutlet = _t.first);
    }
  },
  hostAttrs: [1, "mat-snack-bar-container"],
  hostVars: 2,
  hostBindings: function MatSnackBarContainer_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsyntheticHostListener"]("@state.done", function MatSnackBarContainer_animation_state_done_HostBindingHandler($event) {
        return ctx.onAnimationEnd($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵattribute"]("role", ctx._role);
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsyntheticHostProperty"]("@state", ctx._animationState);
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵInheritDefinitionFeature"]],
  decls: 1,
  vars: 0,
  consts: [["cdkPortalOutlet", ""]],
  template: function MatSnackBarContainer_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](0, MatSnackBarContainer_ng_template_0_Template, 0, 0, "ng-template", 0);
    }
  },
  directives: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"]],
  styles: [".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\n"],
  encapsulation: 2,
  data: {
    animation: [matSnackBarAnimations.snackBarState]
  }
});

MatSnackBarContainer.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
  }, {
    type: MatSnackBarConfig
  }];
};

MatSnackBarContainer.propDecorators = {
  _portalOutlet: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
    args: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"], {
      static: true
    }]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatSnackBarContainer, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Component"],
    args: [{
      selector: 'snack-bar-container',
      template: "<ng-template cdkPortalOutlet></ng-template>\n",
      // In Ivy embedded views will be change detected from their declaration place, rather than
      // where they were stamped out. This means that we can't have the snack bar container be OnPush,
      // because it might cause snack bars that were opened from a template not to be out of date.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewEncapsulation"].None,
      animations: [matSnackBarAnimations.snackBarState],
      host: {
        '[attr.role]': '_role',
        'class': 'mat-snack-bar-container',
        '[@state]': '_animationState',
        '(@state.done)': 'onAnimationEnd($event)'
      },
      styles: [".mat-snack-bar-container{border-radius:4px;box-sizing:border-box;display:block;margin:24px;max-width:33vw;min-width:344px;padding:14px 16px;min-height:48px;transform-origin:center}.cdk-high-contrast-active .mat-snack-bar-container{border:solid 1px}.mat-snack-bar-handset{width:100%}.mat-snack-bar-handset .mat-snack-bar-container{margin:8px;max-width:100%;min-width:0;width:100%}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgZone"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ChangeDetectorRef"]
    }, {
      type: MatSnackBarConfig
    }];
  }, {
    _portalOutlet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["ViewChild"],
      args: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["CdkPortalOutlet"], {
        static: true
      }]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatSnackBarModule = function MatSnackBarModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSnackBarModule);
};

MatSnackBarModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({
  type: MatSnackBarModule
});
MatSnackBarModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({
  factory: function MatSnackBarModule_Factory(t) {
    return new (t || MatSnackBarModule)();
  },
  imports: [[_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["PortalModule"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButtonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](MatSnackBarModule, {
    declarations: function declarations() {
      return [MatSnackBarContainer, SimpleSnackBar];
    },
    imports: function imports() {
      return [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["PortalModule"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButtonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"]];
    },
    exports: function exports() {
      return [MatSnackBarContainer, _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"]];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatSnackBarModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["NgModule"],
    args: [{
      imports: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["PortalModule"], _angular_common__WEBPACK_IMPORTED_MODULE_6__["CommonModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_9__["MatButtonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"]],
      exports: [MatSnackBarContainer, _angular_material_core__WEBPACK_IMPORTED_MODULE_8__["MatCommonModule"]],
      declarations: [MatSnackBarContainer, SimpleSnackBar],
      entryComponents: [MatSnackBarContainer, SimpleSnackBar]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token that can be used to specify default snack bar. */


var MAT_SNACK_BAR_DEFAULT_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_7__["InjectionToken"]('mat-snack-bar-default-options', {
  providedIn: 'root',
  factory: MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY
});
/** @docs-private */

function MAT_SNACK_BAR_DEFAULT_OPTIONS_FACTORY() {
  return new MatSnackBarConfig();
}
/**
 * Service to dispatch Material Design snack bar messages.
 */


var MatSnackBar = /*#__PURE__*/function () {
  function MatSnackBar(_overlay, _live, _injector, _breakpointObserver, _parentSnackBar, _defaultConfig) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__["default"])(this, MatSnackBar);

    this._overlay = _overlay;
    this._live = _live;
    this._injector = _injector;
    this._breakpointObserver = _breakpointObserver;
    this._parentSnackBar = _parentSnackBar;
    this._defaultConfig = _defaultConfig;
    /**
     * Reference to the current snack bar in the view *at this level* (in the Angular injector tree).
     * If there is a parent snack-bar service, all operations should delegate to that parent
     * via `_openedSnackBarRef`.
     */

    this._snackBarRefAtThisLevel = null;
    /** The component that should be rendered as the snack bar's simple component. */

    this.simpleSnackBarComponent = SimpleSnackBar;
    /** The container component that attaches the provided template or component. */

    this.snackBarContainerComponent = MatSnackBarContainer;
    /** The CSS class to applie for handset mode. */

    this.handsetCssClass = 'mat-snack-bar-handset';
  }
  /** Reference to the currently opened snackbar at *any* level. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(MatSnackBar, [{
    key: "_openedSnackBarRef",
    get: function get() {
      var parent = this._parentSnackBar;
      return parent ? parent._openedSnackBarRef : this._snackBarRefAtThisLevel;
    },
    set: function set(value) {
      if (this._parentSnackBar) {
        this._parentSnackBar._openedSnackBarRef = value;
      } else {
        this._snackBarRefAtThisLevel = value;
      }
    }
    /**
     * Creates and dispatches a snack bar with a custom component for the content, removing any
     * currently opened snack bars.
     *
     * @param component Component to be instantiated.
     * @param config Extra configuration for the snack bar.
     */

  }, {
    key: "openFromComponent",
    value: function openFromComponent(component, config) {
      return this._attach(component, config);
    }
    /**
     * Creates and dispatches a snack bar with a custom template for the content, removing any
     * currently opened snack bars.
     *
     * @param template Template to be instantiated.
     * @param config Extra configuration for the snack bar.
     */

  }, {
    key: "openFromTemplate",
    value: function openFromTemplate(template, config) {
      return this._attach(template, config);
    }
    /**
     * Opens a snackbar with a message and an optional action.
     * @param message The message to show in the snackbar.
     * @param action The label for the snackbar action.
     * @param config Additional configuration options for the snackbar.
     */

  }, {
    key: "open",
    value: function open(message) {
      var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';
      var config = arguments.length > 2 ? arguments[2] : undefined;

      var _config = Object.assign(Object.assign({}, this._defaultConfig), config); // Since the user doesn't have access to the component, we can
      // override the data to pass in our own message and action.


      _config.data = {
        message: message,
        action: action
      }; // Since the snack bar has `role="alert"`, we don't
      // want to announce the same message twice.

      if (_config.announcementMessage === message) {
        _config.announcementMessage = undefined;
      }

      return this.openFromComponent(this.simpleSnackBarComponent, _config);
    }
    /**
     * Dismisses the currently-visible snack bar.
     */

  }, {
    key: "dismiss",
    value: function dismiss() {
      if (this._openedSnackBarRef) {
        this._openedSnackBarRef.dismiss();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      // Only dismiss the snack bar at the current level on destroy.
      if (this._snackBarRefAtThisLevel) {
        this._snackBarRefAtThisLevel.dismiss();
      }
    }
    /**
     * Attaches the snack bar container component to the overlay.
     */

  }, {
    key: "_attachSnackBarContainer",
    value: function _attachSnackBarContainer(overlayRef, config) {
      var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;
      var injector = _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injector"].create({
        parent: userInjector || this._injector,
        providers: [{
          provide: MatSnackBarConfig,
          useValue: config
        }]
      });
      var containerPortal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["ComponentPortal"](this.snackBarContainerComponent, config.viewContainerRef, injector);
      var containerRef = overlayRef.attach(containerPortal);
      containerRef.instance.snackBarConfig = config;
      return containerRef.instance;
    }
    /**
     * Places a new component or a template as the content of the snack bar container.
     */

  }, {
    key: "_attach",
    value: function _attach(content, userConfig) {
      var _this5 = this;

      var config = Object.assign(Object.assign(Object.assign({}, new MatSnackBarConfig()), this._defaultConfig), userConfig);

      var overlayRef = this._createOverlay(config);

      var container = this._attachSnackBarContainer(overlayRef, config);

      var snackBarRef = new MatSnackBarRef(container, overlayRef);

      if (content instanceof _angular_core__WEBPACK_IMPORTED_MODULE_7__["TemplateRef"]) {
        var portal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["TemplatePortal"](content, null, {
          $implicit: config.data,
          snackBarRef: snackBarRef
        });
        snackBarRef.instance = container.attachTemplatePortal(portal);
      } else {
        var injector = this._createInjector(config, snackBarRef);

        var _portal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_5__["ComponentPortal"](content, undefined, injector);

        var contentRef = container.attachComponentPortal(_portal); // We can't pass this via the injector, because the injector is created earlier.

        snackBarRef.instance = contentRef.instance;
      } // Subscribe to the breakpoint observer and attach the mat-snack-bar-handset class as
      // appropriate. This class is applied to the overlay element because the overlay must expand to
      // fill the width of the screen for full width snackbars.


      this._breakpointObserver.observe(_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_14__["Breakpoints"].HandsetPortrait).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_11__["takeUntil"])(overlayRef.detachments())).subscribe(function (state) {
        var classList = overlayRef.overlayElement.classList;
        state.matches ? classList.add(_this5.handsetCssClass) : classList.remove(_this5.handsetCssClass);
      });

      this._animateSnackBar(snackBarRef, config);

      this._openedSnackBarRef = snackBarRef;
      return this._openedSnackBarRef;
    }
    /** Animates the old snack bar out and the new one in. */

  }, {
    key: "_animateSnackBar",
    value: function _animateSnackBar(snackBarRef, config) {
      var _this6 = this;

      // When the snackbar is dismissed, clear the reference to it.
      snackBarRef.afterDismissed().subscribe(function () {
        // Clear the snackbar ref if it hasn't already been replaced by a newer snackbar.
        if (_this6._openedSnackBarRef == snackBarRef) {
          _this6._openedSnackBarRef = null;
        }

        if (config.announcementMessage) {
          _this6._live.clear();
        }
      });

      if (this._openedSnackBarRef) {
        // If a snack bar is already in view, dismiss it and enter the
        // new snack bar after exit animation is complete.
        this._openedSnackBarRef.afterDismissed().subscribe(function () {
          snackBarRef.containerInstance.enter();
        });

        this._openedSnackBarRef.dismiss();
      } else {
        // If no snack bar is in view, enter the new snack bar.
        snackBarRef.containerInstance.enter();
      } // If a dismiss timeout is provided, set up dismiss based on after the snackbar is opened.


      if (config.duration && config.duration > 0) {
        snackBarRef.afterOpened().subscribe(function () {
          return snackBarRef._dismissAfter(config.duration);
        });
      }

      if (config.announcementMessage) {
        this._live.announce(config.announcementMessage, config.politeness);
      }
    }
    /**
     * Creates a new overlay and places it in the correct location.
     * @param config The user-specified snack bar config.
     */

  }, {
    key: "_createOverlay",
    value: function _createOverlay(config) {
      var overlayConfig = new _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["OverlayConfig"]();
      overlayConfig.direction = config.direction;

      var positionStrategy = this._overlay.position().global(); // Set horizontal position.


      var isRtl = config.direction === 'rtl';
      var isLeft = config.horizontalPosition === 'left' || config.horizontalPosition === 'start' && !isRtl || config.horizontalPosition === 'end' && isRtl;
      var isRight = !isLeft && config.horizontalPosition !== 'center';

      if (isLeft) {
        positionStrategy.left('0');
      } else if (isRight) {
        positionStrategy.right('0');
      } else {
        positionStrategy.centerHorizontally();
      } // Set horizontal position.


      if (config.verticalPosition === 'top') {
        positionStrategy.top('0');
      } else {
        positionStrategy.bottom('0');
      }

      overlayConfig.positionStrategy = positionStrategy;
      return this._overlay.create(overlayConfig);
    }
    /**
     * Creates an injector to be used inside of a snack bar component.
     * @param config Config that was used to create the snack bar.
     * @param snackBarRef Reference to the snack bar.
     */

  }, {
    key: "_createInjector",
    value: function _createInjector(config, snackBarRef) {
      var userInjector = config && config.viewContainerRef && config.viewContainerRef.injector;
      return _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injector"].create({
        parent: userInjector || this._injector,
        providers: [{
          provide: MatSnackBarRef,
          useValue: snackBarRef
        }, {
          provide: MAT_SNACK_BAR_DATA,
          useValue: config.data
        }]
      });
    }
  }]);

  return MatSnackBar;
}();

MatSnackBar.ɵfac = function MatSnackBar_Factory(t) {
  return new (t || MatSnackBar)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__["LiveAnnouncer"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_7__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_14__["BreakpointObserver"]), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](MatSnackBar, 12), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"](MAT_SNACK_BAR_DEFAULT_OPTIONS));
};

MatSnackBar.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjectable"])({
  factory: function MatSnackBar_Factory() {
    return new MatSnackBar(Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__["LiveAnnouncer"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(_angular_core__WEBPACK_IMPORTED_MODULE_7__["INJECTOR"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(_angular_cdk_layout__WEBPACK_IMPORTED_MODULE_14__["BreakpointObserver"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(MatSnackBar, 12), Object(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵinject"])(MAT_SNACK_BAR_DEFAULT_OPTIONS));
  },
  token: MatSnackBar,
  providedIn: MatSnackBarModule
});

MatSnackBar.ctorParameters = function () {
  return [{
    type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__["LiveAnnouncer"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injector"]
  }, {
    type: _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_14__["BreakpointObserver"]
  }, {
    type: MatSnackBar,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["SkipSelf"]
    }]
  }, {
    type: MatSnackBarConfig,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
      args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵsetClassMetadata"](MatSnackBar, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injectable"],
    args: [{
      providedIn: MatSnackBarModule
    }]
  }], function () {
    return [{
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_4__["Overlay"]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_13__["LiveAnnouncer"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Injector"]
    }, {
      type: _angular_cdk_layout__WEBPACK_IMPORTED_MODULE_14__["BreakpointObserver"]
    }, {
      type: MatSnackBar,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["SkipSelf"]
      }]
    }, {
      type: MatSnackBarConfig,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_7__["Inject"],
        args: [MAT_SNACK_BAR_DEFAULT_OPTIONS]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "dTdK":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/screens/personel-visit/personel-visit.component.html ***!
  \****************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"container-fluid\" style=\"padding-top: 35px;\">\r\n    <div class=\"card\">\r\n        <div class=\"card-header card-header-primary\">\r\n            <h4 class=\"card-title\" style=\"padding-bottom: 25px;\">Ziyaretleriniz</h4>\r\n        </div>\r\n        <div *ngIf=\"filteredVisits.length === 0\" class=\"card-body\">\r\n            <div class=\"text-center\">\r\n                <mat-spinner style=\"margin: 0 auto;\"></mat-spinner>\r\n                <p>Yükleniyor...</p>\r\n            </div>\r\n        </div>\r\n        <div *ngIf=\"filteredVisits.length > 0\" class=\"card-body\">\r\n            <!-- Tab Butonları -->\r\n            <div class=\"date-tabs text-center mb-3\">\r\n                <button mat-button (click)=\"filterVisits('all')\">Tümü</button>\r\n                <button mat-button (click)=\"filterVisits('approved')\">Onaylı</button>\r\n                <button mat-button (click)=\"filterVisits('rejected')\">Reddedildi</button>\r\n                <button mat-button (click)=\"filterVisits('pending')\">Beklemede</button>\r\n            </div>\r\n\r\n            <!-- Tablo -->\r\n            <div class=\"mat-elevation-z8\">\r\n                <table mat-table [dataSource]=\"filteredVisits\" class=\"mat-elevation-z8\">\r\n                    <ng-container matColumnDef=\"visitorFullName\">\r\n                        <th mat-header-cell *matHeaderCellDef> Ziyaretçi Adı </th>\r\n                        <td mat-cell *matCellDef=\"let visit\"> {{ visit.visitorFullName }} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"visitStartDate\">\r\n                        <th mat-header-cell *matHeaderCellDef> Giriş Tarihi </th>\r\n                        <td mat-cell *matCellDef=\"let visit\"> {{ visit.visitStartDate | date: 'short' }} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"exitDate\">\r\n                        <th mat-header-cell *matHeaderCellDef> Çıkış Tarihi </th>\r\n                        <td mat-cell *matCellDef=\"let visit\"> {{ visit.exitDate !== '0001-01-01T02:00:00+02:00' ? (visit.exitDate | date: 'short') : 'Yok' }} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"status\">\r\n                        <th mat-header-cell *matHeaderCellDef> Durum </th>\r\n                        <td mat-cell *matCellDef=\"let visit\"> \r\n                            <span *ngIf=\"visit.isConfirm\" class=\"status approved\">\r\n                                <mat-icon>check_circle</mat-icon> Onaylı\r\n                            </span>\r\n                            <span *ngIf=\"visit.isReject\" class=\"status rejected\">\r\n                                <mat-icon>cancel</mat-icon> Reddedildi: {{ visit.reasonForRejection }}\r\n                            </span>\r\n                            <span *ngIf=\"!visit.isConfirm && !visit.isReject\" class=\"status pending\">\r\n                                <mat-icon>hourglass_empty</mat-icon> Beklemede\r\n                            </span>\r\n                            <span *ngIf=\"visit.vehicleEntry\" class=\"status vehicle\">\r\n                                <mat-icon>directions_car</mat-icon> Araç\r\n                            </span>\r\n                            <span *ngIf=\"!visit.vehicleEntry\" class=\"status pedestrian\">\r\n                                <mat-icon>directions_walk</mat-icon> Yaya\r\n                            </span>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"['visitorFullName', 'visitStartDate', 'exitDate', 'status']\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: ['visitorFullName', 'visitStartDate', 'exitDate', 'status'];\"></tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>");

/***/ }),

/***/ "ebNd":
/*!****************************************************************!*\
  !*** ./src/app/core/components/admin/login/login.component.ts ***!
  \****************************************************************/
/*! exports provided: LoginComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginComponent", function() { return LoginComponent; });
/* harmony import */ var _raw_loader_login_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./login.component.html */ "UUBT");
/* harmony import */ var _login_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./login.component.scss */ "jxUz");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @ngx-translate/core */ "sYmb");
/* harmony import */ var app_core_services_local_storage_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! app/core/services/local-storage.service */ "3G0t");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! environments/environment */ "AytR");
/* harmony import */ var _services_language_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../services/language.service */ "h68y");
/* harmony import */ var _model_login_user__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./model/login-user */ "uIUo");
/* harmony import */ var _Services_auth_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Services/auth.service */ "a9M/");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};











var LoginComponent = /** @class */ (function () {
    function LoginComponent(auth, storageService, lookupService, translateService, httpClient, languageService) {
        this.auth = auth;
        this.storageService = storageService;
        this.lookupService = lookupService;
        this.translateService = translateService;
        this.httpClient = httpClient;
        this.languageService = languageService;
        this.username = "";
        this.loginUser = new _model_login_user__WEBPACK_IMPORTED_MODULE_9__["LoginUser"]();
        this.hidePassword = true;
    }
    LoginComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.username = this.auth.userName;
        this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_7__["environment"].getApiUrl + "/languages/codes").subscribe(function (data) {
            _this.langugelookUp = data;
        });
    };
    LoginComponent.prototype.getUserName = function () {
        return this.username;
    };
    LoginComponent.prototype.login = function () {
        this.auth.login(this.loginUser);
    };
    LoginComponent.prototype.logOut = function () {
        this.storageService.removeToken();
        this.storageService.removeItem("lang");
    };
    LoginComponent.prototype.changeLang = function (lang) {
        localStorage.setItem("lang", lang);
        this.translateService.use(lang);
    };
    LoginComponent.prototype.getLanguageCodes = function () {
        this.languageService.getLanguageCodes().subscribe({
            next: function (response) {
            },
            error: function (error) {
            }
        });
    };
    LoginComponent.ctorParameters = function () { return [
        { type: _Services_auth_service__WEBPACK_IMPORTED_MODULE_10__["AuthService"] },
        { type: app_core_services_local_storage_service__WEBPACK_IMPORTED_MODULE_5__["LocalStorageService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_6__["LookUpService"] },
        { type: _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"] },
        { type: _services_language_service__WEBPACK_IMPORTED_MODULE_8__["LanguageService"] }
    ]; };
    LoginComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_3__["Component"])({
            selector: 'app-login',
            template: _raw_loader_login_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_login_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_Services_auth_service__WEBPACK_IMPORTED_MODULE_10__["AuthService"],
            app_core_services_local_storage_service__WEBPACK_IMPORTED_MODULE_5__["LocalStorageService"],
            app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_6__["LookUpService"],
            _ngx_translate_core__WEBPACK_IMPORTED_MODULE_4__["TranslateService"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_2__["HttpClient"],
            _services_language_service__WEBPACK_IMPORTED_MODULE_8__["LanguageService"]])
    ], LoginComponent);
    return LoginComponent;
}());



/***/ }),

/***/ "f0Cb":
/*!*************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/divider.js ***!
  \*************************************************************************/
/*! exports provided: MatDivider, MatDividerModule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDivider", function() { return MatDivider; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDividerModule", function() { return MatDividerModule; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/core */ "FKr1");





/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */



var MatDivider = /*#__PURE__*/function () {
  function MatDivider() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatDivider);

    this._vertical = false;
    this._inset = false;
  }
  /** Whether the divider is vertically aligned. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(MatDivider, [{
    key: "vertical",
    get: function get() {
      return this._vertical;
    },
    set: function set(value) {
      this._vertical = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__["coerceBooleanProperty"])(value);
    }
    /** Whether the divider is an inset divider. */

  }, {
    key: "inset",
    get: function get() {
      return this._inset;
    },
    set: function set(value) {
      this._inset = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_3__["coerceBooleanProperty"])(value);
    }
  }]);

  return MatDivider;
}();

MatDivider.ɵfac = function MatDivider_Factory(t) {
  return new (t || MatDivider)();
};

MatDivider.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineComponent"]({
  type: MatDivider,
  selectors: [["mat-divider"]],
  hostAttrs: ["role", "separator", 1, "mat-divider"],
  hostVars: 7,
  hostBindings: function MatDivider_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵattribute"]("aria-orientation", ctx.vertical ? "vertical" : "horizontal");
      _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵclassProp"]("mat-divider-vertical", ctx.vertical)("mat-divider-horizontal", !ctx.vertical)("mat-divider-inset", ctx.inset);
    }
  },
  inputs: {
    vertical: "vertical",
    inset: "inset"
  },
  decls: 0,
  vars: 0,
  template: function MatDivider_Template(rf, ctx) {},
  styles: [".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n"],
  encapsulation: 2,
  changeDetection: 0
});
MatDivider.propDecorators = {
  vertical: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
  }],
  inset: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](MatDivider, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"],
    args: [{
      selector: 'mat-divider',
      host: {
        'role': 'separator',
        '[attr.aria-orientation]': 'vertical ? "vertical" : "horizontal"',
        '[class.mat-divider-vertical]': 'vertical',
        '[class.mat-divider-horizontal]': '!vertical',
        '[class.mat-divider-inset]': 'inset',
        'class': 'mat-divider'
      },
      template: '',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-divider{display:block;margin:0;border-top-width:1px;border-top-style:solid}.mat-divider.mat-divider-vertical{border-top:0;border-right-width:1px;border-right-style:solid}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\n"]
    }]
  }], function () {
    return [];
  }, {
    vertical: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }],
    inset: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatDividerModule = function MatDividerModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, MatDividerModule);
};

MatDividerModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineNgModule"]({
  type: MatDividerModule
});
MatDividerModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjector"]({
  factory: function MatDividerModule_Factory(t) {
    return new (t || MatDividerModule)();
  },
  imports: [[_angular_material_core__WEBPACK_IMPORTED_MODULE_4__["MatCommonModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_4__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵsetNgModuleScope"](MatDividerModule, {
    declarations: function declarations() {
      return [MatDivider];
    },
    imports: function imports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_4__["MatCommonModule"]];
    },
    exports: function exports() {
      return [MatDivider, _angular_material_core__WEBPACK_IMPORTED_MODULE_4__["MatCommonModule"]];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵsetClassMetadata"](MatDividerModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["NgModule"],
    args: [{
      imports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_4__["MatCommonModule"]],
      exports: [MatDivider, _angular_material_core__WEBPACK_IMPORTED_MODULE_4__["MatCommonModule"]],
      declarations: [MatDivider]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "f6nW":
/*!******************************************************************!*\
  !*** ./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/table.js ***!
  \******************************************************************/
/*! exports provided: DataSource, BaseCdkCell, BaseRowDef, CDK_ROW_TEMPLATE, CDK_TABLE, CDK_TABLE_TEMPLATE, CdkCell, CdkCellDef, CdkCellOutlet, CdkColumnDef, CdkFooterCell, CdkFooterCellDef, CdkFooterRow, CdkFooterRowDef, CdkHeaderCell, CdkHeaderCellDef, CdkHeaderRow, CdkHeaderRowDef, CdkNoDataRow, CdkRow, CdkRowDef, CdkTable, CdkTableModule, CdkTextColumn, DataRowOutlet, FooterRowOutlet, HeaderRowOutlet, NoDataRowOutlet, STICKY_DIRECTIONS, StickyStyler, TEXT_COLUMN_OPTIONS, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, _Schedule, mixinHasStickyInput */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseCdkCell", function() { return BaseCdkCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BaseRowDef", function() { return BaseRowDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_ROW_TEMPLATE", function() { return CDK_ROW_TEMPLATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_TABLE", function() { return CDK_TABLE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CDK_TABLE_TEMPLATE", function() { return CDK_TABLE_TEMPLATE; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkCell", function() { return CdkCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkCellDef", function() { return CdkCellDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkCellOutlet", function() { return CdkCellOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkColumnDef", function() { return CdkColumnDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkFooterCell", function() { return CdkFooterCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkFooterCellDef", function() { return CdkFooterCellDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkFooterRow", function() { return CdkFooterRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkFooterRowDef", function() { return CdkFooterRowDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkHeaderCell", function() { return CdkHeaderCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkHeaderCellDef", function() { return CdkHeaderCellDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkHeaderRow", function() { return CdkHeaderRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkHeaderRowDef", function() { return CdkHeaderRowDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkNoDataRow", function() { return CdkNoDataRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkRow", function() { return CdkRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkRowDef", function() { return CdkRowDef; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkTable", function() { return CdkTable; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkTableModule", function() { return CdkTableModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CdkTextColumn", function() { return CdkTextColumn; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DataRowOutlet", function() { return DataRowOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FooterRowOutlet", function() { return FooterRowOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeaderRowOutlet", function() { return HeaderRowOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NoDataRowOutlet", function() { return NoDataRowOutlet; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "STICKY_DIRECTIONS", function() { return STICKY_DIRECTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StickyStyler", function() { return StickyStyler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TEXT_COLUMN_OPTIONS", function() { return TEXT_COLUMN_OPTIONS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_COALESCED_STYLE_SCHEDULER", function() { return _COALESCED_STYLE_SCHEDULER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_CoalescedStyleScheduler", function() { return _CoalescedStyleScheduler; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_Schedule", function() { return _Schedule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mixinHasStickyInput", function() { return mixinHasStickyInput; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/collections */ "0EQZ");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DataSource", function() { return _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["DataSource"]; });

/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/cdk/scrolling */ "vxfF");














var _c0 = [[["caption"]], [["colgroup"], ["col"]]];
var _c1 = ["caption", "colgroup, col"];

function CdkTextColumn_th_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "th", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵstyleProp"]("text-align", ctx_r0.justify);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"](" ", ctx_r0.headerText, " ");
  }
}

function CdkTextColumn_td_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementStart"](0, "td", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var data_r2 = ctx.$implicit;
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵstyleProp"]("text-align", ctx_r1.justify);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtextInterpolate1"](" ", ctx_r1.dataAccessor(data_r2, ctx_r1.name), " ");
  }
}








/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Mixin to provide a directive with a function that checks if the sticky input has been
 * changed since the last time the function was called. Essentially adds a dirty-check to the
 * sticky value.
 * @docs-private
 */

function mixinHasStickyInput(base) {
  return /*#__PURE__*/function (_base) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(_class, _base);

    var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(_class);

    function _class() {
      var _this;

      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, _class);

      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }

      _this = _super.call.apply(_super, [this].concat(args));
      _this._sticky = false;
      /** Whether the sticky input has changed since it was last checked. */

      _this._hasStickyChanged = false;
      return _this;
    }
    /** Whether sticky positioning should be applied. */


    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(_class, [{
      key: "sticky",
      get: function get() {
        return this._sticky;
      },
      set: function set(v) {
        var prevValue = this._sticky;
        this._sticky = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(v);
        this._hasStickyChanged = prevValue !== this._sticky;
      }
      /** Whether the sticky value has changed since this was last called. */

    }, {
      key: "hasStickyChanged",
      value: function hasStickyChanged() {
        var hasStickyChanged = this._hasStickyChanged;
        this._hasStickyChanged = false;
        return hasStickyChanged;
      }
      /** Resets the dirty check for cases where the sticky state has been used without checking. */

    }, {
      key: "resetStickyChanged",
      value: function resetStickyChanged() {
        this._hasStickyChanged = false;
      }
    }]);

    return _class;
  }(base);
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used to provide a table to some of the sub-components without causing a circular dependency.
 * @docs-private
 */


var CDK_TABLE = new _angular_core__WEBPACK_IMPORTED_MODULE_11__["InjectionToken"]('CDK_TABLE');
/** Injection token that can be used to specify the text column options. */

var TEXT_COLUMN_OPTIONS = new _angular_core__WEBPACK_IMPORTED_MODULE_11__["InjectionToken"]('text-column-options');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Cell definition for a CDK table.
 * Captures the template of a column's data row cell as well as cell-specific properties.
 */

var CdkCellDef = function CdkCellDef(
/** @docs-private */
template) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkCellDef);

  this.template = template;
};

CdkCellDef.ɵfac = function CdkCellDef_Factory(t) {
  return new (t || CdkCellDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]));
};

CdkCellDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkCellDef,
  selectors: [["", "cdkCellDef", ""]]
});

CdkCellDef.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkCellDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkCellDef]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }];
  }, null);
})();
/**
 * Header cell definition for a CDK table.
 * Captures the template of a column's header cell and as well as cell-specific properties.
 */


var CdkHeaderCellDef = function CdkHeaderCellDef(
/** @docs-private */
template) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkHeaderCellDef);

  this.template = template;
};

CdkHeaderCellDef.ɵfac = function CdkHeaderCellDef_Factory(t) {
  return new (t || CdkHeaderCellDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]));
};

CdkHeaderCellDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkHeaderCellDef,
  selectors: [["", "cdkHeaderCellDef", ""]]
});

CdkHeaderCellDef.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkHeaderCellDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkHeaderCellDef]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }];
  }, null);
})();
/**
 * Footer cell definition for a CDK table.
 * Captures the template of a column's footer cell and as well as cell-specific properties.
 */


var CdkFooterCellDef = function CdkFooterCellDef(
/** @docs-private */
template) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkFooterCellDef);

  this.template = template;
};

CdkFooterCellDef.ɵfac = function CdkFooterCellDef_Factory(t) {
  return new (t || CdkFooterCellDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]));
};

CdkFooterCellDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkFooterCellDef,
  selectors: [["", "cdkFooterCellDef", ""]]
});

CdkFooterCellDef.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkFooterCellDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkFooterCellDef]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }];
  }, null);
})(); // Boilerplate for applying mixins to CdkColumnDef.

/** @docs-private */


var CdkColumnDefBase = function CdkColumnDefBase() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkColumnDefBase);
};

var _CdkColumnDefBase = mixinHasStickyInput(CdkColumnDefBase);
/**
 * Column definition for the CDK table.
 * Defines a set of cells available for a table column.
 */


var CdkColumnDef = /*#__PURE__*/function (_CdkColumnDefBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkColumnDef, _CdkColumnDefBase2);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkColumnDef);

  function CdkColumnDef(_table) {
    var _this2;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkColumnDef);

    _this2 = _super2.call(this);
    _this2._table = _table;
    _this2._stickyEnd = false;
    return _this2;
  }
  /** Unique name for this column. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CdkColumnDef, [{
    key: "name",
    get: function get() {
      return this._name;
    },
    set: function set(name) {
      this._setNameInput(name);
    }
    /**
     * Whether this column should be sticky positioned on the end of the row. Should make sure
     * that it mimics the `CanStick` mixin such that `_hasStickyChanged` is set to true if the value
     * has been changed.
     */

  }, {
    key: "stickyEnd",
    get: function get() {
      return this._stickyEnd;
    },
    set: function set(v) {
      var prevValue = this._stickyEnd;
      this._stickyEnd = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(v);
      this._hasStickyChanged = prevValue !== this._stickyEnd;
    }
    /**
     * Overridable method that sets the css classes that will be added to every cell in this
     * column.
     * In the future, columnCssClassName will change from type string[] to string and this
     * will set a single string value.
     * @docs-private
     */

  }, {
    key: "_updateColumnCssClassName",
    value: function _updateColumnCssClassName() {
      this._columnCssClassName = ["cdk-column-".concat(this.cssClassFriendlyName)];
    }
    /**
     * This has been extracted to a util because of TS 4 and VE.
     * View Engine doesn't support property rename inheritance.
     * TS 4.0 doesn't allow properties to override accessors or vice-versa.
     * @docs-private
     */

  }, {
    key: "_setNameInput",
    value: function _setNameInput(value) {
      // If the directive is set without a name (updated programatically), then this setter will
      // trigger with an empty string and should not overwrite the programatically set value.
      if (value) {
        this._name = value;
        this.cssClassFriendlyName = value.replace(/[^a-z0-9_-]/ig, '-');

        this._updateColumnCssClassName();
      }
    }
  }]);

  return CdkColumnDef;
}(_CdkColumnDefBase);

CdkColumnDef.ɵfac = function CdkColumnDef_Factory(t) {
  return new (t || CdkColumnDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CDK_TABLE, 8));
};

CdkColumnDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkColumnDef,
  selectors: [["", "cdkColumnDef", ""]],
  contentQueries: function CdkColumnDef_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkCellDef, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkHeaderCellDef, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkFooterCellDef, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.cell = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.headerCell = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.footerCell = _t.first);
    }
  },
  inputs: {
    sticky: "sticky",
    name: ["cdkColumnDef", "name"],
    stickyEnd: "stickyEnd"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵProvidersFeature"]([{
    provide: 'MAT_SORT_HEADER_COLUMN_DEF',
    useExisting: CdkColumnDef
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"]]
});

CdkColumnDef.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [CDK_TABLE]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }]
  }];
};

CdkColumnDef.propDecorators = {
  name: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"],
    args: ['cdkColumnDef']
  }],
  stickyEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"],
    args: ['stickyEnd']
  }],
  cell: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
    args: [CdkCellDef]
  }],
  headerCell: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
    args: [CdkHeaderCellDef]
  }],
  footerCell: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
    args: [CdkFooterCellDef]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkColumnDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkColumnDef]',
      inputs: ['sticky'],
      providers: [{
        provide: 'MAT_SORT_HEADER_COLUMN_DEF',
        useExisting: CdkColumnDef
      }]
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [CDK_TABLE]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }]
    }];
  }, {
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"],
      args: ['cdkColumnDef']
    }],
    stickyEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"],
      args: ['stickyEnd']
    }],
    cell: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
      args: [CdkCellDef]
    }],
    headerCell: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
      args: [CdkHeaderCellDef]
    }],
    footerCell: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
      args: [CdkFooterCellDef]
    }]
  });
})();
/** Base class for the cells. Adds a CSS classname that identifies the column it renders in. */


var BaseCdkCell = function BaseCdkCell(columnDef, elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BaseCdkCell);

  // If IE 11 is dropped before we switch to setting a single class name, change to multi param
  // with destructuring.
  var classList = elementRef.nativeElement.classList;

  var _iterator = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(columnDef._columnCssClassName),
      _step;

  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var className = _step.value;
      classList.add(className);
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
};
/** Header cell template container that adds the right classes and role. */


var CdkHeaderCell = /*#__PURE__*/function (_BaseCdkCell) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkHeaderCell, _BaseCdkCell);

  var _super3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkHeaderCell);

  function CdkHeaderCell(columnDef, elementRef) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkHeaderCell);

    return _super3.call(this, columnDef, elementRef);
  }

  return CdkHeaderCell;
}(BaseCdkCell);

CdkHeaderCell.ɵfac = function CdkHeaderCell_Factory(t) {
  return new (t || CdkHeaderCell)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CdkColumnDef), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]));
};

CdkHeaderCell.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkHeaderCell,
  selectors: [["cdk-header-cell"], ["th", "cdk-header-cell", ""]],
  hostAttrs: ["role", "columnheader", 1, "cdk-header-cell"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"]]
});

CdkHeaderCell.ctorParameters = function () {
  return [{
    type: CdkColumnDef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkHeaderCell, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: 'cdk-header-cell, th[cdk-header-cell]',
      host: {
        'class': 'cdk-header-cell',
        'role': 'columnheader'
      }
    }]
  }], function () {
    return [{
      type: CdkColumnDef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }];
  }, null);
})();
/** Footer cell template container that adds the right classes and role. */


var CdkFooterCell = /*#__PURE__*/function (_BaseCdkCell2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkFooterCell, _BaseCdkCell2);

  var _super4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkFooterCell);

  function CdkFooterCell(columnDef, elementRef) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkFooterCell);

    return _super4.call(this, columnDef, elementRef);
  }

  return CdkFooterCell;
}(BaseCdkCell);

CdkFooterCell.ɵfac = function CdkFooterCell_Factory(t) {
  return new (t || CdkFooterCell)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CdkColumnDef), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]));
};

CdkFooterCell.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkFooterCell,
  selectors: [["cdk-footer-cell"], ["td", "cdk-footer-cell", ""]],
  hostAttrs: ["role", "gridcell", 1, "cdk-footer-cell"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"]]
});

CdkFooterCell.ctorParameters = function () {
  return [{
    type: CdkColumnDef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkFooterCell, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: 'cdk-footer-cell, td[cdk-footer-cell]',
      host: {
        'class': 'cdk-footer-cell',
        'role': 'gridcell'
      }
    }]
  }], function () {
    return [{
      type: CdkColumnDef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }];
  }, null);
})();
/** Cell template container that adds the right classes and role. */


var CdkCell = /*#__PURE__*/function (_BaseCdkCell3) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkCell, _BaseCdkCell3);

  var _super5 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkCell);

  function CdkCell(columnDef, elementRef) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkCell);

    return _super5.call(this, columnDef, elementRef);
  }

  return CdkCell;
}(BaseCdkCell);

CdkCell.ɵfac = function CdkCell_Factory(t) {
  return new (t || CdkCell)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CdkColumnDef), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]));
};

CdkCell.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkCell,
  selectors: [["cdk-cell"], ["td", "cdk-cell", ""]],
  hostAttrs: ["role", "gridcell", 1, "cdk-cell"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"]]
});

CdkCell.ctorParameters = function () {
  return [{
    type: CdkColumnDef
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkCell, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: 'cdk-cell, td[cdk-cell]',
      host: {
        'class': 'cdk-cell',
        'role': 'gridcell'
      }
    }]
  }], function () {
    return [{
      type: CdkColumnDef
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @docs-private
 */


var _Schedule = function _Schedule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, _Schedule);

  this.tasks = [];
  this.endTasks = [];
};
/** Injection token used to provide a coalesced style scheduler. */


var _COALESCED_STYLE_SCHEDULER = new _angular_core__WEBPACK_IMPORTED_MODULE_11__["InjectionToken"]('_COALESCED_STYLE_SCHEDULER');
/**
 * Allows grouping up CSSDom mutations after the current execution context.
 * This can significantly improve performance when separate consecutive functions are
 * reading from the CSSDom and then mutating it.
 *
 * @docs-private
 */


var _CoalescedStyleScheduler = /*#__PURE__*/function () {
  function _CoalescedStyleScheduler(_ngZone) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, _CoalescedStyleScheduler);

    this._ngZone = _ngZone;
    this._currentSchedule = null;
    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_14__["Subject"]();
  }
  /**
   * Schedules the specified task to run at the end of the current VM turn.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(_CoalescedStyleScheduler, [{
    key: "schedule",
    value: function schedule(task) {
      this._createScheduleIfNeeded();

      this._currentSchedule.tasks.push(task);
    }
    /**
     * Schedules the specified task to run after other scheduled tasks at the end of the current
     * VM turn.
     */

  }, {
    key: "scheduleEnd",
    value: function scheduleEnd(task) {
      this._createScheduleIfNeeded();

      this._currentSchedule.endTasks.push(task);
    }
    /** Prevent any further tasks from running. */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroyed.next();

      this._destroyed.complete();
    }
  }, {
    key: "_createScheduleIfNeeded",
    value: function _createScheduleIfNeeded() {
      var _this3 = this;

      if (this._currentSchedule) {
        return;
      }

      this._currentSchedule = new _Schedule();

      this._getScheduleObservable().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_15__["takeUntil"])(this._destroyed)).subscribe(function () {
        while (_this3._currentSchedule.tasks.length || _this3._currentSchedule.endTasks.length) {
          var schedule = _this3._currentSchedule; // Capture new tasks scheduled by the current set of tasks.

          _this3._currentSchedule = new _Schedule();

          var _iterator2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(schedule.tasks),
              _step2;

          try {
            for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
              var task = _step2.value;
              task();
            }
          } catch (err) {
            _iterator2.e(err);
          } finally {
            _iterator2.f();
          }

          var _iterator3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(schedule.endTasks),
              _step3;

          try {
            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
              var _task = _step3.value;

              _task();
            }
          } catch (err) {
            _iterator3.e(err);
          } finally {
            _iterator3.f();
          }
        }

        _this3._currentSchedule = null;
      });
    }
  }, {
    key: "_getScheduleObservable",
    value: function _getScheduleObservable() {
      // Use onStable when in the context of an ongoing change detection cycle so that we
      // do not accidentally trigger additional cycles.
      return this._ngZone.isStable ? Object(rxjs__WEBPACK_IMPORTED_MODULE_14__["from"])(Promise.resolve(undefined)) : this._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_15__["take"])(1));
    }
  }]);

  return _CoalescedStyleScheduler;
}();

_CoalescedStyleScheduler.ɵfac = function _CoalescedStyleScheduler_Factory(t) {
  return new (t || _CoalescedStyleScheduler)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵinject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["NgZone"]));
};

_CoalescedStyleScheduler.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineInjectable"]({
  token: _CoalescedStyleScheduler,
  factory: _CoalescedStyleScheduler.ɵfac
});

_CoalescedStyleScheduler.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["NgZone"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](_CoalescedStyleScheduler, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Injectable"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["NgZone"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The row template that can be used by the mat-table. Should not be used outside of the
 * material library.
 */


var CDK_ROW_TEMPLATE = "<ng-container cdkCellOutlet></ng-container>";
/**
 * Base class for the CdkHeaderRowDef and CdkRowDef that handles checking their columns inputs
 * for changes and notifying the table.
 */

var BaseRowDef = /*#__PURE__*/function () {
  function BaseRowDef(
  /** @docs-private */
  template, _differs) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, BaseRowDef);

    this.template = template;
    this._differs = _differs;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(BaseRowDef, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      // Create a new columns differ if one does not yet exist. Initialize it based on initial value
      // of the columns property or an empty array if none is provided.
      if (!this._columnsDiffer) {
        var columns = changes['columns'] && changes['columns'].currentValue || [];
        this._columnsDiffer = this._differs.find(columns).create();

        this._columnsDiffer.diff(columns);
      }
    }
    /**
     * Returns the difference between the current columns and the columns from the last diff, or null
     * if there is no difference.
     */

  }, {
    key: "getColumnsDiff",
    value: function getColumnsDiff() {
      return this._columnsDiffer.diff(this.columns);
    }
    /** Gets this row def's relevant cell template from the provided column def. */

  }, {
    key: "extractCellTemplate",
    value: function extractCellTemplate(column) {
      if (this instanceof CdkHeaderRowDef) {
        return column.headerCell.template;
      }

      if (this instanceof CdkFooterRowDef) {
        return column.footerCell.template;
      } else {
        return column.cell.template;
      }
    }
  }]);

  return BaseRowDef;
}();

BaseRowDef.ɵfac = function BaseRowDef_Factory(t) {
  return new (t || BaseRowDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]));
};

BaseRowDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: BaseRowDef,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵNgOnChangesFeature"]]
});

BaseRowDef.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](BaseRowDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
    }];
  }, null);
})(); // Boilerplate for applying mixins to CdkHeaderRowDef.

/** @docs-private */


var CdkHeaderRowDefBase = /*#__PURE__*/function (_BaseRowDef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkHeaderRowDefBase, _BaseRowDef);

  var _super6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkHeaderRowDefBase);

  function CdkHeaderRowDefBase() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkHeaderRowDefBase);

    return _super6.apply(this, arguments);
  }

  return CdkHeaderRowDefBase;
}(BaseRowDef);

var _CdkHeaderRowDefBase = mixinHasStickyInput(CdkHeaderRowDefBase);
/**
 * Header row definition for the CDK table.
 * Captures the header row's template and other header properties such as the columns to display.
 */


var CdkHeaderRowDef = /*#__PURE__*/function (_CdkHeaderRowDefBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkHeaderRowDef, _CdkHeaderRowDefBase2);

  var _super7 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkHeaderRowDef);

  function CdkHeaderRowDef(template, _differs, _table) {
    var _this4;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkHeaderRowDef);

    _this4 = _super7.call(this, template, _differs);
    _this4._table = _table;
    return _this4;
  } // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.
  // Explicitly define it so that the method is called as part of the Angular lifecycle.


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CdkHeaderRowDef, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkHeaderRowDef.prototype), "ngOnChanges", this).call(this, changes);
    }
  }]);

  return CdkHeaderRowDef;
}(_CdkHeaderRowDefBase);

CdkHeaderRowDef.ɵfac = function CdkHeaderRowDef_Factory(t) {
  return new (t || CdkHeaderRowDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CDK_TABLE, 8));
};

CdkHeaderRowDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkHeaderRowDef,
  selectors: [["", "cdkHeaderRowDef", ""]],
  inputs: {
    columns: ["cdkHeaderRowDef", "columns"],
    sticky: ["cdkHeaderRowDefSticky", "sticky"]
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵNgOnChangesFeature"]]
});

CdkHeaderRowDef.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [CDK_TABLE]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkHeaderRowDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkHeaderRowDef]',
      inputs: ['columns: cdkHeaderRowDef', 'sticky: cdkHeaderRowDefSticky']
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [CDK_TABLE]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }]
    }];
  }, null);
})(); // Boilerplate for applying mixins to CdkFooterRowDef.

/** @docs-private */


var CdkFooterRowDefBase = /*#__PURE__*/function (_BaseRowDef2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkFooterRowDefBase, _BaseRowDef2);

  var _super8 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkFooterRowDefBase);

  function CdkFooterRowDefBase() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkFooterRowDefBase);

    return _super8.apply(this, arguments);
  }

  return CdkFooterRowDefBase;
}(BaseRowDef);

var _CdkFooterRowDefBase = mixinHasStickyInput(CdkFooterRowDefBase);
/**
 * Footer row definition for the CDK table.
 * Captures the footer row's template and other footer properties such as the columns to display.
 */


var CdkFooterRowDef = /*#__PURE__*/function (_CdkFooterRowDefBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkFooterRowDef, _CdkFooterRowDefBase2);

  var _super9 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkFooterRowDef);

  function CdkFooterRowDef(template, _differs, _table) {
    var _this5;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkFooterRowDef);

    _this5 = _super9.call(this, template, _differs);
    _this5._table = _table;
    return _this5;
  } // Prerender fails to recognize that ngOnChanges in a part of this class through inheritance.
  // Explicitly define it so that the method is called as part of the Angular lifecycle.


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CdkFooterRowDef, [{
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__["default"])(CdkFooterRowDef.prototype), "ngOnChanges", this).call(this, changes);
    }
  }]);

  return CdkFooterRowDef;
}(_CdkFooterRowDefBase);

CdkFooterRowDef.ɵfac = function CdkFooterRowDef_Factory(t) {
  return new (t || CdkFooterRowDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CDK_TABLE, 8));
};

CdkFooterRowDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkFooterRowDef,
  selectors: [["", "cdkFooterRowDef", ""]],
  inputs: {
    columns: ["cdkFooterRowDef", "columns"],
    sticky: ["cdkFooterRowDefSticky", "sticky"]
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵNgOnChangesFeature"]]
});

CdkFooterRowDef.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [CDK_TABLE]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkFooterRowDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkFooterRowDef]',
      inputs: ['columns: cdkFooterRowDef', 'sticky: cdkFooterRowDefSticky']
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [CDK_TABLE]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }]
    }];
  }, null);
})();
/**
 * Data row definition for the CDK table.
 * Captures the header row's template and other row properties such as the columns to display and
 * a when predicate that describes when this row should be used.
 */


var CdkRowDef = /*#__PURE__*/function (_BaseRowDef3) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(CdkRowDef, _BaseRowDef3);

  var _super10 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(CdkRowDef);

  // TODO(andrewseguin): Add an input for providing a switch function to determine
  //   if this template should be used.
  function CdkRowDef(template, _differs, _table) {
    var _this6;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkRowDef);

    _this6 = _super10.call(this, template, _differs);
    _this6._table = _table;
    return _this6;
  }

  return CdkRowDef;
}(BaseRowDef);

CdkRowDef.ɵfac = function CdkRowDef_Factory(t) {
  return new (t || CdkRowDef)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CDK_TABLE, 8));
};

CdkRowDef.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkRowDef,
  selectors: [["", "cdkRowDef", ""]],
  inputs: {
    columns: ["cdkRowDefColumns", "columns"],
    when: ["cdkRowDefWhen", "when"]
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵInheritDefinitionFeature"]]
});

CdkRowDef.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [CDK_TABLE]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkRowDef, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkRowDef]',
      inputs: ['columns: cdkRowDefColumns', 'when: cdkRowDefWhen']
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [CDK_TABLE]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }]
    }];
  }, null);
})();
/**
 * Outlet for rendering cells inside of a row or header row.
 * @docs-private
 */


var CdkCellOutlet = /*#__PURE__*/function () {
  function CdkCellOutlet(_viewContainer) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkCellOutlet);

    this._viewContainer = _viewContainer;
    CdkCellOutlet.mostRecentCellOutlet = this;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CdkCellOutlet, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      // If this was the last outlet being rendered in the view, remove the reference
      // from the static property after it has been destroyed to avoid leaking memory.
      if (CdkCellOutlet.mostRecentCellOutlet === this) {
        CdkCellOutlet.mostRecentCellOutlet = null;
      }
    }
  }]);

  return CdkCellOutlet;
}();

CdkCellOutlet.ɵfac = function CdkCellOutlet_Factory(t) {
  return new (t || CdkCellOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]));
};

CdkCellOutlet.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkCellOutlet,
  selectors: [["", "cdkCellOutlet", ""]]
});
/**
 * Static property containing the latest constructed instance of this class.
 * Used by the CDK table when each CdkHeaderRow and CdkRow component is created using
 * createEmbeddedView. After one of these components are created, this property will provide
 * a handle to provide that component's cells and context. After init, the CdkCellOutlet will
 * construct the cells with the provided context.
 */

CdkCellOutlet.mostRecentCellOutlet = null;

CdkCellOutlet.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkCellOutlet, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[cdkCellOutlet]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
    }];
  }, null);
})();
/** Header template container that contains the cell outlet. Adds the right class and role. */


var CdkHeaderRow = function CdkHeaderRow() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkHeaderRow);
};

CdkHeaderRow.ɵfac = function CdkHeaderRow_Factory(t) {
  return new (t || CdkHeaderRow)();
};

CdkHeaderRow.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({
  type: CdkHeaderRow,
  selectors: [["cdk-header-row"], ["tr", "cdk-header-row", ""]],
  hostAttrs: ["role", "row", 1, "cdk-header-row"],
  decls: 1,
  vars: 0,
  consts: [["cdkCellOutlet", ""]],
  template: function CdkHeaderRow_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainer"](0, 0);
    }
  },
  directives: [CdkCellOutlet],
  encapsulation: 2
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkHeaderRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Component"],
    args: [{
      selector: 'cdk-header-row, tr[cdk-header-row]',
      template: CDK_ROW_TEMPLATE,
      host: {
        'class': 'cdk-header-row',
        'role': 'row'
      },
      // See note on CdkTable for explanation on why this uses the default change detection strategy.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewEncapsulation"].None
    }]
  }], null, null);
})();
/** Footer template container that contains the cell outlet. Adds the right class and role. */


var CdkFooterRow = function CdkFooterRow() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkFooterRow);
};

CdkFooterRow.ɵfac = function CdkFooterRow_Factory(t) {
  return new (t || CdkFooterRow)();
};

CdkFooterRow.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({
  type: CdkFooterRow,
  selectors: [["cdk-footer-row"], ["tr", "cdk-footer-row", ""]],
  hostAttrs: ["role", "row", 1, "cdk-footer-row"],
  decls: 1,
  vars: 0,
  consts: [["cdkCellOutlet", ""]],
  template: function CdkFooterRow_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainer"](0, 0);
    }
  },
  directives: [CdkCellOutlet],
  encapsulation: 2
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkFooterRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Component"],
    args: [{
      selector: 'cdk-footer-row, tr[cdk-footer-row]',
      template: CDK_ROW_TEMPLATE,
      host: {
        'class': 'cdk-footer-row',
        'role': 'row'
      },
      // See note on CdkTable for explanation on why this uses the default change detection strategy.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewEncapsulation"].None
    }]
  }], null, null);
})();
/** Data row template container that contains the cell outlet. Adds the right class and role. */


var CdkRow = function CdkRow() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkRow);
};

CdkRow.ɵfac = function CdkRow_Factory(t) {
  return new (t || CdkRow)();
};

CdkRow.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({
  type: CdkRow,
  selectors: [["cdk-row"], ["tr", "cdk-row", ""]],
  hostAttrs: ["role", "row", 1, "cdk-row"],
  decls: 1,
  vars: 0,
  consts: [["cdkCellOutlet", ""]],
  template: function CdkRow_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainer"](0, 0);
    }
  },
  directives: [CdkCellOutlet],
  encapsulation: 2
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Component"],
    args: [{
      selector: 'cdk-row, tr[cdk-row]',
      template: CDK_ROW_TEMPLATE,
      host: {
        'class': 'cdk-row',
        'role': 'row'
      },
      // See note on CdkTable for explanation on why this uses the default change detection strategy.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewEncapsulation"].None
    }]
  }], null, null);
})();
/** Row that can be used to display a message when no data is shown in the table. */


var CdkNoDataRow = function CdkNoDataRow(templateRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkNoDataRow);

  this.templateRef = templateRef;
};

CdkNoDataRow.ɵfac = function CdkNoDataRow_Factory(t) {
  return new (t || CdkNoDataRow)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]));
};

CdkNoDataRow.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: CdkNoDataRow,
  selectors: [["ng-template", "cdkNoDataRow", ""]]
});

CdkNoDataRow.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkNoDataRow, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: 'ng-template[cdkNoDataRow]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["TemplateRef"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * List of all possible directions that can be used for sticky positioning.
 * @docs-private
 */


var STICKY_DIRECTIONS = ['top', 'bottom', 'left', 'right'];
/**
 * Applies and removes sticky positioning styles to the `CdkTable` rows and columns cells.
 * @docs-private
 */

var StickyStyler = /*#__PURE__*/function () {
  /**
   * @param _isNativeHtmlTable Whether the sticky logic should be based on a table
   *     that uses the native `<table>` element.
   * @param _stickCellCss The CSS class that will be applied to every row/cell that has
   *     sticky positioning applied.
   * @param direction The directionality context of the table (ltr/rtl); affects column positioning
   *     by reversing left/right positions.
   * @param _isBrowser Whether the table is currently being rendered on the server or the client.
   * @param _needsPositionStickyOnElement Whether we need to specify position: sticky on cells
   *     using inline styles. If false, it is assumed that position: sticky is included in
   *     the component stylesheet for _stickCellCss.
   */
  function StickyStyler(_isNativeHtmlTable, _stickCellCss, direction,
  /**
   * @deprecated `_coalescedStyleScheduler` parameter to become required.
   * @breaking-change 11.0.0
   */
  _coalescedStyleScheduler) {
    var _isBrowser = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;

    var _needsPositionStickyOnElement = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : true;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, StickyStyler);

    this._isNativeHtmlTable = _isNativeHtmlTable;
    this._stickCellCss = _stickCellCss;
    this.direction = direction;
    this._coalescedStyleScheduler = _coalescedStyleScheduler;
    this._isBrowser = _isBrowser;
    this._needsPositionStickyOnElement = _needsPositionStickyOnElement;
  }
  /**
   * Clears the sticky positioning styles from the row and its cells by resetting the `position`
   * style, setting the zIndex to 0, and unsetting each provided sticky direction.
   * @param rows The list of rows that should be cleared from sticking in the provided directions
   * @param stickyDirections The directions that should no longer be set as sticky on the rows.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(StickyStyler, [{
    key: "clearStickyPositioning",
    value: function clearStickyPositioning(rows, stickyDirections) {
      var _this7 = this;

      var elementsToClear = [];

      var _iterator4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(rows),
          _step4;

      try {
        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
          var row = _step4.value;

          // If the row isn't an element (e.g. if it's an `ng-container`),
          // it won't have inline styles or `children` so we skip it.
          if (row.nodeType !== row.ELEMENT_NODE) {
            continue;
          }

          elementsToClear.push(row);

          for (var i = 0; i < row.children.length; i++) {
            elementsToClear.push(row.children[i]);
          }
        } // Coalesce with sticky row/column updates (and potentially other changes like column resize).

      } catch (err) {
        _iterator4.e(err);
      } finally {
        _iterator4.f();
      }

      this._scheduleStyleChanges(function () {
        var _iterator5 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(elementsToClear),
            _step5;

        try {
          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
            var element = _step5.value;

            _this7._removeStickyStyle(element, stickyDirections);
          }
        } catch (err) {
          _iterator5.e(err);
        } finally {
          _iterator5.f();
        }
      });
    }
    /**
     * Applies sticky left and right positions to the cells of each row according to the sticky
     * states of the rendered column definitions.
     * @param rows The rows that should have its set of cells stuck according to the sticky states.
     * @param stickyStartStates A list of boolean states where each state represents whether the cell
     *     in this index position should be stuck to the start of the row.
     * @param stickyEndStates A list of boolean states where each state represents whether the cell
     *     in this index position should be stuck to the end of the row.
     */

  }, {
    key: "updateStickyColumns",
    value: function updateStickyColumns(rows, stickyStartStates, stickyEndStates) {
      var _this8 = this;

      if (!rows.length || !this._isBrowser || !(stickyStartStates.some(function (state) {
        return state;
      }) || stickyEndStates.some(function (state) {
        return state;
      }))) {
        return;
      }

      var firstRow = rows[0];
      var numCells = firstRow.children.length;

      var cellWidths = this._getCellWidths(firstRow);

      var startPositions = this._getStickyStartColumnPositions(cellWidths, stickyStartStates);

      var endPositions = this._getStickyEndColumnPositions(cellWidths, stickyEndStates); // Coalesce with sticky row updates (and potentially other changes like column resize).


      this._scheduleStyleChanges(function () {
        var isRtl = _this8.direction === 'rtl';
        var start = isRtl ? 'right' : 'left';
        var end = isRtl ? 'left' : 'right';

        var _iterator6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(rows),
            _step6;

        try {
          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
            var row = _step6.value;

            for (var i = 0; i < numCells; i++) {
              var cell = row.children[i];

              if (stickyStartStates[i]) {
                _this8._addStickyStyle(cell, start, startPositions[i]);
              }

              if (stickyEndStates[i]) {
                _this8._addStickyStyle(cell, end, endPositions[i]);
              }
            }
          }
        } catch (err) {
          _iterator6.e(err);
        } finally {
          _iterator6.f();
        }
      });
    }
    /**
     * Applies sticky positioning to the row's cells if using the native table layout, and to the
     * row itself otherwise.
     * @param rowsToStick The list of rows that should be stuck according to their corresponding
     *     sticky state and to the provided top or bottom position.
     * @param stickyStates A list of boolean states where each state represents whether the row
     *     should be stuck in the particular top or bottom position.
     * @param position The position direction in which the row should be stuck if that row should be
     *     sticky.
     *
     */

  }, {
    key: "stickRows",
    value: function stickRows(rowsToStick, stickyStates, position) {
      var _this9 = this;

      // Since we can't measure the rows on the server, we can't stick the rows properly.
      if (!this._isBrowser) {
        return;
      } // If positioning the rows to the bottom, reverse their order when evaluating the sticky
      // position such that the last row stuck will be "bottom: 0px" and so on. Note that the
      // sticky states need to be reversed as well.


      var rows = position === 'bottom' ? rowsToStick.slice().reverse() : rowsToStick;
      var states = position === 'bottom' ? stickyStates.slice().reverse() : stickyStates; // Measure row heights all at once before adding sticky styles to reduce layout thrashing.

      var stickyHeights = [];
      var elementsToStick = [];

      for (var rowIndex = 0, stickyHeight = 0; rowIndex < rows.length; rowIndex++) {
        stickyHeights[rowIndex] = stickyHeight;

        if (!states[rowIndex]) {
          continue;
        }

        var row = rows[rowIndex];
        elementsToStick[rowIndex] = this._isNativeHtmlTable ? Array.from(row.children) : [row];

        if (rowIndex !== rows.length - 1) {
          stickyHeight += row.getBoundingClientRect().height;
        }
      } // Coalesce with other sticky row updates (top/bottom), sticky columns updates
      // (and potentially other changes like column resize).


      this._scheduleStyleChanges(function () {
        for (var _rowIndex = 0; _rowIndex < rows.length; _rowIndex++) {
          if (!states[_rowIndex]) {
            continue;
          }

          var height = stickyHeights[_rowIndex];

          var _iterator7 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(elementsToStick[_rowIndex]),
              _step7;

          try {
            for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
              var element = _step7.value;

              _this9._addStickyStyle(element, position, height);
            }
          } catch (err) {
            _iterator7.e(err);
          } finally {
            _iterator7.f();
          }
        }
      });
    }
    /**
     * When using the native table in Safari, sticky footer cells do not stick. The only way to stick
     * footer rows is to apply sticky styling to the tfoot container. This should only be done if
     * all footer rows are sticky. If not all footer rows are sticky, remove sticky positioning from
     * the tfoot element.
     */

  }, {
    key: "updateStickyFooterContainer",
    value: function updateStickyFooterContainer(tableElement, stickyStates) {
      var _this10 = this;

      if (!this._isNativeHtmlTable) {
        return;
      }

      var tfoot = tableElement.querySelector('tfoot'); // Coalesce with other sticky updates (and potentially other changes like column resize).

      this._scheduleStyleChanges(function () {
        if (stickyStates.some(function (state) {
          return !state;
        })) {
          _this10._removeStickyStyle(tfoot, ['bottom']);
        } else {
          _this10._addStickyStyle(tfoot, 'bottom', 0);
        }
      });
    }
    /**
     * Removes the sticky style on the element by removing the sticky cell CSS class, re-evaluating
     * the zIndex, removing each of the provided sticky directions, and removing the
     * sticky position if there are no more directions.
     */

  }, {
    key: "_removeStickyStyle",
    value: function _removeStickyStyle(element, stickyDirections) {
      var _iterator8 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(stickyDirections),
          _step8;

      try {
        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
          var dir = _step8.value;
          element.style[dir] = '';
        } // If the element no longer has any more sticky directions, remove sticky positioning and
        // the sticky CSS class.
        // Short-circuit checking element.style[dir] for stickyDirections as they
        // were already removed above.

      } catch (err) {
        _iterator8.e(err);
      } finally {
        _iterator8.f();
      }

      var hasDirection = STICKY_DIRECTIONS.some(function (dir) {
        return stickyDirections.indexOf(dir) === -1 && element.style[dir];
      });

      if (hasDirection) {
        element.style.zIndex = this._getCalculatedZIndex(element);
      } else {
        // When not hasDirection, _getCalculatedZIndex will always return ''.
        element.style.zIndex = '';

        if (this._needsPositionStickyOnElement) {
          element.style.position = '';
        }

        element.classList.remove(this._stickCellCss);
      }
    }
    /**
     * Adds the sticky styling to the element by adding the sticky style class, changing position
     * to be sticky (and -webkit-sticky), setting the appropriate zIndex, and adding a sticky
     * direction and value.
     */

  }, {
    key: "_addStickyStyle",
    value: function _addStickyStyle(element, dir, dirValue) {
      element.classList.add(this._stickCellCss);
      element.style[dir] = "".concat(dirValue, "px");
      element.style.zIndex = this._getCalculatedZIndex(element);

      if (this._needsPositionStickyOnElement) {
        element.style.cssText += 'position: -webkit-sticky; position: sticky; ';
      }
    }
    /**
     * Calculate what the z-index should be for the element, depending on what directions (top,
     * bottom, left, right) have been set. It should be true that elements with a top direction
     * should have the highest index since these are elements like a table header. If any of those
     * elements are also sticky in another direction, then they should appear above other elements
     * that are only sticky top (e.g. a sticky column on a sticky header). Bottom-sticky elements
     * (e.g. footer rows) should then be next in the ordering such that they are below the header
     * but above any non-sticky elements. Finally, left/right sticky elements (e.g. sticky columns)
     * should minimally increment so that they are above non-sticky elements but below top and bottom
     * elements.
     */

  }, {
    key: "_getCalculatedZIndex",
    value: function _getCalculatedZIndex(element) {
      var zIndexIncrements = {
        top: 100,
        bottom: 10,
        left: 1,
        right: 1
      };
      var zIndex = 0; // Use `Iterable` instead of `Array` because TypeScript, as of 3.6.3,
      // loses the array generic type in the `for of`. But we *also* have to use `Array` because
      // typescript won't iterate over an `Iterable` unless you compile with `--downlevelIteration`

      var _iterator9 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(STICKY_DIRECTIONS),
          _step9;

      try {
        for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
          var dir = _step9.value;

          if (element.style[dir]) {
            zIndex += zIndexIncrements[dir];
          }
        }
      } catch (err) {
        _iterator9.e(err);
      } finally {
        _iterator9.f();
      }

      return zIndex ? "".concat(zIndex) : '';
    }
    /** Gets the widths for each cell in the provided row. */

  }, {
    key: "_getCellWidths",
    value: function _getCellWidths(row) {
      var cellWidths = [];
      var firstRowCells = row.children;

      for (var i = 0; i < firstRowCells.length; i++) {
        var cell = firstRowCells[i];
        cellWidths.push(cell.getBoundingClientRect().width);
      }

      return cellWidths;
    }
    /**
     * Determines the left and right positions of each sticky column cell, which will be the
     * accumulation of all sticky column cell widths to the left and right, respectively.
     * Non-sticky cells do not need to have a value set since their positions will not be applied.
     */

  }, {
    key: "_getStickyStartColumnPositions",
    value: function _getStickyStartColumnPositions(widths, stickyStates) {
      var positions = [];
      var nextPosition = 0;

      for (var i = 0; i < widths.length; i++) {
        if (stickyStates[i]) {
          positions[i] = nextPosition;
          nextPosition += widths[i];
        }
      }

      return positions;
    }
    /**
     * Determines the left and right positions of each sticky column cell, which will be the
     * accumulation of all sticky column cell widths to the left and right, respectively.
     * Non-sticky cells do not need to have a value set since their positions will not be applied.
     */

  }, {
    key: "_getStickyEndColumnPositions",
    value: function _getStickyEndColumnPositions(widths, stickyStates) {
      var positions = [];
      var nextPosition = 0;

      for (var i = widths.length; i > 0; i--) {
        if (stickyStates[i]) {
          positions[i] = nextPosition;
          nextPosition += widths[i];
        }
      }

      return positions;
    }
    /**
     * Schedules styles to be applied when the style scheduler deems appropriate.
     * @breaking-change 11.0.0 This method can be removed in favor of calling
     * `CoalescedStyleScheduler.schedule` directly once the scheduler is a required parameter.
     */

  }, {
    key: "_scheduleStyleChanges",
    value: function _scheduleStyleChanges(changes) {
      if (this._coalescedStyleScheduler) {
        this._coalescedStyleScheduler.schedule(changes);
      } else {
        changes();
      }
    }
  }]);

  return StickyStyler;
}();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Returns an error to be thrown when attempting to find an unexisting column.
 * @param id Id whose lookup failed.
 * @docs-private
 */


function getTableUnknownColumnError(id) {
  return Error("Could not find column with id \"".concat(id, "\"."));
}
/**
 * Returns an error to be thrown when two column definitions have the same name.
 * @docs-private
 */


function getTableDuplicateColumnNameError(name) {
  return Error("Duplicate column definition name provided: \"".concat(name, "\"."));
}
/**
 * Returns an error to be thrown when there are multiple rows that are missing a when function.
 * @docs-private
 */


function getTableMultipleDefaultRowDefsError() {
  return Error("There can only be one default row without a when predicate function.");
}
/**
 * Returns an error to be thrown when there are no matching row defs for a particular set of data.
 * @docs-private
 */


function getTableMissingMatchingRowDefError(data) {
  return Error("Could not find a matching row definition for the" + "provided row data: ".concat(JSON.stringify(data)));
}
/**
 * Returns an error to be thrown when there is no row definitions present in the content.
 * @docs-private
 */


function getTableMissingRowDefsError() {
  return Error('Missing definitions for header, footer, and row; ' + 'cannot determine which columns should be rendered.');
}
/**
 * Returns an error to be thrown when the data source does not match the compatible types.
 * @docs-private
 */


function getTableUnknownDataSourceError() {
  return Error("Provided data source did not match an array, Observable, or DataSource");
}
/**
 * Returns an error to be thrown when the text column cannot find a parent table to inject.
 * @docs-private
 */


function getTableTextColumnMissingParentTableError() {
  return Error("Text column could not find a parent table for registration.");
}
/**
 * Returns an error to be thrown when a table text column doesn't have a name.
 * @docs-private
 */


function getTableTextColumnMissingNameError() {
  return Error("Table text column must have a name.");
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Provides a handle for the table to grab the view container's ng-container to insert data rows.
 * @docs-private
 */


var DataRowOutlet = function DataRowOutlet(viewContainer, elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, DataRowOutlet);

  this.viewContainer = viewContainer;
  this.elementRef = elementRef;
};

DataRowOutlet.ɵfac = function DataRowOutlet_Factory(t) {
  return new (t || DataRowOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]));
};

DataRowOutlet.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: DataRowOutlet,
  selectors: [["", "rowOutlet", ""]]
});

DataRowOutlet.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](DataRowOutlet, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[rowOutlet]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }];
  }, null);
})();
/**
 * Provides a handle for the table to grab the view container's ng-container to insert the header.
 * @docs-private
 */


var HeaderRowOutlet = function HeaderRowOutlet(viewContainer, elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, HeaderRowOutlet);

  this.viewContainer = viewContainer;
  this.elementRef = elementRef;
};

HeaderRowOutlet.ɵfac = function HeaderRowOutlet_Factory(t) {
  return new (t || HeaderRowOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]));
};

HeaderRowOutlet.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: HeaderRowOutlet,
  selectors: [["", "headerRowOutlet", ""]]
});

HeaderRowOutlet.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](HeaderRowOutlet, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[headerRowOutlet]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }];
  }, null);
})();
/**
 * Provides a handle for the table to grab the view container's ng-container to insert the footer.
 * @docs-private
 */


var FooterRowOutlet = function FooterRowOutlet(viewContainer, elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, FooterRowOutlet);

  this.viewContainer = viewContainer;
  this.elementRef = elementRef;
};

FooterRowOutlet.ɵfac = function FooterRowOutlet_Factory(t) {
  return new (t || FooterRowOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]));
};

FooterRowOutlet.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: FooterRowOutlet,
  selectors: [["", "footerRowOutlet", ""]]
});

FooterRowOutlet.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](FooterRowOutlet, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[footerRowOutlet]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }];
  }, null);
})();
/**
 * Provides a handle for the table to grab the view
 * container's ng-container to insert the no data row.
 * @docs-private
 */


var NoDataRowOutlet = function NoDataRowOutlet(viewContainer, elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, NoDataRowOutlet);

  this.viewContainer = viewContainer;
  this.elementRef = elementRef;
};

NoDataRowOutlet.ɵfac = function NoDataRowOutlet_Factory(t) {
  return new (t || NoDataRowOutlet)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]));
};

NoDataRowOutlet.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineDirective"]({
  type: NoDataRowOutlet,
  selectors: [["", "noDataRowOutlet", ""]]
});

NoDataRowOutlet.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](NoDataRowOutlet, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Directive"],
    args: [{
      selector: '[noDataRowOutlet]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewContainerRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }];
  }, null);
})();
/**
 * The table template that can be used by the mat-table. Should not be used outside of the
 * material library.
 * @docs-private
 */


var CDK_TABLE_TEMPLATE = // Note that according to MDN, the `caption` element has to be projected as the **first**
// element in the table. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption
"\n  <ng-content select=\"caption\"></ng-content>\n  <ng-content select=\"colgroup, col\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container noDataRowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n";
/**
 * Class used to conveniently type the embedded view ref for rows with a context.
 * @docs-private
 */

var RowViewRef = /*#__PURE__*/function (_EmbeddedViewRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_6__["default"])(RowViewRef, _EmbeddedViewRef);

  var _super11 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_7__["default"])(RowViewRef);

  function RowViewRef() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, RowViewRef);

    return _super11.apply(this, arguments);
  }

  return RowViewRef;
}(_angular_core__WEBPACK_IMPORTED_MODULE_11__["EmbeddedViewRef"]);
/**
 * A data table that can render a header row, data rows, and a footer row.
 * Uses the dataSource input to determine the data to be rendered. The data can be provided either
 * as a data array, an Observable stream that emits the data array to render, or a DataSource with a
 * connect function that will return an Observable stream that emits the data array to render.
 */


var CdkTable = /*#__PURE__*/function () {
  function CdkTable(_differs, _changeDetectorRef, _elementRef, role, _dir, _document, _platform,
  /**
   * @deprecated `_coalescedStyleScheduler`, `_viewRepeater` and `_viewportRuler`
   *    parameters to become required.
   * @breaking-change 11.0.0
   */
  _viewRepeater, _coalescedStyleScheduler) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkTable);

    this._differs = _differs;
    this._changeDetectorRef = _changeDetectorRef;
    this._elementRef = _elementRef;
    this._dir = _dir;
    this._platform = _platform;
    this._viewRepeater = _viewRepeater;
    this._coalescedStyleScheduler = _coalescedStyleScheduler;
    /** Subject that emits when the component has been destroyed. */

    this._onDestroy = new rxjs__WEBPACK_IMPORTED_MODULE_14__["Subject"]();
    /**
     * Map of all the user's defined columns (header, data, and footer cell template) identified by
     * name. Collection populated by the column definitions gathered by `ContentChildren` as well as
     * any custom column definitions added to `_customColumnDefs`.
     */

    this._columnDefsByName = new Map();
    /**
     * Column definitions that were defined outside of the direct content children of the table.
     * These will be defined when, e.g., creating a wrapper around the cdkTable that has
     * column definitions as *its* content child.
     */

    this._customColumnDefs = new Set();
    /**
     * Data row definitions that were defined outside of the direct content children of the table.
     * These will be defined when, e.g., creating a wrapper around the cdkTable that has
     * built-in data rows as *its* content child.
     */

    this._customRowDefs = new Set();
    /**
     * Header row definitions that were defined outside of the direct content children of the table.
     * These will be defined when, e.g., creating a wrapper around the cdkTable that has
     * built-in header rows as *its* content child.
     */

    this._customHeaderRowDefs = new Set();
    /**
     * Footer row definitions that were defined outside of the direct content children of the table.
     * These will be defined when, e.g., creating a wrapper around the cdkTable that has a
     * built-in footer row as *its* content child.
     */

    this._customFooterRowDefs = new Set();
    /**
     * Whether the header row definition has been changed. Triggers an update to the header row after
     * content is checked. Initialized as true so that the table renders the initial set of rows.
     */

    this._headerRowDefChanged = true;
    /**
     * Whether the footer row definition has been changed. Triggers an update to the footer row after
     * content is checked. Initialized as true so that the table renders the initial set of rows.
     */

    this._footerRowDefChanged = true;
    /**
     * Cache of the latest rendered `RenderRow` objects as a map for easy retrieval when constructing
     * a new list of `RenderRow` objects for rendering rows. Since the new list is constructed with
     * the cached `RenderRow` objects when possible, the row identity is preserved when the data
     * and row template matches, which allows the `IterableDiffer` to check rows by reference
     * and understand which rows are added/moved/removed.
     *
     * Implemented as a map of maps where the first key is the `data: T` object and the second is the
     * `CdkRowDef<T>` object. With the two keys, the cache points to a `RenderRow<T>` object that
     * contains an array of created pairs. The array is necessary to handle cases where the data
     * array contains multiple duplicate data objects and each instantiated `RenderRow` must be
     * stored.
     */

    this._cachedRenderRowsMap = new Map();
    /**
     * CSS class added to any row or cell that has sticky positioning applied. May be overriden by
     * table subclasses.
     */

    this.stickyCssClass = 'cdk-table-sticky';
    /**
     * Whether to manually add positon: sticky to all sticky cell elements. Not needed if
     * the position is set in a selector associated with the value of stickyCssClass. May be
     * overridden by table subclasses
     */

    this.needsPositionStickyOnElement = true;
    /** Whether the no data row is currently showing anything. */

    this._isShowingNoDataRow = false;
    this._multiTemplateDataRows = false; // TODO(andrewseguin): Remove max value as the end index
    //   and instead calculate the view on init and scroll.

    /**
     * Stream containing the latest information on what rows are being displayed on screen.
     * Can be used by the data source to as a heuristic of what data should be provided.
     *
     * @docs-private
     */

    this.viewChange = new rxjs__WEBPACK_IMPORTED_MODULE_14__["BehaviorSubject"]({
      start: 0,
      end: Number.MAX_VALUE
    });

    if (!role) {
      this._elementRef.nativeElement.setAttribute('role', 'grid');
    }

    this._document = _document;
    this._isNativeHtmlTable = this._elementRef.nativeElement.nodeName === 'TABLE';
  }
  /**
   * Tracking function that will be used to check the differences in data changes. Used similarly
   * to `ngFor` `trackBy` function. Optimize row operations by identifying a row based on its data
   * relative to the function to know if a row should be added/removed/moved.
   * Accepts a function that takes two parameters, `index` and `item`.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CdkTable, [{
    key: "trackBy",
    get: function get() {
      return this._trackByFn;
    },
    set: function set(fn) {
      if ((typeof ngDevMode === 'undefined' || ngDevMode) && fn != null && typeof fn !== 'function') {
        console.warn("trackBy must be a function, but received ".concat(JSON.stringify(fn), "."));
      }

      this._trackByFn = fn;
    }
    /**
     * The table's source of data, which can be provided in three ways (in order of complexity):
     *   - Simple data array (each object represents one table row)
     *   - Stream that emits a data array each time the array changes
     *   - `DataSource` object that implements the connect/disconnect interface.
     *
     * If a data array is provided, the table must be notified when the array's objects are
     * added, removed, or moved. This can be done by calling the `renderRows()` function which will
     * render the diff since the last table render. If the data array reference is changed, the table
     * will automatically trigger an update to the rows.
     *
     * When providing an Observable stream, the table will trigger an update automatically when the
     * stream emits a new array of data.
     *
     * Finally, when providing a `DataSource` object, the table will use the Observable stream
     * provided by the connect function and trigger updates when that stream emits new data array
     * values. During the table's ngOnDestroy or when the data source is removed from the table, the
     * table will call the DataSource's `disconnect` function (may be useful for cleaning up any
     * subscriptions registered during the connect process).
     */

  }, {
    key: "dataSource",
    get: function get() {
      return this._dataSource;
    },
    set: function set(dataSource) {
      if (this._dataSource !== dataSource) {
        this._switchDataSource(dataSource);
      }
    }
    /**
     * Whether to allow multiple rows per data object by evaluating which rows evaluate their 'when'
     * predicate to true. If `multiTemplateDataRows` is false, which is the default value, then each
     * dataobject will render the first row that evaluates its when predicate to true, in the order
     * defined in the table, or otherwise the default row which does not have a when predicate.
     */

  }, {
    key: "multiTemplateDataRows",
    get: function get() {
      return this._multiTemplateDataRows;
    },
    set: function set(v) {
      this._multiTemplateDataRows = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_9__["coerceBooleanProperty"])(v); // In Ivy if this value is set via a static attribute (e.g. <table multiTemplateDataRows>),
      // this setter will be invoked before the row outlet has been defined hence the null check.

      if (this._rowOutlet && this._rowOutlet.viewContainer.length) {
        this._forceRenderDataRows();

        this.updateStickyColumnStyles();
      }
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this11 = this;

      this._setupStickyStyler();

      if (this._isNativeHtmlTable) {
        this._applyNativeTableSections();
      } // Set up the trackBy function so that it uses the `RenderRow` as its identity by default. If
      // the user has provided a custom trackBy, return the result of that function as evaluated
      // with the values of the `RenderRow`'s data and index.


      this._dataDiffer = this._differs.find([]).create(function (_i, dataRow) {
        return _this11.trackBy ? _this11.trackBy(dataRow.dataIndex, dataRow.data) : dataRow;
      });
    }
  }, {
    key: "ngAfterContentChecked",
    value: function ngAfterContentChecked() {
      // Cache the row and column definitions gathered by ContentChildren and programmatic injection.
      this._cacheRowDefs();

      this._cacheColumnDefs(); // Make sure that the user has at least added header, footer, or data row def.


      if (!this._headerRowDefs.length && !this._footerRowDefs.length && !this._rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getTableMissingRowDefsError();
      } // Render updates if the list of columns have been changed for the header, row, or footer defs.


      var columnsChanged = this._renderUpdatedColumns();

      var stickyColumnStyleUpdateNeeded = columnsChanged || this._headerRowDefChanged || this._footerRowDefChanged; // If the header row definition has been changed, trigger a render to the header row.

      if (this._headerRowDefChanged) {
        this._forceRenderHeaderRows();

        this._headerRowDefChanged = false;
      } // If the footer row definition has been changed, trigger a render to the footer row.


      if (this._footerRowDefChanged) {
        this._forceRenderFooterRows();

        this._footerRowDefChanged = false;
      } // If there is a data source and row definitions, connect to the data source unless a
      // connection has already been made.


      if (this.dataSource && this._rowDefs.length > 0 && !this._renderChangeSubscription) {
        this._observeRenderChanges();
      } else if (stickyColumnStyleUpdateNeeded) {
        // In the above case, _observeRenderChanges will result in updateStickyColumnStyles being
        // called when it row data arrives. Otherwise, we need to call it proactively.
        this.updateStickyColumnStyles();
      }

      this._checkStickyStates();
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._rowOutlet.viewContainer.clear();

      this._noDataRowOutlet.viewContainer.clear();

      this._headerRowOutlet.viewContainer.clear();

      this._footerRowOutlet.viewContainer.clear();

      this._cachedRenderRowsMap.clear();

      this._onDestroy.next();

      this._onDestroy.complete();

      if (Object(_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["isDataSource"])(this.dataSource)) {
        this.dataSource.disconnect(this);
      }
    }
    /**
     * Renders rows based on the table's latest set of data, which was either provided directly as an
     * input or retrieved through an Observable stream (directly or from a DataSource).
     * Checks for differences in the data since the last diff to perform only the necessary
     * changes (add/remove/move rows).
     *
     * If the table's data source is a DataSource or Observable, this will be invoked automatically
     * each time the provided Observable stream emits a new data array. Otherwise if your data is
     * an array, this function will need to be called to render any changes.
     */

  }, {
    key: "renderRows",
    value: function renderRows() {
      var _this12 = this;

      this._renderRows = this._getAllRenderRows();

      var changes = this._dataDiffer.diff(this._renderRows);

      if (!changes) {
        this._updateNoDataRow();

        return;
      }

      var viewContainer = this._rowOutlet.viewContainer; // @breaking-change 11.0.0 Remove null check for `_viewRepeater` and the
      // `else` clause once `_viewRepeater` is turned into a required parameter.

      if (this._viewRepeater) {
        this._viewRepeater.applyChanges(changes, viewContainer, function (record, _adjustedPreviousIndex, currentIndex) {
          return _this12._getEmbeddedViewArgs(record.item, currentIndex);
        }, function (record) {
          return record.item.data;
        }, function (change) {
          if (change.operation === 1
          /* INSERTED */
          && change.context) {
            _this12._renderCellTemplateForItem(change.record.item.rowDef, change.context);
          }
        });
      } else {
        changes.forEachOperation(function (record, prevIndex, currentIndex) {
          if (record.previousIndex == null) {
            var renderRow = record.item;
            var rowDef = renderRow.rowDef;
            var context = {
              $implicit: renderRow.data
            };

            _this12._renderRow(_this12._rowOutlet, rowDef, currentIndex, context);
          } else if (currentIndex == null) {
            viewContainer.remove(prevIndex);
          } else {
            var view = viewContainer.get(prevIndex);
            viewContainer.move(view, currentIndex);
          }
        });
      } // Update the meta context of a row's context data (index, count, first, last, ...)


      this._updateRowIndexContext(); // Update rows that did not get added/removed/moved but may have had their identity changed,
      // e.g. if trackBy matched data on some property but the actual data reference changed.


      changes.forEachIdentityChange(function (record) {
        var rowView = viewContainer.get(record.currentIndex);
        rowView.context.$implicit = record.item.data;
      });

      this._updateNoDataRow();

      this.updateStickyColumnStyles();
    }
    /** Adds a column definition that was not included as part of the content children. */

  }, {
    key: "addColumnDef",
    value: function addColumnDef(columnDef) {
      this._customColumnDefs.add(columnDef);
    }
    /** Removes a column definition that was not included as part of the content children. */

  }, {
    key: "removeColumnDef",
    value: function removeColumnDef(columnDef) {
      this._customColumnDefs.delete(columnDef);
    }
    /** Adds a row definition that was not included as part of the content children. */

  }, {
    key: "addRowDef",
    value: function addRowDef(rowDef) {
      this._customRowDefs.add(rowDef);
    }
    /** Removes a row definition that was not included as part of the content children. */

  }, {
    key: "removeRowDef",
    value: function removeRowDef(rowDef) {
      this._customRowDefs.delete(rowDef);
    }
    /** Adds a header row definition that was not included as part of the content children. */

  }, {
    key: "addHeaderRowDef",
    value: function addHeaderRowDef(headerRowDef) {
      this._customHeaderRowDefs.add(headerRowDef);

      this._headerRowDefChanged = true;
    }
    /** Removes a header row definition that was not included as part of the content children. */

  }, {
    key: "removeHeaderRowDef",
    value: function removeHeaderRowDef(headerRowDef) {
      this._customHeaderRowDefs.delete(headerRowDef);

      this._headerRowDefChanged = true;
    }
    /** Adds a footer row definition that was not included as part of the content children. */

  }, {
    key: "addFooterRowDef",
    value: function addFooterRowDef(footerRowDef) {
      this._customFooterRowDefs.add(footerRowDef);

      this._footerRowDefChanged = true;
    }
    /** Removes a footer row definition that was not included as part of the content children. */

  }, {
    key: "removeFooterRowDef",
    value: function removeFooterRowDef(footerRowDef) {
      this._customFooterRowDefs.delete(footerRowDef);

      this._footerRowDefChanged = true;
    }
    /**
     * Updates the header sticky styles. First resets all applied styles with respect to the cells
     * sticking to the top. Then, evaluating which cells need to be stuck to the top. This is
     * automatically called when the header row changes its displayed set of columns, or if its
     * sticky input changes. May be called manually for cases where the cell content changes outside
     * of these events.
     */

  }, {
    key: "updateStickyHeaderRowStyles",
    value: function updateStickyHeaderRowStyles() {
      var headerRows = this._getRenderedRows(this._headerRowOutlet);

      var tableElement = this._elementRef.nativeElement; // Hide the thead element if there are no header rows. This is necessary to satisfy
      // overzealous a11y checkers that fail because the `rowgroup` element does not contain
      // required child `row`.

      var thead = tableElement.querySelector('thead');

      if (thead) {
        thead.style.display = headerRows.length ? '' : 'none';
      }

      var stickyStates = this._headerRowDefs.map(function (def) {
        return def.sticky;
      });

      this._stickyStyler.clearStickyPositioning(headerRows, ['top']);

      this._stickyStyler.stickRows(headerRows, stickyStates, 'top'); // Reset the dirty state of the sticky input change since it has been used.


      this._headerRowDefs.forEach(function (def) {
        return def.resetStickyChanged();
      });
    }
    /**
     * Updates the footer sticky styles. First resets all applied styles with respect to the cells
     * sticking to the bottom. Then, evaluating which cells need to be stuck to the bottom. This is
     * automatically called when the footer row changes its displayed set of columns, or if its
     * sticky input changes. May be called manually for cases where the cell content changes outside
     * of these events.
     */

  }, {
    key: "updateStickyFooterRowStyles",
    value: function updateStickyFooterRowStyles() {
      var footerRows = this._getRenderedRows(this._footerRowOutlet);

      var tableElement = this._elementRef.nativeElement; // Hide the tfoot element if there are no footer rows. This is necessary to satisfy
      // overzealous a11y checkers that fail because the `rowgroup` element does not contain
      // required child `row`.

      var tfoot = tableElement.querySelector('tfoot');

      if (tfoot) {
        tfoot.style.display = footerRows.length ? '' : 'none';
      }

      var stickyStates = this._footerRowDefs.map(function (def) {
        return def.sticky;
      });

      this._stickyStyler.clearStickyPositioning(footerRows, ['bottom']);

      this._stickyStyler.stickRows(footerRows, stickyStates, 'bottom');

      this._stickyStyler.updateStickyFooterContainer(this._elementRef.nativeElement, stickyStates); // Reset the dirty state of the sticky input change since it has been used.


      this._footerRowDefs.forEach(function (def) {
        return def.resetStickyChanged();
      });
    }
    /**
     * Updates the column sticky styles. First resets all applied styles with respect to the cells
     * sticking to the left and right. Then sticky styles are added for the left and right according
     * to the column definitions for each cell in each row. This is automatically called when
     * the data source provides a new set of data or when a column definition changes its sticky
     * input. May be called manually for cases where the cell content changes outside of these events.
     */

  }, {
    key: "updateStickyColumnStyles",
    value: function updateStickyColumnStyles() {
      var _this13 = this;

      var headerRows = this._getRenderedRows(this._headerRowOutlet);

      var dataRows = this._getRenderedRows(this._rowOutlet);

      var footerRows = this._getRenderedRows(this._footerRowOutlet); // Clear the left and right positioning from all columns in the table across all rows since
      // sticky columns span across all table sections (header, data, footer)


      this._stickyStyler.clearStickyPositioning([].concat(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(headerRows), Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(dataRows), Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(footerRows)), ['left', 'right']); // Update the sticky styles for each header row depending on the def's sticky state


      headerRows.forEach(function (headerRow, i) {
        _this13._addStickyColumnStyles([headerRow], _this13._headerRowDefs[i]);
      }); // Update the sticky styles for each data row depending on its def's sticky state

      this._rowDefs.forEach(function (rowDef) {
        // Collect all the rows rendered with this row definition.
        var rows = [];

        for (var i = 0; i < dataRows.length; i++) {
          if (_this13._renderRows[i].rowDef === rowDef) {
            rows.push(dataRows[i]);
          }
        }

        _this13._addStickyColumnStyles(rows, rowDef);
      }); // Update the sticky styles for each footer row depending on the def's sticky state


      footerRows.forEach(function (footerRow, i) {
        _this13._addStickyColumnStyles([footerRow], _this13._footerRowDefs[i]);
      }); // Reset the dirty state of the sticky input change since it has been used.

      Array.from(this._columnDefsByName.values()).forEach(function (def) {
        return def.resetStickyChanged();
      });
    }
    /**
     * Get the list of RenderRow objects to render according to the current list of data and defined
     * row definitions. If the previous list already contained a particular pair, it should be reused
     * so that the differ equates their references.
     */

  }, {
    key: "_getAllRenderRows",
    value: function _getAllRenderRows() {
      var renderRows = []; // Store the cache and create a new one. Any re-used RenderRow objects will be moved into the
      // new cache while unused ones can be picked up by garbage collection.

      var prevCachedRenderRows = this._cachedRenderRowsMap;
      this._cachedRenderRowsMap = new Map(); // For each data object, get the list of rows that should be rendered, represented by the
      // respective `RenderRow` object which is the pair of `data` and `CdkRowDef`.

      for (var i = 0; i < this._data.length; i++) {
        var data = this._data[i];

        var renderRowsForData = this._getRenderRowsForData(data, i, prevCachedRenderRows.get(data));

        if (!this._cachedRenderRowsMap.has(data)) {
          this._cachedRenderRowsMap.set(data, new WeakMap());
        }

        for (var j = 0; j < renderRowsForData.length; j++) {
          var renderRow = renderRowsForData[j];

          var cache = this._cachedRenderRowsMap.get(renderRow.data);

          if (cache.has(renderRow.rowDef)) {
            cache.get(renderRow.rowDef).push(renderRow);
          } else {
            cache.set(renderRow.rowDef, [renderRow]);
          }

          renderRows.push(renderRow);
        }
      }

      return renderRows;
    }
    /**
     * Gets a list of `RenderRow<T>` for the provided data object and any `CdkRowDef` objects that
     * should be rendered for this data. Reuses the cached RenderRow objects if they match the same
     * `(T, CdkRowDef)` pair.
     */

  }, {
    key: "_getRenderRowsForData",
    value: function _getRenderRowsForData(data, dataIndex, cache) {
      var rowDefs = this._getRowDefs(data, dataIndex);

      return rowDefs.map(function (rowDef) {
        var cachedRenderRows = cache && cache.has(rowDef) ? cache.get(rowDef) : [];

        if (cachedRenderRows.length) {
          var dataRow = cachedRenderRows.shift();
          dataRow.dataIndex = dataIndex;
          return dataRow;
        } else {
          return {
            data: data,
            rowDef: rowDef,
            dataIndex: dataIndex
          };
        }
      });
    }
    /** Update the map containing the content's column definitions. */

  }, {
    key: "_cacheColumnDefs",
    value: function _cacheColumnDefs() {
      var _this14 = this;

      this._columnDefsByName.clear();

      var columnDefs = mergeArrayAndSet(this._getOwnDefs(this._contentColumnDefs), this._customColumnDefs);
      columnDefs.forEach(function (columnDef) {
        if (_this14._columnDefsByName.has(columnDef.name) && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throw getTableDuplicateColumnNameError(columnDef.name);
        }

        _this14._columnDefsByName.set(columnDef.name, columnDef);
      });
    }
    /** Update the list of all available row definitions that can be used. */

  }, {
    key: "_cacheRowDefs",
    value: function _cacheRowDefs() {
      this._headerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentHeaderRowDefs), this._customHeaderRowDefs);
      this._footerRowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentFooterRowDefs), this._customFooterRowDefs);
      this._rowDefs = mergeArrayAndSet(this._getOwnDefs(this._contentRowDefs), this._customRowDefs); // After all row definitions are determined, find the row definition to be considered default.

      var defaultRowDefs = this._rowDefs.filter(function (def) {
        return !def.when;
      });

      if (!this.multiTemplateDataRows && defaultRowDefs.length > 1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getTableMultipleDefaultRowDefsError();
      }

      this._defaultRowDef = defaultRowDefs[0];
    }
    /**
     * Check if the header, data, or footer rows have changed what columns they want to display or
     * whether the sticky states have changed for the header or footer. If there is a diff, then
     * re-render that section.
     */

  }, {
    key: "_renderUpdatedColumns",
    value: function _renderUpdatedColumns() {
      var columnsDiffReducer = function columnsDiffReducer(acc, def) {
        return acc || !!def.getColumnsDiff();
      }; // Force re-render data rows if the list of column definitions have changed.


      var dataColumnsChanged = this._rowDefs.reduce(columnsDiffReducer, false);

      if (dataColumnsChanged) {
        this._forceRenderDataRows();
      } // Force re-render header/footer rows if the list of column definitions have changed.


      var headerColumnsChanged = this._headerRowDefs.reduce(columnsDiffReducer, false);

      if (headerColumnsChanged) {
        this._forceRenderHeaderRows();
      }

      var footerColumnsChanged = this._footerRowDefs.reduce(columnsDiffReducer, false);

      if (footerColumnsChanged) {
        this._forceRenderFooterRows();
      }

      return dataColumnsChanged || headerColumnsChanged || footerColumnsChanged;
    }
    /**
     * Switch to the provided data source by resetting the data and unsubscribing from the current
     * render change subscription if one exists. If the data source is null, interpret this by
     * clearing the row outlet. Otherwise start listening for new data.
     */

  }, {
    key: "_switchDataSource",
    value: function _switchDataSource(dataSource) {
      this._data = [];

      if (Object(_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["isDataSource"])(this.dataSource)) {
        this.dataSource.disconnect(this);
      } // Stop listening for data from the previous data source.


      if (this._renderChangeSubscription) {
        this._renderChangeSubscription.unsubscribe();

        this._renderChangeSubscription = null;
      }

      if (!dataSource) {
        if (this._dataDiffer) {
          this._dataDiffer.diff([]);
        }

        this._rowOutlet.viewContainer.clear();
      }

      this._dataSource = dataSource;
    }
    /** Set up a subscription for the data provided by the data source. */

  }, {
    key: "_observeRenderChanges",
    value: function _observeRenderChanges() {
      var _this15 = this;

      // If no data source has been set, there is nothing to observe for changes.
      if (!this.dataSource) {
        return;
      }

      var dataStream;

      if (Object(_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["isDataSource"])(this.dataSource)) {
        dataStream = this.dataSource.connect(this);
      } else if (Object(rxjs__WEBPACK_IMPORTED_MODULE_14__["isObservable"])(this.dataSource)) {
        dataStream = this.dataSource;
      } else if (Array.isArray(this.dataSource)) {
        dataStream = Object(rxjs__WEBPACK_IMPORTED_MODULE_14__["of"])(this.dataSource);
      }

      if (dataStream === undefined && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getTableUnknownDataSourceError();
      }

      this._renderChangeSubscription = dataStream.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_15__["takeUntil"])(this._onDestroy)).subscribe(function (data) {
        _this15._data = data || [];

        _this15.renderRows();
      });
    }
    /**
     * Clears any existing content in the header row outlet and creates a new embedded view
     * in the outlet using the header row definition.
     */

  }, {
    key: "_forceRenderHeaderRows",
    value: function _forceRenderHeaderRows() {
      var _this16 = this;

      // Clear the header row outlet if any content exists.
      if (this._headerRowOutlet.viewContainer.length > 0) {
        this._headerRowOutlet.viewContainer.clear();
      }

      this._headerRowDefs.forEach(function (def, i) {
        return _this16._renderRow(_this16._headerRowOutlet, def, i);
      });

      this.updateStickyHeaderRowStyles();
    }
    /**
     * Clears any existing content in the footer row outlet and creates a new embedded view
     * in the outlet using the footer row definition.
     */

  }, {
    key: "_forceRenderFooterRows",
    value: function _forceRenderFooterRows() {
      var _this17 = this;

      // Clear the footer row outlet if any content exists.
      if (this._footerRowOutlet.viewContainer.length > 0) {
        this._footerRowOutlet.viewContainer.clear();
      }

      this._footerRowDefs.forEach(function (def, i) {
        return _this17._renderRow(_this17._footerRowOutlet, def, i);
      });

      this.updateStickyFooterRowStyles();
    }
    /** Adds the sticky column styles for the rows according to the columns' stick states. */

  }, {
    key: "_addStickyColumnStyles",
    value: function _addStickyColumnStyles(rows, rowDef) {
      var _this18 = this;

      var columnDefs = Array.from(rowDef.columns || []).map(function (columnName) {
        var columnDef = _this18._columnDefsByName.get(columnName);

        if (!columnDef && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throw getTableUnknownColumnError(columnName);
        }

        return columnDef;
      });
      var stickyStartStates = columnDefs.map(function (columnDef) {
        return columnDef.sticky;
      });
      var stickyEndStates = columnDefs.map(function (columnDef) {
        return columnDef.stickyEnd;
      });

      this._stickyStyler.updateStickyColumns(rows, stickyStartStates, stickyEndStates);
    }
    /** Gets the list of rows that have been rendered in the row outlet. */

  }, {
    key: "_getRenderedRows",
    value: function _getRenderedRows(rowOutlet) {
      var renderedRows = [];

      for (var i = 0; i < rowOutlet.viewContainer.length; i++) {
        var viewRef = rowOutlet.viewContainer.get(i);
        renderedRows.push(viewRef.rootNodes[0]);
      }

      return renderedRows;
    }
    /**
     * Get the matching row definitions that should be used for this row data. If there is only
     * one row definition, it is returned. Otherwise, find the row definitions that has a when
     * predicate that returns true with the data. If none return true, return the default row
     * definition.
     */

  }, {
    key: "_getRowDefs",
    value: function _getRowDefs(data, dataIndex) {
      if (this._rowDefs.length == 1) {
        return [this._rowDefs[0]];
      }

      var rowDefs = [];

      if (this.multiTemplateDataRows) {
        rowDefs = this._rowDefs.filter(function (def) {
          return !def.when || def.when(dataIndex, data);
        });
      } else {
        var rowDef = this._rowDefs.find(function (def) {
          return def.when && def.when(dataIndex, data);
        }) || this._defaultRowDef;

        if (rowDef) {
          rowDefs.push(rowDef);
        }
      }

      if (!rowDefs.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getTableMissingMatchingRowDefError(data);
      }

      return rowDefs;
    }
  }, {
    key: "_getEmbeddedViewArgs",
    value: function _getEmbeddedViewArgs(renderRow, index) {
      var rowDef = renderRow.rowDef;
      var context = {
        $implicit: renderRow.data
      };
      return {
        templateRef: rowDef.template,
        context: context,
        index: index
      };
    }
    /**
     * Creates a new row template in the outlet and fills it with the set of cell templates.
     * Optionally takes a context to provide to the row and cells, as well as an optional index
     * of where to place the new row template in the outlet.
     */

  }, {
    key: "_renderRow",
    value: function _renderRow(outlet, rowDef, index) {
      var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
      // TODO(andrewseguin): enforce that one outlet was instantiated from createEmbeddedView
      var view = outlet.viewContainer.createEmbeddedView(rowDef.template, context, index);

      this._renderCellTemplateForItem(rowDef, context);

      return view;
    }
  }, {
    key: "_renderCellTemplateForItem",
    value: function _renderCellTemplateForItem(rowDef, context) {
      var _iterator10 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(this._getCellTemplates(rowDef)),
          _step10;

      try {
        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
          var cellTemplate = _step10.value;

          if (CdkCellOutlet.mostRecentCellOutlet) {
            CdkCellOutlet.mostRecentCellOutlet._viewContainer.createEmbeddedView(cellTemplate, context);
          }
        }
      } catch (err) {
        _iterator10.e(err);
      } finally {
        _iterator10.f();
      }

      this._changeDetectorRef.markForCheck();
    }
    /**
     * Updates the index-related context for each row to reflect any changes in the index of the rows,
     * e.g. first/last/even/odd.
     */

  }, {
    key: "_updateRowIndexContext",
    value: function _updateRowIndexContext() {
      var viewContainer = this._rowOutlet.viewContainer;

      for (var renderIndex = 0, count = viewContainer.length; renderIndex < count; renderIndex++) {
        var viewRef = viewContainer.get(renderIndex);
        var context = viewRef.context;
        context.count = count;
        context.first = renderIndex === 0;
        context.last = renderIndex === count - 1;
        context.even = renderIndex % 2 === 0;
        context.odd = !context.even;

        if (this.multiTemplateDataRows) {
          context.dataIndex = this._renderRows[renderIndex].dataIndex;
          context.renderIndex = renderIndex;
        } else {
          context.index = this._renderRows[renderIndex].dataIndex;
        }
      }
    }
    /** Gets the column definitions for the provided row def. */

  }, {
    key: "_getCellTemplates",
    value: function _getCellTemplates(rowDef) {
      var _this19 = this;

      if (!rowDef || !rowDef.columns) {
        return [];
      }

      return Array.from(rowDef.columns, function (columnId) {
        var column = _this19._columnDefsByName.get(columnId);

        if (!column && (typeof ngDevMode === 'undefined' || ngDevMode)) {
          throw getTableUnknownColumnError(columnId);
        }

        return rowDef.extractCellTemplate(column);
      });
    }
    /** Adds native table sections (e.g. tbody) and moves the row outlets into them. */

  }, {
    key: "_applyNativeTableSections",
    value: function _applyNativeTableSections() {
      var documentFragment = this._document.createDocumentFragment();

      var sections = [{
        tag: 'thead',
        outlets: [this._headerRowOutlet]
      }, {
        tag: 'tbody',
        outlets: [this._rowOutlet, this._noDataRowOutlet]
      }, {
        tag: 'tfoot',
        outlets: [this._footerRowOutlet]
      }];

      for (var _i2 = 0, _sections = sections; _i2 < _sections.length; _i2++) {
        var section = _sections[_i2];

        var element = this._document.createElement(section.tag);

        element.setAttribute('role', 'rowgroup');

        var _iterator11 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_3__["default"])(section.outlets),
            _step11;

        try {
          for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
            var outlet = _step11.value;
            element.appendChild(outlet.elementRef.nativeElement);
          }
        } catch (err) {
          _iterator11.e(err);
        } finally {
          _iterator11.f();
        }

        documentFragment.appendChild(element);
      } // Use a DocumentFragment so we don't hit the DOM on each iteration.


      this._elementRef.nativeElement.appendChild(documentFragment);
    }
    /**
     * Forces a re-render of the data rows. Should be called in cases where there has been an input
     * change that affects the evaluation of which rows should be rendered, e.g. toggling
     * `multiTemplateDataRows` or adding/removing row definitions.
     */

  }, {
    key: "_forceRenderDataRows",
    value: function _forceRenderDataRows() {
      this._dataDiffer.diff([]);

      this._rowOutlet.viewContainer.clear();

      this.renderRows();
    }
    /**
     * Checks if there has been a change in sticky states since last check and applies the correct
     * sticky styles. Since checking resets the "dirty" state, this should only be performed once
     * during a change detection and after the inputs are settled (after content check).
     */

  }, {
    key: "_checkStickyStates",
    value: function _checkStickyStates() {
      var stickyCheckReducer = function stickyCheckReducer(acc, d) {
        return acc || d.hasStickyChanged();
      }; // Note that the check needs to occur for every definition since it notifies the definition
      // that it can reset its dirty state. Using another operator like `some` may short-circuit
      // remaining definitions and leave them in an unchecked state.


      if (this._headerRowDefs.reduce(stickyCheckReducer, false)) {
        this.updateStickyHeaderRowStyles();
      }

      if (this._footerRowDefs.reduce(stickyCheckReducer, false)) {
        this.updateStickyFooterRowStyles();
      }

      if (Array.from(this._columnDefsByName.values()).reduce(stickyCheckReducer, false)) {
        this.updateStickyColumnStyles();
      }
    }
    /**
     * Creates the sticky styler that will be used for sticky rows and columns. Listens
     * for directionality changes and provides the latest direction to the styler. Re-applies column
     * stickiness when directionality changes.
     */

  }, {
    key: "_setupStickyStyler",
    value: function _setupStickyStyler() {
      var _this20 = this;

      var direction = this._dir ? this._dir.value : 'ltr';
      this._stickyStyler = new StickyStyler(this._isNativeHtmlTable, this.stickyCssClass, direction, this._coalescedStyleScheduler, this._platform.isBrowser, this.needsPositionStickyOnElement);
      (this._dir ? this._dir.change : Object(rxjs__WEBPACK_IMPORTED_MODULE_14__["of"])()).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_15__["takeUntil"])(this._onDestroy)).subscribe(function (value) {
        _this20._stickyStyler.direction = value;

        _this20.updateStickyColumnStyles();
      });
    }
    /** Filters definitions that belong to this table from a QueryList. */

  }, {
    key: "_getOwnDefs",
    value: function _getOwnDefs(items) {
      var _this21 = this;

      return items.filter(function (item) {
        return !item._table || item._table === _this21;
      });
    }
    /** Creates or removes the no data row, depending on whether any data is being shown. */

  }, {
    key: "_updateNoDataRow",
    value: function _updateNoDataRow() {
      if (this._noDataRow) {
        var shouldShow = this._rowOutlet.viewContainer.length === 0;

        if (shouldShow !== this._isShowingNoDataRow) {
          var container = this._noDataRowOutlet.viewContainer;
          shouldShow ? container.createEmbeddedView(this._noDataRow.templateRef) : container.clear();
          this._isShowingNoDataRow = shouldShow;
        }
      }
    }
  }]);

  return CdkTable;
}();

CdkTable.ɵfac = function CdkTable_Factory(t) {
  return new (t || CdkTable)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵinjectAttribute"]('role'), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["_VIEW_REPEATER_STRATEGY"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](_COALESCED_STYLE_SCHEDULER, 8));
};

CdkTable.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({
  type: CdkTable,
  selectors: [["cdk-table"], ["table", "cdk-table", ""]],
  contentQueries: function CdkTable_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkNoDataRow, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkColumnDef, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkRowDef, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkHeaderRowDef, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵcontentQuery"](dirIndex, CdkFooterRowDef, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._noDataRow = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._contentColumnDefs = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._contentRowDefs = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._contentHeaderRowDefs = _t);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._contentFooterRowDefs = _t);
    }
  },
  viewQuery: function CdkTable_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](DataRowOutlet, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](HeaderRowOutlet, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](FooterRowOutlet, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](NoDataRowOutlet, 3);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._rowOutlet = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._headerRowOutlet = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._footerRowOutlet = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx._noDataRowOutlet = _t.first);
    }
  },
  hostAttrs: [1, "cdk-table"],
  inputs: {
    trackBy: "trackBy",
    dataSource: "dataSource",
    multiTemplateDataRows: "multiTemplateDataRows"
  },
  exportAs: ["cdkTable"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵProvidersFeature"]([{
    provide: CDK_TABLE,
    useExisting: CdkTable
  }, {
    provide: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["_VIEW_REPEATER_STRATEGY"],
    useClass: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["_DisposeViewRepeaterStrategy"]
  }, {
    provide: _COALESCED_STYLE_SCHEDULER,
    useClass: _CoalescedStyleScheduler
  }])],
  ngContentSelectors: _c1,
  decls: 6,
  vars: 0,
  consts: [["headerRowOutlet", ""], ["rowOutlet", ""], ["noDataRowOutlet", ""], ["footerRowOutlet", ""]],
  template: function CdkTable_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵprojectionDef"](_c0);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵprojection"](0);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵprojection"](1, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainer"](2, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainer"](3, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainer"](4, 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainer"](5, 3);
    }
  },
  directives: [HeaderRowOutlet, DataRowOutlet, NoDataRowOutlet, FooterRowOutlet],
  encapsulation: 2
});

CdkTable.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectorRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Attribute"],
      args: ['role']
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"]]
    }]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["_VIEW_REPEATER_STRATEGY"]]
    }]
  }, {
    type: _CoalescedStyleScheduler,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [_COALESCED_STYLE_SCHEDULER]
    }]
  }];
};

CdkTable.propDecorators = {
  trackBy: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
  }],
  dataSource: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
  }],
  multiTemplateDataRows: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
  }],
  _rowOutlet: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
    args: [DataRowOutlet, {
      static: true
    }]
  }],
  _headerRowOutlet: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
    args: [HeaderRowOutlet, {
      static: true
    }]
  }],
  _footerRowOutlet: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
    args: [FooterRowOutlet, {
      static: true
    }]
  }],
  _noDataRowOutlet: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
    args: [NoDataRowOutlet, {
      static: true
    }]
  }],
  _contentColumnDefs: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
    args: [CdkColumnDef, {
      descendants: true
    }]
  }],
  _contentRowDefs: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
    args: [CdkRowDef, {
      descendants: true
    }]
  }],
  _contentHeaderRowDefs: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
    args: [CdkHeaderRowDef, {
      descendants: true
    }]
  }],
  _contentFooterRowDefs: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
    args: [CdkFooterRowDef, {
      descendants: true
    }]
  }],
  _noDataRow: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
    args: [CdkNoDataRow]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkTable, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Component"],
    args: [{
      selector: 'cdk-table, table[cdk-table]',
      exportAs: 'cdkTable',
      template: CDK_TABLE_TEMPLATE,
      host: {
        'class': 'cdk-table'
      },
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewEncapsulation"].None,
      // The "OnPush" status for the `MatTable` component is effectively a noop, so we are removing it.
      // The view for `MatTable` consists entirely of templates declared in other views. As they are
      // declared elsewhere, they are checked when their declaration points are checked.
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectionStrategy"].Default,
      providers: [{
        provide: CDK_TABLE,
        useExisting: CdkTable
      }, {
        provide: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["_VIEW_REPEATER_STRATEGY"],
        useClass: _angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["_DisposeViewRepeaterStrategy"]
      }, {
        provide: _COALESCED_STYLE_SCHEDULER,
        useClass: _CoalescedStyleScheduler
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["IterableDiffers"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectorRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ElementRef"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Attribute"],
        args: ['role']
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_8__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_13__["DOCUMENT"]]
      }]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_12__["Platform"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [_angular_cdk_collections__WEBPACK_IMPORTED_MODULE_10__["_VIEW_REPEATER_STRATEGY"]]
      }]
    }, {
      type: _CoalescedStyleScheduler,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [_COALESCED_STYLE_SCHEDULER]
      }]
    }];
  }, {
    trackBy: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
    }],
    dataSource: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
    }],
    multiTemplateDataRows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
    }],
    _rowOutlet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
      args: [DataRowOutlet, {
        static: true
      }]
    }],
    _headerRowOutlet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
      args: [HeaderRowOutlet, {
        static: true
      }]
    }],
    _footerRowOutlet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
      args: [FooterRowOutlet, {
        static: true
      }]
    }],
    _noDataRowOutlet: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
      args: [NoDataRowOutlet, {
        static: true
      }]
    }],
    _contentColumnDefs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
      args: [CdkColumnDef, {
        descendants: true
      }]
    }],
    _contentRowDefs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
      args: [CdkRowDef, {
        descendants: true
      }]
    }],
    _contentHeaderRowDefs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
      args: [CdkHeaderRowDef, {
        descendants: true
      }]
    }],
    _contentFooterRowDefs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChildren"],
      args: [CdkFooterRowDef, {
        descendants: true
      }]
    }],
    _noDataRow: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ContentChild"],
      args: [CdkNoDataRow]
    }]
  });
})();
/** Utility function that gets a merged list of the entries in an array and values of a Set. */


function mergeArrayAndSet(array, set) {
  return array.concat(Array.from(set));
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Column that simply shows text content for the header and row cells. Assumes that the table
 * is using the native table implementation (`<table>`).
 *
 * By default, the name of this column will be the header text and data property accessor.
 * The header text can be overridden with the `headerText` input. Cell values can be overridden with
 * the `dataAccessor` input. Change the text justification to the start or end using the `justify`
 * input.
 */


var CdkTextColumn = /*#__PURE__*/function () {
  function CdkTextColumn( // `CdkTextColumn` is always requiring a table, but we just assert it manually
  // for better error reporting.
  // tslint:disable-next-line: lightweight-tokens
  _table, _options) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkTextColumn);

    this._table = _table;
    this._options = _options;
    /** Alignment of the cell values. */

    this.justify = 'start';
    this._options = _options || {};
  }
  /** Column name that should be used to reference this column. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(CdkTextColumn, [{
    key: "name",
    get: function get() {
      return this._name;
    },
    set: function set(name) {
      this._name = name; // With Ivy, inputs can be initialized before static query results are
      // available. In that case, we defer the synchronization until "ngOnInit" fires.

      this._syncColumnDefName();
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      this._syncColumnDefName();

      if (this.headerText === undefined) {
        this.headerText = this._createDefaultHeaderText();
      }

      if (!this.dataAccessor) {
        this.dataAccessor = this._options.defaultDataAccessor || function (data, name) {
          return data[name];
        };
      }

      if (this._table) {
        // Provide the cell and headerCell directly to the table with the static `ViewChild` query,
        // since the columnDef will not pick up its content by the time the table finishes checking
        // its content and initializing the rows.
        this.columnDef.cell = this.cell;
        this.columnDef.headerCell = this.headerCell;

        this._table.addColumnDef(this.columnDef);
      } else if (typeof ngDevMode === 'undefined' || ngDevMode) {
        throw getTableTextColumnMissingParentTableError();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      if (this._table) {
        this._table.removeColumnDef(this.columnDef);
      }
    }
    /**
     * Creates a default header text. Use the options' header text transformation function if one
     * has been provided. Otherwise simply capitalize the column name.
     */

  }, {
    key: "_createDefaultHeaderText",
    value: function _createDefaultHeaderText() {
      var name = this.name;

      if (!name && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw getTableTextColumnMissingNameError();
      }

      if (this._options && this._options.defaultHeaderTextTransform) {
        return this._options.defaultHeaderTextTransform(name);
      }

      return name[0].toUpperCase() + name.slice(1);
    }
    /** Synchronizes the column definition name with the text column name. */

  }, {
    key: "_syncColumnDefName",
    value: function _syncColumnDefName() {
      if (this.columnDef) {
        this.columnDef.name = this.name;
      }
    }
  }]);

  return CdkTextColumn;
}();

CdkTextColumn.ɵfac = function CdkTextColumn_Factory(t) {
  return new (t || CdkTextColumn)(_angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](CdkTable, 8), _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdirectiveInject"](TEXT_COLUMN_OPTIONS, 8));
};

CdkTextColumn.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineComponent"]({
  type: CdkTextColumn,
  selectors: [["cdk-text-column"]],
  viewQuery: function CdkTextColumn_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](CdkColumnDef, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](CdkCellDef, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵviewQuery"](CdkHeaderCellDef, 3);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.columnDef = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.cell = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵloadQuery"]()) && (ctx.headerCell = _t.first);
    }
  },
  inputs: {
    justify: "justify",
    name: "name",
    headerText: "headerText",
    dataAccessor: "dataAccessor"
  },
  decls: 3,
  vars: 0,
  consts: [["cdkColumnDef", ""], ["cdk-header-cell", "", 3, "text-align", 4, "cdkHeaderCellDef"], ["cdk-cell", "", 3, "text-align", 4, "cdkCellDef"], ["cdk-header-cell", ""], ["cdk-cell", ""]],
  template: function CdkTextColumn_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerStart"](0, 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](1, CdkTextColumn_th_1_Template, 2, 3, "th", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵtemplate"](2, CdkTextColumn_td_2_Template, 2, 3, "td", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵelementContainerEnd"]();
    }
  },
  directives: [CdkColumnDef, CdkHeaderCellDef, CdkCellDef, CdkHeaderCell, CdkCell],
  encapsulation: 2
});

CdkTextColumn.ctorParameters = function () {
  return [{
    type: CdkTable,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
      args: [TEXT_COLUMN_OPTIONS]
    }]
  }];
};

CdkTextColumn.propDecorators = {
  name: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
  }],
  headerText: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
  }],
  dataAccessor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
  }],
  justify: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
  }],
  columnDef: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
    args: [CdkColumnDef, {
      static: true
    }]
  }],
  cell: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
    args: [CdkCellDef, {
      static: true
    }]
  }],
  headerCell: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
    args: [CdkHeaderCellDef, {
      static: true
    }]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkTextColumn, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Component"],
    args: [{
      selector: 'cdk-text-column',
      template: "\n    <ng-container cdkColumnDef>\n      <th cdk-header-cell *cdkHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td cdk-cell *cdkCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  ",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewEncapsulation"].None,
      // Change detection is intentionally not set to OnPush. This component's template will be provided
      // to the table to be inserted into its view. This is problematic when change detection runs since
      // the bindings in this template will be evaluated _after_ the table's view is evaluated, which
      // mean's the template in the table's view will not have the updated value (and in fact will cause
      // an ExpressionChangedAfterItHasBeenCheckedError).
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ChangeDetectionStrategy"].Default
    }]
  }], function () {
    return [{
      type: CdkTable,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Inject"],
        args: [TEXT_COLUMN_OPTIONS]
      }]
    }];
  }, {
    justify: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
    }],
    name: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
    }],
    headerText: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
    }],
    dataAccessor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["Input"]
    }],
    columnDef: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
      args: [CdkColumnDef, {
        static: true
      }]
    }],
    cell: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
      args: [CdkCellDef, {
        static: true
      }]
    }],
    headerCell: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["ViewChild"],
      args: [CdkHeaderCellDef, {
        static: true
      }]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var EXPORTED_DECLARATIONS = [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet];

var CdkTableModule = function CdkTableModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, CdkTableModule);
};

CdkTableModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineNgModule"]({
  type: CdkTableModule
});
CdkTableModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵdefineInjector"]({
  factory: function CdkTableModule_Factory(t) {
    return new (t || CdkTableModule)();
  },
  imports: [[_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__["ScrollingModule"]]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵɵsetNgModuleScope"](CdkTableModule, {
    declarations: function declarations() {
      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet];
    },
    imports: function imports() {
      return [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__["ScrollingModule"]];
    },
    exports: function exports() {
      return [CdkTable, CdkRowDef, CdkCellDef, CdkCellOutlet, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkCell, CdkRow, CdkHeaderCell, CdkFooterCell, CdkHeaderRow, CdkHeaderRowDef, CdkFooterRow, CdkFooterRowDef, DataRowOutlet, HeaderRowOutlet, FooterRowOutlet, CdkTextColumn, CdkNoDataRow, NoDataRowOutlet];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_11__["ɵsetClassMetadata"](CdkTableModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_11__["NgModule"],
    args: [{
      exports: EXPORTED_DECLARATIONS,
      declarations: EXPORTED_DECLARATIONS,
      imports: [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_16__["ScrollingModule"]]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "fcXA":
/*!************************************************************!*\
  !*** ./src/app/core/components/admin/log/models/LogDto.ts ***!
  \************************************************************/
/*! exports provided: LogDto */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogDto", function() { return LogDto; });
var LogDto = /** @class */ (function () {
    function LogDto() {
    }
    return LogDto;
}());



/***/ }),

/***/ "ftFU":
/*!***********************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/Utils.js ***!
  \***********************************************************/
/*! exports provided: VERSION, Arg, Platform, getDataDetail, formatArrayBuffer, isArrayBuffer, sendMessage, createLogger, SubjectSubscription, ConsoleLogger, getUserAgentHeader, constructUserAgent, getErrorString, getGlobalThis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VERSION", function() { return VERSION; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Arg", function() { return Arg; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Platform", function() { return Platform; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getDataDetail", function() { return getDataDetail; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "formatArrayBuffer", function() { return formatArrayBuffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "isArrayBuffer", function() { return isArrayBuffer; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sendMessage", function() { return sendMessage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "createLogger", function() { return createLogger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SubjectSubscription", function() { return SubjectSubscription; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConsoleLogger", function() { return ConsoleLogger; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getUserAgentHeader", function() { return getUserAgentHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "constructUserAgent", function() { return constructUserAgent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getErrorString", function() { return getErrorString; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getGlobalThis", function() { return getGlobalThis; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _Loggers__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Loggers */ "v3Fn");






// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

 // Version token that will be replaced by the prepack command

/** The version of the SignalR client. */

var VERSION = "8.0.7";
/** @private */

var Arg = /*#__PURE__*/function () {
  function Arg() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, Arg);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Arg, null, [{
    key: "isRequired",
    value: function isRequired(val, name) {
      if (val === null || val === undefined) {
        throw new Error("The '".concat(name, "' argument is required."));
      }
    }
  }, {
    key: "isNotEmpty",
    value: function isNotEmpty(val, name) {
      if (!val || val.match(/^\s*$/)) {
        throw new Error("The '".concat(name, "' argument should not be empty."));
      }
    }
  }, {
    key: "isIn",
    value: function isIn(val, values, name) {
      // TypeScript enums have keys for **both** the name and the value of each enum member on the type itself.
      if (!(val in values)) {
        throw new Error("Unknown ".concat(name, " value: ").concat(val, "."));
      }
    }
  }]);

  return Arg;
}();
/** @private */

var Platform = /*#__PURE__*/function () {
  function Platform() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, Platform);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(Platform, null, [{
    key: "isBrowser",
    get: // react-native has a window but no document so we should check both
    function get() {
      return !Platform.isNode && typeof window === "object" && typeof window.document === "object";
    } // WebWorkers don't have a window object so the isBrowser check would fail

  }, {
    key: "isWebWorker",
    get: function get() {
      return !Platform.isNode && typeof self === "object" && "importScripts" in self;
    } // react-native has a window but no document

  }, {
    key: "isReactNative",
    get: function get() {
      return !Platform.isNode && typeof window === "object" && typeof window.document === "undefined";
    } // Node apps shouldn't have a window object, but WebWorkers don't either
    // so we need to check for both WebWorker and window

  }, {
    key: "isNode",
    get: function get() {
      return typeof process !== "undefined" && process.release && process.release.name === "node";
    }
  }]);

  return Platform;
}();
/** @private */

function getDataDetail(data, includeContent) {
  var detail = "";

  if (isArrayBuffer(data)) {
    detail = "Binary data of length ".concat(data.byteLength);

    if (includeContent) {
      detail += ". Content: '".concat(formatArrayBuffer(data), "'");
    }
  } else if (typeof data === "string") {
    detail = "String data of length ".concat(data.length);

    if (includeContent) {
      detail += ". Content: '".concat(data, "'");
    }
  }

  return detail;
}
/** @private */

function formatArrayBuffer(data) {
  var view = new Uint8Array(data); // Uint8Array.map only supports returning another Uint8Array?

  var str = "";
  view.forEach(function (num) {
    var pad = num < 16 ? "0" : "";
    str += "0x".concat(pad).concat(num.toString(16), " ");
  }); // Trim of trailing space.

  return str.substr(0, str.length - 1);
} // Also in signalr-protocol-msgpack/Utils.ts

/** @private */

function isArrayBuffer(val) {
  return val && typeof ArrayBuffer !== "undefined" && (val instanceof ArrayBuffer || // Sometimes we get an ArrayBuffer that doesn't satisfy instanceof
  val.constructor && val.constructor.name === "ArrayBuffer");
}
/** @private */

function sendMessage(_x, _x2, _x3, _x4, _x5, _x6) {
  return _sendMessage.apply(this, arguments);
}
/** @private */

function _sendMessage() {
  _sendMessage = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(logger, transportName, httpClient, url, content, options) {
    var headers, _getUserAgentHeader, _getUserAgentHeader2, name, value, responseType, response;

    return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            headers = {};
            _getUserAgentHeader = getUserAgentHeader(), _getUserAgentHeader2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_getUserAgentHeader, 2), name = _getUserAgentHeader2[0], value = _getUserAgentHeader2[1];
            headers[name] = value;
            logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Trace, "(".concat(transportName, " transport) sending data. ").concat(getDataDetail(content, options.logMessageContent), "."));
            responseType = isArrayBuffer(content) ? "arraybuffer" : "text";
            _context.next = 7;
            return httpClient.post(url, {
              content: content,
              headers: Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])({}, headers), options.headers),
              responseType: responseType,
              timeout: options.timeout,
              withCredentials: options.withCredentials
            });

          case 7:
            response = _context.sent;
            logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Trace, "(".concat(transportName, " transport) request complete. Response status: ").concat(response.statusCode, "."));

          case 9:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _sendMessage.apply(this, arguments);
}

function createLogger(logger) {
  if (logger === undefined) {
    return new ConsoleLogger(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Information);
  }

  if (logger === null) {
    return _Loggers__WEBPACK_IMPORTED_MODULE_7__["NullLogger"].instance;
  }

  if (logger.log !== undefined) {
    return logger;
  }

  return new ConsoleLogger(logger);
}
/** @private */

var SubjectSubscription = /*#__PURE__*/function () {
  function SubjectSubscription(subject, observer) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, SubjectSubscription);

    this._subject = subject;
    this._observer = observer;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(SubjectSubscription, [{
    key: "dispose",
    value: function dispose() {
      var index = this._subject.observers.indexOf(this._observer);

      if (index > -1) {
        this._subject.observers.splice(index, 1);
      }

      if (this._subject.observers.length === 0 && this._subject.cancelCallback) {
        this._subject.cancelCallback().catch(function (_) {});
      }
    }
  }]);

  return SubjectSubscription;
}();
/** @private */

var ConsoleLogger = /*#__PURE__*/function () {
  function ConsoleLogger(minimumLogLevel) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, ConsoleLogger);

    this._minLevel = minimumLogLevel;
    this.out = console;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ConsoleLogger, [{
    key: "log",
    value: function log(logLevel, message) {
      if (logLevel >= this._minLevel) {
        var msg = "[".concat(new Date().toISOString(), "] ").concat(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"][logLevel], ": ").concat(message);

        switch (logLevel) {
          case _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Critical:
          case _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Error:
            this.out.error(msg);
            break;

          case _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Warning:
            this.out.warn(msg);
            break;

          case _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Information:
            this.out.info(msg);
            break;

          default:
            // console.debug only goes to attached debuggers in Node, so we use console.log for Trace and Debug
            this.out.log(msg);
            break;
        }
      }
    }
  }]);

  return ConsoleLogger;
}();
/** @private */

function getUserAgentHeader() {
  var userAgentHeaderName = "X-SignalR-User-Agent";

  if (Platform.isNode) {
    userAgentHeaderName = "User-Agent";
  }

  return [userAgentHeaderName, constructUserAgent(VERSION, getOsName(), getRuntime(), getRuntimeVersion())];
}
/** @private */

function constructUserAgent(version, os, runtime, runtimeVersion) {
  // Microsoft SignalR/[Version] ([Detailed Version]; [Operating System]; [Runtime]; [Runtime Version])
  var userAgent = "Microsoft SignalR/";
  var majorAndMinor = version.split(".");
  userAgent += "".concat(majorAndMinor[0], ".").concat(majorAndMinor[1]);
  userAgent += " (".concat(version, "; ");

  if (os && os !== "") {
    userAgent += "".concat(os, "; ");
  } else {
    userAgent += "Unknown OS; ";
  }

  userAgent += "".concat(runtime);

  if (runtimeVersion) {
    userAgent += "; ".concat(runtimeVersion);
  } else {
    userAgent += "; Unknown Runtime Version";
  }

  userAgent += ")";
  return userAgent;
} // eslint-disable-next-line spaced-comment

/*#__PURE__*/

function getOsName() {
  if (Platform.isNode) {
    switch (process.platform) {
      case "win32":
        return "Windows NT";

      case "darwin":
        return "macOS";

      case "linux":
        return "Linux";

      default:
        return process.platform;
    }
  } else {
    return "";
  }
} // eslint-disable-next-line spaced-comment

/*#__PURE__*/


function getRuntimeVersion() {
  if (Platform.isNode) {
    return process.versions.node;
  }

  return undefined;
}

function getRuntime() {
  if (Platform.isNode) {
    return "NodeJS";
  } else {
    return "Browser";
  }
}
/** @private */


function getErrorString(e) {
  if (e.stack) {
    return e.stack;
  } else if (e.message) {
    return e.message;
  }

  return "".concat(e);
}
/** @private */

function getGlobalThis() {
  // globalThis is semi-new and not available in Node until v12
  if (typeof globalThis !== "undefined") {
    return globalThis;
  }

  if (typeof self !== "undefined") {
    return self;
  }

  if (typeof window !== "undefined") {
    return window;
  }

  if (typeof global !== "undefined") {
    return global;
  }

  throw new Error("could not find global");
}

/***/ }),

/***/ "fx42":
/*!********************************************************************************************************!*\
  !*** ./src/app/core/components/screens/security-transactions/reject-dialog/reject-dialog.component.ts ***!
  \********************************************************************************************************/
/*! exports provided: RejectDialogComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RejectDialogComponent", function() { return RejectDialogComponent; });
/* harmony import */ var _raw_loader_reject_dialog_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./reject-dialog.component.html */ "g81c");
/* harmony import */ var _reject_dialog_component_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./reject-dialog.component.css */ "0CuA");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};





var RejectDialogComponent = /** @class */ (function () {
    function RejectDialogComponent(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.rejectReason = new _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormControl"]('', [_angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].minLength(3)]);
    }
    RejectDialogComponent.prototype.onCancel = function () {
        this.dialogRef.close();
    };
    RejectDialogComponent.prototype.onConfirm = function () {
        if (this.rejectReason.valid) {
            var result = {
                visitId: this.data.visit.id,
                reason: this.rejectReason.value
            };
            this.dialogRef.close(result);
        }
    };
    RejectDialogComponent.prototype.getAllVisitorNames = function () {
        var _a;
        var allVisitors = [];
        // Ana ziyaretçiyi ekle
        if ((_a = this.data.visit) === null || _a === void 0 ? void 0 : _a.visitorFullName) {
            allVisitors.push(this.data.visit.visitorFullName);
        }
        // MultiVisiters'teki ziyaretçileri ekle
        if (this.data.multiVisiters && this.data.multiVisiters.length > 0) {
            allVisitors.push.apply(allVisitors, this.data.multiVisiters.map(function (mv) { return mv.visitorFullName; }));
        }
        return allVisitors;
    };
    RejectDialogComponent.ctorParameters = function () { return [
        { type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"] },
        { type: undefined, decorators: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["Inject"], args: [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MAT_DIALOG_DATA"],] }] }
    ]; };
    RejectDialogComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-reject-dialog',
            template: _raw_loader_reject_dialog_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_reject_dialog_component_css__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_angular_material_dialog__WEBPACK_IMPORTED_MODULE_4__["MatDialogRef"], Object])
    ], RejectDialogComponent);
    return RejectDialogComponent;
}());



/***/ }),

/***/ "g81c":
/*!************************************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/screens/security-transactions/reject-dialog/reject-dialog.component.html ***!
  \************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"dialog-container\">\r\n  <!-- Header -->\r\n  <div class=\"dialog-header\">\r\n    <mat-icon class=\"warning-icon\">warning</mat-icon>\r\n    <h2 mat-dialog-title>Ziyaret Reddetme</h2>\r\n  </div>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <div mat-dialog-content>\r\n    <div class=\"visit-info\">\r\n      <!-- Ziyaretçiler Bölümü -->\r\n      <div class=\"info-section visitors-section\">\r\n        <div class=\"section-header\">\r\n          <mat-icon class=\"section-icon\">people</mat-icon>\r\n          <h3>Ziyaretçiler <span class=\"visitor-count\">({{getAllVisitorNames().length}} Kişi)</span></h3>\r\n        </div>\r\n        <div class=\"visitor-chips-container\">\r\n          <mat-chip-list>\r\n            <mat-chip *ngFor=\"let visitorName of getAllVisitorNames(); let i = index\" \r\n                     [class.primary-visitor-chip]=\"i === 0\"\r\n                     [class.secondary-visitor-chip]=\"i !== 0\"\r\n                     class=\"visitor-chip\">\r\n              <mat-icon class=\"chip-icon\">{{i === 0 ? 'person' : 'person_outline'}}</mat-icon>\r\n              {{visitorName}}\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Ziyaret Türü Bölümü -->\r\n      <div class=\"info-section visit-type-section\">\r\n        <div class=\"section-header\">\r\n          <mat-icon class=\"section-icon\">\r\n            {{data.visit.vehicleEntry ? 'directions_car' : 'directions_walk'}}\r\n          </mat-icon>\r\n          <h3>Ziyaret Türü</h3>\r\n        </div>\r\n        <div class=\"visit-type-info\">\r\n          <mat-chip-list>\r\n            <mat-chip [class.vehicle-chip]=\"data.visit.vehicleEntry\" \r\n                     [class.pedestrian-chip]=\"!data.visit.vehicleEntry\"\r\n                     class=\"type-chip\">\r\n              <mat-icon class=\"chip-icon\">\r\n                {{data.visit.vehicleEntry ? 'directions_car' : 'directions_walk'}}\r\n              </mat-icon>\r\n              {{data.visit.vehicleEntry ? 'Araçlı Ziyaret' : 'Yaya Ziyaret'}}\r\n            </mat-chip>\r\n            <mat-chip *ngIf=\"data.visit.vehicleEntry\" \r\n                     class=\"plate-chip\">\r\n              <mat-icon class=\"chip-icon\">pin</mat-icon>\r\n              {{data.visit.visitorLicensePlate || 'Plaka Girilmemiş'}}\r\n            </mat-chip>\r\n          </mat-chip-list>\r\n        </div>\r\n      </div>\r\n\r\n      <!-- Red Sebebi Bölümü -->\r\n      <div class=\"info-section reason-section\">\r\n        <div class=\"section-header\">\r\n          <mat-icon class=\"section-icon\">report_problem</mat-icon>\r\n          <h3>Red Sebebi</h3>\r\n        </div>\r\n        <mat-form-field appearance=\"outline\" class=\"reason-field\">\r\n          <mat-label>Lütfen red sebebini yazınız</mat-label>\r\n          <textarea matInput \r\n                    [formControl]=\"rejectReason\" \r\n                    placeholder=\"Red sebebini buraya yazın...\"\r\n                    rows=\"4\"></textarea>\r\n          <mat-error *ngIf=\"rejectReason.hasError('required')\">\r\n            Red sebebi zorunludur\r\n          </mat-error>\r\n          <mat-error *ngIf=\"rejectReason.hasError('minlength')\">\r\n            Red sebebi en az 3 karakter olmalıdır\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <!-- Footer -->\r\n  <div mat-dialog-actions class=\"dialog-actions\">\r\n    <button mat-stroked-button \r\n            (click)=\"onCancel()\"\r\n            class=\"cancel-button\">\r\n      <mat-icon>close</mat-icon>\r\n      İptal\r\n    </button>\r\n    <button mat-raised-button \r\n            color=\"warn\" \r\n            (click)=\"onConfirm()\"\r\n            [disabled]=\"!rejectReason.valid\"\r\n            class=\"reject-button\">\r\n      <mat-icon>block</mat-icon>\r\n      Reddet\r\n    </button>\r\n  </div>\r\n</div>");

/***/ }),

/***/ "gYl6":
/*!*******************************************************************************!*\
  !*** ./src/app/core/components/admin/operationclaim/models/operationclaim.ts ***!
  \*******************************************************************************/
/*! exports provided: OperationClaim */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OperationClaim", function() { return OperationClaim; });
var OperationClaim = /** @class */ (function () {
    function OperationClaim() {
    }
    return OperationClaim;
}());



/***/ }),

/***/ "h68y":
/*!***************************************************!*\
  !*** ./src/app/core/services/language.service.ts ***!
  \***************************************************/
/*! exports provided: LanguageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LanguageService", function() { return LanguageService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};


var LanguageService = /** @class */ (function () {
    function LanguageService(http) {
        this.http = http;
        this.apiUrl = 'http://banu-pass-api:5000/api/v1/Languages/codes';
    }
    LanguageService.prototype.getLanguageCodes = function () {
        return this.http.get(this.apiUrl);
    };
    LanguageService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    LanguageService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], LanguageService);
    return LanguageService;
}());



/***/ }),

/***/ "hdoO":
/*!***************************************************************************!*\
  !*** ./src/app/core/components/screens/banu-logs/banu-logs.component.css ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".pagination-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n  \r\n  .pagination {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0;\r\n    padding: 0;\r\n    \r\n    .page-item {\r\n      margin: 0 2px;\r\n      \r\n      &.active .page-link {\r\n        background-color: #f44336;\r\n        border-color: #f44336;\r\n        color: white;\r\n      }\r\n      \r\n      &.disabled .page-link {\r\n        color: #6c757d;\r\n        pointer-events: none;\r\n        background-color: #fff;\r\n        border-color: #dee2e6;\r\n      }\r\n    }\r\n  \r\n    .page-link {\r\n      padding: 8px 12px;\r\n      color: #f44336;\r\n      background-color: #fff;\r\n      border: 1px solid #dee2e6;\r\n      cursor: pointer;\r\n      transition: all 0.3s ease;\r\n  \r\n      &:hover {\r\n        background-color: #f8f9fa;\r\n        border-color: #f44336;\r\n      }\r\n  \r\n      &.dots {\r\n        cursor: default;\r\n        background-color: transparent;\r\n        border: none;\r\n        color: #6c757d;\r\n        \r\n        &:hover {\r\n          background-color: transparent;\r\n          border: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  \r\n  .float-right {\r\n    float: right;\r\n  }\r\n  \r\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImJhbnUtbG9ncy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQTtJQUNFLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0lBQ25CLFNBQVM7SUFDVCxVQUFVOztJQUVWO01BQ0UsYUFBYTs7TUFFYjtRQUNFLHlCQUF5QjtRQUN6QixxQkFBcUI7UUFDckIsWUFBWTtNQUNkOztNQUVBO1FBQ0UsY0FBYztRQUNkLG9CQUFvQjtRQUNwQixzQkFBc0I7UUFDdEIscUJBQXFCO01BQ3ZCO0lBQ0Y7O0lBRUE7TUFDRSxpQkFBaUI7TUFDakIsY0FBYztNQUNkLHNCQUFzQjtNQUN0Qix5QkFBeUI7TUFDekIsZUFBZTtNQUNmLHlCQUF5Qjs7TUFFekI7UUFDRSx5QkFBeUI7UUFDekIscUJBQXFCO01BQ3ZCOztNQUVBO1FBQ0UsZUFBZTtRQUNmLDZCQUE2QjtRQUM3QixZQUFZO1FBQ1osY0FBYzs7UUFFZDtVQUNFLDZCQUE2QjtVQUM3QixZQUFZO1FBQ2Q7TUFDRjtJQUNGO0VBQ0Y7O0VBRUE7SUFDRSxZQUFZO0VBQ2QiLCJmaWxlIjoiYmFudS1sb2dzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnaW5hdGlvbi1jb250YWluZXIge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAucGFnaW5hdGlvbiB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgbWFyZ2luOiAwO1xyXG4gICAgcGFkZGluZzogMDtcclxuICAgIFxyXG4gICAgLnBhZ2UtaXRlbSB7XHJcbiAgICAgIG1hcmdpbjogMCAycHg7XHJcbiAgICAgIFxyXG4gICAgICAmLmFjdGl2ZSAucGFnZS1saW5rIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgICAgIGJvcmRlci1jb2xvcjogI2Y0NDMzNjtcclxuICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgIH1cclxuICAgICAgXHJcbiAgICAgICYuZGlzYWJsZWQgLnBhZ2UtbGluayB7XHJcbiAgICAgICAgY29sb3I6ICM2Yzc1N2Q7XHJcbiAgICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgICBib3JkZXItY29sb3I6ICNkZWUyZTY7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICBcclxuICAgIC5wYWdlLWxpbmsge1xyXG4gICAgICBwYWRkaW5nOiA4cHggMTJweDtcclxuICAgICAgY29sb3I6ICNmNDQzMzY7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZWUyZTY7XHJcbiAgICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICBcclxuICAgICAgJjpob3ZlciB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICAgICAgICBib3JkZXItY29sb3I6ICNmNDQzMzY7XHJcbiAgICAgIH1cclxuICBcclxuICAgICAgJi5kb3RzIHtcclxuICAgICAgICBjdXJzb3I6IGRlZmF1bHQ7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICAgIGNvbG9yOiAjNmM3NTdkO1xyXG4gICAgICAgIFxyXG4gICAgICAgICY6aG92ZXIge1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIC5mbG9hdC1yaWdodCB7XHJcbiAgICBmbG9hdDogcmlnaHQ7XHJcbiAgfVxyXG4gICJdfQ== */");

/***/ }),

/***/ "iadO":
/*!****************************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/datepicker.js ***!
  \****************************************************************************/
/*! exports provided: DateRange, DefaultMatCalendarRangeStrategy, MAT_DATEPICKER_SCROLL_STRATEGY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER, MAT_DATEPICKER_VALIDATORS, MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATE_RANGE_SELECTION_STRATEGY, MAT_RANGE_DATE_SELECTION_MODEL_FACTORY, MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY, MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER, MatCalendar, MatCalendarBody, MatCalendarCell, MatCalendarHeader, MatDateRangeInput, MatDateRangePicker, MatDateSelectionModel, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerInputEvent, MatDatepickerIntl, MatDatepickerModule, MatDatepickerToggle, MatDatepickerToggleIcon, MatEndDate, MatMonthView, MatMultiYearView, MatRangeDateSelectionModel, MatSingleDateSelectionModel, MatStartDate, MatYearView, matDatepickerAnimations, yearsPerPage, yearsPerRow, ɵangular_material_src_material_datepicker_datepicker_a, ɵangular_material_src_material_datepicker_datepicker_b, ɵangular_material_src_material_datepicker_datepicker_c, ɵangular_material_src_material_datepicker_datepicker_d, ɵangular_material_src_material_datepicker_datepicker_e */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateRange", function() { return DateRange; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultMatCalendarRangeStrategy", function() { return DefaultMatCalendarRangeStrategy; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATEPICKER_SCROLL_STRATEGY", function() { return MAT_DATEPICKER_SCROLL_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY", function() { return MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER", function() { return MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATEPICKER_VALIDATORS", function() { return MAT_DATEPICKER_VALIDATORS; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATEPICKER_VALUE_ACCESSOR", function() { return MAT_DATEPICKER_VALUE_ACCESSOR; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_DATE_RANGE_SELECTION_STRATEGY", function() { return MAT_DATE_RANGE_SELECTION_STRATEGY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_RANGE_DATE_SELECTION_MODEL_FACTORY", function() { return MAT_RANGE_DATE_SELECTION_MODEL_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER", function() { return MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY", function() { return MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER", function() { return MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCalendar", function() { return MatCalendar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCalendarBody", function() { return MatCalendarBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCalendarCell", function() { return MatCalendarCell; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatCalendarHeader", function() { return MatCalendarHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDateRangeInput", function() { return MatDateRangeInput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDateRangePicker", function() { return MatDateRangePicker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDateSelectionModel", function() { return MatDateSelectionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepicker", function() { return MatDatepicker; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepickerContent", function() { return MatDatepickerContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepickerInput", function() { return MatDatepickerInput; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepickerInputEvent", function() { return MatDatepickerInputEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepickerIntl", function() { return MatDatepickerIntl; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepickerModule", function() { return MatDatepickerModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepickerToggle", function() { return MatDatepickerToggle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatDatepickerToggleIcon", function() { return MatDatepickerToggleIcon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatEndDate", function() { return MatEndDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatMonthView", function() { return MatMonthView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatMultiYearView", function() { return MatMultiYearView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatRangeDateSelectionModel", function() { return MatRangeDateSelectionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatSingleDateSelectionModel", function() { return MatSingleDateSelectionModel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatStartDate", function() { return MatStartDate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatYearView", function() { return MatYearView; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matDatepickerAnimations", function() { return matDatepickerAnimations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "yearsPerPage", function() { return yearsPerPage; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "yearsPerRow", function() { return yearsPerRow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_datepicker_datepicker_a", function() { return MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_datepicker_datepicker_b", function() { return MAT_CALENDAR_RANGE_STRATEGY_PROVIDER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_datepicker_datepicker_c", function() { return MatDatepickerBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_datepicker_datepicker_d", function() { return MatDatepickerInputBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_datepicker_datepicker_e", function() { return MAT_DATE_RANGE_INPUT_PARENT; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/overlay */ "rDax");
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/portal */ "+rOU");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_button__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/button */ "bTqV");
/* harmony import */ var _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/material/dialog */ "0IaG");
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/cdk/scrolling */ "vxfF");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/animations */ "R0Ic");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! @angular/material/form-field */ "kmnG");
/* harmony import */ var _angular_material_input__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! @angular/material/input */ "qFsG");


























/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @docs-private */












var _c0 = ["mat-calendar-body", ""];

function MatCalendarBody_tr_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵstyleProp"]("padding-top", ctx_r0._cellPadding)("padding-bottom", ctx_r0._cellPadding);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("colspan", ctx_r0.numCols);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx_r0.label, " ");
  }
}

function MatCalendarBody_tr_1_td_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵstyleProp"]("padding-top", ctx_r4._cellPadding)("padding-bottom", ctx_r4._cellPadding);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("colspan", ctx_r4._firstRowOffset);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx_r4._firstRowOffset >= ctx_r4.labelMinRequiredCells ? ctx_r4.label : "", " ");
  }
}

function MatCalendarBody_tr_1_td_2_Template(rf, ctx) {
  if (rf & 1) {
    var _r9 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatCalendarBody_tr_1_td_2_Template_td_click_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r9);
      var item_r6 = ctx.$implicit;
      var ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2);
      return ctx_r8._cellClicked(item_r6, $event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 9);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "div", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var item_r6 = ctx.$implicit;
    var colIndex_r7 = ctx.index;
    var rowIndex_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().index;
    var ctx_r5 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵstyleProp"]("width", ctx_r5._cellWidth)("padding-top", ctx_r5._cellPadding)("padding-bottom", ctx_r5._cellPadding);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-calendar-body-disabled", !item_r6.enabled)("mat-calendar-body-active", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7))("mat-calendar-body-range-start", ctx_r5._isRangeStart(item_r6.compareValue))("mat-calendar-body-range-end", ctx_r5._isRangeEnd(item_r6.compareValue))("mat-calendar-body-in-range", ctx_r5._isInRange(item_r6.compareValue))("mat-calendar-body-comparison-bridge-start", ctx_r5._isComparisonBridgeStart(item_r6.compareValue, rowIndex_r3, colIndex_r7))("mat-calendar-body-comparison-bridge-end", ctx_r5._isComparisonBridgeEnd(item_r6.compareValue, rowIndex_r3, colIndex_r7))("mat-calendar-body-comparison-start", ctx_r5._isComparisonStart(item_r6.compareValue))("mat-calendar-body-comparison-end", ctx_r5._isComparisonEnd(item_r6.compareValue))("mat-calendar-body-in-comparison-range", ctx_r5._isInComparisonRange(item_r6.compareValue))("mat-calendar-body-preview-start", ctx_r5._isPreviewStart(item_r6.compareValue))("mat-calendar-body-preview-end", ctx_r5._isPreviewEnd(item_r6.compareValue))("mat-calendar-body-in-preview", ctx_r5._isInPreview(item_r6.compareValue));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", item_r6.cssClasses)("tabindex", ctx_r5._isActiveCell(rowIndex_r3, colIndex_r7) ? 0 : -1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("data-mat-row", rowIndex_r3)("data-mat-col", colIndex_r7)("aria-label", item_r6.ariaLabel)("aria-disabled", !item_r6.enabled || null)("aria-selected", ctx_r5._isSelected(item_r6.compareValue));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-calendar-body-selected", ctx_r5._isSelected(item_r6.compareValue))("mat-calendar-body-comparison-identical", ctx_r5._isComparisonIdentical(item_r6.compareValue))("mat-calendar-body-today", ctx_r5.todayValue === item_r6.compareValue);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r6.displayValue, " ");
  }
}

function MatCalendarBody_tr_1_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](1, MatCalendarBody_tr_1_td_1_Template, 2, 6, "td", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, MatCalendarBody_tr_1_td_2_Template, 4, 46, "td", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var row_r2 = ctx.$implicit;
    var rowIndex_r3 = ctx.index;
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", rowIndex_r3 === 0 && ctx_r1._firstRowOffset);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", row_r2);
  }
}

function MatMonthView_th_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "th", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var day_r1 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-label", day_r1.long);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](day_r1.narrow);
  }
}

var _c1 = ["*"];

function MatCalendar_ng_template_0_Template(rf, ctx) {}

function MatCalendar_mat_month_view_2_Template(rf, ctx) {
  if (rf & 1) {
    var _r5 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "mat-month-view", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("activeDateChange", function MatCalendar_mat_month_view_2_Template_mat_month_view_activeDateChange_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r5);
      var ctx_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r4.activeDate = $event;
    })("_userSelection", function MatCalendar_mat_month_view_2_Template_mat_month_view__userSelection_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r5);
      var ctx_r6 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r6._dateSelected($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("activeDate", ctx_r1.activeDate)("selected", ctx_r1.selected)("dateFilter", ctx_r1.dateFilter)("maxDate", ctx_r1.maxDate)("minDate", ctx_r1.minDate)("dateClass", ctx_r1.dateClass)("comparisonStart", ctx_r1.comparisonStart)("comparisonEnd", ctx_r1.comparisonEnd);
  }
}

function MatCalendar_mat_year_view_3_Template(rf, ctx) {
  if (rf & 1) {
    var _r8 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "mat-year-view", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("activeDateChange", function MatCalendar_mat_year_view_3_Template_mat_year_view_activeDateChange_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r8);
      var ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r7.activeDate = $event;
    })("monthSelected", function MatCalendar_mat_year_view_3_Template_mat_year_view_monthSelected_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r8);
      var ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r9._monthSelectedInYearView($event);
    })("selectedChange", function MatCalendar_mat_year_view_3_Template_mat_year_view_selectedChange_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r8);
      var ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r10._goToDateInView($event, "month");
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("activeDate", ctx_r2.activeDate)("selected", ctx_r2.selected)("dateFilter", ctx_r2.dateFilter)("maxDate", ctx_r2.maxDate)("minDate", ctx_r2.minDate)("dateClass", ctx_r2.dateClass);
  }
}

function MatCalendar_mat_multi_year_view_4_Template(rf, ctx) {
  if (rf & 1) {
    var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "mat-multi-year-view", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("activeDateChange", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_activeDateChange_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r12);
      var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r11.activeDate = $event;
    })("yearSelected", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_yearSelected_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r12);
      var ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r13._yearSelectedInMultiYearView($event);
    })("selectedChange", function MatCalendar_mat_multi_year_view_4_Template_mat_multi_year_view_selectedChange_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r12);
      var ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r14._goToDateInView($event, "year");
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("activeDate", ctx_r3.activeDate)("selected", ctx_r3.selected)("dateFilter", ctx_r3.dateFilter)("maxDate", ctx_r3.maxDate)("minDate", ctx_r3.minDate)("dateClass", ctx_r3.dateClass);
  }
}

var _c2 = ["button"];

function MatDatepickerToggle__svg_svg_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnamespaceSVG"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "svg", 3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](1, "path", 4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }
}

var _c3 = [[["", "matDatepickerToggleIcon", ""]]];
var _c4 = ["[matDatepickerToggleIcon]"];
var _c5 = [[["input", "matStartDate", ""]], [["input", "matEndDate", ""]]];
var _c6 = ["input[matStartDate]", "input[matEndDate]"];

function createMissingDateImplError(provider) {
  return Error("MatDatepicker: No provider found for ".concat(provider, ". You must import one of the following ") + "modules at your application root: MatNativeDateModule, MatMomentDateModule, or provide a " + "custom implementation.");
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Datepicker data that requires internationalization. */


var MatDatepickerIntl = /*#__PURE__*/function () {
  function MatDatepickerIntl() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerIntl);

    /**
     * Stream that emits whenever the labels here are changed. Use this to notify
     * components if the labels have changed after initialization.
     */
    this.changes = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subject"]();
    /** A label for the calendar popup (used by screen readers). */

    this.calendarLabel = 'Calendar';
    /** A label for the button used to open the calendar popup (used by screen readers). */

    this.openCalendarLabel = 'Open calendar';
    /** A label for the previous month button (used by screen readers). */

    this.prevMonthLabel = 'Previous month';
    /** A label for the next month button (used by screen readers). */

    this.nextMonthLabel = 'Next month';
    /** A label for the previous year button (used by screen readers). */

    this.prevYearLabel = 'Previous year';
    /** A label for the next year button (used by screen readers). */

    this.nextYearLabel = 'Next year';
    /** A label for the previous multi-year button (used by screen readers). */

    this.prevMultiYearLabel = 'Previous 20 years';
    /** A label for the next multi-year button (used by screen readers). */

    this.nextMultiYearLabel = 'Next 20 years';
    /** A label for the 'switch to month view' button (used by screen readers). */

    this.switchToMonthViewLabel = 'Choose date';
    /** A label for the 'switch to year view' button (used by screen readers). */

    this.switchToMultiYearViewLabel = 'Choose month and year';
  }
  /** Formats a range of years. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDatepickerIntl, [{
    key: "formatYearRange",
    value: function formatYearRange(start, end) {
      return "".concat(start, " \u2013 ").concat(end);
    }
  }]);

  return MatDatepickerIntl;
}();

MatDatepickerIntl.ɵfac = function MatDatepickerIntl_Factory(t) {
  return new (t || MatDatepickerIntl)();
};

MatDatepickerIntl.ɵprov = Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjectable"])({
  factory: function MatDatepickerIntl_Factory() {
    return new MatDatepickerIntl();
  },
  token: MatDatepickerIntl,
  providedIn: "root"
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerIntl, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injectable"],
    args: [{
      providedIn: 'root'
    }]
  }], function () {
    return [];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An internal class that represents the data corresponding to a single calendar cell.
 * @docs-private
 */


var MatCalendarCell = function MatCalendarCell(value, displayValue, ariaLabel, enabled) {
  var cssClasses = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
  var compareValue = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : value;
  var rawValue = arguments.length > 6 ? arguments[6] : undefined;

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatCalendarCell);

  this.value = value;
  this.displayValue = displayValue;
  this.ariaLabel = ariaLabel;
  this.enabled = enabled;
  this.cssClasses = cssClasses;
  this.compareValue = compareValue;
  this.rawValue = rawValue;
};
/**
 * An internal component used to display calendar data in a table.
 * @docs-private
 */


var MatCalendarBody = /*#__PURE__*/function () {
  function MatCalendarBody(_elementRef, _ngZone) {
    var _this = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatCalendarBody);

    this._elementRef = _elementRef;
    this._ngZone = _ngZone;
    /** The number of columns in the table. */

    this.numCols = 7;
    /** The cell number of the active cell in the table. */

    this.activeCell = 0;
    /** Whether a range is being selected. */

    this.isRange = false;
    /**
     * The aspect ratio (width / height) to use for the cells in the table. This aspect ratio will be
     * maintained even as the table resizes.
     */

    this.cellAspectRatio = 1;
    /** Start of the preview range. */

    this.previewStart = null;
    /** End of the preview range. */

    this.previewEnd = null;
    /** Emits when a new value is selected. */

    this.selectedValueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when the preview has changed as a result of a user action. */

    this.previewChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /**
     * Event handler for when the user enters an element
     * inside the calendar body (e.g. by hovering in or focus).
     */

    this._enterHandler = function (event) {
      if (_this._skipNextFocus && event.type === 'focus') {
        _this._skipNextFocus = false;
        return;
      } // We only need to hit the zone when we're selecting a range.


      if (event.target && _this.isRange) {
        var cell = _this._getCellFromElement(event.target);

        if (cell) {
          _this._ngZone.run(function () {
            return _this.previewChange.emit({
              value: cell.enabled ? cell : null,
              event: event
            });
          });
        }
      }
    };
    /**
     * Event handler for when the user's pointer leaves an element
     * inside the calendar body (e.g. by hovering out or blurring).
     */


    this._leaveHandler = function (event) {
      // We only need to hit the zone when we're selecting a range.
      if (_this.previewEnd !== null && _this.isRange) {
        // Only reset the preview end value when leaving cells. This looks better, because
        // we have a gap between the cells and the rows and we don't want to remove the
        // range just for it to show up again when the user moves a few pixels to the side.
        if (event.target && isTableCell(event.target)) {
          _this._ngZone.run(function () {
            return _this.previewChange.emit({
              value: null,
              event: event
            });
          });
        }
      }
    };

    _ngZone.runOutsideAngular(function () {
      var element = _elementRef.nativeElement;
      element.addEventListener('mouseenter', _this._enterHandler, true);
      element.addEventListener('focus', _this._enterHandler, true);
      element.addEventListener('mouseleave', _this._leaveHandler, true);
      element.addEventListener('blur', _this._leaveHandler, true);
    });
  }
  /** Called when a cell is clicked. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatCalendarBody, [{
    key: "_cellClicked",
    value: function _cellClicked(cell, event) {
      if (cell.enabled) {
        this.selectedValueChange.emit({
          value: cell.value,
          event: event
        });
      }
    }
    /** Returns whether a cell should be marked as selected. */

  }, {
    key: "_isSelected",
    value: function _isSelected(value) {
      return this.startValue === value || this.endValue === value;
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var columnChanges = changes['numCols'];
      var rows = this.rows,
          numCols = this.numCols;

      if (changes['rows'] || columnChanges) {
        this._firstRowOffset = rows && rows.length && rows[0].length ? numCols - rows[0].length : 0;
      }

      if (changes['cellAspectRatio'] || columnChanges || !this._cellPadding) {
        this._cellPadding = "".concat(50 * this.cellAspectRatio / numCols, "%");
      }

      if (columnChanges || !this._cellWidth) {
        this._cellWidth = "".concat(100 / numCols, "%");
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      var element = this._elementRef.nativeElement;
      element.removeEventListener('mouseenter', this._enterHandler, true);
      element.removeEventListener('focus', this._enterHandler, true);
      element.removeEventListener('mouseleave', this._leaveHandler, true);
      element.removeEventListener('blur', this._leaveHandler, true);
    }
    /** Returns whether a cell is active. */

  }, {
    key: "_isActiveCell",
    value: function _isActiveCell(rowIndex, colIndex) {
      var cellNumber = rowIndex * this.numCols + colIndex; // Account for the fact that the first row may not have as many cells.

      if (rowIndex) {
        cellNumber -= this._firstRowOffset;
      }

      return cellNumber == this.activeCell;
    }
    /** Focuses the active cell after the microtask queue is empty. */

  }, {
    key: "_focusActiveCell",
    value: function _focusActiveCell() {
      var _this2 = this;

      var movePreview = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;

      this._ngZone.runOutsideAngular(function () {
        _this2._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_20__["take"])(1)).subscribe(function () {
          var activeCell = _this2._elementRef.nativeElement.querySelector('.mat-calendar-body-active');

          if (activeCell) {
            if (!movePreview) {
              _this2._skipNextFocus = true;
            }

            activeCell.focus();
          }
        });
      });
    }
    /** Gets whether a value is the start of the main range. */

  }, {
    key: "_isRangeStart",
    value: function _isRangeStart(value) {
      return isStart(value, this.startValue, this.endValue);
    }
    /** Gets whether a value is the end of the main range. */

  }, {
    key: "_isRangeEnd",
    value: function _isRangeEnd(value) {
      return isEnd(value, this.startValue, this.endValue);
    }
    /** Gets whether a value is within the currently-selected range. */

  }, {
    key: "_isInRange",
    value: function _isInRange(value) {
      return isInRange(value, this.startValue, this.endValue, this.isRange);
    }
    /** Gets whether a value is the start of the comparison range. */

  }, {
    key: "_isComparisonStart",
    value: function _isComparisonStart(value) {
      return isStart(value, this.comparisonStart, this.comparisonEnd);
    }
    /** Whether the cell is a start bridge cell between the main and comparison ranges. */

  }, {
    key: "_isComparisonBridgeStart",
    value: function _isComparisonBridgeStart(value, rowIndex, colIndex) {
      if (!this._isComparisonStart(value) || this._isRangeStart(value) || !this._isInRange(value)) {
        return false;
      }

      var previousCell = this.rows[rowIndex][colIndex - 1];

      if (!previousCell) {
        var previousRow = this.rows[rowIndex - 1];
        previousCell = previousRow && previousRow[previousRow.length - 1];
      }

      return previousCell && !this._isRangeEnd(previousCell.compareValue);
    }
    /** Whether the cell is an end bridge cell between the main and comparison ranges. */

  }, {
    key: "_isComparisonBridgeEnd",
    value: function _isComparisonBridgeEnd(value, rowIndex, colIndex) {
      if (!this._isComparisonEnd(value) || this._isRangeEnd(value) || !this._isInRange(value)) {
        return false;
      }

      var nextCell = this.rows[rowIndex][colIndex + 1];

      if (!nextCell) {
        var nextRow = this.rows[rowIndex + 1];
        nextCell = nextRow && nextRow[0];
      }

      return nextCell && !this._isRangeStart(nextCell.compareValue);
    }
    /** Gets whether a value is the end of the comparison range. */

  }, {
    key: "_isComparisonEnd",
    value: function _isComparisonEnd(value) {
      return isEnd(value, this.comparisonStart, this.comparisonEnd);
    }
    /** Gets whether a value is within the current comparison range. */

  }, {
    key: "_isInComparisonRange",
    value: function _isInComparisonRange(value) {
      return isInRange(value, this.comparisonStart, this.comparisonEnd, this.isRange);
    }
    /**
     * Gets whether a value is the same as the start and end of the comparison range.
     * For context, the functions that we use to determine whether something is the start/end of
     * a range don't allow for the start and end to be on the same day, because we'd have to use
     * much more specific CSS selectors to style them correctly in all scenarios. This is fine for
     * the regular range, because when it happens, the selected styles take over and still show where
     * the range would've been, however we don't have these selected styles for a comparison range.
     * This function is used to apply a class that serves the same purpose as the one for selected
     * dates, but it only applies in the context of a comparison range.
     */

  }, {
    key: "_isComparisonIdentical",
    value: function _isComparisonIdentical(value) {
      // Note that we don't need to null check the start/end
      // here, because the `value` will always be defined.
      return this.comparisonStart === this.comparisonEnd && value === this.comparisonStart;
    }
    /** Gets whether a value is the start of the preview range. */

  }, {
    key: "_isPreviewStart",
    value: function _isPreviewStart(value) {
      return isStart(value, this.previewStart, this.previewEnd);
    }
    /** Gets whether a value is the end of the preview range. */

  }, {
    key: "_isPreviewEnd",
    value: function _isPreviewEnd(value) {
      return isEnd(value, this.previewStart, this.previewEnd);
    }
    /** Gets whether a value is inside the preview range. */

  }, {
    key: "_isInPreview",
    value: function _isInPreview(value) {
      return isInRange(value, this.previewStart, this.previewEnd, this.isRange);
    }
    /** Finds the MatCalendarCell that corresponds to a DOM node. */

  }, {
    key: "_getCellFromElement",
    value: function _getCellFromElement(element) {
      var cell;

      if (isTableCell(element)) {
        cell = element;
      } else if (isTableCell(element.parentNode)) {
        cell = element.parentNode;
      }

      if (cell) {
        var row = cell.getAttribute('data-mat-row');
        var col = cell.getAttribute('data-mat-col');

        if (row && col) {
          return this.rows[parseInt(row)][parseInt(col)];
        }
      }

      return null;
    }
  }]);

  return MatCalendarBody;
}();

MatCalendarBody.ɵfac = function MatCalendarBody_Factory(t) {
  return new (t || MatCalendarBody)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]));
};

MatCalendarBody.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatCalendarBody,
  selectors: [["", "mat-calendar-body", ""]],
  hostAttrs: ["role", "grid", "aria-readonly", "true", 1, "mat-calendar-body"],
  inputs: {
    numCols: "numCols",
    activeCell: "activeCell",
    isRange: "isRange",
    cellAspectRatio: "cellAspectRatio",
    previewStart: "previewStart",
    previewEnd: "previewEnd",
    label: "label",
    rows: "rows",
    todayValue: "todayValue",
    startValue: "startValue",
    endValue: "endValue",
    labelMinRequiredCells: "labelMinRequiredCells",
    comparisonStart: "comparisonStart",
    comparisonEnd: "comparisonEnd"
  },
  outputs: {
    selectedValueChange: "selectedValueChange",
    previewChange: "previewChange"
  },
  exportAs: ["matCalendarBody"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]],
  attrs: _c0,
  decls: 2,
  vars: 2,
  consts: [["aria-hidden", "true", 4, "ngIf"], ["role", "row", 4, "ngFor", "ngForOf"], ["aria-hidden", "true"], [1, "mat-calendar-body-label"], ["role", "row"], ["aria-hidden", "true", "class", "mat-calendar-body-label", 3, "paddingTop", "paddingBottom", 4, "ngIf"], ["role", "gridcell", "class", "mat-calendar-body-cell", 3, "ngClass", "tabindex", "mat-calendar-body-disabled", "mat-calendar-body-active", "mat-calendar-body-range-start", "mat-calendar-body-range-end", "mat-calendar-body-in-range", "mat-calendar-body-comparison-bridge-start", "mat-calendar-body-comparison-bridge-end", "mat-calendar-body-comparison-start", "mat-calendar-body-comparison-end", "mat-calendar-body-in-comparison-range", "mat-calendar-body-preview-start", "mat-calendar-body-preview-end", "mat-calendar-body-in-preview", "width", "paddingTop", "paddingBottom", "click", 4, "ngFor", "ngForOf"], ["aria-hidden", "true", 1, "mat-calendar-body-label"], ["role", "gridcell", 1, "mat-calendar-body-cell", 3, "ngClass", "tabindex", "click"], [1, "mat-calendar-body-cell-content", "mat-focus-indicator"], [1, "mat-calendar-body-cell-preview"]],
  template: function MatCalendarBody_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](0, MatCalendarBody_tr_0_Template, 3, 6, "tr", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](1, MatCalendarBody_tr_1_Template, 3, 2, "tr", 1);
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx._firstRowOffset < ctx.labelMinRequiredCells);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.rows);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgForOf"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgClass"]],
  styles: [".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\"\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatCalendarBody.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }];
};

MatCalendarBody.propDecorators = {
  label: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  rows: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  todayValue: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  startValue: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  endValue: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  labelMinRequiredCells: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  numCols: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  activeCell: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  isRange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  cellAspectRatio: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  previewStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  previewEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selectedValueChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  previewChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatCalendarBody, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: '[mat-calendar-body]',
      template: "<!--\n  If there's not enough space in the first row, create a separate label row. We mark this row as\n  aria-hidden because we don't want it to be read out as one of the weeks in the month.\n-->\n<tr *ngIf=\"_firstRowOffset < labelMinRequiredCells\" aria-hidden=\"true\">\n  <td class=\"mat-calendar-body-label\"\n      [attr.colspan]=\"numCols\"\n      [style.paddingTop]=\"_cellPadding\"\n      [style.paddingBottom]=\"_cellPadding\">\n    {{label}}\n  </td>\n</tr>\n\n<!-- Create the first row separately so we can include a special spacer cell. -->\n<tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\">\n  <!--\n    We mark this cell as aria-hidden so it doesn't get read out as one of the days in the week.\n    The aspect ratio of the table cells is maintained by setting the top and bottom padding as a\n    percentage of the width (a variant of the trick described here:\n    https://www.w3schools.com/howto/howto_css_aspect_ratio.asp).\n  -->\n  <td *ngIf=\"rowIndex === 0 && _firstRowOffset\"\n      aria-hidden=\"true\"\n      class=\"mat-calendar-body-label\"\n      [attr.colspan]=\"_firstRowOffset\"\n      [style.paddingTop]=\"_cellPadding\"\n      [style.paddingBottom]=\"_cellPadding\">\n    {{_firstRowOffset >= labelMinRequiredCells ? label : ''}}\n  </td>\n  <td *ngFor=\"let item of row; let colIndex = index\"\n      role=\"gridcell\"\n      class=\"mat-calendar-body-cell\"\n      [ngClass]=\"item.cssClasses\"\n      [tabindex]=\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\"\n      [attr.data-mat-row]=\"rowIndex\"\n      [attr.data-mat-col]=\"colIndex\"\n      [class.mat-calendar-body-disabled]=\"!item.enabled\"\n      [class.mat-calendar-body-active]=\"_isActiveCell(rowIndex, colIndex)\"\n      [class.mat-calendar-body-range-start]=\"_isRangeStart(item.compareValue)\"\n      [class.mat-calendar-body-range-end]=\"_isRangeEnd(item.compareValue)\"\n      [class.mat-calendar-body-in-range]=\"_isInRange(item.compareValue)\"\n      [class.mat-calendar-body-comparison-bridge-start]=\"_isComparisonBridgeStart(item.compareValue, rowIndex, colIndex)\"\n      [class.mat-calendar-body-comparison-bridge-end]=\"_isComparisonBridgeEnd(item.compareValue, rowIndex, colIndex)\"\n      [class.mat-calendar-body-comparison-start]=\"_isComparisonStart(item.compareValue)\"\n      [class.mat-calendar-body-comparison-end]=\"_isComparisonEnd(item.compareValue)\"\n      [class.mat-calendar-body-in-comparison-range]=\"_isInComparisonRange(item.compareValue)\"\n      [class.mat-calendar-body-preview-start]=\"_isPreviewStart(item.compareValue)\"\n      [class.mat-calendar-body-preview-end]=\"_isPreviewEnd(item.compareValue)\"\n      [class.mat-calendar-body-in-preview]=\"_isInPreview(item.compareValue)\"\n      [attr.aria-label]=\"item.ariaLabel\"\n      [attr.aria-disabled]=\"!item.enabled || null\"\n      [attr.aria-selected]=\"_isSelected(item.compareValue)\"\n      (click)=\"_cellClicked(item, $event)\"\n      [style.width]=\"_cellWidth\"\n      [style.paddingTop]=\"_cellPadding\"\n      [style.paddingBottom]=\"_cellPadding\">\n      <div class=\"mat-calendar-body-cell-content mat-focus-indicator\"\n        [class.mat-calendar-body-selected]=\"_isSelected(item.compareValue)\"\n        [class.mat-calendar-body-comparison-identical]=\"_isComparisonIdentical(item.compareValue)\"\n        [class.mat-calendar-body-today]=\"todayValue === item.compareValue\">\n        {{item.displayValue}}\n      </div>\n      <div class=\"mat-calendar-body-cell-preview\"></div>\n  </td>\n</tr>\n",
      host: {
        'class': 'mat-calendar-body',
        'role': 'grid',
        'aria-readonly': 'true'
      },
      exportAs: 'matCalendarBody',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-calendar-body{min-width:224px}.mat-calendar-body-label{height:0;line-height:0;text-align:left;padding-left:4.7142857143%;padding-right:4.7142857143%}.mat-calendar-body-cell{position:relative;height:0;line-height:0;text-align:center;outline:none;cursor:pointer}.mat-calendar-body-cell::before,.mat-calendar-body-cell::after,.mat-calendar-body-cell-preview{content:\"\";position:absolute;top:5%;left:0;z-index:0;box-sizing:border-box;height:90%;width:100%}.mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-start::after,.mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,.mat-calendar-body-comparison-start::after,.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:5%;width:95%;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-range-start:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-start:not(.mat-calendar-body-comparison-bridge-start)::before,[dir=rtl] .mat-calendar-body-comparison-start::after,[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{left:0;border-radius:0;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,.mat-calendar-body-comparison-end::after,.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}[dir=rtl] .mat-calendar-body-range-end:not(.mat-calendar-body-in-comparison-range)::before,[dir=rtl] .mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-end:not(.mat-calendar-body-comparison-bridge-end)::before,[dir=rtl] .mat-calendar-body-comparison-end::after,[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{left:5%;border-radius:0;border-top-left-radius:999px;border-bottom-left-radius:999px}[dir=rtl] .mat-calendar-body-comparison-bridge-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-bridge-end.mat-calendar-body-range-start::after{width:95%;border-top-right-radius:999px;border-bottom-right-radius:999px}.mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,[dir=rtl] .mat-calendar-body-comparison-start.mat-calendar-body-range-end::after,.mat-calendar-body-comparison-end.mat-calendar-body-range-start::after,[dir=rtl] .mat-calendar-body-comparison-end.mat-calendar-body-range-start::after{width:90%}.mat-calendar-body-in-preview .mat-calendar-body-cell-preview{border-top:dashed 1px;border-bottom:dashed 1px}.mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:dashed 1px}[dir=rtl] .mat-calendar-body-preview-start .mat-calendar-body-cell-preview{border-left:0;border-right:dashed 1px}.mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:dashed 1px}[dir=rtl] .mat-calendar-body-preview-end .mat-calendar-body-cell-preview{border-right:0;border-left:dashed 1px}.mat-calendar-body-disabled{cursor:default}.mat-calendar-body-cell-content{top:5%;left:5%;z-index:1;display:flex;align-items:center;justify-content:center;box-sizing:border-box;width:90%;height:90%;line-height:1;border-width:1px;border-style:solid;border-radius:999px}.mat-calendar-body-cell-content.mat-focus-indicator{position:absolute}.cdk-high-contrast-active .mat-calendar-body-cell-content{border:none}.cdk-high-contrast-active .mat-datepicker-popup:not(:empty),.cdk-high-contrast-active .mat-calendar-body-selected{outline:solid 1px}.cdk-high-contrast-active .mat-calendar-body-today{outline:dotted 1px}.cdk-high-contrast-active .cdk-keyboard-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected),.cdk-high-contrast-active .cdk-program-focused .mat-calendar-body-active>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){outline:dotted 2px}[dir=rtl] .mat-calendar-body-label{text-align:right}@media(hover: none){.mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover>.mat-calendar-body-cell-content:not(.mat-calendar-body-selected){background-color:transparent}}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }];
  }, {
    numCols: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    activeCell: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    isRange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    cellAspectRatio: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    previewStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    previewEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selectedValueChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    previewChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    label: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    rows: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    todayValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    startValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    endValue: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    labelMinRequiredCells: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/** Checks whether a node is a table cell element. */


function isTableCell(node) {
  return node.nodeName === 'TD';
}
/** Checks whether a value is the start of a range. */


function isStart(value, start, end) {
  return end !== null && start !== end && value < end && value === start;
}
/** Checks whether a value is the end of a range. */


function isEnd(value, start, end) {
  return start !== null && start !== end && value >= start && value === end;
}
/** Checks whether a value is inside of a range. */


function isInRange(value, start, end, rangeEnabled) {
  return rangeEnabled && start !== null && end !== null && start !== end && value >= start && value <= end;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** A class representing a range of dates. */


var DateRange = function DateRange(
/** The start date of the range. */
start,
/** The end date of the range. */
end) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, DateRange);

  this.start = start;
  this.end = end;
};
/** A selection model containing a date selection. */


var MatDateSelectionModel = /*#__PURE__*/function () {
  function MatDateSelectionModel(
  /** The current selection. */
  selection, _adapter) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDateSelectionModel);

    this.selection = selection;
    this._adapter = _adapter;
    this._selectionChanged = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subject"]();
    /** Emits when the selection has changed. */

    this.selectionChanged = this._selectionChanged;
    this.selection = selection;
  }
  /**
   * Updates the current selection in the model.
   * @param value New selection that should be assigned.
   * @param source Object that triggered the selection change.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDateSelectionModel, [{
    key: "updateSelection",
    value: function updateSelection(value, source) {
      this.selection = value;

      this._selectionChanged.next({
        selection: value,
        source: source
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._selectionChanged.complete();
    }
  }, {
    key: "_isValidDateInstance",
    value: function _isValidDateInstance(date) {
      return this._adapter.isDateInstance(date) && this._adapter.isValid(date);
    }
  }]);

  return MatDateSelectionModel;
}();

MatDateSelectionModel.ɵfac = function MatDateSelectionModel_Factory(t) {
  return new (t || MatDateSelectionModel)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](undefined), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]));
};

MatDateSelectionModel.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatDateSelectionModel
});

MatDateSelectionModel.ctorParameters = function () {
  return [{
    type: undefined
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDateSelectionModel, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: undefined
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
    }];
  }, null);
})();
/**  A selection model that contains a single date. */


var MatSingleDateSelectionModel = /*#__PURE__*/function (_MatDateSelectionMode) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatSingleDateSelectionModel, _MatDateSelectionMode);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatSingleDateSelectionModel);

  function MatSingleDateSelectionModel(adapter) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatSingleDateSelectionModel);

    return _super.call(this, null, adapter);
  }
  /**
   * Adds a date to the current selection. In the case of a single date selection, the added date
   * simply overwrites the previous selection
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatSingleDateSelectionModel, [{
    key: "add",
    value: function add(date) {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatSingleDateSelectionModel.prototype), "updateSelection", this).call(this, date, this);
    }
    /** Checks whether the current selection is valid. */

  }, {
    key: "isValid",
    value: function isValid() {
      return this.selection != null && this._isValidDateInstance(this.selection);
    }
    /**
     * Checks whether the current selection is complete. In the case of a single date selection, this
     * is true if the current selection is not null.
     */

  }, {
    key: "isComplete",
    value: function isComplete() {
      return this.selection != null;
    }
  }]);

  return MatSingleDateSelectionModel;
}(MatDateSelectionModel);

MatSingleDateSelectionModel.ɵfac = function MatSingleDateSelectionModel_Factory(t) {
  return new (t || MatSingleDateSelectionModel)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]));
};

MatSingleDateSelectionModel.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjectable"]({
  token: MatSingleDateSelectionModel,
  factory: MatSingleDateSelectionModel.ɵfac
});

MatSingleDateSelectionModel.ctorParameters = function () {
  return [{
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatSingleDateSelectionModel, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injectable"]
  }], function () {
    return [{
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
    }];
  }, null);
})();
/**  A selection model that contains a date range. */


var MatRangeDateSelectionModel = /*#__PURE__*/function (_MatDateSelectionMode2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatRangeDateSelectionModel, _MatDateSelectionMode2);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatRangeDateSelectionModel);

  function MatRangeDateSelectionModel(adapter) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatRangeDateSelectionModel);

    return _super2.call(this, new DateRange(null, null), adapter);
  }
  /**
   * Adds a date to the current selection. In the case of a date range selection, the added date
   * fills in the next `null` value in the range. If both the start and the end already have a date,
   * the selection is reset so that the given date is the new `start` and the `end` is null.
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatRangeDateSelectionModel, [{
    key: "add",
    value: function add(date) {
      var _this$selection = this.selection,
          start = _this$selection.start,
          end = _this$selection.end;

      if (start == null) {
        start = date;
      } else if (end == null) {
        end = date;
      } else {
        start = date;
        end = null;
      }

      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatRangeDateSelectionModel.prototype), "updateSelection", this).call(this, new DateRange(start, end), this);
    }
    /** Checks whether the current selection is valid. */

  }, {
    key: "isValid",
    value: function isValid() {
      var _this$selection2 = this.selection,
          start = _this$selection2.start,
          end = _this$selection2.end; // Empty ranges are valid.

      if (start == null && end == null) {
        return true;
      } // Complete ranges are only valid if both dates are valid and the start is before the end.


      if (start != null && end != null) {
        return this._isValidDateInstance(start) && this._isValidDateInstance(end) && this._adapter.compareDate(start, end) <= 0;
      } // Partial ranges are valid if the start/end is valid.


      return (start == null || this._isValidDateInstance(start)) && (end == null || this._isValidDateInstance(end));
    }
    /**
     * Checks whether the current selection is complete. In the case of a date range selection, this
     * is true if the current selection has a non-null `start` and `end`.
     */

  }, {
    key: "isComplete",
    value: function isComplete() {
      return this.selection.start != null && this.selection.end != null;
    }
  }]);

  return MatRangeDateSelectionModel;
}(MatDateSelectionModel);

MatRangeDateSelectionModel.ɵfac = function MatRangeDateSelectionModel_Factory(t) {
  return new (t || MatRangeDateSelectionModel)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]));
};

MatRangeDateSelectionModel.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjectable"]({
  token: MatRangeDateSelectionModel,
  factory: MatRangeDateSelectionModel.ɵfac
});

MatRangeDateSelectionModel.ctorParameters = function () {
  return [{
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatRangeDateSelectionModel, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injectable"]
  }], function () {
    return [{
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
    }];
  }, null);
})();
/** @docs-private */


function MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {
  return parent || new MatSingleDateSelectionModel(adapter);
}
/** Used to provide a single selection model to a component. */


var MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER = {
  provide: MatDateSelectionModel,
  deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_12__["SkipSelf"](), MatDateSelectionModel], _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]],
  useFactory: MAT_SINGLE_DATE_SELECTION_MODEL_FACTORY
};
/** @docs-private */

function MAT_RANGE_DATE_SELECTION_MODEL_FACTORY(parent, adapter) {
  return parent || new MatRangeDateSelectionModel(adapter);
}
/** Used to provide a range selection model to a component. */


var MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER = {
  provide: MatDateSelectionModel,
  deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_12__["SkipSelf"](), MatDateSelectionModel], _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]],
  useFactory: MAT_RANGE_DATE_SELECTION_MODEL_FACTORY
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token used to customize the date range selection behavior. */

var MAT_DATE_RANGE_SELECTION_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('MAT_DATE_RANGE_SELECTION_STRATEGY');
/** Provides the default date range selection behavior. */

var DefaultMatCalendarRangeStrategy = /*#__PURE__*/function () {
  function DefaultMatCalendarRangeStrategy(_dateAdapter) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, DefaultMatCalendarRangeStrategy);

    this._dateAdapter = _dateAdapter;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(DefaultMatCalendarRangeStrategy, [{
    key: "selectionFinished",
    value: function selectionFinished(date, currentRange) {
      var start = currentRange.start,
          end = currentRange.end;

      if (start == null) {
        start = date;
      } else if (end == null && date && this._dateAdapter.compareDate(date, start) >= 0) {
        end = date;
      } else {
        start = date;
        end = null;
      }

      return new DateRange(start, end);
    }
  }, {
    key: "createPreview",
    value: function createPreview(activeDate, currentRange) {
      var start = null;
      var end = null;

      if (currentRange.start && !currentRange.end && activeDate) {
        start = currentRange.start;
        end = activeDate;
      }

      return new DateRange(start, end);
    }
  }]);

  return DefaultMatCalendarRangeStrategy;
}();

DefaultMatCalendarRangeStrategy.ɵfac = function DefaultMatCalendarRangeStrategy_Factory(t) {
  return new (t || DefaultMatCalendarRangeStrategy)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]));
};

DefaultMatCalendarRangeStrategy.ɵprov = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjectable"]({
  token: DefaultMatCalendarRangeStrategy,
  factory: DefaultMatCalendarRangeStrategy.ɵfac
});

DefaultMatCalendarRangeStrategy.ctorParameters = function () {
  return [{
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](DefaultMatCalendarRangeStrategy, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injectable"]
  }], function () {
    return [{
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
    }];
  }, null);
})();
/** @docs-private */


function MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY(parent, adapter) {
  return parent || new DefaultMatCalendarRangeStrategy(adapter);
}
/** @docs-private */


var MAT_CALENDAR_RANGE_STRATEGY_PROVIDER = {
  provide: MAT_DATE_RANGE_SELECTION_STRATEGY,
  deps: [[new _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"](), new _angular_core__WEBPACK_IMPORTED_MODULE_12__["SkipSelf"](), MAT_DATE_RANGE_SELECTION_STRATEGY], _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]],
  useFactory: MAT_CALENDAR_RANGE_STRATEGY_PROVIDER_FACTORY
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

var DAYS_PER_WEEK = 7;
/**
 * An internal component used to display a single month in the datepicker.
 * @docs-private
 */

var MatMonthView = /*#__PURE__*/function () {
  function MatMonthView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir, _rangeStrategy) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatMonthView);

    this._changeDetectorRef = _changeDetectorRef;
    this._dateFormats = _dateFormats;
    this._dateAdapter = _dateAdapter;
    this._dir = _dir;
    this._rangeStrategy = _rangeStrategy;
    this._rerenderSubscription = rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"].EMPTY;
    /** Emits when a new date is selected. */

    this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when any date is selected. */

    this._userSelection = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when any date is activated. */

    this.activeDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();

    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      if (!this._dateAdapter) {
        throw createMissingDateImplError('DateAdapter');
      }

      if (!this._dateFormats) {
        throw createMissingDateImplError('MAT_DATE_FORMATS');
      }
    }

    this._activeDate = this._dateAdapter.today();
  }
  /**
   * The date to display in this month view (everything other than the month and year is ignored).
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatMonthView, [{
    key: "activeDate",
    get: function get() {
      return this._activeDate;
    },
    set: function set(value) {
      var oldActiveDate = this._activeDate;

      var validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();

      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);

      if (!this._hasSameMonthAndYear(oldActiveDate, this._activeDate)) {
        this._init();
      }
    }
    /** The currently selected date. */

  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    },
    set: function set(value) {
      if (value instanceof DateRange) {
        this._selected = value;
      } else {
        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
      }

      this._setRanges(this._selected);
    }
    /** The minimum selectable date. */

  }, {
    key: "minDate",
    get: function get() {
      return this._minDate;
    },
    set: function set(value) {
      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
    /** The maximum selectable date. */

  }, {
    key: "maxDate",
    get: function get() {
      return this._maxDate;
    },
    set: function set(value) {
      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this3 = this;

      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_20__["startWith"])(null)).subscribe(function () {
        return _this3._init();
      });
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var comparisonChange = changes['comparisonStart'] || changes['comparisonEnd'];

      if (comparisonChange && !comparisonChange.firstChange) {
        this._setRanges(this.selected);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._rerenderSubscription.unsubscribe();
    }
    /** Handles when a new date is selected. */

  }, {
    key: "_dateSelected",
    value: function _dateSelected(event) {
      var date = event.value;

      var selectedYear = this._dateAdapter.getYear(this.activeDate);

      var selectedMonth = this._dateAdapter.getMonth(this.activeDate);

      var selectedDate = this._dateAdapter.createDate(selectedYear, selectedMonth, date);

      var rangeStartDate;
      var rangeEndDate;

      if (this._selected instanceof DateRange) {
        rangeStartDate = this._getDateInCurrentMonth(this._selected.start);
        rangeEndDate = this._getDateInCurrentMonth(this._selected.end);
      } else {
        rangeStartDate = rangeEndDate = this._getDateInCurrentMonth(this._selected);
      }

      if (rangeStartDate !== date || rangeEndDate !== date) {
        this.selectedChange.emit(selectedDate);
      }

      this._userSelection.emit({
        value: selectedDate,
        event: event.event
      });
    }
    /** Handles keydown events on the calendar body when calendar is in month view. */

  }, {
    key: "_handleCalendarBodyKeydown",
    value: function _handleCalendarBodyKeydown(event) {
      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent
      // disabled ones from being selected. This may not be ideal, we should look into whether
      // navigation should skip over disabled dates, and if so, how to implement that efficiently.
      var oldActiveDate = this._activeDate;

      var isRtl = this._isRtl();

      switch (event.keyCode) {
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["LEFT_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? 1 : -1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["RIGHT_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, isRtl ? -1 : 1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["UP_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, -7);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["DOWN_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 7);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["HOME"]:
          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, 1 - this._dateAdapter.getDate(this._activeDate));
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["END"]:
          this.activeDate = this._dateAdapter.addCalendarDays(this._activeDate, this._dateAdapter.getNumDaysInMonth(this._activeDate) - this._dateAdapter.getDate(this._activeDate));
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["PAGE_UP"]:
          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, -1) : this._dateAdapter.addCalendarMonths(this._activeDate, -1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["PAGE_DOWN"]:
          this.activeDate = event.altKey ? this._dateAdapter.addCalendarYears(this._activeDate, 1) : this._dateAdapter.addCalendarMonths(this._activeDate, 1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["ENTER"]:
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["SPACE"]:
          if (!this.dateFilter || this.dateFilter(this._activeDate)) {
            this._dateSelected({
              value: this._dateAdapter.getDate(this._activeDate),
              event: event
            }); // Prevent unexpected default actions such as form submission.


            event.preventDefault();
          }

          return;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["ESCAPE"]:
          // Abort the current range selection if the user presses escape mid-selection.
          if (this._previewEnd != null) {
            this._previewStart = this._previewEnd = null;
            this.selectedChange.emit(null);

            this._userSelection.emit({
              value: null,
              event: event
            });

            event.preventDefault();
            event.stopPropagation(); // Prevents the overlay from closing.
          }

          return;

        default:
          // Don't prevent default or focus active cell on keys that we don't explicitly handle.
          return;
      }

      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {
        this.activeDateChange.emit(this.activeDate);
      }

      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.


      event.preventDefault();
    }
    /** Initializes this month view. */

  }, {
    key: "_init",
    value: function _init() {
      this._setRanges(this.selected);

      this._todayDate = this._getCellCompareValue(this._dateAdapter.today());
      this._monthLabel = this._dateAdapter.getMonthNames('short')[this._dateAdapter.getMonth(this.activeDate)].toLocaleUpperCase();

      var firstOfMonth = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), 1);

      this._firstWeekOffset = (DAYS_PER_WEEK + this._dateAdapter.getDayOfWeek(firstOfMonth) - this._dateAdapter.getFirstDayOfWeek()) % DAYS_PER_WEEK;

      this._initWeekdays();

      this._createWeekCells();

      this._changeDetectorRef.markForCheck();
    }
    /** Focuses the active cell after the microtask queue is empty. */

  }, {
    key: "_focusActiveCell",
    value: function _focusActiveCell(movePreview) {
      this._matCalendarBody._focusActiveCell(movePreview);
    }
    /** Called when the user has activated a new cell and the preview needs to be updated. */

  }, {
    key: "_previewChanged",
    value: function _previewChanged(_ref) {
      var event = _ref.event,
          cell = _ref.value;

      if (this._rangeStrategy) {
        // We can assume that this will be a range, because preview
        // events aren't fired for single date selections.
        var _value = cell ? cell.rawValue : null;

        var previewRange = this._rangeStrategy.createPreview(_value, this.selected, event);

        this._previewStart = this._getCellCompareValue(previewRange.start);
        this._previewEnd = this._getCellCompareValue(previewRange.end); // Note that here we need to use `detectChanges`, rather than `markForCheck`, because
        // the way `_focusActiveCell` is set up at the moment makes it fire at the wrong time
        // when navigating one month back using the keyboard which will cause this handler
        // to throw a "changed after checked" error when updating the preview state.

        this._changeDetectorRef.detectChanges();
      }
    }
    /** Initializes the weekdays. */

  }, {
    key: "_initWeekdays",
    value: function _initWeekdays() {
      var firstDayOfWeek = this._dateAdapter.getFirstDayOfWeek();

      var narrowWeekdays = this._dateAdapter.getDayOfWeekNames('narrow');

      var longWeekdays = this._dateAdapter.getDayOfWeekNames('long'); // Rotate the labels for days of the week based on the configured first day of the week.


      var weekdays = longWeekdays.map(function (long, i) {
        return {
          long: long,
          narrow: narrowWeekdays[i]
        };
      });
      this._weekdays = weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));
    }
    /** Creates MatCalendarCells for the dates in this month. */

  }, {
    key: "_createWeekCells",
    value: function _createWeekCells() {
      var daysInMonth = this._dateAdapter.getNumDaysInMonth(this.activeDate);

      var dateNames = this._dateAdapter.getDateNames();

      this._weeks = [[]];

      for (var i = 0, cell = this._firstWeekOffset; i < daysInMonth; i++, cell++) {
        if (cell == DAYS_PER_WEEK) {
          this._weeks.push([]);

          cell = 0;
        }

        var date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), this._dateAdapter.getMonth(this.activeDate), i + 1);

        var enabled = this._shouldEnableDate(date);

        var ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.dateA11yLabel);

        var cellClasses = this.dateClass ? this.dateClass(date, 'month') : undefined;

        this._weeks[this._weeks.length - 1].push(new MatCalendarCell(i + 1, dateNames[i], ariaLabel, enabled, cellClasses, this._getCellCompareValue(date), date));
      }
    }
    /** Date filter for the month */

  }, {
    key: "_shouldEnableDate",
    value: function _shouldEnableDate(date) {
      return !!date && (!this.minDate || this._dateAdapter.compareDate(date, this.minDate) >= 0) && (!this.maxDate || this._dateAdapter.compareDate(date, this.maxDate) <= 0) && (!this.dateFilter || this.dateFilter(date));
    }
    /**
     * Gets the date in this month that the given Date falls on.
     * Returns null if the given Date is in another month.
     */

  }, {
    key: "_getDateInCurrentMonth",
    value: function _getDateInCurrentMonth(date) {
      return date && this._hasSameMonthAndYear(date, this.activeDate) ? this._dateAdapter.getDate(date) : null;
    }
    /** Checks whether the 2 dates are non-null and fall within the same month of the same year. */

  }, {
    key: "_hasSameMonthAndYear",
    value: function _hasSameMonthAndYear(d1, d2) {
      return !!(d1 && d2 && this._dateAdapter.getMonth(d1) == this._dateAdapter.getMonth(d2) && this._dateAdapter.getYear(d1) == this._dateAdapter.getYear(d2));
    }
    /** Gets the value that will be used to one cell to another. */

  }, {
    key: "_getCellCompareValue",
    value: function _getCellCompareValue(date) {
      if (date) {
        // We use the time since the Unix epoch to compare dates in this view, rather than the
        // cell values, because we need to support ranges that span across multiple months/years.
        var year = this._dateAdapter.getYear(date);

        var month = this._dateAdapter.getMonth(date);

        var day = this._dateAdapter.getDate(date);

        return new Date(year, month, day).getTime();
      }

      return null;
    }
    /** Determines whether the user has the RTL layout direction. */

  }, {
    key: "_isRtl",
    value: function _isRtl() {
      return this._dir && this._dir.value === 'rtl';
    }
    /** Sets the current range based on a model value. */

  }, {
    key: "_setRanges",
    value: function _setRanges(selectedValue) {
      if (selectedValue instanceof DateRange) {
        this._rangeStart = this._getCellCompareValue(selectedValue.start);
        this._rangeEnd = this._getCellCompareValue(selectedValue.end);
        this._isRange = true;
      } else {
        this._rangeStart = this._rangeEnd = this._getCellCompareValue(selectedValue);
        this._isRange = false;
      }

      this._comparisonRangeStart = this._getCellCompareValue(this.comparisonStart);
      this._comparisonRangeEnd = this._getCellCompareValue(this.comparisonEnd);
    }
  }]);

  return MatMonthView;
}();

MatMonthView.ɵfac = function MatMonthView_Factory(t) {
  return new (t || MatMonthView)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_DATE_RANGE_SELECTION_STRATEGY, 8));
};

MatMonthView.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatMonthView,
  selectors: [["mat-month-view"]],
  viewQuery: function MatMonthView_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatCalendarBody, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._matCalendarBody = _t.first);
    }
  },
  inputs: {
    activeDate: "activeDate",
    selected: "selected",
    minDate: "minDate",
    maxDate: "maxDate",
    dateFilter: "dateFilter",
    dateClass: "dateClass",
    comparisonStart: "comparisonStart",
    comparisonEnd: "comparisonEnd"
  },
  outputs: {
    selectedChange: "selectedChange",
    _userSelection: "_userSelection",
    activeDateChange: "activeDateChange"
  },
  exportAs: ["matMonthView"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]],
  decls: 7,
  vars: 13,
  consts: [["role", "presentation", 1, "mat-calendar-table"], [1, "mat-calendar-table-header"], ["scope", "col", 4, "ngFor", "ngForOf"], ["colspan", "7", "aria-hidden", "true", 1, "mat-calendar-table-header-divider"], ["mat-calendar-body", "", 3, "label", "rows", "todayValue", "startValue", "endValue", "comparisonStart", "comparisonEnd", "previewStart", "previewEnd", "isRange", "labelMinRequiredCells", "activeCell", "selectedValueChange", "previewChange", "keydown"], ["scope", "col"]],
  template: function MatMonthView_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "table", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "thead", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "tr");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](3, MatMonthView_th_3_Template, 2, 2, "th", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "tr");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](5, "th", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "tbody", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("selectedValueChange", function MatMonthView_Template_tbody_selectedValueChange_6_listener($event) {
        return ctx._dateSelected($event);
      })("previewChange", function MatMonthView_Template_tbody_previewChange_6_listener($event) {
        return ctx._previewChanged($event);
      })("keydown", function MatMonthView_Template_tbody_keydown_6_listener($event) {
        return ctx._handleCalendarBodyKeydown($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx._weekdays);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", ctx._monthLabel)("rows", ctx._weeks)("todayValue", ctx._todayDate)("startValue", ctx._rangeStart)("endValue", ctx._rangeEnd)("comparisonStart", ctx._comparisonRangeStart)("comparisonEnd", ctx._comparisonRangeEnd)("previewStart", ctx._previewStart)("previewEnd", ctx._previewEnd)("isRange", ctx._isRange)("labelMinRequiredCells", 3)("activeCell", ctx._dateAdapter.getDate(ctx.activeDate) - 1);
    }
  },
  directives: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["NgForOf"], MatCalendarBody],
  encapsulation: 2,
  changeDetection: 0
});

MatMonthView.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_DATE_RANGE_SELECTION_STRATEGY]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }];
};

MatMonthView.propDecorators = {
  activeDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  minDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  maxDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateFilter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selectedChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _userSelection: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  activeDateChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _matCalendarBody: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatCalendarBody]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatMonthView, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-month-view',
      template: "<table class=\"mat-calendar-table\" role=\"presentation\">\n  <thead class=\"mat-calendar-table-header\">\n    <tr>\n      <th scope=\"col\" *ngFor=\"let day of _weekdays\" [attr.aria-label]=\"day.long\">{{day.narrow}}</th>\n    </tr>\n    <tr><th class=\"mat-calendar-table-header-divider\" colspan=\"7\" aria-hidden=\"true\"></th></tr>\n  </thead>\n  <tbody mat-calendar-body\n         [label]=\"_monthLabel\"\n         [rows]=\"_weeks\"\n         [todayValue]=\"_todayDate!\"\n         [startValue]=\"_rangeStart!\"\n         [endValue]=\"_rangeEnd!\"\n         [comparisonStart]=\"_comparisonRangeStart\"\n         [comparisonEnd]=\"_comparisonRangeEnd\"\n         [previewStart]=\"_previewStart\"\n         [previewEnd]=\"_previewEnd\"\n         [isRange]=\"_isRange\"\n         [labelMinRequiredCells]=\"3\"\n         [activeCell]=\"_dateAdapter.getDate(activeDate) - 1\"\n         (selectedValueChange)=\"_dateSelected($event)\"\n         (previewChange)=\"_previewChanged($event)\"\n         (keydown)=\"_handleCalendarBodyKeydown($event)\">\n  </tbody>\n</table>\n",
      exportAs: 'matMonthView',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }];
  }, {
    selectedChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    _userSelection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    activeDateChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    activeDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    minDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    maxDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    _matCalendarBody: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatCalendarBody]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var yearsPerPage = 24;
var yearsPerRow = 4;
/**
 * An internal component used to display a year selector in the datepicker.
 * @docs-private
 */

var MatMultiYearView = /*#__PURE__*/function () {
  function MatMultiYearView(_changeDetectorRef, _dateAdapter, _dir) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatMultiYearView);

    this._changeDetectorRef = _changeDetectorRef;
    this._dateAdapter = _dateAdapter;
    this._dir = _dir;
    this._rerenderSubscription = rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"].EMPTY;
    /** Emits when a new year is selected. */

    this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits the selected year. This doesn't imply a change on the selected date */

    this.yearSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when any date is activated. */

    this.activeDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();

    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {
      throw createMissingDateImplError('DateAdapter');
    }

    this._activeDate = this._dateAdapter.today();
  }
  /** The date to display in this multi-year view (everything other than the year is ignored). */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatMultiYearView, [{
    key: "activeDate",
    get: function get() {
      return this._activeDate;
    },
    set: function set(value) {
      var oldActiveDate = this._activeDate;

      var validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();

      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);

      if (!isSameMultiYearView(this._dateAdapter, oldActiveDate, this._activeDate, this.minDate, this.maxDate)) {
        this._init();
      }
    }
    /** The currently selected date. */

  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    },
    set: function set(value) {
      if (value instanceof DateRange) {
        this._selected = value;
      } else {
        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
      }

      this._setSelectedYear(value);
    }
    /** The minimum selectable date. */

  }, {
    key: "minDate",
    get: function get() {
      return this._minDate;
    },
    set: function set(value) {
      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
    /** The maximum selectable date. */

  }, {
    key: "maxDate",
    get: function get() {
      return this._maxDate;
    },
    set: function set(value) {
      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this4 = this;

      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_20__["startWith"])(null)).subscribe(function () {
        return _this4._init();
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._rerenderSubscription.unsubscribe();
    }
    /** Initializes this multi-year view. */

  }, {
    key: "_init",
    value: function _init() {
      var _this5 = this;

      this._todayYear = this._dateAdapter.getYear(this._dateAdapter.today()); // We want a range years such that we maximize the number of
      // enabled dates visible at once. This prevents issues where the minimum year
      // is the last item of a page OR the maximum year is the first item of a page.
      // The offset from the active year to the "slot" for the starting year is the
      // *actual* first rendered year in the multi-year view.

      var activeYear = this._dateAdapter.getYear(this._activeDate);

      var minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
      this._years = [];

      for (var i = 0, row = []; i < yearsPerPage; i++) {
        row.push(minYearOfPage + i);

        if (row.length == yearsPerRow) {
          this._years.push(row.map(function (year) {
            return _this5._createCellForYear(year);
          }));

          row = [];
        }
      }

      this._changeDetectorRef.markForCheck();
    }
    /** Handles when a new year is selected. */

  }, {
    key: "_yearSelected",
    value: function _yearSelected(event) {
      var year = event.value;
      this.yearSelected.emit(this._dateAdapter.createDate(year, 0, 1));

      var month = this._dateAdapter.getMonth(this.activeDate);

      var daysInMonth = this._dateAdapter.getNumDaysInMonth(this._dateAdapter.createDate(year, month, 1));

      this.selectedChange.emit(this._dateAdapter.createDate(year, month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));
    }
    /** Handles keydown events on the calendar body when calendar is in multi-year view. */

  }, {
    key: "_handleCalendarBodyKeydown",
    value: function _handleCalendarBodyKeydown(event) {
      var oldActiveDate = this._activeDate;

      var isRtl = this._isRtl();

      switch (event.keyCode) {
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["LEFT_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? 1 : -1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["RIGHT_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, isRtl ? -1 : 1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["UP_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -yearsPerRow);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["DOWN_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerRow);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["HOME"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, -getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate));
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["END"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, yearsPerPage - getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate) - 1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["PAGE_UP"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -yearsPerPage * 10 : -yearsPerPage);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["PAGE_DOWN"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? yearsPerPage * 10 : yearsPerPage);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["ENTER"]:
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["SPACE"]:
          this._yearSelected({
            value: this._dateAdapter.getYear(this._activeDate),
            event: event
          });

          break;

        default:
          // Don't prevent default or focus active cell on keys that we don't explicitly handle.
          return;
      }

      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {
        this.activeDateChange.emit(this.activeDate);
      }

      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.


      event.preventDefault();
    }
  }, {
    key: "_getActiveCell",
    value: function _getActiveCell() {
      return getActiveOffset(this._dateAdapter, this.activeDate, this.minDate, this.maxDate);
    }
    /** Focuses the active cell after the microtask queue is empty. */

  }, {
    key: "_focusActiveCell",
    value: function _focusActiveCell() {
      this._matCalendarBody._focusActiveCell();
    }
    /** Creates an MatCalendarCell for the given year. */

  }, {
    key: "_createCellForYear",
    value: function _createCellForYear(year) {
      var date = this._dateAdapter.createDate(year, 0, 1);

      var yearName = this._dateAdapter.getYearName(date);

      var cellClasses = this.dateClass ? this.dateClass(date, 'multi-year') : undefined;
      return new MatCalendarCell(year, yearName, yearName, this._shouldEnableYear(year), cellClasses);
    }
    /** Whether the given year is enabled. */

  }, {
    key: "_shouldEnableYear",
    value: function _shouldEnableYear(year) {
      // disable if the year is greater than maxDate lower than minDate
      if (year === undefined || year === null || this.maxDate && year > this._dateAdapter.getYear(this.maxDate) || this.minDate && year < this._dateAdapter.getYear(this.minDate)) {
        return false;
      } // enable if it reaches here and there's no filter defined


      if (!this.dateFilter) {
        return true;
      }

      var firstOfYear = this._dateAdapter.createDate(year, 0, 1); // If any date in the year is enabled count the year as enabled.


      for (var date = firstOfYear; this._dateAdapter.getYear(date) == year; date = this._dateAdapter.addCalendarDays(date, 1)) {
        if (this.dateFilter(date)) {
          return true;
        }
      }

      return false;
    }
    /** Determines whether the user has the RTL layout direction. */

  }, {
    key: "_isRtl",
    value: function _isRtl() {
      return this._dir && this._dir.value === 'rtl';
    }
    /** Sets the currently-highlighted year based on a model value. */

  }, {
    key: "_setSelectedYear",
    value: function _setSelectedYear(value) {
      this._selectedYear = null;

      if (value instanceof DateRange) {
        var displayValue = value.start || value.end;

        if (displayValue) {
          this._selectedYear = this._dateAdapter.getYear(displayValue);
        }
      } else if (value) {
        this._selectedYear = this._dateAdapter.getYear(value);
      }
    }
  }]);

  return MatMultiYearView;
}();

MatMultiYearView.ɵfac = function MatMultiYearView_Factory(t) {
  return new (t || MatMultiYearView)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"], 8));
};

MatMultiYearView.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatMultiYearView,
  selectors: [["mat-multi-year-view"]],
  viewQuery: function MatMultiYearView_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatCalendarBody, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._matCalendarBody = _t.first);
    }
  },
  inputs: {
    activeDate: "activeDate",
    selected: "selected",
    minDate: "minDate",
    maxDate: "maxDate",
    dateFilter: "dateFilter",
    dateClass: "dateClass"
  },
  outputs: {
    selectedChange: "selectedChange",
    yearSelected: "yearSelected",
    activeDateChange: "activeDateChange"
  },
  exportAs: ["matMultiYearView"],
  decls: 5,
  vars: 7,
  consts: [["role", "presentation", 1, "mat-calendar-table"], [1, "mat-calendar-table-header"], ["colspan", "4", 1, "mat-calendar-table-header-divider"], ["mat-calendar-body", "", 3, "rows", "todayValue", "startValue", "endValue", "numCols", "cellAspectRatio", "activeCell", "selectedValueChange", "keydown"]],
  template: function MatMultiYearView_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "table", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "thead", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "tr");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "th", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "tbody", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("selectedValueChange", function MatMultiYearView_Template_tbody_selectedValueChange_4_listener($event) {
        return ctx._yearSelected($event);
      })("keydown", function MatMultiYearView_Template_tbody_keydown_4_listener($event) {
        return ctx._handleCalendarBodyKeydown($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("rows", ctx._years)("todayValue", ctx._todayYear)("startValue", ctx._selectedYear)("endValue", ctx._selectedYear)("numCols", 4)("cellAspectRatio", 4 / 7)("activeCell", ctx._getActiveCell());
    }
  },
  directives: [MatCalendarBody],
  encapsulation: 2,
  changeDetection: 0
});

MatMultiYearView.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }];
};

MatMultiYearView.propDecorators = {
  activeDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  minDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  maxDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateFilter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selectedChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  yearSelected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  activeDateChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _matCalendarBody: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatCalendarBody]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatMultiYearView, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-multi-year-view',
      template: "<table class=\"mat-calendar-table\" role=\"presentation\">\n  <thead class=\"mat-calendar-table-header\">\n    <tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr>\n  </thead>\n  <tbody mat-calendar-body\n         [rows]=\"_years\"\n         [todayValue]=\"_todayYear\"\n         [startValue]=\"_selectedYear!\"\n         [endValue]=\"_selectedYear!\"\n         [numCols]=\"4\"\n         [cellAspectRatio]=\"4 / 7\"\n         [activeCell]=\"_getActiveCell()\"\n         (selectedValueChange)=\"_yearSelected($event)\"\n         (keydown)=\"_handleCalendarBodyKeydown($event)\">\n  </tbody>\n</table>\n",
      exportAs: 'matMultiYearView',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }];
  }, {
    selectedChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    yearSelected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    activeDateChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    activeDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    minDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    maxDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    _matCalendarBody: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatCalendarBody]
    }]
  });
})();

function isSameMultiYearView(dateAdapter, date1, date2, minDate, maxDate) {
  var year1 = dateAdapter.getYear(date1);
  var year2 = dateAdapter.getYear(date2);
  var startingYear = getStartingYear(dateAdapter, minDate, maxDate);
  return Math.floor((year1 - startingYear) / yearsPerPage) === Math.floor((year2 - startingYear) / yearsPerPage);
}
/**
 * When the multi-year view is first opened, the active year will be in view.
 * So we compute how many years are between the active year and the *slot* where our
 * "startingYear" will render when paged into view.
 */


function getActiveOffset(dateAdapter, activeDate, minDate, maxDate) {
  var activeYear = dateAdapter.getYear(activeDate);
  return euclideanModulo(activeYear - getStartingYear(dateAdapter, minDate, maxDate), yearsPerPage);
}
/**
 * We pick a "starting" year such that either the maximum year would be at the end
 * or the minimum year would be at the beginning of a page.
 */


function getStartingYear(dateAdapter, minDate, maxDate) {
  var startingYear = 0;

  if (maxDate) {
    var maxYear = dateAdapter.getYear(maxDate);
    startingYear = maxYear - yearsPerPage + 1;
  } else if (minDate) {
    startingYear = dateAdapter.getYear(minDate);
  }

  return startingYear;
}
/** Gets remainder that is non-negative, even if first number is negative */


function euclideanModulo(a, b) {
  return (a % b + b) % b;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An internal component used to display a single year in the datepicker.
 * @docs-private
 */


var MatYearView = /*#__PURE__*/function () {
  function MatYearView(_changeDetectorRef, _dateFormats, _dateAdapter, _dir) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatYearView);

    this._changeDetectorRef = _changeDetectorRef;
    this._dateFormats = _dateFormats;
    this._dateAdapter = _dateAdapter;
    this._dir = _dir;
    this._rerenderSubscription = rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"].EMPTY;
    /** Emits when a new month is selected. */

    this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits the selected month. This doesn't imply a change on the selected date */

    this.monthSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when any date is activated. */

    this.activeDateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();

    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      if (!this._dateAdapter) {
        throw createMissingDateImplError('DateAdapter');
      }

      if (!this._dateFormats) {
        throw createMissingDateImplError('MAT_DATE_FORMATS');
      }
    }

    this._activeDate = this._dateAdapter.today();
  }
  /** The date to display in this year view (everything other than the year is ignored). */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatYearView, [{
    key: "activeDate",
    get: function get() {
      return this._activeDate;
    },
    set: function set(value) {
      var oldActiveDate = this._activeDate;

      var validDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value)) || this._dateAdapter.today();

      this._activeDate = this._dateAdapter.clampDate(validDate, this.minDate, this.maxDate);

      if (this._dateAdapter.getYear(oldActiveDate) !== this._dateAdapter.getYear(this._activeDate)) {
        this._init();
      }
    }
    /** The currently selected date. */

  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    },
    set: function set(value) {
      if (value instanceof DateRange) {
        this._selected = value;
      } else {
        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
      }

      this._setSelectedMonth(value);
    }
    /** The minimum selectable date. */

  }, {
    key: "minDate",
    get: function get() {
      return this._minDate;
    },
    set: function set(value) {
      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
    /** The maximum selectable date. */

  }, {
    key: "maxDate",
    get: function get() {
      return this._maxDate;
    },
    set: function set(value) {
      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this6 = this;

      this._rerenderSubscription = this._dateAdapter.localeChanges.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_20__["startWith"])(null)).subscribe(function () {
        return _this6._init();
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._rerenderSubscription.unsubscribe();
    }
    /** Handles when a new month is selected. */

  }, {
    key: "_monthSelected",
    value: function _monthSelected(event) {
      var month = event.value;

      var normalizedDate = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);

      this.monthSelected.emit(normalizedDate);

      var daysInMonth = this._dateAdapter.getNumDaysInMonth(normalizedDate);

      this.selectedChange.emit(this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, Math.min(this._dateAdapter.getDate(this.activeDate), daysInMonth)));
    }
    /** Handles keydown events on the calendar body when calendar is in year view. */

  }, {
    key: "_handleCalendarBodyKeydown",
    value: function _handleCalendarBodyKeydown(event) {
      // TODO(mmalerba): We currently allow keyboard navigation to disabled dates, but just prevent
      // disabled ones from being selected. This may not be ideal, we should look into whether
      // navigation should skip over disabled dates, and if so, how to implement that efficiently.
      var oldActiveDate = this._activeDate;

      var isRtl = this._isRtl();

      switch (event.keyCode) {
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["LEFT_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? 1 : -1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["RIGHT_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, isRtl ? -1 : 1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["UP_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -4);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["DOWN_ARROW"]:
          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 4);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["HOME"]:
          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, -this._dateAdapter.getMonth(this._activeDate));
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["END"]:
          this.activeDate = this._dateAdapter.addCalendarMonths(this._activeDate, 11 - this._dateAdapter.getMonth(this._activeDate));
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["PAGE_UP"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? -10 : -1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["PAGE_DOWN"]:
          this.activeDate = this._dateAdapter.addCalendarYears(this._activeDate, event.altKey ? 10 : 1);
          break;

        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["ENTER"]:
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["SPACE"]:
          this._monthSelected({
            value: this._dateAdapter.getMonth(this._activeDate),
            event: event
          });

          break;

        default:
          // Don't prevent default or focus active cell on keys that we don't explicitly handle.
          return;
      }

      if (this._dateAdapter.compareDate(oldActiveDate, this.activeDate)) {
        this.activeDateChange.emit(this.activeDate);
      }

      this._focusActiveCell(); // Prevent unexpected default actions such as form submission.


      event.preventDefault();
    }
    /** Initializes this year view. */

  }, {
    key: "_init",
    value: function _init() {
      var _this7 = this;

      this._setSelectedMonth(this.selected);

      this._todayMonth = this._getMonthInCurrentYear(this._dateAdapter.today());
      this._yearLabel = this._dateAdapter.getYearName(this.activeDate);

      var monthNames = this._dateAdapter.getMonthNames('short'); // First row of months only contains 5 elements so we can fit the year label on the same row.


      this._months = [[0, 1, 2, 3], [4, 5, 6, 7], [8, 9, 10, 11]].map(function (row) {
        return row.map(function (month) {
          return _this7._createCellForMonth(month, monthNames[month]);
        });
      });

      this._changeDetectorRef.markForCheck();
    }
    /** Focuses the active cell after the microtask queue is empty. */

  }, {
    key: "_focusActiveCell",
    value: function _focusActiveCell() {
      this._matCalendarBody._focusActiveCell();
    }
    /**
     * Gets the month in this year that the given Date falls on.
     * Returns null if the given Date is in another year.
     */

  }, {
    key: "_getMonthInCurrentYear",
    value: function _getMonthInCurrentYear(date) {
      return date && this._dateAdapter.getYear(date) == this._dateAdapter.getYear(this.activeDate) ? this._dateAdapter.getMonth(date) : null;
    }
    /** Creates an MatCalendarCell for the given month. */

  }, {
    key: "_createCellForMonth",
    value: function _createCellForMonth(month, monthName) {
      var date = this._dateAdapter.createDate(this._dateAdapter.getYear(this.activeDate), month, 1);

      var ariaLabel = this._dateAdapter.format(date, this._dateFormats.display.monthYearA11yLabel);

      var cellClasses = this.dateClass ? this.dateClass(date, 'year') : undefined;
      return new MatCalendarCell(month, monthName.toLocaleUpperCase(), ariaLabel, this._shouldEnableMonth(month), cellClasses);
    }
    /** Whether the given month is enabled. */

  }, {
    key: "_shouldEnableMonth",
    value: function _shouldEnableMonth(month) {
      var activeYear = this._dateAdapter.getYear(this.activeDate);

      if (month === undefined || month === null || this._isYearAndMonthAfterMaxDate(activeYear, month) || this._isYearAndMonthBeforeMinDate(activeYear, month)) {
        return false;
      }

      if (!this.dateFilter) {
        return true;
      }

      var firstOfMonth = this._dateAdapter.createDate(activeYear, month, 1); // If any date in the month is enabled count the month as enabled.


      for (var date = firstOfMonth; this._dateAdapter.getMonth(date) == month; date = this._dateAdapter.addCalendarDays(date, 1)) {
        if (this.dateFilter(date)) {
          return true;
        }
      }

      return false;
    }
    /**
     * Tests whether the combination month/year is after this.maxDate, considering
     * just the month and year of this.maxDate
     */

  }, {
    key: "_isYearAndMonthAfterMaxDate",
    value: function _isYearAndMonthAfterMaxDate(year, month) {
      if (this.maxDate) {
        var maxYear = this._dateAdapter.getYear(this.maxDate);

        var maxMonth = this._dateAdapter.getMonth(this.maxDate);

        return year > maxYear || year === maxYear && month > maxMonth;
      }

      return false;
    }
    /**
     * Tests whether the combination month/year is before this.minDate, considering
     * just the month and year of this.minDate
     */

  }, {
    key: "_isYearAndMonthBeforeMinDate",
    value: function _isYearAndMonthBeforeMinDate(year, month) {
      if (this.minDate) {
        var minYear = this._dateAdapter.getYear(this.minDate);

        var minMonth = this._dateAdapter.getMonth(this.minDate);

        return year < minYear || year === minYear && month < minMonth;
      }

      return false;
    }
    /** Determines whether the user has the RTL layout direction. */

  }, {
    key: "_isRtl",
    value: function _isRtl() {
      return this._dir && this._dir.value === 'rtl';
    }
    /** Sets the currently-selected month based on a model value. */

  }, {
    key: "_setSelectedMonth",
    value: function _setSelectedMonth(value) {
      if (value instanceof DateRange) {
        this._selectedMonth = this._getMonthInCurrentYear(value.start) || this._getMonthInCurrentYear(value.end);
      } else {
        this._selectedMonth = this._getMonthInCurrentYear(value);
      }
    }
  }]);

  return MatYearView;
}();

MatYearView.ɵfac = function MatYearView_Factory(t) {
  return new (t || MatYearView)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"], 8));
};

MatYearView.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatYearView,
  selectors: [["mat-year-view"]],
  viewQuery: function MatYearView_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatCalendarBody, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._matCalendarBody = _t.first);
    }
  },
  inputs: {
    activeDate: "activeDate",
    selected: "selected",
    minDate: "minDate",
    maxDate: "maxDate",
    dateFilter: "dateFilter",
    dateClass: "dateClass"
  },
  outputs: {
    selectedChange: "selectedChange",
    monthSelected: "monthSelected",
    activeDateChange: "activeDateChange"
  },
  exportAs: ["matYearView"],
  decls: 5,
  vars: 9,
  consts: [["role", "presentation", 1, "mat-calendar-table"], [1, "mat-calendar-table-header"], ["colspan", "4", 1, "mat-calendar-table-header-divider"], ["mat-calendar-body", "", 3, "label", "rows", "todayValue", "startValue", "endValue", "labelMinRequiredCells", "numCols", "cellAspectRatio", "activeCell", "selectedValueChange", "keydown"]],
  template: function MatYearView_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "table", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "thead", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "tr");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "th", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "tbody", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("selectedValueChange", function MatYearView_Template_tbody_selectedValueChange_4_listener($event) {
        return ctx._monthSelected($event);
      })("keydown", function MatYearView_Template_tbody_keydown_4_listener($event) {
        return ctx._handleCalendarBodyKeydown($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("label", ctx._yearLabel)("rows", ctx._months)("todayValue", ctx._todayMonth)("startValue", ctx._selectedMonth)("endValue", ctx._selectedMonth)("labelMinRequiredCells", 2)("numCols", 4)("cellAspectRatio", 4 / 7)("activeCell", ctx._dateAdapter.getMonth(ctx.activeDate));
    }
  },
  directives: [MatCalendarBody],
  encapsulation: 2,
  changeDetection: 0
});

MatYearView.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }];
};

MatYearView.propDecorators = {
  activeDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  minDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  maxDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateFilter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selectedChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  monthSelected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  activeDateChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _matCalendarBody: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatCalendarBody]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatYearView, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-year-view',
      template: "<table class=\"mat-calendar-table\" role=\"presentation\">\n  <thead class=\"mat-calendar-table-header\">\n    <tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr>\n  </thead>\n  <tbody mat-calendar-body\n         [label]=\"_yearLabel\"\n         [rows]=\"_months\"\n         [todayValue]=\"_todayMonth!\"\n         [startValue]=\"_selectedMonth!\"\n         [endValue]=\"_selectedMonth!\"\n         [labelMinRequiredCells]=\"2\"\n         [numCols]=\"4\"\n         [cellAspectRatio]=\"4 / 7\"\n         [activeCell]=\"_dateAdapter.getMonth(activeDate)\"\n         (selectedValueChange)=\"_monthSelected($event)\"\n         (keydown)=\"_handleCalendarBodyKeydown($event)\">\n  </tbody>\n</table>\n",
      exportAs: 'matYearView',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }];
  }, {
    selectedChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    monthSelected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    activeDateChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    activeDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    minDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    maxDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    _matCalendarBody: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatCalendarBody]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Default header for MatCalendar */


var MatCalendarHeader = /*#__PURE__*/function () {
  function MatCalendarHeader(_intl, calendar, _dateAdapter, _dateFormats, changeDetectorRef) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatCalendarHeader);

    this._intl = _intl;
    this.calendar = calendar;
    this._dateAdapter = _dateAdapter;
    this._dateFormats = _dateFormats;
    this.calendar.stateChanges.subscribe(function () {
      return changeDetectorRef.markForCheck();
    });
  }
  /** The label for the current calendar view. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatCalendarHeader, [{
    key: "periodButtonText",
    get: function get() {
      if (this.calendar.currentView == 'month') {
        return this._dateAdapter.format(this.calendar.activeDate, this._dateFormats.display.monthYearLabel).toLocaleUpperCase();
      }

      if (this.calendar.currentView == 'year') {
        return this._dateAdapter.getYearName(this.calendar.activeDate);
      } // The offset from the active year to the "slot" for the starting year is the
      // *actual* first rendered year in the multi-year view, and the last year is
      // just yearsPerPage - 1 away.


      var activeYear = this._dateAdapter.getYear(this.calendar.activeDate);

      var minYearOfPage = activeYear - getActiveOffset(this._dateAdapter, this.calendar.activeDate, this.calendar.minDate, this.calendar.maxDate);
      var maxYearOfPage = minYearOfPage + yearsPerPage - 1;

      var minYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(minYearOfPage, 0, 1));

      var maxYearName = this._dateAdapter.getYearName(this._dateAdapter.createDate(maxYearOfPage, 0, 1));

      return this._intl.formatYearRange(minYearName, maxYearName);
    }
  }, {
    key: "periodButtonLabel",
    get: function get() {
      return this.calendar.currentView == 'month' ? this._intl.switchToMultiYearViewLabel : this._intl.switchToMonthViewLabel;
    }
    /** The label for the previous button. */

  }, {
    key: "prevButtonLabel",
    get: function get() {
      return {
        'month': this._intl.prevMonthLabel,
        'year': this._intl.prevYearLabel,
        'multi-year': this._intl.prevMultiYearLabel
      }[this.calendar.currentView];
    }
    /** The label for the next button. */

  }, {
    key: "nextButtonLabel",
    get: function get() {
      return {
        'month': this._intl.nextMonthLabel,
        'year': this._intl.nextYearLabel,
        'multi-year': this._intl.nextMultiYearLabel
      }[this.calendar.currentView];
    }
    /** Handles user clicks on the period label. */

  }, {
    key: "currentPeriodClicked",
    value: function currentPeriodClicked() {
      this.calendar.currentView = this.calendar.currentView == 'month' ? 'multi-year' : 'month';
    }
    /** Handles user clicks on the previous button. */

  }, {
    key: "previousClicked",
    value: function previousClicked() {
      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, -1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? -1 : -yearsPerPage);
    }
    /** Handles user clicks on the next button. */

  }, {
    key: "nextClicked",
    value: function nextClicked() {
      this.calendar.activeDate = this.calendar.currentView == 'month' ? this._dateAdapter.addCalendarMonths(this.calendar.activeDate, 1) : this._dateAdapter.addCalendarYears(this.calendar.activeDate, this.calendar.currentView == 'year' ? 1 : yearsPerPage);
    }
    /** Whether the previous period button is enabled. */

  }, {
    key: "previousEnabled",
    value: function previousEnabled() {
      if (!this.calendar.minDate) {
        return true;
      }

      return !this.calendar.minDate || !this._isSameView(this.calendar.activeDate, this.calendar.minDate);
    }
    /** Whether the next period button is enabled. */

  }, {
    key: "nextEnabled",
    value: function nextEnabled() {
      return !this.calendar.maxDate || !this._isSameView(this.calendar.activeDate, this.calendar.maxDate);
    }
    /** Whether the two dates represent the same view in the current view mode (month or year). */

  }, {
    key: "_isSameView",
    value: function _isSameView(date1, date2) {
      if (this.calendar.currentView == 'month') {
        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2) && this._dateAdapter.getMonth(date1) == this._dateAdapter.getMonth(date2);
      }

      if (this.calendar.currentView == 'year') {
        return this._dateAdapter.getYear(date1) == this._dateAdapter.getYear(date2);
      } // Otherwise we are in 'multi-year' view.


      return isSameMultiYearView(this._dateAdapter, date1, date2, this.calendar.minDate, this.calendar.maxDate);
    }
  }]);

  return MatCalendarHeader;
}();

MatCalendarHeader.ɵfac = function MatCalendarHeader_Factory(t) {
  return new (t || MatCalendarHeader)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MatDatepickerIntl), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
    return MatCalendar;
  })), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]));
};

MatCalendarHeader.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatCalendarHeader,
  selectors: [["mat-calendar-header"]],
  exportAs: ["matCalendarHeader"],
  ngContentSelectors: _c1,
  decls: 9,
  vars: 8,
  consts: [[1, "mat-calendar-header"], [1, "mat-calendar-controls"], ["mat-button", "", "type", "button", "cdkAriaLive", "polite", 1, "mat-calendar-period-button", 3, "click"], [1, "mat-calendar-arrow"], [1, "mat-calendar-spacer"], ["mat-icon-button", "", "type", "button", 1, "mat-calendar-previous-button", 3, "disabled", "click"], ["mat-icon-button", "", "type", "button", 1, "mat-calendar-next-button", 3, "disabled", "click"]],
  template: function MatCalendarHeader_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "button", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatCalendarHeader_Template_button_click_2_listener() {
        return ctx.currentPeriodClicked();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](4, "div", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](5, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojection"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "button", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatCalendarHeader_Template_button_click_7_listener() {
        return ctx.previousClicked();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "button", 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatCalendarHeader_Template_button_click_8_listener() {
        return ctx.nextClicked();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-label", ctx.periodButtonLabel);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx.periodButtonText, " ");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-calendar-invert", ctx.calendar.currentView != "month");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("disabled", !ctx.previousEnabled());
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-label", ctx.prevButtonLabel);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("disabled", !ctx.nextEnabled());
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-label", ctx.nextButtonLabel);
    }
  },
  directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_13__["MatButton"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["CdkAriaLive"]],
  encapsulation: 2,
  changeDetection: 0
});

MatCalendarHeader.ctorParameters = function () {
  return [{
    type: MatDatepickerIntl
  }, {
    type: MatCalendar,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
        return MatCalendar;
      })]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatCalendarHeader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-calendar-header',
      template: "<div class=\"mat-calendar-header\">\n  <div class=\"mat-calendar-controls\">\n    <button mat-button type=\"button\" class=\"mat-calendar-period-button\"\n            (click)=\"currentPeriodClicked()\" [attr.aria-label]=\"periodButtonLabel\"\n            cdkAriaLive=\"polite\">\n      {{periodButtonText}}\n      <div class=\"mat-calendar-arrow\"\n           [class.mat-calendar-invert]=\"calendar.currentView != 'month'\"></div>\n    </button>\n\n    <div class=\"mat-calendar-spacer\"></div>\n\n    <ng-content></ng-content>\n\n    <button mat-icon-button type=\"button\" class=\"mat-calendar-previous-button\"\n            [disabled]=\"!previousEnabled()\" (click)=\"previousClicked()\"\n            [attr.aria-label]=\"prevButtonLabel\">\n    </button>\n\n    <button mat-icon-button type=\"button\" class=\"mat-calendar-next-button\"\n            [disabled]=\"!nextEnabled()\" (click)=\"nextClicked()\"\n            [attr.aria-label]=\"nextButtonLabel\">\n    </button>\n  </div>\n</div>\n",
      exportAs: 'matCalendarHeader',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush
    }]
  }], function () {
    return [{
      type: MatDatepickerIntl
    }, {
      type: MatCalendar,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
          return MatCalendar;
        })]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }];
  }, null);
})();
/**
 * A calendar that is used as part of the datepicker.
 * @docs-private
 */


var MatCalendar = /*#__PURE__*/function () {
  function MatCalendar(_intl, _dateAdapter, _dateFormats, _changeDetectorRef) {
    var _this8 = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatCalendar);

    this._dateAdapter = _dateAdapter;
    this._dateFormats = _dateFormats;
    this._changeDetectorRef = _changeDetectorRef;
    /**
     * Used for scheduling that focus should be moved to the active cell on the next tick.
     * We need to schedule it, rather than do it immediately, because we have to wait
     * for Angular to re-evaluate the view children.
     */

    this._moveFocusOnNextTick = false;
    /** Whether the calendar should be started in month or year view. */

    this.startView = 'month';
    /**
     * Emits when the currently selected date changes.
     * @breaking-change 11.0.0 Emitted value to change to `D | null`.
     */

    this.selectedChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /**
     * Emits the year chosen in multiyear view.
     * This doesn't imply a change on the selected date.
     */

    this.yearSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /**
     * Emits the month chosen in year view.
     * This doesn't imply a change on the selected date.
     */

    this.monthSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when any date is selected. */

    this._userSelection = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /**
     * Emits whenever there is a state change that the header may need to respond to.
     */

    this.stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subject"]();

    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      if (!this._dateAdapter) {
        throw createMissingDateImplError('DateAdapter');
      }

      if (!this._dateFormats) {
        throw createMissingDateImplError('MAT_DATE_FORMATS');
      }
    }

    this._intlChanges = _intl.changes.subscribe(function () {
      _changeDetectorRef.markForCheck();

      _this8.stateChanges.next();
    });
  }
  /** A date representing the period (month or year) to start the calendar in. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatCalendar, [{
    key: "startAt",
    get: function get() {
      return this._startAt;
    },
    set: function set(value) {
      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
    /** The currently selected date. */

  }, {
    key: "selected",
    get: function get() {
      return this._selected;
    },
    set: function set(value) {
      if (value instanceof DateRange) {
        this._selected = value;
      } else {
        this._selected = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
      }
    }
    /** The minimum selectable date. */

  }, {
    key: "minDate",
    get: function get() {
      return this._minDate;
    },
    set: function set(value) {
      this._minDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
    /** The maximum selectable date. */

  }, {
    key: "maxDate",
    get: function get() {
      return this._maxDate;
    },
    set: function set(value) {
      this._maxDate = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
    /**
     * The current active date. This determines which time period is shown and which date is
     * highlighted when using keyboard navigation.
     */

  }, {
    key: "activeDate",
    get: function get() {
      return this._clampedActiveDate;
    },
    set: function set(value) {
      this._clampedActiveDate = this._dateAdapter.clampDate(value, this.minDate, this.maxDate);
      this.stateChanges.next();

      this._changeDetectorRef.markForCheck();
    }
    /** Whether the calendar is in month view. */

  }, {
    key: "currentView",
    get: function get() {
      return this._currentView;
    },
    set: function set(value) {
      this._currentView = value;
      this._moveFocusOnNextTick = true;

      this._changeDetectorRef.markForCheck();
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      this._calendarHeaderPortal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["ComponentPortal"](this.headerComponent || MatCalendarHeader);
      this.activeDate = this.startAt || this._dateAdapter.today(); // Assign to the private property since we don't want to move focus on init.

      this._currentView = this.startView;
    }
  }, {
    key: "ngAfterViewChecked",
    value: function ngAfterViewChecked() {
      if (this._moveFocusOnNextTick) {
        this._moveFocusOnNextTick = false;
        this.focusActiveCell();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._intlChanges.unsubscribe();

      this.stateChanges.complete();
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var change = changes['minDate'] || changes['maxDate'] || changes['dateFilter'];

      if (change && !change.firstChange) {
        var view = this._getCurrentViewComponent();

        if (view) {
          // We need to `detectChanges` manually here, because the `minDate`, `maxDate` etc. are
          // passed down to the view via data bindings which won't be up-to-date when we call `_init`.
          this._changeDetectorRef.detectChanges();

          view._init();
        }
      }

      this.stateChanges.next();
    }
  }, {
    key: "focusActiveCell",
    value: function focusActiveCell() {
      this._getCurrentViewComponent()._focusActiveCell(false);
    }
    /** Updates today's date after an update of the active date */

  }, {
    key: "updateTodaysDate",
    value: function updateTodaysDate() {
      var currentView = this.currentView;
      var view;

      if (currentView === 'month') {
        view = this.monthView;
      } else if (currentView === 'year') {
        view = this.yearView;
      } else {
        view = this.multiYearView;
      }

      view._init();
    }
    /** Handles date selection in the month view. */

  }, {
    key: "_dateSelected",
    value: function _dateSelected(event) {
      var date = event.value;

      if (this.selected instanceof DateRange || date && !this._dateAdapter.sameDate(date, this.selected)) {
        // @breaking-change 11.0.0 remove non-null assertion
        // once the `selectedChange` is allowed to be null.
        this.selectedChange.emit(date);
      }

      this._userSelection.emit(event);
    }
    /** Handles year selection in the multiyear view. */

  }, {
    key: "_yearSelectedInMultiYearView",
    value: function _yearSelectedInMultiYearView(normalizedYear) {
      this.yearSelected.emit(normalizedYear);
    }
    /** Handles month selection in the year view. */

  }, {
    key: "_monthSelectedInYearView",
    value: function _monthSelectedInYearView(normalizedMonth) {
      this.monthSelected.emit(normalizedMonth);
    }
    /** Handles year/month selection in the multi-year/year views. */

  }, {
    key: "_goToDateInView",
    value: function _goToDateInView(date, view) {
      this.activeDate = date;
      this.currentView = view;
    }
    /** Returns the component instance that corresponds to the current calendar view. */

  }, {
    key: "_getCurrentViewComponent",
    value: function _getCurrentViewComponent() {
      return this.monthView || this.yearView || this.multiYearView;
    }
  }]);

  return MatCalendar;
}();

MatCalendar.ɵfac = function MatCalendar_Factory(t) {
  return new (t || MatCalendar)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MatDatepickerIntl), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]));
};

MatCalendar.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatCalendar,
  selectors: [["mat-calendar"]],
  viewQuery: function MatCalendar_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatMonthView, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatYearView, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatMultiYearView, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.monthView = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.yearView = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.multiYearView = _t.first);
    }
  },
  hostAttrs: [1, "mat-calendar"],
  inputs: {
    startView: "startView",
    startAt: "startAt",
    selected: "selected",
    minDate: "minDate",
    maxDate: "maxDate",
    headerComponent: "headerComponent",
    dateFilter: "dateFilter",
    dateClass: "dateClass",
    comparisonStart: "comparisonStart",
    comparisonEnd: "comparisonEnd"
  },
  outputs: {
    selectedChange: "selectedChange",
    yearSelected: "yearSelected",
    monthSelected: "monthSelected",
    _userSelection: "_userSelection"
  },
  exportAs: ["matCalendar"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]],
  decls: 5,
  vars: 5,
  consts: [[3, "cdkPortalOutlet"], ["cdkMonitorSubtreeFocus", "", "tabindex", "-1", 1, "mat-calendar-content", 3, "ngSwitch"], [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "comparisonStart", "comparisonEnd", "activeDateChange", "_userSelection", 4, "ngSwitchCase"], [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "monthSelected", "selectedChange", 4, "ngSwitchCase"], [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "yearSelected", "selectedChange", 4, "ngSwitchCase"], [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "comparisonStart", "comparisonEnd", "activeDateChange", "_userSelection"], [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "monthSelected", "selectedChange"], [3, "activeDate", "selected", "dateFilter", "maxDate", "minDate", "dateClass", "activeDateChange", "yearSelected", "selectedChange"]],
  template: function MatCalendar_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](0, MatCalendar_ng_template_0_Template, 0, 0, "ng-template", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, MatCalendar_mat_month_view_2_Template, 1, 8, "mat-month-view", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](3, MatCalendar_mat_year_view_3_Template, 1, 6, "mat-year-view", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](4, MatCalendar_mat_multi_year_view_4_Template, 1, 6, "mat-multi-year-view", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("cdkPortalOutlet", ctx._calendarHeaderPortal);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngSwitch", ctx.currentView);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngSwitchCase", "month");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngSwitchCase", "year");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngSwitchCase", "multi-year");
    }
  },
  directives: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["CdkPortalOutlet"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["CdkMonitorFocus"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgSwitch"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgSwitchCase"], MatMonthView, MatYearView, MatMultiYearView],
  styles: [".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\"\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\"\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatCalendar.ctorParameters = function () {
  return [{
    type: MatDatepickerIntl
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }];
};

MatCalendar.propDecorators = {
  headerComponent: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  startAt: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  startView: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  minDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  maxDate: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateFilter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selectedChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  yearSelected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  monthSelected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _userSelection: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  monthView: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatMonthView]
  }],
  yearView: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatYearView]
  }],
  multiYearView: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatMultiYearView]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatCalendar, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-calendar',
      template: "<ng-template [cdkPortalOutlet]=\"_calendarHeaderPortal\"></ng-template>\n\n<div class=\"mat-calendar-content\" [ngSwitch]=\"currentView\" cdkMonitorSubtreeFocus tabindex=\"-1\">\n  <mat-month-view\n      *ngSwitchCase=\"'month'\"\n      [(activeDate)]=\"activeDate\"\n      [selected]=\"selected\"\n      [dateFilter]=\"dateFilter\"\n      [maxDate]=\"maxDate\"\n      [minDate]=\"minDate\"\n      [dateClass]=\"dateClass\"\n      [comparisonStart]=\"comparisonStart\"\n      [comparisonEnd]=\"comparisonEnd\"\n      (_userSelection)=\"_dateSelected($event)\">\n  </mat-month-view>\n\n  <mat-year-view\n      *ngSwitchCase=\"'year'\"\n      [(activeDate)]=\"activeDate\"\n      [selected]=\"selected\"\n      [dateFilter]=\"dateFilter\"\n      [maxDate]=\"maxDate\"\n      [minDate]=\"minDate\"\n      [dateClass]=\"dateClass\"\n      (monthSelected)=\"_monthSelectedInYearView($event)\"\n      (selectedChange)=\"_goToDateInView($event, 'month')\">\n  </mat-year-view>\n\n  <mat-multi-year-view\n      *ngSwitchCase=\"'multi-year'\"\n      [(activeDate)]=\"activeDate\"\n      [selected]=\"selected\"\n      [dateFilter]=\"dateFilter\"\n      [maxDate]=\"maxDate\"\n      [minDate]=\"minDate\"\n      [dateClass]=\"dateClass\"\n      (yearSelected)=\"_yearSelectedInMultiYearView($event)\"\n      (selectedChange)=\"_goToDateInView($event, 'year')\">\n  </mat-multi-year-view>\n</div>\n",
      host: {
        'class': 'mat-calendar'
      },
      exportAs: 'matCalendar',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush,
      providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER],
      styles: [".mat-calendar{display:block}.mat-calendar-header{padding:8px 8px 0 8px}.mat-calendar-content{padding:0 8px 8px 8px;outline:none}.mat-calendar-controls{display:flex;margin:5% calc(33% / 7 - 16px)}.mat-calendar-controls .mat-icon-button:hover .mat-button-focus-overlay{opacity:.04}.mat-calendar-spacer{flex:1 1 auto}.mat-calendar-period-button{min-width:0}.mat-calendar-arrow{display:inline-block;width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top-width:5px;border-top-style:solid;margin:0 0 0 5px;vertical-align:middle}.mat-calendar-arrow.mat-calendar-invert{transform:rotate(180deg)}[dir=rtl] .mat-calendar-arrow{margin:0 5px 0 0}.mat-calendar-previous-button,.mat-calendar-next-button{position:relative}.mat-calendar-previous-button::after,.mat-calendar-next-button::after{top:0;left:0;right:0;bottom:0;position:absolute;content:\"\";margin:15.5px;border:0 solid currentColor;border-top-width:2px}[dir=rtl] .mat-calendar-previous-button,[dir=rtl] .mat-calendar-next-button{transform:rotate(180deg)}.mat-calendar-previous-button::after{border-left-width:2px;transform:translateX(2px) rotate(-45deg)}.mat-calendar-next-button::after{border-right-width:2px;transform:translateX(-2px) rotate(45deg)}.mat-calendar-table{border-spacing:0;border-collapse:collapse;width:100%}.mat-calendar-table-header th{text-align:center;padding:0 0 8px 0}.mat-calendar-table-header-divider{position:relative;height:1px}.mat-calendar-table-header-divider::after{content:\"\";position:absolute;top:0;left:-8px;right:-8px;height:1px}\n"]
    }]
  }], function () {
    return [{
      type: MatDatepickerIntl
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }];
  }, {
    startView: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selectedChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    yearSelected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    monthSelected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    _userSelection: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    startAt: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    minDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    maxDate: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    headerComponent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    monthView: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatMonthView]
    }],
    yearView: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatYearView]
    }],
    multiYearView: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatMultiYearView]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Animations used by the Material datepicker.
 * @docs-private
 */


var matDatepickerAnimations = {
  /** Transforms the height of the datepicker's calendar. */
  transformPanel: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["trigger"])('transformPanel', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["style"])({
    opacity: 0,
    transform: 'scale(1, 0.8)'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["transition"])('void => enter', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["animate"])('120ms cubic-bezier(0, 0, 0.2, 1)', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["style"])({
    opacity: 1,
    transform: 'scale(1, 1)'
  }))), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["transition"])('* => void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["animate"])('100ms linear', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["style"])({
    opacity: 0
  })))]),

  /** Fades in the content of the calendar. */
  fadeInCalendar: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["trigger"])('fadeInCalendar', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["state"])('void', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["style"])({
    opacity: 0
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["state"])('enter', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["style"])({
    opacity: 1
  })), // TODO(crisbeto): this animation should be removed since it isn't quite on spec, but we
  // need to keep it until #12440 gets in, otherwise the exit animation will look glitchy.
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["transition"])('void => *', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_22__["animate"])('120ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)'))])
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Used to generate a unique ID for each datepicker instance. */

var datepickerUid = 0;
/** Injection token that determines the scroll handling while the calendar is open. */

var MAT_DATEPICKER_SCROLL_STRATEGY = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('mat-datepicker-scroll-strategy');
/** @docs-private */

function MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY(overlay) {
  return function () {
    return overlay.scrollStrategies.reposition();
  };
}
/** @docs-private */


var MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER = {
  provide: MAT_DATEPICKER_SCROLL_STRATEGY,
  deps: [_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["Overlay"]],
  useFactory: MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY
}; // Boilerplate for applying mixins to MatDatepickerContent.

/** @docs-private */

var MatDatepickerContentBase = function MatDatepickerContentBase(_elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerContentBase);

  this._elementRef = _elementRef;
};

var _MatDatepickerContentMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["mixinColor"])(MatDatepickerContentBase);
/**
 * Component used as the content for the datepicker dialog and popup. We use this instead of using
 * MatCalendar directly as the content so we can control the initial focus. This also gives us a
 * place to put additional features of the popup that are not part of the calendar itself in the
 * future. (e.g. confirmation buttons).
 * @docs-private
 */


var MatDatepickerContent = /*#__PURE__*/function (_MatDatepickerContent) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatDatepickerContent, _MatDatepickerContent);

  var _super3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatDatepickerContent);

  function MatDatepickerContent(elementRef,
  /**
   * @deprecated `_changeDetectorRef`, `_model` and `_rangeSelectionStrategy`
   * parameters to become required.
   * @breaking-change 11.0.0
   */
  _changeDetectorRef, _model, _dateAdapter, _rangeSelectionStrategy) {
    var _this9;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerContent);

    _this9 = _super3.call(this, elementRef);
    _this9._changeDetectorRef = _changeDetectorRef;
    _this9._model = _model;
    _this9._dateAdapter = _dateAdapter;
    _this9._rangeSelectionStrategy = _rangeSelectionStrategy;
    _this9._subscriptions = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"]();
    /** Current state of the animation. */

    _this9._animationState = 'enter';
    /** Emits when an animation has finished. */

    _this9._animationDone = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subject"]();
    return _this9;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDatepickerContent, [{
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this10 = this;

      // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef.
      if (this._changeDetectorRef) {
        this._subscriptions.add(this.datepicker._stateChanges.subscribe(function () {
          _this10._changeDetectorRef.markForCheck();
        }));
      }

      this._calendar.focusActiveCell();
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._subscriptions.unsubscribe();

      this._animationDone.complete();
    }
  }, {
    key: "_handleUserSelection",
    value: function _handleUserSelection(event) {
      // @breaking-change 11.0.0 Remove null checks for _model,
      // _rangeSelectionStrategy and _dateAdapter.
      if (this._model && this._dateAdapter) {
        var selection = this._model.selection;
        var _value2 = event.value;
        var isRange = selection instanceof DateRange; // If we're selecting a range and we have a selection strategy, always pass the value through
        // there. Otherwise don't assign null values to the model, unless we're selecting a range.
        // A null value when picking a range means that the user cancelled the selection (e.g. by
        // pressing escape), whereas when selecting a single value it means that the value didn't
        // change. This isn't very intuitive, but it's here for backwards-compatibility.

        if (isRange && this._rangeSelectionStrategy) {
          var newSelection = this._rangeSelectionStrategy.selectionFinished(_value2, selection, event.event);

          this._model.updateSelection(newSelection, this);
        } else if (_value2 && (isRange || !this._dateAdapter.sameDate(_value2, selection))) {
          this._model.add(_value2);
        }
      }

      if (!this._model || this._model.isComplete()) {
        this.datepicker.close();
      }
    }
  }, {
    key: "_startExitAnimation",
    value: function _startExitAnimation() {
      this._animationState = 'void'; // @breaking-change 11.0.0 Remove null check for `_changeDetectorRef`.

      if (this._changeDetectorRef) {
        this._changeDetectorRef.markForCheck();
      }
    }
  }, {
    key: "_getSelected",
    value: function _getSelected() {
      // @breaking-change 11.0.0 Remove null check for `_model`.
      return this._model ? this._model.selection : null;
    }
  }]);

  return MatDatepickerContent;
}(_MatDatepickerContentMixinBase);

MatDatepickerContent.ɵfac = function MatDatepickerContent_Factory(t) {
  return new (t || MatDatepickerContent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MatDateSelectionModel), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_DATE_RANGE_SELECTION_STRATEGY, 8));
};

MatDatepickerContent.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatDatepickerContent,
  selectors: [["mat-datepicker-content"]],
  viewQuery: function MatDatepickerContent_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatCalendar, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._calendar = _t.first);
    }
  },
  hostAttrs: [1, "mat-datepicker-content"],
  hostVars: 3,
  hostBindings: function MatDatepickerContent_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵsyntheticHostListener"]("@transformPanel.done", function MatDatepickerContent_animation_transformPanel_done_HostBindingHandler() {
        return ctx._animationDone.next();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵsyntheticHostProperty"]("@transformPanel", ctx._animationState);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-datepicker-content-touch", ctx.datepicker.touchUi);
    }
  },
  inputs: {
    color: "color"
  },
  exportAs: ["matDatepickerContent"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]],
  decls: 1,
  vars: 13,
  consts: [["cdkTrapFocus", "", 3, "id", "ngClass", "startAt", "startView", "minDate", "maxDate", "dateFilter", "headerComponent", "selected", "dateClass", "comparisonStart", "comparisonEnd", "yearSelected", "monthSelected", "_userSelection"]],
  template: function MatDatepickerContent_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "mat-calendar", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("yearSelected", function MatDatepickerContent_Template_mat_calendar_yearSelected_0_listener($event) {
        return ctx.datepicker._selectYear($event);
      })("monthSelected", function MatDatepickerContent_Template_mat_calendar_monthSelected_0_listener($event) {
        return ctx.datepicker._selectMonth($event);
      })("_userSelection", function MatDatepickerContent_Template_mat_calendar__userSelection_0_listener($event) {
        return ctx._handleUserSelection($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("id", ctx.datepicker.id)("ngClass", ctx.datepicker.panelClass)("startAt", ctx.datepicker.startAt)("startView", ctx.datepicker.startView)("minDate", ctx.datepicker._getMinDate())("maxDate", ctx.datepicker._getMaxDate())("dateFilter", ctx.datepicker._getDateFilter())("headerComponent", ctx.datepicker.calendarHeaderComponent)("selected", ctx._getSelected())("dateClass", ctx.datepicker.dateClass)("comparisonStart", ctx.comparisonStart)("comparisonEnd", ctx.comparisonEnd)("@fadeInCalendar", "enter");
    }
  },
  directives: [MatCalendar, _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["CdkTrapFocus"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgClass"]],
  styles: [".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\n"],
  encapsulation: 2,
  data: {
    animation: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar]
  },
  changeDetection: 0
});

MatDatepickerContent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: MatDateSelectionModel
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_DATE_RANGE_SELECTION_STRATEGY]
    }]
  }];
};

MatDatepickerContent.propDecorators = {
  _calendar: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatCalendar]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerContent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-datepicker-content',
      template: "<mat-calendar cdkTrapFocus\n    [id]=\"datepicker.id\"\n    [ngClass]=\"datepicker.panelClass\"\n    [startAt]=\"datepicker.startAt\"\n    [startView]=\"datepicker.startView\"\n    [minDate]=\"datepicker._getMinDate()\"\n    [maxDate]=\"datepicker._getMaxDate()\"\n    [dateFilter]=\"datepicker._getDateFilter()\"\n    [headerComponent]=\"datepicker.calendarHeaderComponent\"\n    [selected]=\"_getSelected()\"\n    [dateClass]=\"datepicker.dateClass\"\n    [comparisonStart]=\"comparisonStart\"\n    [comparisonEnd]=\"comparisonEnd\"\n    [@fadeInCalendar]=\"'enter'\"\n    (yearSelected)=\"datepicker._selectYear($event)\"\n    (monthSelected)=\"datepicker._selectMonth($event)\"\n    (_userSelection)=\"_handleUserSelection($event)\">\n</mat-calendar>\n",
      host: {
        'class': 'mat-datepicker-content',
        '[@transformPanel]': '_animationState',
        '(@transformPanel.done)': '_animationDone.next()',
        '[class.mat-datepicker-content-touch]': 'datepicker.touchUi'
      },
      animations: [matDatepickerAnimations.transformPanel, matDatepickerAnimations.fadeInCalendar],
      exportAs: 'matDatepickerContent',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush,
      inputs: ['color'],
      styles: [".mat-datepicker-content{display:block;border-radius:4px}.mat-datepicker-content .mat-calendar{width:296px;height:354px}.mat-datepicker-content-touch{display:block;max-height:80vh;overflow:auto;margin:-24px}.mat-datepicker-content-touch .mat-calendar{min-width:250px;min-height:312px;max-width:750px;max-height:788px}@media all and (orientation: landscape){.mat-datepicker-content-touch .mat-calendar{width:64vh;height:80vh}}@media all and (orientation: portrait){.mat-datepicker-content-touch .mat-calendar{width:80vw;height:100vw}}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: MatDateSelectionModel
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_DATE_RANGE_SELECTION_STRATEGY]
      }]
    }];
  }, {
    _calendar: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatCalendar]
    }]
  });
})();
/** Base class for a datepicker. */


var MatDatepickerBase = /*#__PURE__*/function () {
  function MatDatepickerBase(_dialog, _overlay, _ngZone, _viewContainerRef, scrollStrategy, _dateAdapter, _dir, _document, _model) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerBase);

    this._dialog = _dialog;
    this._overlay = _overlay;
    this._ngZone = _ngZone;
    this._viewContainerRef = _viewContainerRef;
    this._dateAdapter = _dateAdapter;
    this._dir = _dir;
    this._document = _document;
    this._model = _model;
    this._inputStateChanges = rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"].EMPTY;
    /** The view that the calendar should start in. */

    this.startView = 'month';
    this._touchUi = false;
    /** Preferred position of the datepicker in the X axis. */

    this.xPosition = 'start';
    /** Preferred position of the datepicker in the Y axis. */

    this.yPosition = 'below';
    /**
     * Emits selected year in multiyear view.
     * This doesn't imply a change on the selected date.
     */

    this.yearSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /**
     * Emits selected month in year view.
     * This doesn't imply a change on the selected date.
     */

    this.monthSelected = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when the datepicker has been opened. */

    this.openedStream = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when the datepicker has been closed. */

    this.closedStream = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    this._opened = false;
    /** The id for the datepicker calendar. */

    this.id = "mat-datepicker-".concat(datepickerUid++);
    /** The element that was focused before the datepicker was opened. */

    this._focusedElementBeforeOpen = null;
    /** Unique class that will be added to the backdrop so that the test harnesses can look it up. */

    this._backdropHarnessClass = "".concat(this.id, "-backdrop");
    /** Emits when the datepicker's state changes. */

    this._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subject"]();

    if (!this._dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {
      throw createMissingDateImplError('DateAdapter');
    }

    this._scrollStrategy = scrollStrategy;
  }
  /** The date to open the calendar to initially. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDatepickerBase, [{
    key: "startAt",
    get: function get() {
      // If an explicit startAt is set we start there, otherwise we start at whatever the currently
      // selected value is.
      return this._startAt || (this._datepickerInput ? this._datepickerInput.getStartValue() : null);
    },
    set: function set(value) {
      this._startAt = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));
    }
    /** Color palette to use on the datepicker's calendar. */

  }, {
    key: "color",
    get: function get() {
      return this._color || (this._datepickerInput ? this._datepickerInput.getThemePalette() : undefined);
    },
    set: function set(value) {
      this._color = value;
    }
    /**
     * Whether the calendar UI is in touch mode. In touch mode the calendar opens in a dialog rather
     * than a popup and elements have more padding to allow for bigger touch targets.
     */

  }, {
    key: "touchUi",
    get: function get() {
      return this._touchUi;
    },
    set: function set(value) {
      this._touchUi = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__["coerceBooleanProperty"])(value);
    }
    /** Whether the datepicker pop-up should be disabled. */

  }, {
    key: "disabled",
    get: function get() {
      return this._disabled === undefined && this._datepickerInput ? this._datepickerInput.disabled : !!this._disabled;
    },
    set: function set(value) {
      var newValue = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__["coerceBooleanProperty"])(value);

      if (newValue !== this._disabled) {
        this._disabled = newValue;

        this._stateChanges.next(undefined);
      }
    }
    /** Whether the calendar is open. */

  }, {
    key: "opened",
    get: function get() {
      return this._opened;
    },
    set: function set(value) {
      Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__["coerceBooleanProperty"])(value) ? this.open() : this.close();
    }
    /** The minimum selectable date. */

  }, {
    key: "_getMinDate",
    value: function _getMinDate() {
      return this._datepickerInput && this._datepickerInput.min;
    }
    /** The maximum selectable date. */

  }, {
    key: "_getMaxDate",
    value: function _getMaxDate() {
      return this._datepickerInput && this._datepickerInput.max;
    }
  }, {
    key: "_getDateFilter",
    value: function _getDateFilter() {
      return this._datepickerInput && this._datepickerInput.dateFilter;
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      var positionChange = changes['xPosition'] || changes['yPosition'];

      if (positionChange && !positionChange.firstChange && this._popupRef) {
        this._setConnectedPositions(this._popupRef.getConfig().positionStrategy);

        if (this.opened) {
          this._popupRef.updatePosition();
        }
      }

      this._stateChanges.next(undefined);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroyPopup();

      this.close();

      this._inputStateChanges.unsubscribe();

      this._stateChanges.complete();
    }
    /** Selects the given date */

  }, {
    key: "select",
    value: function select(date) {
      this._model.add(date);
    }
    /** Emits the selected year in multiyear view */

  }, {
    key: "_selectYear",
    value: function _selectYear(normalizedYear) {
      this.yearSelected.emit(normalizedYear);
    }
    /** Emits selected month in year view */

  }, {
    key: "_selectMonth",
    value: function _selectMonth(normalizedMonth) {
      this.monthSelected.emit(normalizedMonth);
    }
    /**
     * Register an input with this datepicker.
     * @param input The datepicker input to register with this datepicker.
     * @returns Selection model that the input should hook itself up to.
     */

  }, {
    key: "_registerInput",
    value: function _registerInput(input) {
      var _this11 = this;

      if (this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('A MatDatepicker can only be associated with a single input.');
      }

      this._inputStateChanges.unsubscribe();

      this._datepickerInput = input;
      this._inputStateChanges = input.stateChanges.subscribe(function () {
        return _this11._stateChanges.next(undefined);
      });
      return this._model;
    }
    /** Open the calendar. */

  }, {
    key: "open",
    value: function open() {
      if (this._opened || this.disabled) {
        return;
      }

      if (!this._datepickerInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {
        throw Error('Attempted to open an MatDatepicker with no associated input.');
      }

      if (this._document) {
        this._focusedElementBeforeOpen = this._document.activeElement;
      }

      this.touchUi ? this._openAsDialog() : this._openAsPopup();
      this._opened = true;
      this.openedStream.emit();
    }
    /** Close the calendar. */

  }, {
    key: "close",
    value: function close() {
      var _this12 = this;

      if (!this._opened) {
        return;
      }

      if (this._popupComponentRef && this._popupRef) {
        var instance = this._popupComponentRef.instance;

        instance._startExitAnimation();

        instance._animationDone.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_20__["take"])(1)).subscribe(function () {
          return _this12._destroyPopup();
        });
      }

      if (this._dialogRef) {
        this._dialogRef.close();

        this._dialogRef = null;
      }

      var completeClose = function completeClose() {
        // The `_opened` could've been reset already if
        // we got two events in quick succession.
        if (_this12._opened) {
          _this12._opened = false;

          _this12.closedStream.emit();

          _this12._focusedElementBeforeOpen = null;
        }
      };

      if (this._focusedElementBeforeOpen && typeof this._focusedElementBeforeOpen.focus === 'function') {
        // Because IE moves focus asynchronously, we can't count on it being restored before we've
        // marked the datepicker as closed. If the event fires out of sequence and the element that
        // we're refocusing opens the datepicker on focus, the user could be stuck with not being
        // able to close the calendar at all. We work around it by making the logic, that marks
        // the datepicker as closed, async as well.
        this._focusedElementBeforeOpen.focus();

        setTimeout(completeClose);
      } else {
        completeClose();
      }
    }
    /** Open the calendar as a dialog. */

  }, {
    key: "_openAsDialog",
    value: function _openAsDialog() {
      var _this13 = this;

      // Usually this would be handled by `open` which ensures that we can only have one overlay
      // open at a time, however since we reset the variables in async handlers some overlays
      // may slip through if the user opens and closes multiple times in quick succession (e.g.
      // by holding down the enter key).
      if (this._dialogRef) {
        this._dialogRef.close();
      }

      this._dialogRef = this._dialog.open(MatDatepickerContent, {
        direction: this._dir ? this._dir.value : 'ltr',
        viewContainerRef: this._viewContainerRef,
        panelClass: 'mat-datepicker-dialog',
        // These values are all the same as the defaults, but we set them explicitly so that the
        // datepicker dialog behaves consistently even if the user changed the defaults.
        hasBackdrop: true,
        disableClose: false,
        backdropClass: ['cdk-overlay-dark-backdrop', this._backdropHarnessClass],
        width: '',
        height: '',
        minWidth: '',
        minHeight: '',
        maxWidth: '80vw',
        maxHeight: '',
        position: {},
        autoFocus: true,
        // `MatDialog` has focus restoration built in, however we want to disable it since the
        // datepicker also has focus restoration for dropdown mode. We want to do this, in order
        // to ensure that the timing is consistent between dropdown and dialog modes since `MatDialog`
        // restores focus when the animation is finished, but the datepicker does it immediately.
        // Furthermore, this avoids any conflicts where the datepicker consumer might move focus
        // inside the `closed` event which is dispatched immediately.
        restoreFocus: false
      });

      this._dialogRef.afterClosed().subscribe(function () {
        return _this13.close();
      });

      this._forwardContentValues(this._dialogRef.componentInstance);
    }
    /** Open the calendar as a popup. */

  }, {
    key: "_openAsPopup",
    value: function _openAsPopup() {
      var _this14 = this;

      var portal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["ComponentPortal"](MatDatepickerContent, this._viewContainerRef);

      this._destroyPopup();

      this._createPopup();

      this._popupComponentRef = this._popupRef.attach(portal);

      this._forwardContentValues(this._popupComponentRef.instance); // Update the position once the calendar has rendered.


      this._ngZone.onStable.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_20__["take"])(1)).subscribe(function () {
        _this14._popupRef.updatePosition();
      });
    }
    /** Forwards relevant values from the datepicker to the datepicker content inside the overlay. */

  }, {
    key: "_forwardContentValues",
    value: function _forwardContentValues(instance) {
      instance.datepicker = this;
      instance.color = this.color;
    }
    /** Create the popup. */

  }, {
    key: "_createPopup",
    value: function _createPopup() {
      var _this15 = this;

      var positionStrategy = this._overlay.position().flexibleConnectedTo(this._datepickerInput.getConnectedOverlayOrigin()).withTransformOriginOn('.mat-datepicker-content').withFlexibleDimensions(false).withViewportMargin(8).withLockedPosition();

      var overlayConfig = new _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["OverlayConfig"]({
        positionStrategy: this._setConnectedPositions(positionStrategy),
        hasBackdrop: true,
        backdropClass: ['mat-overlay-transparent-backdrop', this._backdropHarnessClass],
        direction: this._dir,
        scrollStrategy: this._scrollStrategy(),
        panelClass: 'mat-datepicker-popup'
      });
      this._popupRef = this._overlay.create(overlayConfig);

      this._popupRef.overlayElement.setAttribute('role', 'dialog');

      Object(rxjs__WEBPACK_IMPORTED_MODULE_17__["merge"])(this._popupRef.backdropClick(), this._popupRef.detachments(), this._popupRef.keydownEvents().pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_20__["filter"])(function (event) {
        // Closing on alt + up is only valid when there's an input associated with the datepicker.
        return event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["ESCAPE"] || _this15._datepickerInput && event.altKey && event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["UP_ARROW"];
      }))).subscribe(function (event) {
        if (event) {
          event.preventDefault();
        }

        _this15.close();
      });
    }
    /** Destroys the current popup overlay. */

  }, {
    key: "_destroyPopup",
    value: function _destroyPopup() {
      if (this._popupRef) {
        this._popupRef.dispose();

        this._popupRef = this._popupComponentRef = null;
      }
    }
    /** Sets the positions of the datepicker in dropdown mode based on the current configuration. */

  }, {
    key: "_setConnectedPositions",
    value: function _setConnectedPositions(strategy) {
      var primaryX = this.xPosition === 'end' ? 'end' : 'start';
      var secondaryX = primaryX === 'start' ? 'end' : 'start';
      var primaryY = this.yPosition === 'above' ? 'bottom' : 'top';
      var secondaryY = primaryY === 'top' ? 'bottom' : 'top';
      return strategy.withPositions([{
        originX: primaryX,
        originY: secondaryY,
        overlayX: primaryX,
        overlayY: primaryY
      }, {
        originX: primaryX,
        originY: primaryY,
        overlayX: primaryX,
        overlayY: secondaryY
      }, {
        originX: secondaryX,
        originY: secondaryY,
        overlayX: secondaryX,
        overlayY: primaryY
      }, {
        originX: secondaryX,
        originY: primaryY,
        overlayX: secondaryX,
        overlayY: secondaryY
      }]);
    }
  }]);

  return MatDatepickerBase;
}();

MatDatepickerBase.ɵfac = function MatDatepickerBase_Factory(t) {
  return new (t || MatDatepickerBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialog"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["Overlay"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_DATEPICKER_SCROLL_STRATEGY), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MatDateSelectionModel));
};

MatDatepickerBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatDatepickerBase,
  inputs: {
    startView: "startView",
    xPosition: "xPosition",
    yPosition: "yPosition",
    startAt: "startAt",
    color: "color",
    touchUi: "touchUi",
    disabled: "disabled",
    opened: "opened",
    calendarHeaderComponent: "calendarHeaderComponent",
    panelClass: "panelClass",
    dateClass: "dateClass"
  },
  outputs: {
    yearSelected: "yearSelected",
    monthSelected: "monthSelected",
    openedStream: "opened",
    closedStream: "closed"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]]
});

MatDatepickerBase.ctorParameters = function () {
  return [{
    type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialog"]
  }, {
    type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["Overlay"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_DATEPICKER_SCROLL_STRATEGY]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
    }]
  }, {
    type: MatDateSelectionModel
  }];
};

MatDatepickerBase.propDecorators = {
  calendarHeaderComponent: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  startAt: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  startView: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  color: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  touchUi: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  xPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  yPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  yearSelected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  monthSelected: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  panelClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateClass: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  openedStream: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"],
    args: ['opened']
  }],
  closedStream: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"],
    args: ['closed']
  }],
  opened: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialog"]
    }, {
      type: _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["Overlay"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_DATEPICKER_SCROLL_STRATEGY]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_19__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
      }]
    }, {
      type: MatDateSelectionModel
    }];
  }, {
    startView: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    xPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    yPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    yearSelected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    monthSelected: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    openedStream: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"],
      args: ['opened']
    }],
    closedStream: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"],
      args: ['closed']
    }],
    startAt: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    color: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    touchUi: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    opened: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    calendarHeaderComponent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    panelClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateClass: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit
// template reference variables (e.g. #d vs #d="matDatepicker"). We can change this to a directive
// if angular adds support for `exportAs: '$implicit'` on directives.

/** Component responsible for managing the datepicker popup/dialog. */


var MatDatepicker = /*#__PURE__*/function (_MatDatepickerBase) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatDatepicker, _MatDatepickerBase);

  var _super4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatDatepicker);

  function MatDatepicker() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepicker);

    return _super4.apply(this, arguments);
  }

  return MatDatepicker;
}(MatDatepickerBase);

MatDatepicker.ɵfac = function MatDatepicker_Factory(t) {
  return ɵMatDatepicker_BaseFactory(t || MatDatepicker);
};

MatDatepicker.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatDatepicker,
  selectors: [["mat-datepicker"]],
  exportAs: ["matDatepicker"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]],
  decls: 0,
  vars: 0,
  template: function MatDatepicker_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});
var ɵMatDatepicker_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetInheritedFactory"](MatDatepicker);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepicker, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-datepicker',
      template: '',
      exportAs: 'matDatepicker',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      providers: [MAT_SINGLE_DATE_SELECTION_MODEL_PROVIDER]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * An event used for datepicker input and change events. We don't always have access to a native
 * input or change event because the event may have been triggered by the user clicking on the
 * calendar popup. For consistency, we always use MatDatepickerInputEvent instead.
 */


var MatDatepickerInputEvent = function MatDatepickerInputEvent(
/** Reference to the datepicker input component that emitted the event. */
target,
/** Reference to the native input element associated with the datepicker input. */
targetElement) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerInputEvent);

  this.target = target;
  this.targetElement = targetElement;
  this.value = this.target.value;
};
/** Base class for datepicker inputs. */


var MatDatepickerInputBase = /*#__PURE__*/function () {
  function MatDatepickerInputBase(_elementRef, _dateAdapter, _dateFormats) {
    var _this16 = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerInputBase);

    this._elementRef = _elementRef;
    this._dateAdapter = _dateAdapter;
    this._dateFormats = _dateFormats;
    /** Emits when a `change` event is fired on this `<input>`. */

    this.dateChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when an `input` event is fired on this `<input>`. */

    this.dateInput = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when the value changes (either due to user input or programmatic change). */

    this._valueChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Emits when the internal state has changed */

    this.stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subject"]();

    this._onTouched = function () {};

    this._validatorOnChange = function () {};

    this._cvaOnChange = function () {};

    this._valueChangesSubscription = rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"].EMPTY;
    this._localeSubscription = rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"].EMPTY;
    /** The form control validator for whether the input parses. */

    this._parseValidator = function () {
      return _this16._lastValueValid ? null : {
        'matDatepickerParse': {
          'text': _this16._elementRef.nativeElement.value
        }
      };
    };
    /** The form control validator for the date filter. */


    this._filterValidator = function (control) {
      var controlValue = _this16._dateAdapter.getValidDateOrNull(_this16._dateAdapter.deserialize(control.value));

      var dateFilter = _this16._getDateFilter();

      return !dateFilter || !controlValue || dateFilter(controlValue) ? null : {
        'matDatepickerFilter': true
      };
    };
    /** The form control validator for the min date. */


    this._minValidator = function (control) {
      var controlValue = _this16._dateAdapter.getValidDateOrNull(_this16._dateAdapter.deserialize(control.value));

      var min = _this16._getMinDate();

      return !min || !controlValue || _this16._dateAdapter.compareDate(min, controlValue) <= 0 ? null : {
        'matDatepickerMin': {
          'min': min,
          'actual': controlValue
        }
      };
    };
    /** The form control validator for the max date. */


    this._maxValidator = function (control) {
      var controlValue = _this16._dateAdapter.getValidDateOrNull(_this16._dateAdapter.deserialize(control.value));

      var max = _this16._getMaxDate();

      return !max || !controlValue || _this16._dateAdapter.compareDate(max, controlValue) >= 0 ? null : {
        'matDatepickerMax': {
          'max': max,
          'actual': controlValue
        }
      };
    };
    /** Whether the last value set on the input was valid. */


    this._lastValueValid = false;

    if (typeof ngDevMode === 'undefined' || ngDevMode) {
      if (!this._dateAdapter) {
        throw createMissingDateImplError('DateAdapter');
      }

      if (!this._dateFormats) {
        throw createMissingDateImplError('MAT_DATE_FORMATS');
      }
    } // Update the displayed date when the locale changes.


    this._localeSubscription = _dateAdapter.localeChanges.subscribe(function () {
      _this16.value = _this16.value;
    });
  }
  /** The value of the input. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDatepickerInputBase, [{
    key: "value",
    get: function get() {
      return this._model ? this._getValueFromModel(this._model.selection) : this._pendingValue;
    },
    set: function set(value) {
      value = this._dateAdapter.deserialize(value);
      this._lastValueValid = this._isValidValue(value);
      value = this._dateAdapter.getValidDateOrNull(value);
      var oldDate = this.value;

      this._assignValue(value);

      this._formatValue(value);

      if (!this._dateAdapter.sameDate(oldDate, value)) {
        this._valueChange.emit(value);
      }
    }
    /** Whether the datepicker-input is disabled. */

  }, {
    key: "disabled",
    get: function get() {
      return !!this._disabled || this._parentDisabled();
    },
    set: function set(value) {
      var newValue = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__["coerceBooleanProperty"])(value);
      var element = this._elementRef.nativeElement;

      if (this._disabled !== newValue) {
        this._disabled = newValue;
        this.stateChanges.next(undefined);
      } // We need to null check the `blur` method, because it's undefined during SSR.
      // In Ivy static bindings are invoked earlier, before the element is attached to the DOM.
      // This can cause an error to be thrown in some browsers (IE/Edge) which assert that the
      // element has been inserted.


      if (newValue && this._isInitialized && element.blur) {
        // Normally, native input elements automatically blur if they turn disabled. This behavior
        // is problematic, because it would mean that it triggers another change detection cycle,
        // which then causes a changed after checked error if the input element was focused before.
        element.blur();
      }
    }
    /** Gets the base validator functions. */

  }, {
    key: "_getValidators",
    value: function _getValidators() {
      return [this._parseValidator, this._minValidator, this._maxValidator, this._filterValidator];
    }
    /** Registers a date selection model with the input. */

  }, {
    key: "_registerModel",
    value: function _registerModel(model) {
      var _this17 = this;

      this._model = model;

      this._valueChangesSubscription.unsubscribe();

      if (this._pendingValue) {
        this._assignValue(this._pendingValue);
      }

      this._valueChangesSubscription = this._model.selectionChanged.subscribe(function (event) {
        if (event.source !== _this17) {
          var _value3 = _this17._getValueFromModel(event.selection);

          _this17._lastValueValid = _this17._isValidValue(_value3);

          _this17._cvaOnChange(_value3);

          _this17._onTouched();

          _this17._formatValue(_value3); // Note that we can't wrap the entire block with this logic, because for the range inputs
          // we want to revalidate whenever either one of the inputs changes and we don't have a
          // good way of distinguishing it at the moment.


          if (_this17._canEmitChangeEvent(event)) {
            _this17.dateInput.emit(new MatDatepickerInputEvent(_this17, _this17._elementRef.nativeElement));

            _this17.dateChange.emit(new MatDatepickerInputEvent(_this17, _this17._elementRef.nativeElement));
          }

          if (_this17._outsideValueChanged) {
            _this17._outsideValueChanged();
          }
        }
      });
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this._isInitialized = true;
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (dateInputsHaveChanged(changes, this._dateAdapter)) {
        this.stateChanges.next(undefined);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._valueChangesSubscription.unsubscribe();

      this._localeSubscription.unsubscribe();

      this._valueChange.complete();

      this.stateChanges.complete();
    }
    /** @docs-private */

  }, {
    key: "registerOnValidatorChange",
    value: function registerOnValidatorChange(fn) {
      this._validatorOnChange = fn;
    }
    /** @docs-private */

  }, {
    key: "validate",
    value: function validate(c) {
      return this._validator ? this._validator(c) : null;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "writeValue",
    value: function writeValue(value) {
      this.value = value;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "registerOnChange",
    value: function registerOnChange(fn) {
      this._cvaOnChange = fn;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "registerOnTouched",
    value: function registerOnTouched(fn) {
      this._onTouched = fn;
    } // Implemented as part of ControlValueAccessor.

  }, {
    key: "setDisabledState",
    value: function setDisabledState(isDisabled) {
      this.disabled = isDisabled;
    }
  }, {
    key: "_onKeydown",
    value: function _onKeydown(event) {
      var isAltDownArrow = event.altKey && event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["DOWN_ARROW"];

      if (isAltDownArrow && !this._elementRef.nativeElement.readOnly) {
        this._openPopup();

        event.preventDefault();
      }
    }
  }, {
    key: "_onInput",
    value: function _onInput(value) {
      var lastValueWasValid = this._lastValueValid;

      var date = this._dateAdapter.parse(value, this._dateFormats.parse.dateInput);

      this._lastValueValid = this._isValidValue(date);
      date = this._dateAdapter.getValidDateOrNull(date);

      if (!this._dateAdapter.sameDate(date, this.value)) {
        this._assignValue(date);

        this._cvaOnChange(date);

        this._valueChange.emit(date);

        this.dateInput.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));
      } else {
        // Call the CVA change handler for invalid values
        // since this is what marks the control as dirty.
        if (value && !this.value) {
          this._cvaOnChange(date);
        }

        if (lastValueWasValid !== this._lastValueValid) {
          this._validatorOnChange();
        }
      }
    }
  }, {
    key: "_onChange",
    value: function _onChange() {
      this.dateChange.emit(new MatDatepickerInputEvent(this, this._elementRef.nativeElement));
    }
    /** Handles blur events on the input. */

  }, {
    key: "_onBlur",
    value: function _onBlur() {
      // Reformat the input only if we have a valid value.
      if (this.value) {
        this._formatValue(this.value);
      }

      this._onTouched();
    }
    /** Formats a value and sets it on the input element. */

  }, {
    key: "_formatValue",
    value: function _formatValue(value) {
      this._elementRef.nativeElement.value = value ? this._dateAdapter.format(value, this._dateFormats.display.dateInput) : '';
    }
    /** Assigns a value to the model. */

  }, {
    key: "_assignValue",
    value: function _assignValue(value) {
      // We may get some incoming values before the model was
      // assigned. Save the value so that we can assign it later.
      if (this._model) {
        this._assignValueToModel(value);

        this._pendingValue = null;
      } else {
        this._pendingValue = value;
      }
    }
    /** Whether a value is considered valid. */

  }, {
    key: "_isValidValue",
    value: function _isValidValue(value) {
      return !value || this._dateAdapter.isValid(value);
    }
    /**
     * Checks whether a parent control is disabled. This is in place so that it can be overridden
     * by inputs extending this one which can be placed inside of a group that can be disabled.
     */

  }, {
    key: "_parentDisabled",
    value: function _parentDisabled() {
      return false;
    }
  }]);

  return MatDatepickerInputBase;
}();

MatDatepickerInputBase.ɵfac = function MatDatepickerInputBase_Factory(t) {
  return new (t || MatDatepickerInputBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8));
};

MatDatepickerInputBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatDatepickerInputBase,
  inputs: {
    value: "value",
    disabled: "disabled"
  },
  outputs: {
    dateChange: "dateChange",
    dateInput: "dateInput"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]]
});

MatDatepickerInputBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }];
};

MatDatepickerInputBase.propDecorators = {
  value: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  dateInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerInputBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }];
  }, {
    dateChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    dateInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    value: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * Checks whether the `SimpleChanges` object from an `ngOnChanges`
 * callback has any changes, accounting for date objects.
 */


function dateInputsHaveChanged(changes, adapter) {
  var keys = Object.keys(changes);

  for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {
    var key = _keys[_i];
    var _changes$key = changes[key],
        previousValue = _changes$key.previousValue,
        currentValue = _changes$key.currentValue;

    if (adapter.isDateInstance(previousValue) && adapter.isDateInstance(currentValue)) {
      if (!adapter.sameDate(previousValue, currentValue)) {
        return true;
      }
    } else {
      return true;
    }
  }

  return false;
}
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** @docs-private */


var MAT_DATEPICKER_VALUE_ACCESSOR = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALUE_ACCESSOR"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
    return MatDatepickerInput;
  }),
  multi: true
};
/** @docs-private */

var MAT_DATEPICKER_VALIDATORS = {
  provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALIDATORS"],
  useExisting: Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
    return MatDatepickerInput;
  }),
  multi: true
};
/** Directive used to connect an input to a MatDatepicker. */

var MatDatepickerInput = /*#__PURE__*/function (_MatDatepickerInputBa) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatDatepickerInput, _MatDatepickerInputBa);

  var _super5 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatDatepickerInput);

  function MatDatepickerInput(elementRef, dateAdapter, dateFormats, _formField) {
    var _thisSuper, _this18;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerInput);

    _this18 = _super5.call(this, elementRef, dateAdapter, dateFormats);
    _this18._formField = _formField;
    _this18._validator = _angular_forms__WEBPACK_IMPORTED_MODULE_23__["Validators"].compose(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])((_thisSuper = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"])(_this18), Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatDatepickerInput.prototype)), "_getValidators", _thisSuper).call(_thisSuper));
    return _this18;
  }
  /** The datepicker that this input is associated with. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDatepickerInput, [{
    key: "matDatepicker",
    set: function set(datepicker) {
      if (datepicker) {
        this._datepicker = datepicker;

        this._registerModel(datepicker._registerInput(this));
      }
    }
    /** The minimum valid date. */

  }, {
    key: "min",
    get: function get() {
      return this._min;
    },
    set: function set(value) {
      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));

      if (!this._dateAdapter.sameDate(validValue, this._min)) {
        this._min = validValue;

        this._validatorOnChange();
      }
    }
    /** The maximum valid date. */

  }, {
    key: "max",
    get: function get() {
      return this._max;
    },
    set: function set(value) {
      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));

      if (!this._dateAdapter.sameDate(validValue, this._max)) {
        this._max = validValue;

        this._validatorOnChange();
      }
    }
    /** Function that can be used to filter out dates within the datepicker. */

  }, {
    key: "dateFilter",
    get: function get() {
      return this._dateFilter;
    },
    set: function set(value) {
      this._dateFilter = value;

      this._validatorOnChange();
    }
    /**
     * Gets the element that the datepicker popup should be connected to.
     * @return The element to connect the popup to.
     */

  }, {
    key: "getConnectedOverlayOrigin",
    value: function getConnectedOverlayOrigin() {
      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;
    }
    /** Returns the palette used by the input's form field, if any. */

  }, {
    key: "getThemePalette",
    value: function getThemePalette() {
      return this._formField ? this._formField.color : undefined;
    }
    /** Gets the value at which the calendar should start. */

  }, {
    key: "getStartValue",
    value: function getStartValue() {
      return this.value;
    }
    /**
     * @deprecated
     * @breaking-change 8.0.0 Use `getConnectedOverlayOrigin` instead
     */

  }, {
    key: "getPopupConnectionElementRef",
    value: function getPopupConnectionElementRef() {
      return this.getConnectedOverlayOrigin();
    }
    /** Opens the associated datepicker. */

  }, {
    key: "_openPopup",
    value: function _openPopup() {
      if (this._datepicker) {
        this._datepicker.open();
      }
    }
  }, {
    key: "_getValueFromModel",
    value: function _getValueFromModel(modelValue) {
      return modelValue;
    }
  }, {
    key: "_assignValueToModel",
    value: function _assignValueToModel(value) {
      if (this._model) {
        this._model.updateSelection(value, this);
      }
    }
    /** Gets the input's minimum date. */

  }, {
    key: "_getMinDate",
    value: function _getMinDate() {
      return this._min;
    }
    /** Gets the input's maximum date. */

  }, {
    key: "_getMaxDate",
    value: function _getMaxDate() {
      return this._max;
    }
    /** Gets the input's date filtering function. */

  }, {
    key: "_getDateFilter",
    value: function _getDateFilter() {
      return this._dateFilter;
    }
  }, {
    key: "_canEmitChangeEvent",
    value: function _canEmitChangeEvent() {
      return true;
    }
  }]);

  return MatDatepickerInput;
}(MatDatepickerInputBase);

MatDatepickerInput.ɵfac = function MatDatepickerInput_Factory(t) {
  return new (t || MatDatepickerInput)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MAT_FORM_FIELD"], 8));
};

MatDatepickerInput.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatDatepickerInput,
  selectors: [["input", "matDatepicker", ""]],
  hostAttrs: [1, "mat-datepicker-input"],
  hostVars: 6,
  hostBindings: function MatDatepickerInput_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("input", function MatDatepickerInput_input_HostBindingHandler($event) {
        return ctx._onInput($event.target.value);
      })("change", function MatDatepickerInput_change_HostBindingHandler() {
        return ctx._onChange();
      })("blur", function MatDatepickerInput_blur_HostBindingHandler() {
        return ctx._onBlur();
      })("keydown", function MatDatepickerInput_keydown_HostBindingHandler($event) {
        return ctx._onKeydown($event);
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵhostProperty"]("disabled", ctx.disabled);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-haspopup", ctx._datepicker ? "dialog" : null)("aria-owns", (ctx._datepicker == null ? null : ctx._datepicker.opened) && ctx._datepicker.id || null)("min", ctx.min ? ctx._dateAdapter.toIso8601(ctx.min) : null)("max", ctx.max ? ctx._dateAdapter.toIso8601(ctx.max) : null)("data-mat-calendar", ctx._datepicker ? ctx._datepicker.id : null);
    }
  },
  inputs: {
    matDatepicker: "matDatepicker",
    min: "min",
    max: "max",
    dateFilter: ["matDatepickerFilter", "dateFilter"]
  },
  exportAs: ["matDatepickerInput"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {
    provide: _angular_material_input__WEBPACK_IMPORTED_MODULE_25__["MAT_INPUT_VALUE_ACCESSOR"],
    useExisting: MatDatepickerInput
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

MatDatepickerInput.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }, {
    type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MatFormField"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MAT_FORM_FIELD"]]
    }]
  }];
};

MatDatepickerInput.propDecorators = {
  matDatepicker: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  min: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  max: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateFilter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
    args: ['matDatepickerFilter']
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerInput, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: 'input[matDatepicker]',
      providers: [MAT_DATEPICKER_VALUE_ACCESSOR, MAT_DATEPICKER_VALIDATORS, {
        provide: _angular_material_input__WEBPACK_IMPORTED_MODULE_25__["MAT_INPUT_VALUE_ACCESSOR"],
        useExisting: MatDatepickerInput
      }],
      host: {
        'class': 'mat-datepicker-input',
        '[attr.aria-haspopup]': '_datepicker ? "dialog" : null',
        '[attr.aria-owns]': '(_datepicker?.opened && _datepicker.id) || null',
        '[attr.min]': 'min ? _dateAdapter.toIso8601(min) : null',
        '[attr.max]': 'max ? _dateAdapter.toIso8601(max) : null',
        // Used by the test harness to tie this input to its calendar. We can't depend on
        // `aria-owns` for this, because it's only defined while the calendar is open.
        '[attr.data-mat-calendar]': '_datepicker ? _datepicker.id : null',
        '[disabled]': 'disabled',
        '(input)': '_onInput($event.target.value)',
        '(change)': '_onChange()',
        '(blur)': '_onBlur()',
        '(keydown)': '_onKeydown($event)'
      },
      exportAs: 'matDatepickerInput'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }, {
      type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MatFormField"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MAT_FORM_FIELD"]]
      }]
    }];
  }, {
    matDatepicker: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    min: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    max: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
      args: ['matDatepickerFilter']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Can be used to override the icon of a `matDatepickerToggle`. */


var MatDatepickerToggleIcon = function MatDatepickerToggleIcon() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerToggleIcon);
};

MatDatepickerToggleIcon.ɵfac = function MatDatepickerToggleIcon_Factory(t) {
  return new (t || MatDatepickerToggleIcon)();
};

MatDatepickerToggleIcon.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatDatepickerToggleIcon,
  selectors: [["", "matDatepickerToggleIcon", ""]]
});

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerToggleIcon, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: '[matDatepickerToggleIcon]'
    }]
  }], null, null);
})();

var MatDatepickerToggle = /*#__PURE__*/function () {
  function MatDatepickerToggle(_intl, _changeDetectorRef, defaultTabIndex) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerToggle);

    this._intl = _intl;
    this._changeDetectorRef = _changeDetectorRef;
    this._stateChanges = rxjs__WEBPACK_IMPORTED_MODULE_17__["Subscription"].EMPTY;
    var parsedTabIndex = Number(defaultTabIndex);
    this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;
  }
  /** Whether the toggle button is disabled. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDatepickerToggle, [{
    key: "disabled",
    get: function get() {
      if (this._disabled === undefined && this.datepicker) {
        return this.datepicker.disabled;
      }

      return !!this._disabled;
    },
    set: function set(value) {
      this._disabled = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__["coerceBooleanProperty"])(value);
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes['datepicker']) {
        this._watchStateChanges();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._stateChanges.unsubscribe();
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      this._watchStateChanges();
    }
  }, {
    key: "_open",
    value: function _open(event) {
      if (this.datepicker && !this.disabled) {
        this.datepicker.open();
        event.stopPropagation();
      }
    }
  }, {
    key: "_watchStateChanges",
    value: function _watchStateChanges() {
      var _this19 = this;

      var datepickerStateChanged = this.datepicker ? this.datepicker._stateChanges : Object(rxjs__WEBPACK_IMPORTED_MODULE_17__["of"])();
      var inputStateChanged = this.datepicker && this.datepicker._datepickerInput ? this.datepicker._datepickerInput.stateChanges : Object(rxjs__WEBPACK_IMPORTED_MODULE_17__["of"])();
      var datepickerToggled = this.datepicker ? Object(rxjs__WEBPACK_IMPORTED_MODULE_17__["merge"])(this.datepicker.openedStream, this.datepicker.closedStream) : Object(rxjs__WEBPACK_IMPORTED_MODULE_17__["of"])();

      this._stateChanges.unsubscribe();

      this._stateChanges = Object(rxjs__WEBPACK_IMPORTED_MODULE_17__["merge"])(this._intl.changes, datepickerStateChanged, inputStateChanged, datepickerToggled).subscribe(function () {
        return _this19._changeDetectorRef.markForCheck();
      });
    }
  }]);

  return MatDatepickerToggle;
}();

MatDatepickerToggle.ɵfac = function MatDatepickerToggle_Factory(t) {
  return new (t || MatDatepickerToggle)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MatDatepickerIntl), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinjectAttribute"]('tabindex'));
};

MatDatepickerToggle.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatDatepickerToggle,
  selectors: [["mat-datepicker-toggle"]],
  contentQueries: function MatDatepickerToggle_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MatDatepickerToggleIcon, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._customIcon = _t.first);
    }
  },
  viewQuery: function MatDatepickerToggle_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c2, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._button = _t.first);
    }
  },
  hostAttrs: [1, "mat-datepicker-toggle"],
  hostVars: 8,
  hostBindings: function MatDatepickerToggle_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("focus", function MatDatepickerToggle_focus_HostBindingHandler() {
        return ctx._button.focus();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("tabindex", ctx.disabled ? null : -1)("data-mat-calendar", ctx.datepicker ? ctx.datepicker.id : null);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-datepicker-toggle-active", ctx.datepicker && ctx.datepicker.opened)("mat-accent", ctx.datepicker && ctx.datepicker.color === "accent")("mat-warn", ctx.datepicker && ctx.datepicker.color === "warn");
    }
  },
  inputs: {
    tabIndex: "tabIndex",
    disabled: "disabled",
    datepicker: ["for", "datepicker"],
    disableRipple: "disableRipple"
  },
  exportAs: ["matDatepickerToggle"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c4,
  decls: 4,
  vars: 6,
  consts: [["mat-icon-button", "", "type", "button", 3, "disabled", "disableRipple", "click"], ["button", ""], ["class", "mat-datepicker-toggle-default-icon", "viewBox", "0 0 24 24", "width", "24px", "height", "24px", "fill", "currentColor", "focusable", "false", 4, "ngIf"], ["viewBox", "0 0 24 24", "width", "24px", "height", "24px", "fill", "currentColor", "focusable", "false", 1, "mat-datepicker-toggle-default-icon"], ["d", "M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z"]],
  template: function MatDatepickerToggle_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojectionDef"](_c3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatDatepickerToggle_Template_button_click_0_listener($event) {
        return ctx._open($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, MatDatepickerToggle__svg_svg_2_Template, 2, 0, "svg", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojection"](3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("disabled", ctx.disabled)("disableRipple", ctx.disableRipple);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-haspopup", ctx.datepicker ? "dialog" : null)("aria-label", ctx._intl.openCalendarLabel)("tabindex", ctx.disabled ? -1 : ctx.tabIndex);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx._customIcon);
    }
  },
  directives: [_angular_material_button__WEBPACK_IMPORTED_MODULE_13__["MatButton"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"]],
  styles: [".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatDatepickerToggle.ctorParameters = function () {
  return [{
    type: MatDatepickerIntl
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Attribute"],
      args: ['tabindex']
    }]
  }];
};

MatDatepickerToggle.propDecorators = {
  datepicker: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
    args: ['for']
  }],
  tabIndex: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  disableRipple: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  _customIcon: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
    args: [MatDatepickerToggleIcon]
  }],
  _button: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['button']
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerToggle, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-datepicker-toggle',
      template: "<button\n  #button\n  mat-icon-button\n  type=\"button\"\n  [attr.aria-haspopup]=\"datepicker ? 'dialog' : null\"\n  [attr.aria-label]=\"_intl.openCalendarLabel\"\n  [attr.tabindex]=\"disabled ? -1 : tabIndex\"\n  [disabled]=\"disabled\"\n  [disableRipple]=\"disableRipple\"\n  (click)=\"_open($event)\">\n\n  <svg\n    *ngIf=\"!_customIcon\"\n    class=\"mat-datepicker-toggle-default-icon\"\n    viewBox=\"0 0 24 24\"\n    width=\"24px\"\n    height=\"24px\"\n    fill=\"currentColor\"\n    focusable=\"false\">\n    <path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"/>\n  </svg>\n\n  <ng-content select=\"[matDatepickerToggleIcon]\"></ng-content>\n</button>\n",
      host: {
        'class': 'mat-datepicker-toggle',
        // Always set the tabindex to -1 so that it doesn't overlap with any custom tabindex the
        // consumer may have provided, while still being able to receive focus.
        '[attr.tabindex]': 'disabled ? null : -1',
        '[class.mat-datepicker-toggle-active]': 'datepicker && datepicker.opened',
        '[class.mat-accent]': 'datepicker && datepicker.color === "accent"',
        '[class.mat-warn]': 'datepicker && datepicker.color === "warn"',
        // Used by the test harness to tie this toggle to its datepicker.
        '[attr.data-mat-calendar]': 'datepicker ? datepicker.id : null',
        '(focus)': '_button.focus()'
      },
      exportAs: 'matDatepickerToggle',
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush,
      styles: [".mat-form-field-appearance-legacy .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-datepicker-toggle-default-icon{width:1em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-datepicker-toggle-default-icon{display:block;width:1.5em;height:1.5em}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button .mat-datepicker-toggle-default-icon,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button .mat-datepicker-toggle-default-icon{margin:auto}\n"]
    }]
  }], function () {
    return [{
      type: MatDatepickerIntl
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Attribute"],
        args: ['tabindex']
      }]
    }];
  }, {
    tabIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    datepicker: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
      args: ['for']
    }],
    disableRipple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    _customIcon: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
      args: [MatDatepickerToggleIcon]
    }],
    _button: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['button']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Used to provide the date range input wrapper component
 * to the parts without circular dependencies.
 */


var MAT_DATE_RANGE_INPUT_PARENT = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('MAT_DATE_RANGE_INPUT_PARENT');
/**
 * Base class for the individual inputs that can be projected inside a `mat-date-range-input`.
 */

var MatDateRangeInputPartBase = /*#__PURE__*/function (_MatDatepickerInputBa2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatDateRangeInputPartBase, _MatDatepickerInputBa2);

  var _super6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatDateRangeInputPartBase);

  function MatDateRangeInputPartBase(_rangeInput, elementRef, _defaultErrorStateMatcher, _injector, _parentForm, _parentFormGroup, dateAdapter, dateFormats) {
    var _this20;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDateRangeInputPartBase);

    _this20 = _super6.call(this, elementRef, dateAdapter, dateFormats);
    _this20._rangeInput = _rangeInput;
    _this20._defaultErrorStateMatcher = _defaultErrorStateMatcher;
    _this20._injector = _injector;
    _this20._parentForm = _parentForm;
    _this20._parentFormGroup = _parentFormGroup;

    _this20._outsideValueChanged = function () {
      // Whenever the value changes outside the input we need to revalidate, because
      // the validation state of each of the inputs depends on the other one.
      _this20._validatorOnChange();
    };

    return _this20;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDateRangeInputPartBase, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      // We need the date input to provide itself as a `ControlValueAccessor` and a `Validator`, while
      // injecting its `NgControl` so that the error state is handled correctly. This introduces a
      // circular dependency, because both `ControlValueAccessor` and `Validator` depend on the input
      // itself. Usually we can work around it for the CVA, but there's no API to do it for the
      // validator. We work around it here by injecting the `NgControl` in `ngOnInit`, after
      // everything has been resolved.
      var ngControl = this._injector.get(_angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgControl"], null, _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectFlags"].Self);

      if (ngControl) {
        this.ngControl = ngControl;
      }
    }
  }, {
    key: "ngDoCheck",
    value: function ngDoCheck() {
      if (this.ngControl) {
        // We need to re-evaluate this on every change detection cycle, because there are some
        // error triggers that we can't subscribe to (e.g. parent form submissions). This means
        // that whatever logic is in here has to be super lean or we risk destroying the performance.
        this.updateErrorState();
      }
    }
    /** Gets whether the input is empty. */

  }, {
    key: "isEmpty",
    value: function isEmpty() {
      return this._elementRef.nativeElement.value.length === 0;
    }
    /** Gets the placeholder of the input. */

  }, {
    key: "_getPlaceholder",
    value: function _getPlaceholder() {
      return this._elementRef.nativeElement.placeholder;
    }
    /** Focuses the input. */

  }, {
    key: "focus",
    value: function focus() {
      this._elementRef.nativeElement.focus();
    }
    /** Handles `input` events on the input element. */

  }, {
    key: "_onInput",
    value: function _onInput(value) {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatDateRangeInputPartBase.prototype), "_onInput", this).call(this, value);

      this._rangeInput._handleChildValueChange();
    }
    /** Opens the datepicker associated with the input. */

  }, {
    key: "_openPopup",
    value: function _openPopup() {
      this._rangeInput._openDatepicker();
    }
    /** Gets the minimum date from the range input. */

  }, {
    key: "_getMinDate",
    value: function _getMinDate() {
      return this._rangeInput.min;
    }
    /** Gets the maximum date from the range input. */

  }, {
    key: "_getMaxDate",
    value: function _getMaxDate() {
      return this._rangeInput.max;
    }
    /** Gets the date filter function from the range input. */

  }, {
    key: "_getDateFilter",
    value: function _getDateFilter() {
      return this._rangeInput.dateFilter;
    }
  }, {
    key: "_parentDisabled",
    value: function _parentDisabled() {
      return this._rangeInput._groupDisabled;
    }
  }]);

  return MatDateRangeInputPartBase;
}(MatDatepickerInputBase);

MatDateRangeInputPartBase.ɵfac = function MatDateRangeInputPartBase_Factory(t) {
  return new (t || MatDateRangeInputPartBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_DATE_RANGE_INPUT_PARENT), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8));
};

MatDateRangeInputPartBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatDateRangeInputPartBase,
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

MatDateRangeInputPartBase.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_DATE_RANGE_INPUT_PARENT]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDateRangeInputPartBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_DATE_RANGE_INPUT_PARENT]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }];
  }, null);
})();

var _MatDateRangeInputBase = // Needs to be `as any`, because the base class is abstract.
Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["mixinErrorState"])(MatDateRangeInputPartBase);
/** Input for entering the start date in a `mat-date-range-input`. */


var MatStartDate = /*#__PURE__*/function (_MatDateRangeInputBas) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatStartDate, _MatDateRangeInputBas);

  var _super7 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatStartDate);

  function MatStartDate(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {
    var _thisSuper2, _this21;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatStartDate);

    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to
    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this
    // constructor once ViewEngine is removed.
    _this21 = _super7.call(this, rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);
    /** Validator that checks that the start date isn't after the end date. */

    _this21._startValidator = function (control) {
      var start = _this21._dateAdapter.getValidDateOrNull(_this21._dateAdapter.deserialize(control.value));

      var end = _this21._model ? _this21._model.selection.end : null;
      return !start || !end || _this21._dateAdapter.compareDate(start, end) <= 0 ? null : {
        'matStartDateInvalid': {
          'end': end,
          'actual': start
        }
      };
    };

    _this21._validator = _angular_forms__WEBPACK_IMPORTED_MODULE_23__["Validators"].compose([].concat(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])((_thisSuper2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"])(_this21), Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatStartDate.prototype)), "_getValidators", _thisSuper2).call(_thisSuper2)), [_this21._startValidator]));

    _this21._canEmitChangeEvent = function (event) {
      return event.source !== _this21._rangeInput._endInput;
    };

    return _this21;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatStartDate, [{
    key: "_getValueFromModel",
    value: function _getValueFromModel(modelValue) {
      return modelValue.start;
    }
  }, {
    key: "_assignValueToModel",
    value: function _assignValueToModel(value) {
      if (this._model) {
        var range = new DateRange(value, this._model.selection.end);

        this._model.updateSelection(range, this);

        this._cvaOnChange(value);
      }
    }
  }, {
    key: "_formatValue",
    value: function _formatValue(value) {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatStartDate.prototype), "_formatValue", this).call(this, value); // Any time the input value is reformatted we need to tell the parent.


      this._rangeInput._handleChildValueChange();
    }
    /** Gets the value that should be used when mirroring the input's size. */

  }, {
    key: "getMirrorValue",
    value: function getMirrorValue() {
      var element = this._elementRef.nativeElement;
      var value = element.value;
      return value.length > 0 ? value : element.placeholder;
    }
  }]);

  return MatStartDate;
}(_MatDateRangeInputBase);

MatStartDate.ɵfac = function MatStartDate_Factory(t) {
  return new (t || MatStartDate)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_DATE_RANGE_INPUT_PARENT), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8));
};

MatStartDate.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatStartDate,
  selectors: [["input", "matStartDate", ""]],
  hostAttrs: ["type", "text", 1, "mat-start-date", "mat-date-range-input-inner"],
  hostVars: 6,
  hostBindings: function MatStartDate_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("input", function MatStartDate_input_HostBindingHandler($event) {
        return ctx._onInput($event.target.value);
      })("change", function MatStartDate_change_HostBindingHandler() {
        return ctx._onChange();
      })("keydown", function MatStartDate_keydown_HostBindingHandler($event) {
        return ctx._onKeydown($event);
      })("blur", function MatStartDate_blur_HostBindingHandler() {
        return ctx._onBlur();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵhostProperty"]("disabled", ctx.disabled);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("id", ctx._rangeInput.id)("aria-haspopup", ctx._rangeInput.rangePicker ? "dialog" : null)("aria-owns", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)("min", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)("max", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([{
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALUE_ACCESSOR"],
    useExisting: MatStartDate,
    multi: true
  }, {
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALIDATORS"],
    useExisting: MatStartDate,
    multi: true
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

MatStartDate.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_DATE_RANGE_INPUT_PARENT]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatStartDate, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: 'input[matStartDate]',
      host: {
        'class': 'mat-start-date mat-date-range-input-inner',
        '[disabled]': 'disabled',
        '(input)': '_onInput($event.target.value)',
        '(change)': '_onChange()',
        '(keydown)': '_onKeydown($event)',
        '[attr.id]': '_rangeInput.id',
        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? "dialog" : null',
        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',
        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',
        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',
        '(blur)': '_onBlur()',
        'type': 'text'
      },
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALUE_ACCESSOR"],
        useExisting: MatStartDate,
        multi: true
      }, {
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALIDATORS"],
        useExisting: MatStartDate,
        multi: true
      }]
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_DATE_RANGE_INPUT_PARENT]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }];
  }, null);
})();
/** Input for entering the end date in a `mat-date-range-input`. */


var MatEndDate = /*#__PURE__*/function (_MatDateRangeInputBas2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatEndDate, _MatDateRangeInputBas2);

  var _super8 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatEndDate);

  function MatEndDate(rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats) {
    var _thisSuper3, _this22;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatEndDate);

    // TODO(crisbeto): this constructor shouldn't be necessary, but ViewEngine doesn't seem to
    // handle DI correctly when it is inherited from `MatDateRangeInputPartBase`. We can drop this
    // constructor once ViewEngine is removed.
    _this22 = _super8.call(this, rangeInput, elementRef, defaultErrorStateMatcher, injector, parentForm, parentFormGroup, dateAdapter, dateFormats);
    /** Validator that checks that the end date isn't before the start date. */

    _this22._endValidator = function (control) {
      var end = _this22._dateAdapter.getValidDateOrNull(_this22._dateAdapter.deserialize(control.value));

      var start = _this22._model ? _this22._model.selection.start : null;
      return !end || !start || _this22._dateAdapter.compareDate(end, start) >= 0 ? null : {
        'matEndDateInvalid': {
          'start': start,
          'actual': end
        }
      };
    };

    _this22._validator = _angular_forms__WEBPACK_IMPORTED_MODULE_23__["Validators"].compose([].concat(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])((_thisSuper3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_1__["default"])(_this22), Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatEndDate.prototype)), "_getValidators", _thisSuper3).call(_thisSuper3)), [_this22._endValidator]));

    _this22._canEmitChangeEvent = function (event) {
      return event.source !== _this22._rangeInput._startInput;
    };

    return _this22;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatEndDate, [{
    key: "_getValueFromModel",
    value: function _getValueFromModel(modelValue) {
      return modelValue.end;
    }
  }, {
    key: "_assignValueToModel",
    value: function _assignValueToModel(value) {
      if (this._model) {
        var range = new DateRange(this._model.selection.start, value);

        this._model.updateSelection(range, this);

        this._cvaOnChange(value);
      }
    }
  }, {
    key: "_onKeydown",
    value: function _onKeydown(event) {
      // If the user is pressing backspace on an empty end input, move focus back to the start.
      if (event.keyCode === _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_18__["BACKSPACE"] && !this._elementRef.nativeElement.value) {
        this._rangeInput._startInput.focus();
      }

      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatEndDate.prototype), "_onKeydown", this).call(this, event);
    }
  }]);

  return MatEndDate;
}(_MatDateRangeInputBase);

MatEndDate.ɵfac = function MatEndDate_Factory(t) {
  return new (t || MatEndDate)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_DATE_RANGE_INPUT_PARENT), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"], 8));
};

MatEndDate.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatEndDate,
  selectors: [["input", "matEndDate", ""]],
  hostAttrs: ["type", "text", 1, "mat-end-date", "mat-date-range-input-inner"],
  hostVars: 5,
  hostBindings: function MatEndDate_HostBindings(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("input", function MatEndDate_input_HostBindingHandler($event) {
        return ctx._onInput($event.target.value);
      })("change", function MatEndDate_change_HostBindingHandler() {
        return ctx._onChange();
      })("keydown", function MatEndDate_keydown_HostBindingHandler($event) {
        return ctx._onKeydown($event);
      })("blur", function MatEndDate_blur_HostBindingHandler() {
        return ctx._onBlur();
      });
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵhostProperty"]("disabled", ctx.disabled);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-haspopup", ctx._rangeInput.rangePicker ? "dialog" : null)("aria-owns", (ctx._rangeInput.rangePicker == null ? null : ctx._rangeInput.rangePicker.opened) && ctx._rangeInput.rangePicker.id || null)("min", ctx._getMinDate() ? ctx._dateAdapter.toIso8601(ctx._getMinDate()) : null)("max", ctx._getMaxDate() ? ctx._dateAdapter.toIso8601(ctx._getMaxDate()) : null);
    }
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([{
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALUE_ACCESSOR"],
    useExisting: MatEndDate,
    multi: true
  }, {
    provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALIDATORS"],
    useExisting: MatEndDate,
    multi: true
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

MatEndDate.ctorParameters = function () {
  return [{
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_DATE_RANGE_INPUT_PARENT]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatEndDate, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: 'input[matEndDate]',
      host: {
        'class': 'mat-end-date mat-date-range-input-inner',
        '[disabled]': 'disabled',
        '(input)': '_onInput($event.target.value)',
        '(change)': '_onChange()',
        '(keydown)': '_onKeydown($event)',
        '[attr.aria-haspopup]': '_rangeInput.rangePicker ? "dialog" : null',
        '[attr.aria-owns]': '(_rangeInput.rangePicker?.opened && _rangeInput.rangePicker.id) || null',
        '[attr.min]': '_getMinDate() ? _dateAdapter.toIso8601(_getMinDate()) : null',
        '[attr.max]': '_getMaxDate() ? _dateAdapter.toIso8601(_getMaxDate()) : null',
        '(blur)': '_onBlur()',
        'type': 'text'
      },
      providers: [{
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALUE_ACCESSOR"],
        useExisting: MatEndDate,
        multi: true
      }, {
        provide: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NG_VALIDATORS"],
        useExisting: MatEndDate,
        multi: true
      }]
    }]
  }], function () {
    return [{
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_DATE_RANGE_INPUT_PARENT]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["ErrorStateMatcher"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Injector"]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["NgForm"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["FormGroupDirective"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["MAT_DATE_FORMATS"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// TODO(mmalerba): We use a component instead of a directive here so the user can use implicit
// template reference variables (e.g. #d vs #d="matDateRangePicker"). We can change this to a
// directive if angular adds support for `exportAs: '$implicit'` on directives.

/** Component responsible for managing the date range picker popup/dialog. */


var MatDateRangePicker = /*#__PURE__*/function (_MatDatepickerBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatDateRangePicker, _MatDatepickerBase2);

  var _super9 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatDateRangePicker);

  function MatDateRangePicker() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDateRangePicker);

    return _super9.apply(this, arguments);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDateRangePicker, [{
    key: "_forwardContentValues",
    value: function _forwardContentValues(instance) {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatDateRangePicker.prototype), "_forwardContentValues", this).call(this, instance);

      var input = this._datepickerInput;

      if (input) {
        instance.comparisonStart = input.comparisonStart;
        instance.comparisonEnd = input.comparisonEnd;
      }
    }
  }]);

  return MatDateRangePicker;
}(MatDatepickerBase);

MatDateRangePicker.ɵfac = function MatDateRangePicker_Factory(t) {
  return ɵMatDateRangePicker_BaseFactory(t || MatDateRangePicker);
};

MatDateRangePicker.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatDateRangePicker,
  selectors: [["mat-date-range-picker"]],
  exportAs: ["matDateRangePicker"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]],
  decls: 0,
  vars: 0,
  template: function MatDateRangePicker_Template(rf, ctx) {},
  encapsulation: 2,
  changeDetection: 0
});
var ɵMatDateRangePicker_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetInheritedFactory"](MatDateRangePicker);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDateRangePicker, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-date-range-picker',
      template: '',
      exportAs: 'matDateRangePicker',
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      providers: [MAT_RANGE_DATE_SELECTION_MODEL_PROVIDER, MAT_CALENDAR_RANGE_STRATEGY_PROVIDER]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var nextUniqueId = 0;

var MatDateRangeInput = /*#__PURE__*/function () {
  function MatDateRangeInput(_changeDetectorRef, _elementRef, control, _dateAdapter, _formField) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDateRangeInput);

    this._changeDetectorRef = _changeDetectorRef;
    this._elementRef = _elementRef;
    this._dateAdapter = _dateAdapter;
    this._formField = _formField;
    /** Unique ID for the input. */

    this.id = "mat-date-range-input-".concat(nextUniqueId++);
    /** Whether the control is focused. */

    this.focused = false;
    /** Name of the form control. */

    this.controlType = 'mat-date-range-input';
    this._groupDisabled = false;
    /** Value for the `aria-describedby` attribute of the inputs. */

    this._ariaDescribedBy = null;
    /** Separator text to be shown between the inputs. */

    this.separator = '–';
    /** Start of the comparison range that should be shown in the calendar. */

    this.comparisonStart = null;
    /** End of the comparison range that should be shown in the calendar. */

    this.comparisonEnd = null;
    /** Emits when the input's state has changed. */

    this.stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_17__["Subject"]();

    if (!_dateAdapter && (typeof ngDevMode === 'undefined' || ngDevMode)) {
      throw createMissingDateImplError('DateAdapter');
    } // TODO(crisbeto): remove `as any` after #18206 lands.


    this.ngControl = control;
  }
  /** Current value of the range input. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatDateRangeInput, [{
    key: "value",
    get: function get() {
      return this._model ? this._model.selection : null;
    }
    /** Whether the control's label should float. */

  }, {
    key: "shouldLabelFloat",
    get: function get() {
      return this.focused || !this.empty;
    }
    /**
     * Implemented as a part of `MatFormFieldControl`.
     * Set the placeholder attribute on `matStartDate` and `matEndDate`.
     * @docs-private
     */

  }, {
    key: "placeholder",
    get: function get() {
      var _a, _b;

      var start = ((_a = this._startInput) === null || _a === void 0 ? void 0 : _a._getPlaceholder()) || '';
      var end = ((_b = this._endInput) === null || _b === void 0 ? void 0 : _b._getPlaceholder()) || '';
      return start || end ? "".concat(start, " ").concat(this.separator, " ").concat(end) : '';
    }
    /** The range picker that this input is associated with. */

  }, {
    key: "rangePicker",
    get: function get() {
      return this._rangePicker;
    },
    set: function set(rangePicker) {
      if (rangePicker) {
        this._model = rangePicker._registerInput(this);
        this._rangePicker = rangePicker;

        this._registerModel(this._model);
      }
    }
    /** Whether the input is required. */

  }, {
    key: "required",
    get: function get() {
      return !!this._required;
    },
    set: function set(value) {
      this._required = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__["coerceBooleanProperty"])(value);
    }
    /** Function that can be used to filter out dates within the date range picker. */

  }, {
    key: "dateFilter",
    get: function get() {
      return this._dateFilter;
    },
    set: function set(value) {
      this._dateFilter = value;

      this._revalidate();
    }
    /** The minimum valid date. */

  }, {
    key: "min",
    get: function get() {
      return this._min;
    },
    set: function set(value) {
      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));

      if (!this._dateAdapter.sameDate(validValue, this._min)) {
        this._min = validValue;

        this._revalidate();
      }
    }
    /** The maximum valid date. */

  }, {
    key: "max",
    get: function get() {
      return this._max;
    },
    set: function set(value) {
      var validValue = this._dateAdapter.getValidDateOrNull(this._dateAdapter.deserialize(value));

      if (!this._dateAdapter.sameDate(validValue, this._max)) {
        this._max = validValue;

        this._revalidate();
      }
    }
    /** Whether the input is disabled. */

  }, {
    key: "disabled",
    get: function get() {
      return this._startInput && this._endInput ? this._startInput.disabled && this._endInput.disabled : this._groupDisabled;
    },
    set: function set(value) {
      var newValue = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_21__["coerceBooleanProperty"])(value);

      if (newValue !== this._groupDisabled) {
        this._groupDisabled = newValue;
        this.stateChanges.next(undefined);
      }
    }
    /** Whether the input is in an error state. */

  }, {
    key: "errorState",
    get: function get() {
      if (this._startInput && this._endInput) {
        return this._startInput.errorState || this._endInput.errorState;
      }

      return false;
    }
    /** Whether the datepicker input is empty. */

  }, {
    key: "empty",
    get: function get() {
      var startEmpty = this._startInput ? this._startInput.isEmpty() : false;
      var endEmpty = this._endInput ? this._endInput.isEmpty() : false;
      return startEmpty && endEmpty;
    }
    /**
     * Implemented as a part of `MatFormFieldControl`.
     * @docs-private
     */

  }, {
    key: "setDescribedByIds",
    value: function setDescribedByIds(ids) {
      this._ariaDescribedBy = ids.length ? ids.join(' ') : null;
    }
    /**
     * Implemented as a part of `MatFormFieldControl`.
     * @docs-private
     */

  }, {
    key: "onContainerClick",
    value: function onContainerClick() {
      if (!this.focused && !this.disabled) {
        if (!this._model || !this._model.selection.start) {
          this._startInput.focus();
        } else {
          this._endInput.focus();
        }
      }
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this23 = this;

      if (typeof ngDevMode === 'undefined' || ngDevMode) {
        if (!this._startInput) {
          throw Error('mat-date-range-input must contain a matStartDate input');
        }

        if (!this._endInput) {
          throw Error('mat-date-range-input must contain a matEndDate input');
        }
      }

      if (this._model) {
        this._registerModel(this._model);
      } // We don't need to unsubscribe from this, because we
      // know that the input streams will be completed on destroy.


      Object(rxjs__WEBPACK_IMPORTED_MODULE_17__["merge"])(this._startInput.stateChanges, this._endInput.stateChanges).subscribe(function () {
        _this23.stateChanges.next(undefined);
      });
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (dateInputsHaveChanged(changes, this._dateAdapter)) {
        this.stateChanges.next(undefined);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this.stateChanges.complete();
    }
    /** Gets the date at which the calendar should start. */

  }, {
    key: "getStartValue",
    value: function getStartValue() {
      return this.value ? this.value.start : null;
    }
    /** Gets the input's theme palette. */

  }, {
    key: "getThemePalette",
    value: function getThemePalette() {
      return this._formField ? this._formField.color : undefined;
    }
    /** Gets the element to which the calendar overlay should be attached. */

  }, {
    key: "getConnectedOverlayOrigin",
    value: function getConnectedOverlayOrigin() {
      return this._formField ? this._formField.getConnectedOverlayOrigin() : this._elementRef;
    }
    /** Gets the value that is used to mirror the state input. */

  }, {
    key: "_getInputMirrorValue",
    value: function _getInputMirrorValue() {
      return this._startInput ? this._startInput.getMirrorValue() : '';
    }
    /** Whether the input placeholders should be hidden. */

  }, {
    key: "_shouldHidePlaceholders",
    value: function _shouldHidePlaceholders() {
      return this._startInput ? !this._startInput.isEmpty() : false;
    }
    /** Handles the value in one of the child inputs changing. */

  }, {
    key: "_handleChildValueChange",
    value: function _handleChildValueChange() {
      this.stateChanges.next(undefined);

      this._changeDetectorRef.markForCheck();
    }
    /** Opens the date range picker associated with the input. */

  }, {
    key: "_openDatepicker",
    value: function _openDatepicker() {
      if (this._rangePicker) {
        this._rangePicker.open();
      }
    }
    /** Whether the separate text should be hidden. */

  }, {
    key: "_shouldHideSeparator",
    value: function _shouldHideSeparator() {
      return (!this._formField || this._formField._hideControlPlaceholder()) && this.empty;
    }
    /** Gets the value for the `aria-labelledby` attribute of the inputs. */

  }, {
    key: "_getAriaLabelledby",
    value: function _getAriaLabelledby() {
      var formField = this._formField;
      return formField && formField._hasFloatingLabel() ? formField._labelId : null;
    }
    /** Re-runs the validators on the start/end inputs. */

  }, {
    key: "_revalidate",
    value: function _revalidate() {
      if (this._startInput) {
        this._startInput._validatorOnChange();
      }

      if (this._endInput) {
        this._endInput._validatorOnChange();
      }
    }
    /** Registers the current date selection model with the start/end inputs. */

  }, {
    key: "_registerModel",
    value: function _registerModel(model) {
      if (this._startInput) {
        this._startInput._registerModel(model);
      }

      if (this._endInput) {
        this._endInput._registerModel(model);
      }
    }
  }]);

  return MatDateRangeInput;
}();

MatDateRangeInput.ɵfac = function MatDateRangeInput_Factory(t) {
  return new (t || MatDateRangeInput)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_forms__WEBPACK_IMPORTED_MODULE_23__["ControlContainer"], 10), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MAT_FORM_FIELD"], 8));
};

MatDateRangeInput.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatDateRangeInput,
  selectors: [["mat-date-range-input"]],
  contentQueries: function MatDateRangeInput_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MatStartDate, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MatEndDate, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._startInput = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._endInput = _t.first);
    }
  },
  hostAttrs: ["role", "group", 1, "mat-date-range-input"],
  hostVars: 8,
  hostBindings: function MatDateRangeInput_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("id", null)("aria-labelledby", ctx._getAriaLabelledby())("aria-describedby", ctx._ariaDescribedBy)("data-mat-calendar", ctx.rangePicker ? ctx.rangePicker.id : null);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-date-range-input-hide-placeholders", ctx._shouldHidePlaceholders())("mat-date-range-input-required", ctx.required);
    }
  },
  inputs: {
    separator: "separator",
    comparisonStart: "comparisonStart",
    comparisonEnd: "comparisonEnd",
    rangePicker: "rangePicker",
    required: "required",
    dateFilter: "dateFilter",
    min: "min",
    max: "max",
    disabled: "disabled"
  },
  exportAs: ["matDateRangeInput"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([{
    provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MatFormFieldControl"],
    useExisting: MatDateRangeInput
  }, {
    provide: MAT_DATE_RANGE_INPUT_PARENT,
    useExisting: MatDateRangeInput
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c6,
  decls: 9,
  vars: 4,
  consts: [["cdkMonitorSubtreeFocus", "", 1, "mat-date-range-input-container", 3, "cdkFocusChange"], [1, "mat-date-range-input-start-wrapper"], ["aria-hidden", "true", 1, "mat-date-range-input-mirror"], [1, "mat-date-range-input-separator"], [1, "mat-date-range-input-end-wrapper"]],
  template: function MatDateRangeInput_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojectionDef"](_c5);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 0);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("cdkFocusChange", function MatDateRangeInput_Template_div_cdkFocusChange_0_listener($event) {
        return ctx.focused = $event !== null;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojection"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "span", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "span", 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojection"](8, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx._getInputMirrorValue());
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-date-range-input-separator-hidden", ctx._shouldHideSeparator());
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.separator);
    }
  },
  directives: [_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["CdkMonitorFocus"]],
  styles: [".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\n"],
  encapsulation: 2,
  changeDetection: 0
});

MatDateRangeInput.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["ControlContainer"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Self"]
    }]
  }, {
    type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MatFormField"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MAT_FORM_FIELD"]]
    }]
  }];
};

MatDateRangeInput.propDecorators = {
  rangePicker: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  required: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  dateFilter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  min: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  max: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  disabled: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  separator: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonStart: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  comparisonEnd: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  _startInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
    args: [MatStartDate]
  }],
  _endInput: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
    args: [MatEndDate]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDateRangeInput, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-date-range-input',
      template: "<div\n  class=\"mat-date-range-input-container\"\n  cdkMonitorSubtreeFocus\n  (cdkFocusChange)=\"focused = $event !== null\">\n  <div class=\"mat-date-range-input-start-wrapper\">\n    <ng-content select=\"input[matStartDate]\"></ng-content>\n    <span\n      class=\"mat-date-range-input-mirror\"\n      aria-hidden=\"true\">{{_getInputMirrorValue()}}</span>\n  </div>\n\n  <span\n    class=\"mat-date-range-input-separator\"\n    [class.mat-date-range-input-separator-hidden]=\"_shouldHideSeparator()\">{{separator}}</span>\n\n  <div class=\"mat-date-range-input-end-wrapper\">\n    <ng-content select=\"input[matEndDate]\"></ng-content>\n  </div>\n</div>\n\n",
      exportAs: 'matDateRangeInput',
      host: {
        'class': 'mat-date-range-input',
        '[class.mat-date-range-input-hide-placeholders]': '_shouldHidePlaceholders()',
        '[class.mat-date-range-input-required]': 'required',
        '[attr.id]': 'null',
        'role': 'group',
        '[attr.aria-labelledby]': '_getAriaLabelledby()',
        '[attr.aria-describedby]': '_ariaDescribedBy',
        // Used by the test harness to tie this input to its calendar. We can't depend on
        // `aria-owns` for this, because it's only defined while the calendar is open.
        '[attr.data-mat-calendar]': 'rangePicker ? rangePicker.id : null'
      },
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].OnPush,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      providers: [{
        provide: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MatFormFieldControl"],
        useExisting: MatDateRangeInput
      }, {
        provide: MAT_DATE_RANGE_INPUT_PARENT,
        useExisting: MatDateRangeInput
      }],
      styles: [".mat-date-range-input{display:block;width:100%}.mat-date-range-input-container{display:flex;align-items:center}.mat-date-range-input-separator{transition:opacity 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1);margin:0 4px}.mat-date-range-input-separator-hidden{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;opacity:0;transition:none}.mat-date-range-input-inner{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;vertical-align:bottom;text-align:inherit;-webkit-appearance:none;width:100%}.mat-date-range-input-inner::-ms-clear,.mat-date-range-input-inner::-ms-reveal{display:none}.mat-date-range-input-inner:-moz-ui-invalid{box-shadow:none}.mat-date-range-input-inner::placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-moz-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner::-webkit-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-date-range-input-inner:-ms-input-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-date-range-input-inner::placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-moz-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-moz-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner::-webkit-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner::-webkit-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-form-field-hide-placeholder .mat-date-range-input-inner:-ms-input-placeholder,.mat-date-range-input-hide-placeholders .mat-date-range-input-inner:-ms-input-placeholder{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.mat-date-range-input-mirror{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;visibility:hidden;white-space:nowrap;display:inline-block;min-width:2px}.mat-date-range-input-start-wrapper{position:relative;overflow:hidden;max-width:calc(50% - 4px)}.mat-date-range-input-start-wrapper .mat-date-range-input-inner{position:absolute;top:0;left:0}.mat-date-range-input-end-wrapper{flex-grow:1;max-width:calc(50% - 4px)}.mat-form-field-type-mat-date-range-input .mat-form-field-infix{width:200px}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_forms__WEBPACK_IMPORTED_MODULE_23__["ControlContainer"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Self"]
      }]
    }, {
      type: _angular_material_core__WEBPACK_IMPORTED_MODULE_16__["DateAdapter"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MatFormField"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_form_field__WEBPACK_IMPORTED_MODULE_24__["MAT_FORM_FIELD"]]
      }]
    }];
  }, {
    separator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonStart: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    comparisonEnd: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    rangePicker: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    required: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dateFilter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    min: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    max: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    disabled: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    _startInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
      args: [MatStartDate]
    }],
    _endInput: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
      args: [MatEndDate]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatDatepickerModule = function MatDatepickerModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatDatepickerModule);
};

MatDatepickerModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineNgModule"]({
  type: MatDatepickerModule
});
MatDatepickerModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjector"]({
  factory: function MatDatepickerModule_Factory(t) {
    return new (t || MatDatepickerModule)();
  },
  providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_13__["MatButtonModule"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialogModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["OverlayModule"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["A11yModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalModule"]], _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_15__["CdkScrollableModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵsetNgModuleScope"](MatDatepickerModule, {
    declarations: function declarations() {
      return [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_13__["MatButtonModule"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialogModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["OverlayModule"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["A11yModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalModule"]];
    },
    exports: function exports() {
      return [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_15__["CdkScrollableModule"], MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatDatepickerModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], _angular_material_button__WEBPACK_IMPORTED_MODULE_13__["MatButtonModule"], _angular_material_dialog__WEBPACK_IMPORTED_MODULE_14__["MatDialogModule"], _angular_cdk_overlay__WEBPACK_IMPORTED_MODULE_9__["OverlayModule"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["A11yModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalModule"]],
      exports: [_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_15__["CdkScrollableModule"], MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker],
      declarations: [MatCalendar, MatCalendarBody, MatDatepicker, MatDatepickerContent, MatDatepickerInput, MatDatepickerToggle, MatDatepickerToggleIcon, MatMonthView, MatYearView, MatMultiYearView, MatCalendarHeader, MatDateRangeInput, MatStartDate, MatEndDate, MatDateRangePicker],
      providers: [MatDatepickerIntl, MAT_DATEPICKER_SCROLL_STRATEGY_FACTORY_PROVIDER],
      entryComponents: [MatDatepickerContent, MatCalendarHeader]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "j35z":
/*!**************************************************************************!*\
  !*** ./src/app/core/components/admin/translate/translate.component.scss ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmFuc2xhdGUuY29tcG9uZW50LnNjc3MifQ== */");

/***/ }),

/***/ "j9ws":
/*!************************************************************************!*\
  !*** ./src/app/core/components/admin/translate/translate.component.ts ***!
  \************************************************************************/
/*! exports provided: TranslateComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TranslateComponent", function() { return TranslateComponent; });
/* harmony import */ var _raw_loader_translate_component_html__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! raw-loader!./translate.component.html */ "XDwk");
/* harmony import */ var _translate_component_scss__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./translate.component.scss */ "j35z");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/forms */ "3Pt+");
/* harmony import */ var _angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/material/paginator */ "M9IT");
/* harmony import */ var _angular_material_sort__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/material/sort */ "Dh3D");
/* harmony import */ var _angular_material_table__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/material/table */ "+0xr");
/* harmony import */ var app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! app/core/services/alertify.service */ "DAyg");
/* harmony import */ var app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! app/core/services/lookUp.service */ "2RTA");
/* harmony import */ var _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../login/Services/auth.service */ "a9M/");
/* harmony import */ var _models_Translate__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./models/Translate */ "YXKi");
/* harmony import */ var _services_Translate_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./services/Translate.service */ "9emw");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};












var TranslateComponent = /** @class */ (function () {
    function TranslateComponent(translateService, lookupService, alertifyService, formBuilder, authService) {
        this.translateService = translateService;
        this.lookupService = lookupService;
        this.alertifyService = alertifyService;
        this.formBuilder = formBuilder;
        this.authService = authService;
        this.translateList = [];
        this.translate = new _models_Translate__WEBPACK_IMPORTED_MODULE_10__["Translate"]();
        this.displayedColumns = ['id', 'language', 'code', 'value', 'update', 'delete'];
    }
    TranslateComponent.prototype.ngAfterViewInit = function () {
        this.getTranslateList();
    };
    TranslateComponent.prototype.applyFilter = function (event) {
        var filterValue = event.target.value;
        this.dataSource.filter = filterValue.trim().toLowerCase();
        if (this.dataSource.paginator) {
            this.dataSource.paginator.firstPage();
        }
    };
    TranslateComponent.prototype.ngOnInit = function () {
        var _this = this;
        this.lookupService.getLanguageLookup().subscribe(function (data) {
            _this.langugelookUp = data;
        });
        this.createTranslateAddForm();
    };
    TranslateComponent.prototype.getTranslateList = function () {
        var _this = this;
        this.translateService.getTranslateList().subscribe(function (data) {
            _this.translateList = data;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](data);
            _this.configDataTable();
        });
    };
    TranslateComponent.prototype.save = function () {
        if (this.translateAddForm.valid) {
            this.translate = Object.assign({}, this.translateAddForm.value);
            if (this.translate.id == 0)
                this.addTranslate();
            else
                this.updateTranslate();
        }
    };
    TranslateComponent.prototype.addTranslate = function () {
        var _this = this;
        this.translateService.addTranslate(this.translate).subscribe(function (data) {
            _this.getTranslateList();
            _this.translate = new _models_Translate__WEBPACK_IMPORTED_MODULE_10__["Translate"]();
            jQuery('#translate').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.translateAddForm);
        }, function (error) {
            _this.alertifyService.error('Hata oluştu!');
        });
    };
    TranslateComponent.prototype.updateTranslate = function () {
        var _this = this;
        this.translateService.updateTranslate(this.translate).subscribe(function (data) {
            var index = _this.translateList.findIndex(function (x) { return x.id == _this.translate.id; });
            _this.translateList[index].code = _this.translate.code;
            _this.translateList[index].value = _this.translate.value;
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.translateList);
            _this.configDataTable();
            _this.translate = new _models_Translate__WEBPACK_IMPORTED_MODULE_10__["Translate"]();
            jQuery('#translate').modal('hide');
            _this.alertifyService.success(data);
            _this.clearFormGroup(_this.translateAddForm);
        });
    };
    TranslateComponent.prototype.createTranslateAddForm = function () {
        this.translateAddForm = this.formBuilder.group({
            id: [0],
            langId: [0, _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            code: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required],
            value: ["", _angular_forms__WEBPACK_IMPORTED_MODULE_3__["Validators"].required]
        });
    };
    TranslateComponent.prototype.deleteTranslate = function (translateId) {
        var _this = this;
        this.translateService.deleteTranslate(translateId).subscribe(function (data) {
            _this.alertifyService.success(data.toString());
            _this.translateList = _this.translateList.filter(function (x) { return x.id != translateId; });
            _this.dataSource = new _angular_material_table__WEBPACK_IMPORTED_MODULE_6__["MatTableDataSource"](_this.translateList);
            _this.configDataTable();
        });
    };
    TranslateComponent.prototype.getTranslateById = function (translateId) {
        var _this = this;
        this.clearFormGroup(this.translateAddForm);
        this.translateService.getTranslate(translateId).subscribe(function (data) {
            _this.translate = data;
            _this.translateAddForm.patchValue(data);
        });
    };
    TranslateComponent.prototype.clearFormGroup = function (group) {
        group.markAsUntouched();
        group.reset();
        Object.keys(group.controls).forEach(function (key) {
            group.get(key).setErrors(null);
            if (key == 'id')
                group.get(key).setValue(0);
        });
    };
    TranslateComponent.prototype.checkClaim = function (claim) {
        return this.authService.claimGuard(claim);
    };
    TranslateComponent.prototype.configDataTable = function () {
        this.dataSource.paginator = this.paginator;
        this.dataSource.sort = this.sort;
    };
    TranslateComponent.ctorParameters = function () { return [
        { type: _services_Translate_service__WEBPACK_IMPORTED_MODULE_11__["TranslateService"] },
        { type: app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"] },
        { type: app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"] },
        { type: _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"] },
        { type: _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__["AuthService"] }
    ]; };
    TranslateComponent.propDecorators = {
        paginator: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_paginator__WEBPACK_IMPORTED_MODULE_4__["MatPaginator"],] }],
        sort: [{ type: _angular_core__WEBPACK_IMPORTED_MODULE_2__["ViewChild"], args: [_angular_material_sort__WEBPACK_IMPORTED_MODULE_5__["MatSort"],] }]
    };
    TranslateComponent = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_2__["Component"])({
            selector: 'app-translate',
            template: _raw_loader_translate_component_html__WEBPACK_IMPORTED_MODULE_0__["default"],
            styles: [_translate_component_scss__WEBPACK_IMPORTED_MODULE_1__["default"]]
        }),
        __metadata("design:paramtypes", [_services_Translate_service__WEBPACK_IMPORTED_MODULE_11__["TranslateService"], app_core_services_lookUp_service__WEBPACK_IMPORTED_MODULE_8__["LookUpService"], app_core_services_alertify_service__WEBPACK_IMPORTED_MODULE_7__["AlertifyService"], _angular_forms__WEBPACK_IMPORTED_MODULE_3__["FormBuilder"], _login_Services_auth_service__WEBPACK_IMPORTED_MODULE_9__["AuthService"]])
    ], TranslateComponent);
    return TranslateComponent;
}());



/***/ }),

/***/ "jxUz":
/*!******************************************************************!*\
  !*** ./src/app/core/components/admin/login/login.component.scss ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (":host {\n  display: block;\n  width: 100%;\n  height: 100vh;\n}\n\n.login-container {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 20px;\n  box-sizing: border-box;\n  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);\n  z-index: 1000;\n}\n\n@media (max-height: 700px) {\n  .login-container {\n    overflow-y: auto;\n    align-items: flex-start;\n    padding-top: 40px;\n    padding-bottom: 40px;\n  }\n}\n\n.login-background {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-size: cover;\n  background-position: center;\n  opacity: 0.1;\n  z-index: -1;\n  pointer-events: none;\n}\n\n.login-card {\n  width: 100%;\n  max-width: 380px;\n  background: rgba(255, 255, 255, 0.95);\n  border-radius: 20px;\n  padding: 30px 25px;\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  -webkit-backdrop-filter: blur(10px);\n          backdrop-filter: blur(10px);\n  -webkit-animation: cardFloat 0.5s ease-out;\n          animation: cardFloat 0.5s ease-out;\n}\n\n@media (max-width: 480px) {\n  .login-card {\n    padding: 25px 20px;\n    border-radius: 16px;\n  }\n}\n\n@media (max-height: 700px) {\n  .login-card {\n    margin: 0 auto;\n  }\n}\n\n@-webkit-keyframes cardFloat {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes cardFloat {\n  0% {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  100% {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.login-header {\n  text-align: center;\n  margin-bottom: 25px;\n}\n\n.login-header .logo-wrapper {\n  width: 90px;\n  height: 90px;\n  margin: 0 auto 15px;\n  border-radius: 50%;\n  padding: 12px;\n  background: white;\n  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: transform 0.3s ease;\n}\n\n@media (max-width: 480px) {\n  .login-header .logo-wrapper {\n    width: 80px;\n    height: 80px;\n    padding: 10px;\n    margin-bottom: 12px;\n  }\n}\n\n.login-header .logo-wrapper:hover {\n  transform: scale(1.05);\n}\n\n.login-header .logo-wrapper .logo {\n  width: 100%;\n  height: 100%;\n  -o-object-fit: contain;\n     object-fit: contain;\n}\n\n.login-header .title {\n  font-size: 22px;\n  font-weight: 600;\n  color: #2c3345;\n  margin: 0 0 6px;\n  letter-spacing: -0.5px;\n}\n\n@media (max-width: 480px) {\n  .login-header .title {\n    font-size: 20px;\n    margin: 0 0 4px;\n  }\n}\n\n.login-header .subtitle {\n  color: #6b7280;\n  font-size: 14px;\n  font-weight: 500;\n  margin: 0;\n  opacity: 0.9;\n}\n\n@media (max-width: 480px) {\n  .login-header .subtitle {\n    font-size: 13px;\n  }\n}\n\n.login-form .form-field {\n  margin-bottom: 16px;\n  width: 100%;\n}\n\n.login-form .form-field:last-child {\n  margin-bottom: 0;\n}\n\n.login-form .form-field ::ng-deep .mat-form-field-wrapper {\n  margin: 0;\n}\n\n.login-form .form-field ::ng-deep .mat-form-field-outline {\n  border-radius: 10px;\n}\n\n.login-form .form-field ::ng-deep .mat-form-field-infix {\n  padding: 0.8em 0;\n}\n\n@media (max-width: 480px) {\n  .login-form .form-field ::ng-deep .mat-form-field-infix {\n    padding: 0.7em 0;\n  }\n}\n\n.login-form .form-field ::ng-deep .mat-form-field-prefix,\n.login-form .form-field ::ng-deep .mat-form-field-suffix {\n  color: #64748b;\n  transition: color 0.3s ease;\n}\n\n.login-form .form-field ::ng-deep .mat-form-field.mat-focused .mat-form-field-prefix,\n.login-form .form-field ::ng-deep .mat-form-field.mat-focused .mat-form-field-suffix {\n  color: #1e3c72;\n}\n\n.login-form .form-field ::ng-deep .cursor-pointer {\n  cursor: pointer;\n}\n\n.login-button {\n  width: 100%;\n  height: 46px;\n  font-size: 15px;\n  font-weight: 600;\n  letter-spacing: 0.5px;\n  border-radius: 10px;\n  background: linear-gradient(135deg, #e91e63 0%, #f44336 100%);\n  transition: all 0.3s ease;\n  margin-top: 12px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n}\n\n@media (max-width: 480px) {\n  .login-button {\n    height: 42px;\n    font-size: 14px;\n    margin-top: 10px;\n  }\n}\n\n.login-button:hover {\n  background: linear-gradient(135deg, #d81b60 0%, #e53935 100%);\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(233, 30, 99, 0.25);\n}\n\n.login-button:active {\n  transform: translateY(0);\n}\n\n.login-button mat-icon {\n  font-size: 18px;\n  height: 18px;\n  width: 18px;\n  margin-right: 4px;\n}\n\n@media (max-width: 480px) {\n  .login-button mat-icon {\n    font-size: 16px;\n    height: 16px;\n    width: 16px;\n  }\n}\n\n::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {\n  color: #e2e8f0;\n}\n\n::ng-deep .mat-form-field.mat-focused .mat-form-field-outline {\n  color: #1e3c72;\n}\n\n::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {\n  color: #1e3c72;\n}\n\n::ng-deep .mat-form-field-label {\n  color: #64748b;\n}\n\n::ng-deep .mat-form-field.mat-focused .mat-form-field-label {\n  color: #1e3c72;\n}\n\n::ng-deep .mat-form-field-prefix, ::ng-deep .mat-form-field-suffix {\n  color: #64748b;\n}\n\n::ng-deep .mat-form-field.mat-focused .mat-form-field-prefix, ::ng-deep .mat-form-field.mat-focused .mat-form-field-suffix {\n  color: #1e3c72;\n}\n\n::ng-deep .mat-select-value {\n  color: #2c3345;\n}\n\n::ng-deep .mat-select-arrow {\n  color: #64748b;\n}\n/*# sourceMappingURL=data:application/json;base64, */");

/***/ }),

/***/ "k+Ty":
/*!****************************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/DefaultReconnectPolicy.js ***!
  \****************************************************************************/
/*! exports provided: DefaultReconnectPolicy */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DefaultReconnectPolicy", function() { return DefaultReconnectPolicy; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");



// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// 0, 2, 10, 30 second delays before reconnect attempts.
var DEFAULT_RETRY_DELAYS_IN_MILLISECONDS = [0, 2000, 10000, 30000, null];
/** @private */

var DefaultReconnectPolicy = /*#__PURE__*/function () {
  function DefaultReconnectPolicy(retryDelays) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, DefaultReconnectPolicy);

    this._retryDelays = retryDelays !== undefined ? [].concat(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__["default"])(retryDelays), [null]) : DEFAULT_RETRY_DELAYS_IN_MILLISECONDS;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(DefaultReconnectPolicy, [{
    key: "nextRetryDelayInMilliseconds",
    value: function nextRetryDelayInMilliseconds(retryContext) {
      return this._retryDelays[retryContext.previousRetryCount];
    }
  }]);

  return DefaultReconnectPolicy;
}();

/***/ }),

/***/ "k9Mz":
/*!***************************************************************************************!*\
  !*** ./src/app/core/components/admin/multiVisiters/services/multivisiters.service.ts ***!
  \***************************************************************************************/
/*! exports provided: MultiVisitersService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MultiVisitersService", function() { return MultiVisitersService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var MultiVisitersService = /** @class */ (function () {
    function MultiVisitersService(httpClient) {
        this.httpClient = httpClient;
    }
    MultiVisitersService.prototype.getMultiVisitersList = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/multiVisiterses/getall');
    };
    MultiVisitersService.prototype.getMultiVisitersById = function (id) {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/multiVisiterses/getbyid?id=' + id);
    };
    MultiVisitersService.prototype.addMultiVisiters = function (multiVisiters) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/multiVisiterses/', multiVisiters, { responseType: 'text' });
    };
    MultiVisitersService.prototype.updateMultiVisiters = function (multiVisiters) {
        return this.httpClient.put(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/multiVisiterses/', multiVisiters, { responseType: 'text' });
    };
    MultiVisitersService.prototype.deleteMultiVisiters = function (id) {
        return this.httpClient.request('delete', environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/multiVisiterses/', { body: { id: id } });
    };
    MultiVisitersService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    MultiVisitersService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], MultiVisitersService);
    return MultiVisitersService;
}());



/***/ }),

/***/ "m+o/":
/*!******************************************************************!*\
  !*** ./src/app/core/components/admin/visit/visit.component.scss ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".pagination-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n\n.pagination .page-item {\n  margin: 0 2px;\n}\n\n.pagination .page-item.active .page-link {\n  background-color: #f44336;\n  border-color: #f44336;\n  color: white;\n}\n\n.pagination .page-item.disabled .page-link {\n  color: #6c757d;\n  pointer-events: none;\n  background-color: #fff;\n  border-color: #dee2e6;\n}\n\n.pagination .page-link {\n  padding: 8px 12px;\n  color: #f44336;\n  background-color: #fff;\n  border: 1px solid #dee2e6;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.pagination .page-link:hover {\n  background-color: #f8f9fa;\n  border-color: #f44336;\n}\n\n.pagination .page-link.dots {\n  cursor: default;\n  background-color: transparent;\n  border: none;\n  color: #6c757d;\n}\n\n.pagination .page-link.dots:hover {\n  background-color: transparent;\n  border: none;\n}\n\n.float-right {\n  float: right;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXHZpc2l0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxXQUFBO0VBQ0EsWUFBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0VBQ0EsbUJBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtBQUNGOztBQUNFO0VBQ0UsYUFBQTtBQUNKOztBQUNJO0VBQ0UseUJBQUE7RUFDQSxxQkFBQTtFQUNBLFlBQUE7QUFDTjs7QUFFSTtFQUNFLGNBQUE7RUFDQSxvQkFBQTtFQUNBLHNCQUFBO0VBQ0EscUJBQUE7QUFBTjs7QUFJRTtFQUNFLGlCQUFBO0VBQ0EsY0FBQTtFQUNBLHNCQUFBO0VBQ0EseUJBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7QUFGSjs7QUFJSTtFQUNFLHlCQUFBO0VBQ0EscUJBQUE7QUFGTjs7QUFLSTtFQUNFLGVBQUE7RUFDQSw2QkFBQTtFQUNBLFlBQUE7RUFDQSxjQUFBO0FBSE47O0FBS007RUFDRSw2QkFBQTtFQUNBLFlBQUE7QUFIUjs7QUFTQTtFQUNFLFlBQUE7QUFORiIsImZpbGUiOiJ2aXNpdC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYWdpbmF0aW9uLWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnBhZ2luYXRpb24ge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuXHJcbiAgLnBhZ2UtaXRlbSB7XHJcbiAgICBtYXJnaW46IDAgMnB4O1xyXG5cclxuICAgICYuYWN0aXZlIC5wYWdlLWxpbmsge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgICBib3JkZXItY29sb3I6ICNmNDQzMzY7XHJcbiAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgIH1cclxuXHJcbiAgICAmLmRpc2FibGVkIC5wYWdlLWxpbmsge1xyXG4gICAgICBjb2xvcjogIzZjNzU3ZDtcclxuICAgICAgcG9pbnRlci1ldmVudHM6IG5vbmU7XHJcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICAgIGJvcmRlci1jb2xvcjogI2RlZTJlNjtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC5wYWdlLWxpbmsge1xyXG4gICAgcGFkZGluZzogOHB4IDEycHg7XHJcbiAgICBjb2xvcjogI2Y0NDMzNjtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjZGVlMmU2O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgfVxyXG5cclxuICAgICYuZG90cyB7XHJcbiAgICAgIGN1cnNvcjogZGVmYXVsdDtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgY29sb3I6ICM2Yzc1N2Q7XHJcblxyXG4gICAgICAmOmhvdmVyIHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgICBib3JkZXI6IG5vbmU7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5mbG9hdC1yaWdodCB7XHJcbiAgZmxvYXQ6IHJpZ2h0O1xyXG59XHJcbiJdfQ== */");

/***/ }),

/***/ "mLhb":
/*!*******************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/HubConnection.js ***!
  \*******************************************************************/
/*! exports provided: HubConnectionState, HubConnection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HubConnectionState", function() { return HubConnectionState; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HubConnection", function() { return HubConnection; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _HandshakeProtocol__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./HandshakeProtocol */ "Z3rW");
/* harmony import */ var _Errors__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./Errors */ "9BRb");
/* harmony import */ var _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./IHubProtocol */ "++1n");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _Subject__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./Subject */ "z2YZ");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./Utils */ "ftFU");
/* harmony import */ var _MessageBuffer__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./MessageBuffer */ "YEgF");






// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.







var DEFAULT_TIMEOUT_IN_MS = 30 * 1000;
var DEFAULT_PING_INTERVAL_IN_MS = 15 * 1000;
var DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE = 100000;
/** Describes the current state of the {@link HubConnection} to the server. */

var HubConnectionState;

(function (HubConnectionState) {
  /** The hub connection is disconnected. */
  HubConnectionState["Disconnected"] = "Disconnected";
  /** The hub connection is connecting. */

  HubConnectionState["Connecting"] = "Connecting";
  /** The hub connection is connected. */

  HubConnectionState["Connected"] = "Connected";
  /** The hub connection is disconnecting. */

  HubConnectionState["Disconnecting"] = "Disconnecting";
  /** The hub connection is reconnecting. */

  HubConnectionState["Reconnecting"] = "Reconnecting";
})(HubConnectionState || (HubConnectionState = {}));
/** Represents a connection to a SignalR Hub. */


var HubConnection = /*#__PURE__*/function () {
  function HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {
    var _this = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, HubConnection);

    this._nextKeepAlive = 0;

    this._freezeEventListener = function () {
      _this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Warning, "The page is being frozen, this will likely lead to the connection being closed and messages being lost. For more information see the docs at https://learn.microsoft.com/aspnet/core/signalr/javascript-client#bsleep");
    };

    _Utils__WEBPACK_IMPORTED_MODULE_11__["Arg"].isRequired(connection, "connection");
    _Utils__WEBPACK_IMPORTED_MODULE_11__["Arg"].isRequired(logger, "logger");
    _Utils__WEBPACK_IMPORTED_MODULE_11__["Arg"].isRequired(protocol, "protocol");
    this.serverTimeoutInMilliseconds = serverTimeoutInMilliseconds !== null && serverTimeoutInMilliseconds !== void 0 ? serverTimeoutInMilliseconds : DEFAULT_TIMEOUT_IN_MS;
    this.keepAliveIntervalInMilliseconds = keepAliveIntervalInMilliseconds !== null && keepAliveIntervalInMilliseconds !== void 0 ? keepAliveIntervalInMilliseconds : DEFAULT_PING_INTERVAL_IN_MS;
    this._statefulReconnectBufferSize = statefulReconnectBufferSize !== null && statefulReconnectBufferSize !== void 0 ? statefulReconnectBufferSize : DEFAULT_STATEFUL_RECONNECT_BUFFER_SIZE;
    this._logger = logger;
    this._protocol = protocol;
    this.connection = connection;
    this._reconnectPolicy = reconnectPolicy;
    this._handshakeProtocol = new _HandshakeProtocol__WEBPACK_IMPORTED_MODULE_6__["HandshakeProtocol"]();

    this.connection.onreceive = function (data) {
      return _this._processIncomingData(data);
    };

    this.connection.onclose = function (error) {
      return _this._connectionClosed(error);
    };

    this._callbacks = {};
    this._methods = {};
    this._closedCallbacks = [];
    this._reconnectingCallbacks = [];
    this._reconnectedCallbacks = [];
    this._invocationId = 0;
    this._receivedHandshakeResponse = false;
    this._connectionState = HubConnectionState.Disconnected;
    this._connectionStarted = false;
    this._cachedPingMessage = this._protocol.writeMessage({
      type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Ping
    });
  }
  /** Indicates the state of the {@link HubConnection} to the server. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(HubConnection, [{
    key: "state",
    get: function get() {
      return this._connectionState;
    }
    /** Represents the connection id of the {@link HubConnection} on the server. The connection id will be null when the connection is either
     *  in the disconnected state or if the negotiation step was skipped.
     */

  }, {
    key: "connectionId",
    get: function get() {
      return this.connection ? this.connection.connectionId || null : null;
    }
    /** Indicates the url of the {@link HubConnection} to the server. */

  }, {
    key: "baseUrl",
    get: function get() {
      return this.connection.baseUrl || "";
    }
    /**
     * Sets a new url for the HubConnection. Note that the url can only be changed when the connection is in either the Disconnected or
     * Reconnecting states.
     * @param {string} url The url to connect to.
     */
    ,
    set: function set(url) {
      if (this._connectionState !== HubConnectionState.Disconnected && this._connectionState !== HubConnectionState.Reconnecting) {
        throw new Error("The HubConnection must be in the Disconnected or Reconnecting state to change the url.");
      }

      if (!url) {
        throw new Error("The HubConnection url must be a valid url.");
      }

      this.connection.baseUrl = url;
    }
    /** Starts the connection.
     *
     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully established, or rejects with an error.
     */

  }, {
    key: "start",
    value: function start() {
      this._startPromise = this._startWithStateTransitions();
      return this._startPromise;
    }
  }, {
    key: "_startWithStateTransitions",
    value: function () {
      var _startWithStateTransitions2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee() {
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!(this._connectionState !== HubConnectionState.Disconnected)) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", Promise.reject(new Error("Cannot start a HubConnection that is not in the 'Disconnected' state.")));

              case 2:
                this._connectionState = HubConnectionState.Connecting;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Starting HubConnection.");

                _context.prev = 4;
                _context.next = 7;
                return this._startInternal();

              case 7:
                if (_Utils__WEBPACK_IMPORTED_MODULE_11__["Platform"].isBrowser) {
                  // Log when the browser freezes the tab so users know why their connection unexpectedly stopped working
                  window.document.addEventListener("freeze", this._freezeEventListener);
                }

                this._connectionState = HubConnectionState.Connected;
                this._connectionStarted = true;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "HubConnection connected successfully.");

                _context.next = 18;
                break;

              case 13:
                _context.prev = 13;
                _context.t0 = _context["catch"](4);
                this._connectionState = HubConnectionState.Disconnected;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "HubConnection failed to start successfully because of error '".concat(_context.t0, "'."));

                return _context.abrupt("return", Promise.reject(_context.t0));

              case 18:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[4, 13]]);
      }));

      function _startWithStateTransitions() {
        return _startWithStateTransitions2.apply(this, arguments);
      }

      return _startWithStateTransitions;
    }()
  }, {
    key: "_startInternal",
    value: function () {
      var _startInternal2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee2() {
        var _this2 = this;

        var handshakePromise, version, handshakeRequest, useStatefulReconnect;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                this._stopDuringStartError = undefined;
                this._receivedHandshakeResponse = false; // Set up the promise before any connection is (re)started otherwise it could race with received messages

                handshakePromise = new Promise(function (resolve, reject) {
                  _this2._handshakeResolver = resolve;
                  _this2._handshakeRejecter = reject;
                });
                _context2.next = 5;
                return this.connection.start(this._protocol.transferFormat);

              case 5:
                _context2.prev = 5;
                version = this._protocol.version;

                if (!this.connection.features.reconnect) {
                  // Stateful Reconnect starts with HubProtocol version 2, newer clients connecting to older servers will fail to connect due to
                  // the handshake only supporting version 1, so we will try to send version 1 during the handshake to keep old servers working.
                  version = 1;
                }

                handshakeRequest = {
                  protocol: this._protocol.name,
                  version: version
                };

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Sending handshake request.");

                _context2.next = 12;
                return this._sendMessage(this._handshakeProtocol.writeHandshakeRequest(handshakeRequest));

              case 12:
                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "Using HubProtocol '".concat(this._protocol.name, "'.")); // defensively cleanup timeout in case we receive a message from the server before we finish start


                this._cleanupTimeout();

                this._resetTimeoutPeriod();

                this._resetKeepAliveInterval();

                _context2.next = 18;
                return handshakePromise;

              case 18:
                if (!this._stopDuringStartError) {
                  _context2.next = 20;
                  break;
                }

                throw this._stopDuringStartError;

              case 20:
                useStatefulReconnect = this.connection.features.reconnect || false;

                if (useStatefulReconnect) {
                  this._messageBuffer = new _MessageBuffer__WEBPACK_IMPORTED_MODULE_12__["MessageBuffer"](this._protocol, this.connection, this._statefulReconnectBufferSize);
                  this.connection.features.disconnected = this._messageBuffer._disconnected.bind(this._messageBuffer);

                  this.connection.features.resend = function () {
                    if (_this2._messageBuffer) {
                      return _this2._messageBuffer._resend();
                    }
                  };
                }

                if (this.connection.features.inherentKeepAlive) {
                  _context2.next = 25;
                  break;
                }

                _context2.next = 25;
                return this._sendMessage(this._cachedPingMessage);

              case 25:
                _context2.next = 35;
                break;

              case 27:
                _context2.prev = 27;
                _context2.t0 = _context2["catch"](5);

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Hub handshake failed with error '".concat(_context2.t0, "' during start(). Stopping HubConnection."));

                this._cleanupTimeout();

                this._cleanupPingTimer(); // HttpConnection.stop() should not complete until after the onclose callback is invoked.
                // This will transition the HubConnection to the disconnected state before HttpConnection.stop() completes.


                _context2.next = 34;
                return this.connection.stop(_context2.t0);

              case 34:
                throw _context2.t0;

              case 35:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[5, 27]]);
      }));

      function _startInternal() {
        return _startInternal2.apply(this, arguments);
      }

      return _startInternal;
    }()
    /** Stops the connection.
     *
     * @returns {Promise<void>} A Promise that resolves when the connection has been successfully terminated, or rejects with an error.
     */

  }, {
    key: "stop",
    value: function () {
      var _stop = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee3() {
        var startPromise;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee3$(_context3) {
          while (1) {
            switch (_context3.prev = _context3.next) {
              case 0:
                // Capture the start promise before the connection might be restarted in an onclose callback.
                startPromise = this._startPromise;
                this.connection.features.reconnect = false;
                this._stopPromise = this._stopInternal();
                _context3.next = 5;
                return this._stopPromise;

              case 5:
                _context3.prev = 5;
                _context3.next = 8;
                return startPromise;

              case 8:
                _context3.next = 12;
                break;

              case 10:
                _context3.prev = 10;
                _context3.t0 = _context3["catch"](5);

              case 12:
              case "end":
                return _context3.stop();
            }
          }
        }, _callee3, this, [[5, 10]]);
      }));

      function stop() {
        return _stop.apply(this, arguments);
      }

      return stop;
    }()
  }, {
    key: "_stopInternal",
    value: function _stopInternal(error) {
      if (this._connectionState === HubConnectionState.Disconnected) {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Call to HubConnection.stop(".concat(error, ") ignored because it is already in the disconnected state."));

        return Promise.resolve();
      }

      if (this._connectionState === HubConnectionState.Disconnecting) {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Call to HttpConnection.stop(".concat(error, ") ignored because the connection is already in the disconnecting state."));

        return this._stopPromise;
      }

      var state = this._connectionState;
      this._connectionState = HubConnectionState.Disconnecting;

      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Stopping HubConnection.");

      if (this._reconnectDelayHandle) {
        // We're in a reconnect delay which means the underlying connection is currently already stopped.
        // Just clear the handle to stop the reconnect loop (which no one is waiting on thankfully) and
        // fire the onclose callbacks.
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Connection stopped during reconnect delay. Done reconnecting.");

        clearTimeout(this._reconnectDelayHandle);
        this._reconnectDelayHandle = undefined;

        this._completeClose();

        return Promise.resolve();
      }

      if (state === HubConnectionState.Connected) {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this._sendCloseMessage();
      }

      this._cleanupTimeout();

      this._cleanupPingTimer();

      this._stopDuringStartError = error || new _Errors__WEBPACK_IMPORTED_MODULE_7__["AbortError"]("The connection was stopped before the hub handshake could complete."); // HttpConnection.stop() should not complete until after either HttpConnection.start() fails
      // or the onclose callback is invoked. The onclose callback will transition the HubConnection
      // to the disconnected state if need be before HttpConnection.stop() completes.

      return this.connection.stop(error);
    }
  }, {
    key: "_sendCloseMessage",
    value: function () {
      var _sendCloseMessage2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee4() {
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee4$(_context4) {
          while (1) {
            switch (_context4.prev = _context4.next) {
              case 0:
                _context4.prev = 0;
                _context4.next = 3;
                return this._sendWithProtocol(this._createCloseMessage());

              case 3:
                _context4.next = 7;
                break;

              case 5:
                _context4.prev = 5;
                _context4.t0 = _context4["catch"](0);

              case 7:
              case "end":
                return _context4.stop();
            }
          }
        }, _callee4, this, [[0, 5]]);
      }));

      function _sendCloseMessage() {
        return _sendCloseMessage2.apply(this, arguments);
      }

      return _sendCloseMessage;
    }()
    /** Invokes a streaming hub method on the server using the specified name and arguments.
     *
     * @typeparam T The type of the items returned by the server.
     * @param {string} methodName The name of the server method to invoke.
     * @param {any[]} args The arguments used to invoke the server method.
     * @returns {IStreamResult<T>} An object that yields results from the server as they are received.
     */

  }, {
    key: "stream",
    value: function stream(methodName) {
      var _this3 = this;

      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }

      var _this$_replaceStreami = this._replaceStreamingParams(args),
          _this$_replaceStreami2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$_replaceStreami, 2),
          streams = _this$_replaceStreami2[0],
          streamIds = _this$_replaceStreami2[1];

      var invocationDescriptor = this._createStreamInvocation(methodName, args, streamIds); // eslint-disable-next-line prefer-const


      var promiseQueue;
      var subject = new _Subject__WEBPACK_IMPORTED_MODULE_10__["Subject"]();

      subject.cancelCallback = function () {
        var cancelInvocation = _this3._createCancelInvocation(invocationDescriptor.invocationId);

        delete _this3._callbacks[invocationDescriptor.invocationId];
        return promiseQueue.then(function () {
          return _this3._sendWithProtocol(cancelInvocation);
        });
      };

      this._callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {
        if (error) {
          subject.error(error);
          return;
        } else if (invocationEvent) {
          // invocationEvent will not be null when an error is not passed to the callback
          if (invocationEvent.type === _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Completion) {
            if (invocationEvent.error) {
              subject.error(new Error(invocationEvent.error));
            } else {
              subject.complete();
            }
          } else {
            subject.next(invocationEvent.item);
          }
        }
      };

      promiseQueue = this._sendWithProtocol(invocationDescriptor).catch(function (e) {
        subject.error(e);
        delete _this3._callbacks[invocationDescriptor.invocationId];
      });

      this._launchStreams(streams, promiseQueue);

      return subject;
    }
  }, {
    key: "_sendMessage",
    value: function _sendMessage(message) {
      this._resetKeepAliveInterval();

      return this.connection.send(message);
    }
    /**
     * Sends a js object to the server.
     * @param message The js object to serialize and send.
     */

  }, {
    key: "_sendWithProtocol",
    value: function _sendWithProtocol(message) {
      if (this._messageBuffer) {
        return this._messageBuffer._send(message);
      } else {
        return this._sendMessage(this._protocol.writeMessage(message));
      }
    }
    /** Invokes a hub method on the server using the specified name and arguments. Does not wait for a response from the receiver.
     *
     * The Promise returned by this method resolves when the client has sent the invocation to the server. The server may still
     * be processing the invocation.
     *
     * @param {string} methodName The name of the server method to invoke.
     * @param {any[]} args The arguments used to invoke the server method.
     * @returns {Promise<void>} A Promise that resolves when the invocation has been successfully sent, or rejects with an error.
     */

  }, {
    key: "send",
    value: function send(methodName) {
      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
        args[_key2 - 1] = arguments[_key2];
      }

      var _this$_replaceStreami3 = this._replaceStreamingParams(args),
          _this$_replaceStreami4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$_replaceStreami3, 2),
          streams = _this$_replaceStreami4[0],
          streamIds = _this$_replaceStreami4[1];

      var sendPromise = this._sendWithProtocol(this._createInvocation(methodName, args, true, streamIds));

      this._launchStreams(streams, sendPromise);

      return sendPromise;
    }
    /** Invokes a hub method on the server using the specified name and arguments.
     *
     * The Promise returned by this method resolves when the server indicates it has finished invoking the method. When the promise
     * resolves, the server has finished invoking the method. If the server method returns a result, it is produced as the result of
     * resolving the Promise.
     *
     * @typeparam T The expected return type.
     * @param {string} methodName The name of the server method to invoke.
     * @param {any[]} args The arguments used to invoke the server method.
     * @returns {Promise<T>} A Promise that resolves with the result of the server method (if any), or rejects with an error.
     */

  }, {
    key: "invoke",
    value: function invoke(methodName) {
      var _this4 = this;

      for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {
        args[_key3 - 1] = arguments[_key3];
      }

      var _this$_replaceStreami5 = this._replaceStreamingParams(args),
          _this$_replaceStreami6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$_replaceStreami5, 2),
          streams = _this$_replaceStreami6[0],
          streamIds = _this$_replaceStreami6[1];

      var invocationDescriptor = this._createInvocation(methodName, args, false, streamIds);

      var p = new Promise(function (resolve, reject) {
        // invocationId will always have a value for a non-blocking invocation
        _this4._callbacks[invocationDescriptor.invocationId] = function (invocationEvent, error) {
          if (error) {
            reject(error);
            return;
          } else if (invocationEvent) {
            // invocationEvent will not be null when an error is not passed to the callback
            if (invocationEvent.type === _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Completion) {
              if (invocationEvent.error) {
                reject(new Error(invocationEvent.error));
              } else {
                resolve(invocationEvent.result);
              }
            } else {
              reject(new Error("Unexpected message type: ".concat(invocationEvent.type)));
            }
          }
        };

        var promiseQueue = _this4._sendWithProtocol(invocationDescriptor).catch(function (e) {
          reject(e); // invocationId will always have a value for a non-blocking invocation

          delete _this4._callbacks[invocationDescriptor.invocationId];
        });

        _this4._launchStreams(streams, promiseQueue);
      });
      return p;
    }
  }, {
    key: "on",
    value: function on(methodName, newMethod) {
      if (!methodName || !newMethod) {
        return;
      }

      methodName = methodName.toLowerCase();

      if (!this._methods[methodName]) {
        this._methods[methodName] = [];
      } // Preventing adding the same handler multiple times.


      if (this._methods[methodName].indexOf(newMethod) !== -1) {
        return;
      }

      this._methods[methodName].push(newMethod);
    }
  }, {
    key: "off",
    value: function off(methodName, method) {
      if (!methodName) {
        return;
      }

      methodName = methodName.toLowerCase();
      var handlers = this._methods[methodName];

      if (!handlers) {
        return;
      }

      if (method) {
        var removeIdx = handlers.indexOf(method);

        if (removeIdx !== -1) {
          handlers.splice(removeIdx, 1);

          if (handlers.length === 0) {
            delete this._methods[methodName];
          }
        }
      } else {
        delete this._methods[methodName];
      }
    }
    /** Registers a handler that will be invoked when the connection is closed.
     *
     * @param {Function} callback The handler that will be invoked when the connection is closed. Optionally receives a single argument containing the error that caused the connection to close (if any).
     */

  }, {
    key: "onclose",
    value: function onclose(callback) {
      if (callback) {
        this._closedCallbacks.push(callback);
      }
    }
    /** Registers a handler that will be invoked when the connection starts reconnecting.
     *
     * @param {Function} callback The handler that will be invoked when the connection starts reconnecting. Optionally receives a single argument containing the error that caused the connection to start reconnecting (if any).
     */

  }, {
    key: "onreconnecting",
    value: function onreconnecting(callback) {
      if (callback) {
        this._reconnectingCallbacks.push(callback);
      }
    }
    /** Registers a handler that will be invoked when the connection successfully reconnects.
     *
     * @param {Function} callback The handler that will be invoked when the connection successfully reconnects.
     */

  }, {
    key: "onreconnected",
    value: function onreconnected(callback) {
      if (callback) {
        this._reconnectedCallbacks.push(callback);
      }
    }
  }, {
    key: "_processIncomingData",
    value: function _processIncomingData(data) {
      var _this5 = this;

      this._cleanupTimeout();

      if (!this._receivedHandshakeResponse) {
        data = this._processHandshakeResponse(data);
        this._receivedHandshakeResponse = true;
      } // Data may have all been read when processing handshake response


      if (data) {
        // Parse the messages
        var messages = this._protocol.parseMessages(data, this._logger);

        var _iterator = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(messages),
            _step;

        try {
          for (_iterator.s(); !(_step = _iterator.n()).done;) {
            var message = _step.value;

            if (this._messageBuffer && !this._messageBuffer._shouldProcessMessage(message)) {
              // Don't process the message, we are either waiting for a SequenceMessage or received a duplicate message
              continue;
            }

            switch (message.type) {
              case _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Invocation:
                this._invokeClientMethod(message).catch(function (e) {
                  _this5._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "Invoke client method threw error: ".concat(Object(_Utils__WEBPACK_IMPORTED_MODULE_11__["getErrorString"])(e)));
                });

                break;

              case _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].StreamItem:
              case _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Completion:
                {
                  var callback = this._callbacks[message.invocationId];

                  if (callback) {
                    if (message.type === _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Completion) {
                      delete this._callbacks[message.invocationId];
                    }

                    try {
                      callback(message);
                    } catch (e) {
                      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "Stream callback threw error: ".concat(Object(_Utils__WEBPACK_IMPORTED_MODULE_11__["getErrorString"])(e)));
                    }
                  }

                  break;
                }

              case _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Ping:
                // Don't care about pings
                break;

              case _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Close:
                {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "Close message received from server.");

                  var error = message.error ? new Error("Server returned an error on close: " + message.error) : undefined;

                  if (message.allowReconnect === true) {
                    // It feels wrong not to await connection.stop() here, but processIncomingData is called as part of an onreceive callback which is not async,
                    // this is already the behavior for serverTimeout(), and HttpConnection.Stop() should catch and log all possible exceptions.
                    // eslint-disable-next-line @typescript-eslint/no-floating-promises
                    this.connection.stop(error);
                  } else {
                    // We cannot await stopInternal() here, but subsequent calls to stop() will await this if stopInternal() is still ongoing.
                    this._stopPromise = this._stopInternal(error);
                  }

                  break;
                }

              case _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Ack:
                if (this._messageBuffer) {
                  this._messageBuffer._ack(message);
                }

                break;

              case _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Sequence:
                if (this._messageBuffer) {
                  this._messageBuffer._resetSequence(message);
                }

                break;

              default:
                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Warning, "Invalid message type: ".concat(message.type, "."));

                break;
            }
          }
        } catch (err) {
          _iterator.e(err);
        } finally {
          _iterator.f();
        }
      }

      this._resetTimeoutPeriod();
    }
  }, {
    key: "_processHandshakeResponse",
    value: function _processHandshakeResponse(data) {
      var responseMessage;
      var remainingData;

      try {
        var _this$_handshakeProto = this._handshakeProtocol.parseHandshakeResponse(data);

        var _this$_handshakeProto2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__["default"])(_this$_handshakeProto, 2);

        remainingData = _this$_handshakeProto2[0];
        responseMessage = _this$_handshakeProto2[1];
      } catch (e) {
        var message = "Error parsing handshake response: " + e;

        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, message);

        var error = new Error(message);

        this._handshakeRejecter(error);

        throw error;
      }

      if (responseMessage.error) {
        var _message = "Server returned handshake error: " + responseMessage.error;

        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, _message);

        var _error = new Error(_message);

        this._handshakeRejecter(_error);

        throw _error;
      } else {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Server handshake complete.");
      }

      this._handshakeResolver();

      return remainingData;
    }
  }, {
    key: "_resetKeepAliveInterval",
    value: function _resetKeepAliveInterval() {
      if (this.connection.features.inherentKeepAlive) {
        return;
      } // Set the time we want the next keep alive to be sent
      // Timer will be setup on next message receive


      this._nextKeepAlive = new Date().getTime() + this.keepAliveIntervalInMilliseconds;

      this._cleanupPingTimer();
    }
  }, {
    key: "_resetTimeoutPeriod",
    value: function _resetTimeoutPeriod() {
      var _this6 = this;

      if (!this.connection.features || !this.connection.features.inherentKeepAlive) {
        // Set the timeout timer
        this._timeoutHandle = setTimeout(function () {
          return _this6.serverTimeout();
        }, this.serverTimeoutInMilliseconds); // Set keepAlive timer if there isn't one

        if (this._pingServerHandle === undefined) {
          var nextPing = this._nextKeepAlive - new Date().getTime();

          if (nextPing < 0) {
            nextPing = 0;
          } // The timer needs to be set from a networking callback to avoid Chrome timer throttling from causing timers to run once a minute


          this._pingServerHandle = setTimeout( /*#__PURE__*/Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee5() {
            return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee5$(_context5) {
              while (1) {
                switch (_context5.prev = _context5.next) {
                  case 0:
                    if (!(_this6._connectionState === HubConnectionState.Connected)) {
                      _context5.next = 9;
                      break;
                    }

                    _context5.prev = 1;
                    _context5.next = 4;
                    return _this6._sendMessage(_this6._cachedPingMessage);

                  case 4:
                    _context5.next = 9;
                    break;

                  case 6:
                    _context5.prev = 6;
                    _context5.t0 = _context5["catch"](1);

                    // We don't care about the error. It should be seen elsewhere in the client.
                    // The connection is probably in a bad or closed state now, cleanup the timer so it stops triggering
                    _this6._cleanupPingTimer();

                  case 9:
                  case "end":
                    return _context5.stop();
                }
              }
            }, _callee5, null, [[1, 6]]);
          })), nextPing);
        }
      }
    } // eslint-disable-next-line @typescript-eslint/naming-convention

  }, {
    key: "serverTimeout",
    value: function serverTimeout() {
      // The server hasn't talked to us in a while. It doesn't like us anymore ... :(
      // Terminate the connection, but we don't need to wait on the promise. This could trigger reconnecting.
      // eslint-disable-next-line @typescript-eslint/no-floating-promises
      this.connection.stop(new Error("Server timeout elapsed without receiving a message from the server."));
    }
  }, {
    key: "_invokeClientMethod",
    value: function () {
      var _invokeClientMethod2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee6(invocationMessage) {
        var methodName, methods, methodsCopy, expectsResponse, res, exception, completionMessage, _iterator2, _step2, m, prevRes;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee6$(_context6) {
          while (1) {
            switch (_context6.prev = _context6.next) {
              case 0:
                methodName = invocationMessage.target.toLowerCase();
                methods = this._methods[methodName];

                if (methods) {
                  _context6.next = 9;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Warning, "No client method with the name '".concat(methodName, "' found.")); // No handlers provided by client but the server is expecting a response still, so we send an error


                if (!invocationMessage.invocationId) {
                  _context6.next = 8;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Warning, "No result given for '".concat(methodName, "' method and invocation ID '").concat(invocationMessage.invocationId, "'."));

                _context6.next = 8;
                return this._sendWithProtocol(this._createCompletionMessage(invocationMessage.invocationId, "Client didn't provide a result.", null));

              case 8:
                return _context6.abrupt("return");

              case 9:
                // Avoid issues with handlers removing themselves thus modifying the list while iterating through it
                methodsCopy = methods.slice(); // Server expects a response

                expectsResponse = invocationMessage.invocationId ? true : false; // We preserve the last result or exception but still call all handlers

                _iterator2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(methodsCopy);
                _context6.prev = 12;

                _iterator2.s();

              case 14:
                if ((_step2 = _iterator2.n()).done) {
                  _context6.next = 31;
                  break;
                }

                m = _step2.value;
                _context6.prev = 16;
                prevRes = res;
                _context6.next = 20;
                return m.apply(this, invocationMessage.arguments);

              case 20:
                res = _context6.sent;

                if (expectsResponse && res && prevRes) {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "Multiple results provided for '".concat(methodName, "'. Sending error to server."));

                  completionMessage = this._createCompletionMessage(invocationMessage.invocationId, "Client provided multiple results.", null);
                } // Ignore exception if we got a result after, the exception will be logged


                exception = undefined;
                _context6.next = 29;
                break;

              case 25:
                _context6.prev = 25;
                _context6.t0 = _context6["catch"](16);
                exception = _context6.t0;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "A callback for the method '".concat(methodName, "' threw error '").concat(_context6.t0, "'."));

              case 29:
                _context6.next = 14;
                break;

              case 31:
                _context6.next = 36;
                break;

              case 33:
                _context6.prev = 33;
                _context6.t1 = _context6["catch"](12);

                _iterator2.e(_context6.t1);

              case 36:
                _context6.prev = 36;

                _iterator2.f();

                return _context6.finish(36);

              case 39:
                if (!completionMessage) {
                  _context6.next = 44;
                  break;
                }

                _context6.next = 42;
                return this._sendWithProtocol(completionMessage);

              case 42:
                _context6.next = 51;
                break;

              case 44:
                if (!expectsResponse) {
                  _context6.next = 50;
                  break;
                }

                // If there is an exception that means either no result was given or a handler after a result threw
                if (exception) {
                  completionMessage = this._createCompletionMessage(invocationMessage.invocationId, "".concat(exception), null);
                } else if (res !== undefined) {
                  completionMessage = this._createCompletionMessage(invocationMessage.invocationId, null, res);
                } else {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Warning, "No result given for '".concat(methodName, "' method and invocation ID '").concat(invocationMessage.invocationId, "'.")); // Client didn't provide a result or throw from a handler, server expects a response so we send an error


                  completionMessage = this._createCompletionMessage(invocationMessage.invocationId, "Client didn't provide a result.", null);
                }

                _context6.next = 48;
                return this._sendWithProtocol(completionMessage);

              case 48:
                _context6.next = 51;
                break;

              case 50:
                if (res) {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "Result given for '".concat(methodName, "' method but server is not expecting a result."));
                }

              case 51:
              case "end":
                return _context6.stop();
            }
          }
        }, _callee6, this, [[12, 33, 36, 39], [16, 25]]);
      }));

      function _invokeClientMethod(_x) {
        return _invokeClientMethod2.apply(this, arguments);
      }

      return _invokeClientMethod;
    }()
  }, {
    key: "_connectionClosed",
    value: function _connectionClosed(error) {
      this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "HubConnection.connectionClosed(".concat(error, ") called while in state ").concat(this._connectionState, ".")); // Triggering this.handshakeRejecter is insufficient because it could already be resolved without the continuation having run yet.


      this._stopDuringStartError = this._stopDuringStartError || error || new _Errors__WEBPACK_IMPORTED_MODULE_7__["AbortError"]("The underlying connection was closed before the hub handshake could complete."); // If the handshake is in progress, start will be waiting for the handshake promise, so we complete it.
      // If it has already completed, this should just noop.

      if (this._handshakeResolver) {
        this._handshakeResolver();
      }

      this._cancelCallbacksWithError(error || new Error("Invocation canceled due to the underlying connection being closed."));

      this._cleanupTimeout();

      this._cleanupPingTimer();

      if (this._connectionState === HubConnectionState.Disconnecting) {
        this._completeClose(error);
      } else if (this._connectionState === HubConnectionState.Connected && this._reconnectPolicy) {
        // eslint-disable-next-line @typescript-eslint/no-floating-promises
        this._reconnect(error);
      } else if (this._connectionState === HubConnectionState.Connected) {
        this._completeClose(error);
      } // If none of the above if conditions were true were called the HubConnection must be in either:
      // 1. The Connecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail it.
      // 2. The Reconnecting state in which case the handshakeResolver will complete it and stopDuringStartError will fail the current reconnect attempt
      //    and potentially continue the reconnect() loop.
      // 3. The Disconnected state in which case we're already done.

    }
  }, {
    key: "_completeClose",
    value: function _completeClose(error) {
      var _this7 = this;

      if (this._connectionStarted) {
        this._connectionState = HubConnectionState.Disconnected;
        this._connectionStarted = false;

        if (this._messageBuffer) {
          this._messageBuffer._dispose(error !== null && error !== void 0 ? error : new Error("Connection closed."));

          this._messageBuffer = undefined;
        }

        if (_Utils__WEBPACK_IMPORTED_MODULE_11__["Platform"].isBrowser) {
          window.document.removeEventListener("freeze", this._freezeEventListener);
        }

        try {
          this._closedCallbacks.forEach(function (c) {
            return c.apply(_this7, [error]);
          });
        } catch (e) {
          this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "An onclose callback called with error '".concat(error, "' threw error '").concat(e, "'."));
        }
      }
    }
  }, {
    key: "_reconnect",
    value: function () {
      var _reconnect2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.mark(function _callee7(error) {
        var _this8 = this;

        var reconnectStartTime, previousReconnectAttempts, retryError, nextRetryDelay;
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_2___default.a.wrap(function _callee7$(_context7) {
          while (1) {
            switch (_context7.prev = _context7.next) {
              case 0:
                reconnectStartTime = Date.now();
                previousReconnectAttempts = 0;
                retryError = error !== undefined ? error : new Error("Attempting to reconnect due to a unknown error.");
                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, 0, retryError);

                if (!(nextRetryDelay === null)) {
                  _context7.next = 8;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Connection not reconnecting because the IRetryPolicy returned null on the first reconnect attempt.");

                this._completeClose(error);

                return _context7.abrupt("return");

              case 8:
                this._connectionState = HubConnectionState.Reconnecting;

                if (error) {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "Connection reconnecting because of error '".concat(error, "'."));
                } else {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "Connection reconnecting.");
                }

                if (!(this._reconnectingCallbacks.length !== 0)) {
                  _context7.next = 15;
                  break;
                }

                try {
                  this._reconnectingCallbacks.forEach(function (c) {
                    return c.apply(_this8, [error]);
                  });
                } catch (e) {
                  this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "An onreconnecting callback called with error '".concat(error, "' threw error '").concat(e, "'."));
                } // Exit early if an onreconnecting callback called connection.stop().


                if (!(this._connectionState !== HubConnectionState.Reconnecting)) {
                  _context7.next = 15;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Connection left the reconnecting state in onreconnecting callback. Done reconnecting.");

                return _context7.abrupt("return");

              case 15:
                if (!(nextRetryDelay !== null)) {
                  _context7.next = 43;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "Reconnect attempt number ".concat(previousReconnectAttempts, " will start in ").concat(nextRetryDelay, " ms."));

                _context7.next = 19;
                return new Promise(function (resolve) {
                  _this8._reconnectDelayHandle = setTimeout(resolve, nextRetryDelay);
                });

              case 19:
                this._reconnectDelayHandle = undefined;

                if (!(this._connectionState !== HubConnectionState.Reconnecting)) {
                  _context7.next = 23;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Connection left the reconnecting state during reconnect delay. Done reconnecting.");

                return _context7.abrupt("return");

              case 23:
                _context7.prev = 23;
                _context7.next = 26;
                return this._startInternal();

              case 26:
                this._connectionState = HubConnectionState.Connected;

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "HubConnection reconnected successfully.");

                if (this._reconnectedCallbacks.length !== 0) {
                  try {
                    this._reconnectedCallbacks.forEach(function (c) {
                      return c.apply(_this8, [_this8.connection.connectionId]);
                    });
                  } catch (e) {
                    this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "An onreconnected callback called with connectionId '".concat(this.connection.connectionId, "; threw error '").concat(e, "'."));
                  }
                }

                return _context7.abrupt("return");

              case 32:
                _context7.prev = 32;
                _context7.t0 = _context7["catch"](23);

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "Reconnect attempt failed because of error '".concat(_context7.t0, "'."));

                if (!(this._connectionState !== HubConnectionState.Reconnecting)) {
                  _context7.next = 39;
                  break;
                }

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Debug, "Connection moved to the '".concat(this._connectionState, "' from the reconnecting state during reconnect attempt. Done reconnecting.")); // The TypeScript compiler thinks that connectionState must be Connected here. The TypeScript compiler is wrong.


                if (this._connectionState === HubConnectionState.Disconnecting) {
                  this._completeClose();
                }

                return _context7.abrupt("return");

              case 39:
                retryError = _context7.t0 instanceof Error ? _context7.t0 : new Error(_context7.t0.toString());
                nextRetryDelay = this._getNextRetryDelay(previousReconnectAttempts++, Date.now() - reconnectStartTime, retryError);

              case 41:
                _context7.next = 15;
                break;

              case 43:
                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Information, "Reconnect retries have been exhausted after ".concat(Date.now() - reconnectStartTime, " ms and ").concat(previousReconnectAttempts, " failed attempts. Connection disconnecting."));

                this._completeClose();

              case 45:
              case "end":
                return _context7.stop();
            }
          }
        }, _callee7, this, [[23, 32]]);
      }));

      function _reconnect(_x2) {
        return _reconnect2.apply(this, arguments);
      }

      return _reconnect;
    }()
  }, {
    key: "_getNextRetryDelay",
    value: function _getNextRetryDelay(previousRetryCount, elapsedMilliseconds, retryReason) {
      try {
        return this._reconnectPolicy.nextRetryDelayInMilliseconds({
          elapsedMilliseconds: elapsedMilliseconds,
          previousRetryCount: previousRetryCount,
          retryReason: retryReason
        });
      } catch (e) {
        this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "IRetryPolicy.nextRetryDelayInMilliseconds(".concat(previousRetryCount, ", ").concat(elapsedMilliseconds, ") threw error '").concat(e, "'."));

        return null;
      }
    }
  }, {
    key: "_cancelCallbacksWithError",
    value: function _cancelCallbacksWithError(error) {
      var _this9 = this;

      var callbacks = this._callbacks;
      this._callbacks = {};
      Object.keys(callbacks).forEach(function (key) {
        var callback = callbacks[key];

        try {
          callback(null, error);
        } catch (e) {
          _this9._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_9__["LogLevel"].Error, "Stream 'error' callback called with '".concat(error, "' threw error: ").concat(Object(_Utils__WEBPACK_IMPORTED_MODULE_11__["getErrorString"])(e)));
        }
      });
    }
  }, {
    key: "_cleanupPingTimer",
    value: function _cleanupPingTimer() {
      if (this._pingServerHandle) {
        clearTimeout(this._pingServerHandle);
        this._pingServerHandle = undefined;
      }
    }
  }, {
    key: "_cleanupTimeout",
    value: function _cleanupTimeout() {
      if (this._timeoutHandle) {
        clearTimeout(this._timeoutHandle);
      }
    }
  }, {
    key: "_createInvocation",
    value: function _createInvocation(methodName, args, nonblocking, streamIds) {
      if (nonblocking) {
        if (streamIds.length !== 0) {
          return {
            arguments: args,
            streamIds: streamIds,
            target: methodName,
            type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Invocation
          };
        } else {
          return {
            arguments: args,
            target: methodName,
            type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Invocation
          };
        }
      } else {
        var invocationId = this._invocationId;
        this._invocationId++;

        if (streamIds.length !== 0) {
          return {
            arguments: args,
            invocationId: invocationId.toString(),
            streamIds: streamIds,
            target: methodName,
            type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Invocation
          };
        } else {
          return {
            arguments: args,
            invocationId: invocationId.toString(),
            target: methodName,
            type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Invocation
          };
        }
      }
    }
  }, {
    key: "_launchStreams",
    value: function _launchStreams(streams, promiseQueue) {
      var _this10 = this;

      if (streams.length === 0) {
        return;
      } // Synchronize stream data so they arrive in-order on the server


      if (!promiseQueue) {
        promiseQueue = Promise.resolve();
      } // We want to iterate over the keys, since the keys are the stream ids
      // eslint-disable-next-line guard-for-in


      var _loop = function _loop(streamId) {
        streams[streamId].subscribe({
          complete: function complete() {
            promiseQueue = promiseQueue.then(function () {
              return _this10._sendWithProtocol(_this10._createCompletionMessage(streamId));
            });
          },
          error: function error(err) {
            var message;

            if (err instanceof Error) {
              message = err.message;
            } else if (err && err.toString) {
              message = err.toString();
            } else {
              message = "Unknown error";
            }

            promiseQueue = promiseQueue.then(function () {
              return _this10._sendWithProtocol(_this10._createCompletionMessage(streamId, message));
            });
          },
          next: function next(item) {
            promiseQueue = promiseQueue.then(function () {
              return _this10._sendWithProtocol(_this10._createStreamItemMessage(streamId, item));
            });
          }
        });
      };

      for (var streamId in streams) {
        _loop(streamId);
      }
    }
  }, {
    key: "_replaceStreamingParams",
    value: function _replaceStreamingParams(args) {
      var streams = [];
      var streamIds = [];

      for (var i = 0; i < args.length; i++) {
        var argument = args[i];

        if (this._isObservable(argument)) {
          var streamId = this._invocationId;
          this._invocationId++; // Store the stream for later use

          streams[streamId] = argument;
          streamIds.push(streamId.toString()); // remove stream from args

          args.splice(i, 1);
        }
      }

      return [streams, streamIds];
    }
  }, {
    key: "_isObservable",
    value: function _isObservable(arg) {
      // This allows other stream implementations to just work (like rxjs)
      return arg && arg.subscribe && typeof arg.subscribe === "function";
    }
  }, {
    key: "_createStreamInvocation",
    value: function _createStreamInvocation(methodName, args, streamIds) {
      var invocationId = this._invocationId;
      this._invocationId++;

      if (streamIds.length !== 0) {
        return {
          arguments: args,
          invocationId: invocationId.toString(),
          streamIds: streamIds,
          target: methodName,
          type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].StreamInvocation
        };
      } else {
        return {
          arguments: args,
          invocationId: invocationId.toString(),
          target: methodName,
          type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].StreamInvocation
        };
      }
    }
  }, {
    key: "_createCancelInvocation",
    value: function _createCancelInvocation(id) {
      return {
        invocationId: id,
        type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].CancelInvocation
      };
    }
  }, {
    key: "_createStreamItemMessage",
    value: function _createStreamItemMessage(id, item) {
      return {
        invocationId: id,
        item: item,
        type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].StreamItem
      };
    }
  }, {
    key: "_createCompletionMessage",
    value: function _createCompletionMessage(id, error, result) {
      if (error) {
        return {
          error: error,
          invocationId: id,
          type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Completion
        };
      }

      return {
        invocationId: id,
        result: result,
        type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Completion
      };
    }
  }, {
    key: "_createCloseMessage",
    value: function _createCloseMessage() {
      return {
        type: _IHubProtocol__WEBPACK_IMPORTED_MODULE_8__["MessageType"].Close
      };
    }
  }], [{
    key: "create",
    value:
    /** @internal */
    // Using a public static factory method means we can have a private constructor and an _internal_
    // create method that can be used by HubConnectionBuilder. An "internal" constructor would just
    // be stripped away and the '.d.ts' file would have no constructor, which is interpreted as a
    // public parameter-less constructor.
    function create(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize) {
      return new HubConnection(connection, logger, protocol, reconnectPolicy, serverTimeoutInMilliseconds, keepAliveIntervalInMilliseconds, statefulReconnectBufferSize);
    }
  }]);

  return HubConnection;
}();

/***/ }),

/***/ "nLdG":
/*!************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/banuLog/banulog.component.html ***!
  \************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"card\" style=\"margin-top: 15px;\">\r\n      <div class=\"card-header bg-white d-flex justify-content-between align-items-center\">\r\n        <h5 class=\"card-title mb-0\">Filtreleme</h5>\r\n        <button mat-raised-button color=\"primary\"  (click)=\"createPdf()\">\r\n          <i class=\"fas fa-file-pdf\"></i>\r\n          PDF Oluştur\r\n        </button>\r\n      </div>\r\n      <div class=\"card-body py-2\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-3\">\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n              <mat-label>Başlangıç</mat-label>\r\n              <input matInput [matDatepicker]=\"startDatePicker\" [(ngModel)]=\"startDate\" (dateChange)=\"onStartDateChange()\" placeholder=\"Seçiniz\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #startDatePicker></mat-datepicker>\r\n            </mat-form-field>\r\n            <button *ngIf=\"startDate\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"startDate=null;formattedStartDate=''\">\r\n              Filtreyi Temizle\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n              <mat-label>Bitiş</mat-label>\r\n              <input matInput [matDatepicker]=\"endDatePicker\" [(ngModel)]=\"endDate\" (dateChange)=\"onEndDateChange()\" placeholder=\"Seçiniz\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #endDatePicker></mat-datepicker>\r\n            </mat-form-field>\r\n            <button *ngIf=\"endDate\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"endDate=null;formattedEndDate=''\">\r\n              Filtreyi Temizle\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n              <mat-label>İsim</mat-label>\r\n              <input matInput [(ngModel)]=\"searchName\" (keyup)=\"page=1\" placeholder=\"İsim giriniz\">\r\n            </mat-form-field>\r\n            <button *ngIf=\"searchName\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"searchName=''\">\r\n              Filtreyi Temizle\r\n            </button>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n              <mat-label>İşlem</mat-label>\r\n              <mat-select (selectionChange)=\"page=1\" [(ngModel)]=\"selectedProcessType\">\r\n                <mat-option value=\"Ziyaret Talebi\">Ziyaret</mat-option>\r\n                <mat-option value=\"Güvenlik Onay\">Güvenlik Onay</mat-option>\r\n                <mat-option value=\"Güvenlik Red\">Güvenlik Red</mat-option>\r\n                <mat-option value=\"Rapor Oluşturma\">Rapor Oluşturma</mat-option>\r\n              </mat-select>\r\n            </mat-form-field>\r\n            <button *ngIf=\"selectedProcessType\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"selectedProcessType=''\">\r\n              Filtreyi Temizle\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\" *ngIf=\"formattedEndDate||formattedStartDate||selectedProcessType||searchName\">\r\n          <div class=\"col-md-12 text-center\">\r\n            <button mat-raised-button color=\"primary\" (click)=\"onSearch()\">\r\n              <i class=\"fas fa-search\"></i>\r\n              Ara\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 style=\"padding-bottom: 30px;\" class=\"card-title \">{{'BanuLogList'| translate}}</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"row\" *ngIf=\"filteredAllResult\">\r\n                <div style=\"font-weight: bold;\" class=\"col-md-4\" *ngIf=\"filteredAllResult\">\r\n                  {{filteredAllResult.totalItemCount}} kayıt arasından {{filteredAllResult.data.length}} kayıt listeleniyor\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <div class=\"pagination-container\" *ngIf=\"pageCount.length > 0\">\r\n                    <nav aria-label=\"Page navigation\">\r\n                      <ul class=\"pagination\">\r\n                        <li class=\"page-item\" [class.disabled]=\"page === 1\">\r\n                          <a class=\"page-link\" (click)=\"onPageChange(page - 1)\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                          </a>\r\n                        </li>\r\n                        <li class=\"page-item\" *ngFor=\"let p of getVisiblePages()\" [class.active]=\"p === page\">\r\n                          <a class=\"page-link\" *ngIf=\"p !== -1\" (click)=\"onPageChange(p)\">{{p}}</a>\r\n                          <span class=\"page-link dots\" *ngIf=\"p === -1\">...</span>\r\n                        </li>\r\n                        <li class=\"page-item\" [class.disabled]=\"page === pageCount.length\">\r\n                          <a class=\"page-link\" (click)=\"onPageChange(page + 1)\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <mat-form-field class=\"float-right\">\r\n                    <mat-label>Filter</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\" *ngIf=\"allResult&&!filteredAllResult\">\r\n                <div style=\"font-weight: bold;\" class=\"col-md-4\" *ngIf=\"allResult\">\r\n                  {{allResult.totalItemCount}} kayıt arasından {{allResult.data.length}} kayıt listeleniyor\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <div class=\"pagination-container\" *ngIf=\"allPageCount.length > 0\">\r\n                    <nav aria-label=\"Page navigation\">\r\n                      <ul class=\"pagination\">\r\n                        <li class=\"page-item\" [class.disabled]=\"basePageIndex === 1\">\r\n                          <a class=\"page-link\" (click)=\"onAllPageChange(basePageIndex - 1)\" aria-label=\"Previous\">\r\n                            <span aria-hidden=\"true\">&laquo;</span>\r\n                          </a>\r\n                        </li>\r\n                        <li class=\"page-item\" *ngFor=\"let p of getAllVisiblePages()\" [class.active]=\"p === basePageIndex\">\r\n                          <a class=\"page-link\" *ngIf=\"p !== -1\" (click)=\"onAllPageChange(p)\">{{p}}</a>\r\n                          <span class=\"page-link dots\" *ngIf=\"p === -1\">...</span>\r\n                        </li>\r\n                        <li class=\"page-item\" [class.disabled]=\"basePageIndex === allPageCount.length\">\r\n                          <a class=\"page-link\" (click)=\"onAllPageChange(basePageIndex + 1)\" aria-label=\"Next\">\r\n                            <span aria-hidden=\"true\">&raquo;</span>\r\n                          </a>\r\n                        </li>\r\n                      </ul>\r\n                    </nav>\r\n                  </div>\r\n                </div>\r\n                <div class=\"col-md-4\">\r\n                  <mat-form-field class=\"float-right\">\r\n                    <mat-label>Filter</mat-label>\r\n                    <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n\t\t\t\t\t\t\t<table mat-table [dataSource]=\"dataSource\" matSort>\r\n\r\n\r\n\t\t\t\t\t\t\t\t\r\n                   <ng-container matColumnDef=\"id\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.id}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"createdDate\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.createdDate|date:'dd/MM/yyyy'}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"transactorFullName\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorFullName'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.transactorFullName}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"transactorId\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorId'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.transactorId}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"transactionsDescription\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionsDescription'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.transactionsDescription}}</td>\r\n\t\t\t\t   </ng-container>\r\n\t\r\n                   <ng-container matColumnDef=\"transactionType\">\r\n                     <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionType'|translate}}</th>\r\n                     <td mat-cell *matCellDef=\"let element\">{{element.transactionType}}</td>\r\n\t\t\t\t   </ng-container>\r\n\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                  <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                </tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"modal modal-angular fade\" id=\"banulog\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(banuLogAddForm)\"><span aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"margin-top\">\r\n           {{'BanuLogForm'| translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n        <form *ngIf=\"banuLogAddForm\" [formGroup]=\"banuLogAddForm\" (ngSubmit)=\"save()\">\r\n          \r\n\t\t\t\t\t<div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"createdDate\" type=\"date\" id=\"createdDate\" name=\"createdDate\"\r\n                       formControlName=\"createdDate\" />\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"banuLogAddForm.get('createdDate')!.hasError('createdDate') && banuLogAddForm.get('createdDate')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\t\t\t\t\t<div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"transactorFullName\" type=\"text\" id=\"transactorFullName\" name=\"transactorFullName\"\r\n                       formControlName=\"transactorFullName\" />\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"banuLogAddForm.get('transactorFullName')!.hasError('transactorFullName') && banuLogAddForm.get('transactorFullName')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\t\t\t\t\t<div class=\"row\">\r\n\t\t\t\t\t\t<div class=\"col-md-12\">\r\n\t\t\t\t\t\t\t<select class=\"browser-default custom-select\" formControlName=\"transactorId\">\r\n\t\t\t\t\t\t\t\t<option *ngFor=\"let item of banuLoglookUp\" [value]=\"item.id\"> {{item.label}}</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"transactionsDescription\" type=\"text\" id=\"transactionsDescription\" name=\"transactionsDescription\"\r\n                       formControlName=\"transactionsDescription\" />\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"banuLogAddForm.get('transactionsDescription')!.hasError('transactionsDescription') && banuLogAddForm.get('transactionsDescription')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\t\t\t\t\t<div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"transactionType\" type=\"text\" id=\"transactionType\" name=\"transactionType\"\r\n                       formControlName=\"transactionType\" />\r\n                <div class=\"alert alert-danger\"\r\n                     *ngIf=\"banuLogAddForm.get('transactionType')!.hasError('transactionType') && banuLogAddForm.get('transactionType')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n                   \r\n          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save'|translate}}</button>\r\n          <div class=\"clearfix\"></div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon = \"error\" [showCancelButton]=\"true\"\r\n\t[confirmButtonText] = \"'OK'\"[cancelButtonText] = \"'Cancel'\" >\r\n</swal>\r\n\r\n");

/***/ }),

/***/ "oMfd":
/*!**********************************************************************!*\
  !*** ./src/app/core/components/admin/banuLog/banuLog.component.scss ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (".pagination-container {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n}\n\n.pagination {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0;\n  padding: 0;\n}\n\n.pagination .page-item {\n  margin: 0 2px;\n}\n\n.pagination .page-item.active .page-link {\n  background-color: #f44336;\n  border-color: #f44336;\n  color: white;\n}\n\n.pagination .page-item.disabled .page-link {\n  color: #6c757d;\n  pointer-events: none;\n  background-color: #fff;\n  border-color: #dee2e6;\n}\n\n.pagination .page-link {\n  padding: 8px 12px;\n  color: #f44336;\n  background-color: #fff;\n  border: 1px solid #dee2e6;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.pagination .page-link:hover {\n  background-color: #f8f9fa;\n  border-color: #f44336;\n}\n\n.pagination .page-link.dots {\n  cursor: default;\n  background-color: transparent;\n  border: none;\n  color: #6c757d;\n}\n\n.pagination .page-link.dots:hover {\n  background-color: transparent;\n  border: none;\n}\n\n.float-right {\n  float: right;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uXFwuLlxcLi5cXC4uXFwuLlxcLi5cXGJhbnVMb2cuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFdBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7RUFDQSxtQkFBQTtFQUNBLFNBQUE7RUFDQSxVQUFBO0FBQ0Y7O0FBQ0U7RUFDRSxhQUFBO0FBQ0o7O0FBQ0k7RUFDRSx5QkFBQTtFQUNBLHFCQUFBO0VBQ0EsWUFBQTtBQUNOOztBQUVJO0VBQ0UsY0FBQTtFQUNBLG9CQUFBO0VBQ0Esc0JBQUE7RUFDQSxxQkFBQTtBQUFOOztBQUlFO0VBQ0UsaUJBQUE7RUFDQSxjQUFBO0VBQ0Esc0JBQUE7RUFDQSx5QkFBQTtFQUNBLGVBQUE7RUFDQSx5QkFBQTtBQUZKOztBQUlJO0VBQ0UseUJBQUE7RUFDQSxxQkFBQTtBQUZOOztBQUtJO0VBQ0UsZUFBQTtFQUNBLDZCQUFBO0VBQ0EsWUFBQTtFQUNBLGNBQUE7QUFITjs7QUFLTTtFQUNFLDZCQUFBO0VBQ0EsWUFBQTtBQUhSOztBQVNBO0VBQ0UsWUFBQTtBQU5GIiwiZmlsZSI6ImJhbnVMb2cuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFnaW5hdGlvbi1jb250YWluZXIge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICB3aWR0aDogMTAwJTtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5wYWdpbmF0aW9uIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgbWFyZ2luOiAwO1xyXG4gIHBhZGRpbmc6IDA7XHJcbiAgXHJcbiAgLnBhZ2UtaXRlbSB7XHJcbiAgICBtYXJnaW46IDAgMnB4O1xyXG4gICAgXHJcbiAgICAmLmFjdGl2ZSAucGFnZS1saW5rIHtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0NDMzNjtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICYuZGlzYWJsZWQgLnBhZ2UtbGluayB7XHJcbiAgICAgIGNvbG9yOiAjNmM3NTdkO1xyXG4gICAgICBwb2ludGVyLWV2ZW50czogbm9uZTtcclxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgICAgYm9yZGVyLWNvbG9yOiAjZGVlMmU2O1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLnBhZ2UtbGluayB7XHJcbiAgICBwYWRkaW5nOiA4cHggMTJweDtcclxuICAgIGNvbG9yOiAjZjQ0MzM2O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZWUyZTY7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0cmFuc2l0aW9uOiBhbGwgMC4zcyBlYXNlO1xyXG5cclxuICAgICY6aG92ZXIge1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOWZhO1xyXG4gICAgICBib3JkZXItY29sb3I6ICNmNDQzMzY7XHJcbiAgICB9XHJcblxyXG4gICAgJi5kb3RzIHtcclxuICAgICAgY3Vyc29yOiBkZWZhdWx0O1xyXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgICAgYm9yZGVyOiBub25lO1xyXG4gICAgICBjb2xvcjogIzZjNzU3ZDtcclxuICAgICAgXHJcbiAgICAgICY6aG92ZXIge1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xyXG4gICAgICAgIGJvcmRlcjogbm9uZTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxuLmZsb2F0LXJpZ2h0IHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuIl19 */");

/***/ }),

/***/ "pOye":
/*!**************************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/admin/operationclaim/operationclaim.component.html ***!
  \**************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"card-header card-header-danger\">\r\n            <h4 class=\"card-title \">{{'OperationClaimList'|translate}}</h4>\r\n          </div>\r\n          <div class=\"card-body\">\r\n            <div class=\"table-responsive\">\r\n\r\n              <div class=\"col-md-4 pull-right\">\r\n                <mat-form-field>\r\n                  <mat-label>{{'Filter' |translate}}</mat-label>\r\n                  <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                </mat-form-field>\r\n              </div>\r\n\r\n              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n                <ng-container matColumnDef=\"id\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Id'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Name'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"alias\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Alias'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.alias}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"description\">\r\n                  <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'Description'|translate}} </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.description}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"update\" >\r\n                  <th mat-header-cell *matHeaderCellDef></th>\r\n                  <td style=\"width: 25px;\" mat-cell *matCellDef=\"let element\">\r\n                    <a *ngIf=\"checkClaim('UpdateOperationClaimCommand')\" data-toggle=\"modal\" data-target=\"#operationclaim\" (click)=\"getOperationClaimById(element.id)\"><i\r\n                      title=\"{{'Update' | translate}}\"  style=\"color:#ff5722;\" class=\"far fa-edit\"></i></a>\r\n                  </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                  <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                </tr>\r\n              </table>\r\n              <mat-paginator [pageSizeOptions]=\"[10, 25,50,100]\"></mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"modal modal-angular fade\" id=\"operationclaim\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n  <div class=\"modal-dialog\" role=\"document\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-body text-center\">\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n          (click)=\"clearFormGroup(operationClaimAddForm)\"><span aria-hidden=\"true\">&times;</span></button>\r\n        <h4 class=\"margin-top\">\r\n          {{'OperationClaimForm'| translate}}\r\n        </h4>\r\n        <div class=\"separator\"></div>\r\n        <form *ngIf=\"operationClaimAddForm\" [formGroup]=\"operationClaimAddForm\" (ngSubmit)=\"save()\">\r\n\r\n          <div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"{{'Alias'|translate}}\" type=\"text\" id=\"alias\" name=\"alias\"\r\n                  formControlName=\"alias\" />\r\n                <div class=\"alert alert-danger\"\r\n                  *ngIf=\"operationClaimAddForm.get('alias')!.hasError('alias') && operationClaimAddForm.get('alias')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\">\r\n            <div class=\"col col-md-12\">\r\n              <mat-form-field class=\"example-full-width\">\r\n                <input matInput placeholder=\"{{'Description'|translate}}\" type=\"text\" id=\"description\"\r\n                  name=\"description\" formControlName=\"description\" />\r\n                <div class=\"alert alert-danger\"\r\n                  *ngIf=\"operationClaimAddForm.get('description')!.hasError('description') && operationClaimAddForm.get('description')!.dirty\">\r\n                </div>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save' |translate}}</button>\r\n          <div class=\"clearfix\"></div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>");

/***/ }),

/***/ "pn4S":
/*!***************************************************************************!*\
  !*** ./src/app/core/components/admin/banuLog/services/BanuLog.service.ts ***!
  \***************************************************************************/
/*! exports provided: BanuLogService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "BanuLogService", function() { return BanuLogService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var BanuLogService = /** @class */ (function () {
    function BanuLogService(httpClient) {
        this.httpClient = httpClient;
    }
    BanuLogService.prototype.getBanuLogList = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/BanuLogs/getall');
    };
    BanuLogService.prototype.getBanuLogByPagingList = function (page, pageSize) {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/BanuLogs/getbypaging?page=' + page + '&pageSize=' + pageSize);
    };
    BanuLogService.prototype.getBanuLogByPagingListSecurity = function (page, pageSize) {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/BanuLogs/getbypagingsecurity?page=' + page + '&pageSize=' + pageSize);
    };
    BanuLogService.prototype.getBanuLogGlobalFilterList = function (filters, page, pageSize) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/BanuLogs/getGlobalFilterList?page=" + page + "&pageSize=" + pageSize), filters);
    };
    BanuLogService.prototype.getBanuLogGlobalFilterListSecurity = function (filters, page, pageSize) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/BanuLogs/getGlobalFilterListSecurity?page=" + page + "&pageSize=" + pageSize), filters);
    };
    BanuLogService.prototype.getBanuLogListToPdf = function (logList) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/BanuLogs/getbylisttopdf", logList, { responseType: 'blob' });
    };
    BanuLogService.prototype.getBanuLogFilterListToPdf = function (filters) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/BanuLogs/getbyglobalpdf", filters, {
            responseType: 'blob',
            observe: 'response' // Yanıt başlıklarını da al
        });
    };
    BanuLogService.prototype.getBanuLogFilterListToPdfSecurity = function (filters) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/BanuLogs/getbyglobalpdfforSecurity", filters, {
            responseType: 'blob',
            observe: 'response' // Yanıt başlıklarını da al
        });
    };
    BanuLogService.prototype.getBanuLogById = function (id) {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/BanuLogs/getbyid?id=' + id);
    };
    BanuLogService.prototype.addBanuLog = function (banuLog) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/BanuLogs/', banuLog, { responseType: 'text' });
    };
    BanuLogService.prototype.updateBanuLog = function (banuLog) {
        return this.httpClient.put(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/BanuLogs/', banuLog, { responseType: 'text' });
    };
    BanuLogService.prototype.deleteBanuLog = function (id) {
        return this.httpClient.request('delete', environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/BanuLogs/', { body: { id: id } });
    };
    BanuLogService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    BanuLogService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], BanuLogService);
    return BanuLogService;
}());



/***/ }),

/***/ "qFkC":
/*!****************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/ITransport.js ***!
  \****************************************************************/
/*! exports provided: HttpTransportType, TransferFormat */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HttpTransportType", function() { return HttpTransportType; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TransferFormat", function() { return TransferFormat; });
// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.
// This will be treated as a bit flag in the future, so we keep it using power-of-two values.

/** Specifies a specific HTTP transport type. */
var HttpTransportType;

(function (HttpTransportType) {
  /** Specifies no transport preference. */
  HttpTransportType[HttpTransportType["None"] = 0] = "None";
  /** Specifies the WebSockets transport. */

  HttpTransportType[HttpTransportType["WebSockets"] = 1] = "WebSockets";
  /** Specifies the Server-Sent Events transport. */

  HttpTransportType[HttpTransportType["ServerSentEvents"] = 2] = "ServerSentEvents";
  /** Specifies the Long Polling transport. */

  HttpTransportType[HttpTransportType["LongPolling"] = 4] = "LongPolling";
})(HttpTransportType || (HttpTransportType = {}));
/** Specifies the transfer format for a connection. */


var TransferFormat;

(function (TransferFormat) {
  /** Specifies that only text data will be transmitted over the connection. */
  TransferFormat[TransferFormat["Text"] = 1] = "Text";
  /** Specifies that binary data will be transmitted over the connection. */

  TransferFormat[TransferFormat["Binary"] = 2] = "Binary";
})(TransferFormat || (TransferFormat = {}));

/***/ }),

/***/ "qIXe":
/*!*******************************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/ServerSentEventsTransport.js ***!
  \*******************************************************************************/
/*! exports provided: ServerSentEventsTransport */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ServerSentEventsTransport", function() { return ServerSentEventsTransport; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/regenerator */ "o0o1");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/slicedToArray */ "ODXe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/asyncToGenerator */ "HaE+");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _ITransport__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ITransport */ "qFkC");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Utils */ "ftFU");






// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.



/** @private */

var ServerSentEventsTransport = /*#__PURE__*/function () {
  function ServerSentEventsTransport(httpClient, accessToken, logger, options) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_4__["default"])(this, ServerSentEventsTransport);

    this._httpClient = httpClient;
    this._accessToken = accessToken;
    this._logger = logger;
    this._options = options;
    this.onreceive = null;
    this.onclose = null;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_5__["default"])(ServerSentEventsTransport, [{
    key: "connect",
    value: function () {
      var _connect = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee(url, transferFormat) {
        var _this = this;

        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _Utils__WEBPACK_IMPORTED_MODULE_8__["Arg"].isRequired(url, "url");
                _Utils__WEBPACK_IMPORTED_MODULE_8__["Arg"].isRequired(transferFormat, "transferFormat");
                _Utils__WEBPACK_IMPORTED_MODULE_8__["Arg"].isIn(transferFormat, _ITransport__WEBPACK_IMPORTED_MODULE_7__["TransferFormat"], "transferFormat");

                this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Trace, "(SSE transport) Connecting."); // set url before accessTokenFactory because this._url is only for send and we set the auth header instead of the query string for send


                this._url = url;

                if (this._accessToken) {
                  url += (url.indexOf("?") < 0 ? "?" : "&") + "access_token=".concat(encodeURIComponent(this._accessToken));
                }

                return _context.abrupt("return", new Promise(function (resolve, reject) {
                  var opened = false;

                  if (transferFormat !== _ITransport__WEBPACK_IMPORTED_MODULE_7__["TransferFormat"].Text) {
                    reject(new Error("The Server-Sent Events transport only supports the 'Text' transfer format"));
                    return;
                  }

                  var eventSource;

                  if (_Utils__WEBPACK_IMPORTED_MODULE_8__["Platform"].isBrowser || _Utils__WEBPACK_IMPORTED_MODULE_8__["Platform"].isWebWorker) {
                    eventSource = new _this._options.EventSource(url, {
                      withCredentials: _this._options.withCredentials
                    });
                  } else {
                    // Non-browser passes cookies via the dictionary
                    var cookies = _this._httpClient.getCookieString(url);

                    var headers = {};
                    headers.Cookie = cookies;

                    var _getUserAgentHeader = Object(_Utils__WEBPACK_IMPORTED_MODULE_8__["getUserAgentHeader"])(),
                        _getUserAgentHeader2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__["default"])(_getUserAgentHeader, 2),
                        name = _getUserAgentHeader2[0],
                        value = _getUserAgentHeader2[1];

                    headers[name] = value;
                    eventSource = new _this._options.EventSource(url, {
                      withCredentials: _this._options.withCredentials,
                      headers: Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_1__["default"])({}, headers), _this._options.headers)
                    });
                  }

                  try {
                    eventSource.onmessage = function (e) {
                      if (_this.onreceive) {
                        try {
                          _this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Trace, "(SSE transport) data received. ".concat(Object(_Utils__WEBPACK_IMPORTED_MODULE_8__["getDataDetail"])(e.data, _this._options.logMessageContent), "."));

                          _this.onreceive(e.data);
                        } catch (error) {
                          _this._close(error);

                          return;
                        }
                      }
                    }; // @ts-ignore: not using event on purpose


                    eventSource.onerror = function (e) {
                      // EventSource doesn't give any useful information about server side closes.
                      if (opened) {
                        _this._close();
                      } else {
                        reject(new Error("EventSource failed to connect. The connection could not be found on the server," + " either the connection ID is not present on the server, or a proxy is refusing/buffering the connection." + " If you have multiple servers check that sticky sessions are enabled."));
                      }
                    };

                    eventSource.onopen = function () {
                      _this._logger.log(_ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Information, "SSE connected to ".concat(_this._url));

                      _this._eventSource = eventSource;
                      opened = true;
                      resolve();
                    };
                  } catch (e) {
                    reject(e);
                    return;
                  }
                }));

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function connect(_x, _x2) {
        return _connect.apply(this, arguments);
      }

      return connect;
    }()
  }, {
    key: "send",
    value: function () {
      var _send = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_3__["default"])( /*#__PURE__*/C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2(data) {
        return C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (this._eventSource) {
                  _context2.next = 2;
                  break;
                }

                return _context2.abrupt("return", Promise.reject(new Error("Cannot send until the transport is connected")));

              case 2:
                return _context2.abrupt("return", Object(_Utils__WEBPACK_IMPORTED_MODULE_8__["sendMessage"])(this._logger, "SSE", this._httpClient, this._url, data, this._options));

              case 3:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function send(_x3) {
        return _send.apply(this, arguments);
      }

      return send;
    }()
  }, {
    key: "stop",
    value: function stop() {
      this._close();

      return Promise.resolve();
    }
  }, {
    key: "_close",
    value: function _close(e) {
      if (this._eventSource) {
        this._eventSource.close();

        this._eventSource = undefined;

        if (this.onclose) {
          this.onclose(e);
        }
      }
    }
  }]);

  return ServerSentEventsTransport;
}();

/***/ }),

/***/ "rBRC":
/*!**********************************************************************!*\
  !*** ./src/app/core/components/admin/log/services/LogDto.service.ts ***!
  \**********************************************************************/
/*! exports provided: LogDtoService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LogDtoService", function() { return LogDtoService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var LogDtoService = /** @class */ (function () {
    function LogDtoService(_httpClient) {
        this._httpClient = _httpClient;
    }
    LogDtoService.prototype.getLogDtoList = function () {
        return this._httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/logs/');
    };
    LogDtoService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    LogDtoService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], LogDtoService);
    return LogDtoService;
}());



/***/ }),

/***/ "tl2s":
/*!*********************************************************************!*\
  !*** ./src/app/core/components/admin/user/Services/user.service.ts ***!
  \*********************************************************************/
/*! exports provided: UserService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "UserService", function() { return UserService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var UserService = /** @class */ (function () {
    function UserService(httpClient) {
        this.httpClient = httpClient;
    }
    UserService.prototype.getUserList = function () {
        return this.httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/users/");
    };
    UserService.prototype.getUserById = function (id) {
        return this.httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/users/" + id));
    };
    UserService.prototype.addUser = function (user) {
        var result = this.httpClient.post(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/users/", user, { responseType: 'text' });
        return result;
    };
    UserService.prototype.requestLimitIncrease = function (userId, reqLimit) {
        return this.httpClient.post(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/users/reqLimitIncrease?userId=" + userId + "&reqNumber=" + reqLimit, {}, { responseType: 'text' });
    };
    UserService.prototype.updateUser = function (user) {
        var result = this.httpClient.put(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/users/", user, { responseType: 'text' });
        return result;
    };
    UserService.prototype.deleteUser = function (id) {
        return this.httpClient.request('delete', _environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/users/" + id));
    };
    UserService.prototype.getUserGroupPermissions = function (userId) {
        return this.httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/user-groups/users/" + userId + "/groups"));
    };
    UserService.prototype.getUserClaims = function (userId) {
        return this.httpClient.get(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + ("/user-claims/users/" + userId));
    };
    UserService.prototype.saveUserClaims = function (userId, claims) {
        var result = this.httpClient.put(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/user-claims/", { UserId: userId, ClaimIds: claims }, { responseType: 'text' });
        return result;
    };
    UserService.prototype.saveUserGroupPermissions = function (userId, groups) {
        var result = this.httpClient.put(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/user-groups/", { UserId: userId, GroupId: groups }, { responseType: 'text' });
        return result;
    };
    UserService.prototype.saveUserPassword = function (command) {
        var result = this.httpClient.put(_environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/Auth/user-password", command, { responseType: 'text' });
        return result;
    };
    UserService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    UserService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], UserService);
    return UserService;
}());



/***/ }),

/***/ "u4eJ":
/*!******************************************************************************************************************!*\
  !*** ./node_modules/raw-loader/dist/cjs.js!./src/app/core/components/screens/banu-logs/banu-logs.component.html ***!
  \******************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = ("<div class=\"main-content\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"card\" style=\"margin-top: 15px;\">\r\n        <div class=\"card-header bg-white d-flex justify-content-between align-items-center\">\r\n          <h5 class=\"card-title mb-0\">Filtreleme</h5>\r\n          <button mat-raised-button color=\"primary\"  (click)=\"createPdf()\">\r\n            <i class=\"fas fa-file-pdf\"></i>\r\n            PDF Oluştur\r\n          </button>\r\n        </div>\r\n        <div class=\"card-body py-2\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Başlangıç</mat-label>\r\n                <input matInput [matDatepicker]=\"startDatePicker\" [(ngModel)]=\"startDate\" (dateChange)=\"onStartDateChange()\" placeholder=\"Seçiniz\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"startDatePicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #startDatePicker></mat-datepicker>\r\n              </mat-form-field>\r\n              <button *ngIf=\"startDate\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"startDate=null;formattedStartDate=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>Bitiş</mat-label>\r\n                <input matInput [matDatepicker]=\"endDatePicker\" [(ngModel)]=\"endDate\" (dateChange)=\"onEndDateChange()\" placeholder=\"Seçiniz\">\r\n                <mat-datepicker-toggle matSuffix [for]=\"endDatePicker\"></mat-datepicker-toggle>\r\n                <mat-datepicker #endDatePicker></mat-datepicker>\r\n              </mat-form-field>\r\n              <button *ngIf=\"endDate\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"endDate=null;formattedEndDate=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>İsim</mat-label>\r\n                <input matInput [(ngModel)]=\"searchName\" (keyup)=\"page=1\" placeholder=\"İsim giriniz\">\r\n              </mat-form-field>\r\n              <button *ngIf=\"searchName\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"searchName=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n            <div class=\"col-md-3\">\r\n              <mat-form-field appearance=\"outline\" style=\"width: 100%;\">\r\n                <mat-label>İşlem</mat-label>\r\n                <mat-select (selectionChange)=\"page=1\" [(ngModel)]=\"selectedProcessType\">\r\n                  <mat-option value=\"Güvenlik Onay\">Güvenlik Onay</mat-option>\r\n                  <mat-option value=\"Güvenlik Red\">Güvenlik Red</mat-option>\r\n                  <mat-option value=\"Güvenlik Pdf Rapor Oluşturma\">Rapor Oluşturma</mat-option>\r\n                </mat-select>\r\n              </mat-form-field>\r\n              <button *ngIf=\"selectedProcessType\" style=\"color:red; border:none; background:none; margin-top:-15px\" (click)=\"selectedProcessType=''\">\r\n                Filtreyi Temizle\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" *ngIf=\"formattedEndDate||formattedStartDate||selectedProcessType||searchName\">\r\n            <div class=\"col-md-12 text-center\">\r\n              <button mat-raised-button color=\"primary\" (click)=\"onSearch()\">\r\n                <i class=\"fas fa-search\"></i>\r\n                Ara\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    <div class=\"container-fluid\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"card\">\r\n            <div class=\"card-header card-header-danger\">\r\n              <h4 style=\"padding-bottom: 30px;\" class=\"card-title \">{{'BanuLogList'| translate}}</h4>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <div class=\"table-responsive\">\r\n                <div class=\"row\" *ngIf=\"filteredAllResult\">\r\n                  <div style=\"font-weight: bold;\" class=\"col-md-4\" *ngIf=\"filteredAllResult\">\r\n                    {{filteredAllResult.totalItemCount}} kayıt arasından {{filteredAllResult.data.length}} kayıt listeleniyor\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"pagination-container\" *ngIf=\"pageCount.length > 0\">\r\n                      <nav aria-label=\"Page navigation\">\r\n                        <ul class=\"pagination\">\r\n                          <li class=\"page-item\" [class.disabled]=\"page === 1\">\r\n                            <a class=\"page-link\" (click)=\"onPageChange(page - 1)\" aria-label=\"Previous\">\r\n                              <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                          </li>\r\n                          <li class=\"page-item\" *ngFor=\"let p of getVisiblePages()\" [class.active]=\"p === page\">\r\n                            <a class=\"page-link\" *ngIf=\"p !== -1\" (click)=\"onPageChange(p)\">{{p}}</a>\r\n                            <span class=\"page-link dots\" *ngIf=\"p === -1\">...</span>\r\n                          </li>\r\n                          <li class=\"page-item\" [class.disabled]=\"page === pageCount.length\">\r\n                            <a class=\"page-link\" (click)=\"onPageChange(page + 1)\" aria-label=\"Next\">\r\n                              <span aria-hidden=\"true\">&raquo;</span>\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </nav>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <mat-form-field class=\"float-right\">\r\n                      <mat-label>Filter</mat-label>\r\n                      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\" *ngIf=\"allResult&&!filteredAllResult\">\r\n                  <div style=\"font-weight: bold;\" class=\"col-md-4\" *ngIf=\"allResult\">\r\n                    {{allResult.totalItemCount}} kayıt arasından {{allResult.data.length}} kayıt listeleniyor\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <div class=\"pagination-container\" *ngIf=\"allPageCount.length > 0\">\r\n                      <nav aria-label=\"Page navigation\">\r\n                        <ul class=\"pagination\">\r\n                          <li class=\"page-item\" [class.disabled]=\"basePageIndex === 1\">\r\n                            <a class=\"page-link\" (click)=\"onAllPageChange(basePageIndex - 1)\" aria-label=\"Previous\">\r\n                              <span aria-hidden=\"true\">&laquo;</span>\r\n                            </a>\r\n                          </li>\r\n                          <li class=\"page-item\" *ngFor=\"let p of getAllVisiblePages()\" [class.active]=\"p === basePageIndex\">\r\n                            <a class=\"page-link\" *ngIf=\"p !== -1\" (click)=\"onAllPageChange(p)\">{{p}}</a>\r\n                            <span class=\"page-link dots\" *ngIf=\"p === -1\">...</span>\r\n                          </li>\r\n                          <li class=\"page-item\" [class.disabled]=\"basePageIndex === allPageCount.length\">\r\n                            <a class=\"page-link\" (click)=\"onAllPageChange(basePageIndex + 1)\" aria-label=\"Next\">\r\n                              <span aria-hidden=\"true\">&raquo;</span>\r\n                            </a>\r\n                          </li>\r\n                        </ul>\r\n                      </nav>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4\">\r\n                    <mat-form-field class=\"float-right\">\r\n                      <mat-label>Filter</mat-label>\r\n                      <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"\" #input>\r\n                    </mat-form-field>\r\n                  </div>\r\n                </div>\r\n                              <table mat-table [dataSource]=\"dataSource\" matSort>\r\n  \r\n  \r\n                                  \r\n                     <ng-container matColumnDef=\"id\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'Id'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.id}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"createdDate\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CreatedDate'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.createdDate|date:'dd/MM/yyyy'}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactorFullName\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorFullName'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactorFullName}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactorId\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactorId'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactorId}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactionsDescription\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionsDescription'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactionsDescription}}</td>\r\n                     </ng-container>\r\n      \r\n                     <ng-container matColumnDef=\"transactionType\">\r\n                       <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'TransactionType'|translate}}</th>\r\n                       <td mat-cell *matCellDef=\"let element\">{{element.transactionType}}</td>\r\n                     </ng-container>\r\n  \r\n  \r\n  \r\n  \r\n                              \r\n  \r\n                  <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                  <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  \r\n                  <tr class=\"mat-row\" *matNoDataRow style=\"text-align: center;\">\r\n                    <td class=\"mat-cell\" colspan=\"4\">{{'NoRecordsFound' |translate}} \"{{input.value}}\"</td>\r\n                  </tr>\r\n                              </table>\r\n                          \r\n                              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  <div class=\"modal modal-angular fade\" id=\"banulog\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-body text-center\">\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"\r\n            (click)=\"clearFormGroup(banuLogAddForm)\"><span aria-hidden=\"true\">&times;</span></button>\r\n          <h4 class=\"margin-top\">\r\n             {{'BanuLogForm'| translate}}\r\n          </h4>\r\n          <div class=\"separator\"></div>\r\n          <form *ngIf=\"banuLogAddForm\" [formGroup]=\"banuLogAddForm\" (ngSubmit)=\"save()\">\r\n            \r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"createdDate\" type=\"date\" id=\"createdDate\" name=\"createdDate\"\r\n                         formControlName=\"createdDate\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('createdDate')!.hasError('createdDate') && banuLogAddForm.get('createdDate')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"transactorFullName\" type=\"text\" id=\"transactorFullName\" name=\"transactorFullName\"\r\n                         formControlName=\"transactorFullName\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('transactorFullName')!.hasError('transactorFullName') && banuLogAddForm.get('transactorFullName')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                      <div class=\"row\">\r\n                          <div class=\"col-md-12\">\r\n                              <select class=\"browser-default custom-select\" formControlName=\"transactorId\">\r\n                                  <option *ngFor=\"let item of banuLoglookUp\" [value]=\"item.id\"> {{item.label}}</option>\r\n                              </select>\r\n                          </div>\r\n                      </div>\r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"transactionsDescription\" type=\"text\" id=\"transactionsDescription\" name=\"transactionsDescription\"\r\n                         formControlName=\"transactionsDescription\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('transactionsDescription')!.hasError('transactionsDescription') && banuLogAddForm.get('transactionsDescription')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                      <div class=\"row\">\r\n              <div class=\"col col-md-12\">\r\n                <mat-form-field class=\"example-full-width\">\r\n                  <input matInput placeholder=\"transactionType\" type=\"text\" id=\"transactionType\" name=\"transactionType\"\r\n                         formControlName=\"transactionType\" />\r\n                  <div class=\"alert alert-danger\"\r\n                       *ngIf=\"banuLogAddForm.get('transactionType')!.hasError('transactionType') && banuLogAddForm.get('transactionType')!.dirty\">\r\n                  </div>\r\n                </mat-form-field>\r\n              </div>\r\n            </div>\r\n                     \r\n            <button mat-raised-button type=\"submit\" class=\"btn btn-danger pull-right\">{{'Save'|translate}}</button>\r\n            <div class=\"clearfix\"></div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <swal #deleteSwal title=\"{{'DeleteConfirm' | translate}}\" icon = \"error\" [showCancelButton]=\"true\"\r\n      [confirmButtonText] = \"'OK'\"[cancelButtonText] = \"'Cancel'\" >\r\n  </swal>\r\n  \r\n  ");

/***/ }),

/***/ "uIUo":
/*!*****************************************************************!*\
  !*** ./src/app/core/components/admin/login/model/login-user.ts ***!
  \*****************************************************************/
/*! exports provided: LoginUser */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LoginUser", function() { return LoginUser; });
var LoginUser = /** @class */ (function () {
    function LoginUser() {
    }
    return LoginUser;
}());



/***/ }),

/***/ "uki+":
/*!************************************************!*\
  !*** ./node_modules/chartist/dist/chartist.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) {
  if (true) {
    // AMD. Register as an anonymous module unless amdModuleId is set
    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {
      return root['Chartist'] = factory();
    }).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
  } else {}
})(this, function () {
  /* Chartist.js 0.11.4
   * Copyright © 2019 Gion Kunz
   * Free to use under either the WTFPL license or the MIT license.
   * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-WTFPL
   * https://raw.githubusercontent.com/gionkunz/chartist-js/master/LICENSE-MIT
   */

  /**
   * The core module of Chartist that is mainly providing static functions and higher level functions for chart modules.
   *
   * @module Chartist.Core
   */
  var Chartist = {
    version: '0.11.4'
  };

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;
    /**
     * This object contains all namespaces used within Chartist.
     *
     * @memberof Chartist.Core
     * @type {{svg: string, xmlns: string, xhtml: string, xlink: string, ct: string}}
     */

    Chartist.namespaces = {
      svg: 'http://www.w3.org/2000/svg',
      xmlns: 'http://www.w3.org/2000/xmlns/',
      xhtml: 'http://www.w3.org/1999/xhtml',
      xlink: 'http://www.w3.org/1999/xlink',
      ct: 'http://gionkunz.github.com/chartist-js/ct'
    };
    /**
     * Helps to simplify functional style code
     *
     * @memberof Chartist.Core
     * @param {*} n This exact value will be returned by the noop function
     * @return {*} The same value that was provided to the n parameter
     */

    Chartist.noop = function (n) {
      return n;
    };
    /**
     * Generates a-z from a number 0 to 26
     *
     * @memberof Chartist.Core
     * @param {Number} n A number from 0 to 26 that will result in a letter a-z
     * @return {String} A character from a-z based on the input number n
     */


    Chartist.alphaNumerate = function (n) {
      // Limit to a-z
      return String.fromCharCode(97 + n % 26);
    };
    /**
     * Simple recursive object extend
     *
     * @memberof Chartist.Core
     * @param {Object} target Target object where the source will be merged into
     * @param {Object...} sources This object (objects) will be merged into target and then target is returned
     * @return {Object} An object that has the same reference as target but is extended and merged with the properties of source
     */


    Chartist.extend = function (target) {
      var i, source, sourceProp;
      target = target || {};

      for (i = 1; i < arguments.length; i++) {
        source = arguments[i];

        for (var prop in source) {
          sourceProp = source[prop];

          if (typeof sourceProp === 'object' && sourceProp !== null && !(sourceProp instanceof Array)) {
            target[prop] = Chartist.extend(target[prop], sourceProp);
          } else {
            target[prop] = sourceProp;
          }
        }
      }

      return target;
    };
    /**
     * Replaces all occurrences of subStr in str with newSubStr and returns a new string.
     *
     * @memberof Chartist.Core
     * @param {String} str
     * @param {String} subStr
     * @param {String} newSubStr
     * @return {String}
     */


    Chartist.replaceAll = function (str, subStr, newSubStr) {
      return str.replace(new RegExp(subStr, 'g'), newSubStr);
    };
    /**
     * Converts a number to a string with a unit. If a string is passed then this will be returned unmodified.
     *
     * @memberof Chartist.Core
     * @param {Number} value
     * @param {String} unit
     * @return {String} Returns the passed number value with unit.
     */


    Chartist.ensureUnit = function (value, unit) {
      if (typeof value === 'number') {
        value = value + unit;
      }

      return value;
    };
    /**
     * Converts a number or string to a quantity object.
     *
     * @memberof Chartist.Core
     * @param {String|Number} input
     * @return {Object} Returns an object containing the value as number and the unit as string.
     */


    Chartist.quantity = function (input) {
      if (typeof input === 'string') {
        var match = /^(\d+)\s*(.*)$/g.exec(input);
        return {
          value: +match[1],
          unit: match[2] || undefined
        };
      }

      return {
        value: input
      };
    };
    /**
     * This is a wrapper around document.querySelector that will return the query if it's already of type Node
     *
     * @memberof Chartist.Core
     * @param {String|Node} query The query to use for selecting a Node or a DOM node that will be returned directly
     * @return {Node}
     */


    Chartist.querySelector = function (query) {
      return query instanceof Node ? query : document.querySelector(query);
    };
    /**
     * Functional style helper to produce array with given length initialized with undefined values
     *
     * @memberof Chartist.Core
     * @param length
     * @return {Array}
     */


    Chartist.times = function (length) {
      return Array.apply(null, new Array(length));
    };
    /**
     * Sum helper to be used in reduce functions
     *
     * @memberof Chartist.Core
     * @param previous
     * @param current
     * @return {*}
     */


    Chartist.sum = function (previous, current) {
      return previous + (current ? current : 0);
    };
    /**
     * Multiply helper to be used in `Array.map` for multiplying each value of an array with a factor.
     *
     * @memberof Chartist.Core
     * @param {Number} factor
     * @returns {Function} Function that can be used in `Array.map` to multiply each value in an array
     */


    Chartist.mapMultiply = function (factor) {
      return function (num) {
        return num * factor;
      };
    };
    /**
     * Add helper to be used in `Array.map` for adding a addend to each value of an array.
     *
     * @memberof Chartist.Core
     * @param {Number} addend
     * @returns {Function} Function that can be used in `Array.map` to add a addend to each value in an array
     */


    Chartist.mapAdd = function (addend) {
      return function (num) {
        return num + addend;
      };
    };
    /**
     * Map for multi dimensional arrays where their nested arrays will be mapped in serial. The output array will have the length of the largest nested array. The callback function is called with variable arguments where each argument is the nested array value (or undefined if there are no more values).
     *
     * @memberof Chartist.Core
     * @param arr
     * @param cb
     * @return {Array}
     */


    Chartist.serialMap = function (arr, cb) {
      var result = [],
          length = Math.max.apply(null, arr.map(function (e) {
        return e.length;
      }));
      Chartist.times(length).forEach(function (e, index) {
        var args = arr.map(function (e) {
          return e[index];
        });
        result[index] = cb.apply(null, args);
      });
      return result;
    };
    /**
     * This helper function can be used to round values with certain precision level after decimal. This is used to prevent rounding errors near float point precision limit.
     *
     * @memberof Chartist.Core
     * @param {Number} value The value that should be rounded with precision
     * @param {Number} [digits] The number of digits after decimal used to do the rounding
     * @returns {number} Rounded value
     */


    Chartist.roundWithPrecision = function (value, digits) {
      var precision = Math.pow(10, digits || Chartist.precision);
      return Math.round(value * precision) / precision;
    };
    /**
     * Precision level used internally in Chartist for rounding. If you require more decimal places you can increase this number.
     *
     * @memberof Chartist.Core
     * @type {number}
     */


    Chartist.precision = 8;
    /**
     * A map with characters to escape for strings to be safely used as attribute values.
     *
     * @memberof Chartist.Core
     * @type {Object}
     */

    Chartist.escapingMap = {
      '&': '&amp;',
      '<': '&lt;',
      '>': '&gt;',
      '"': '&quot;',
      '\'': '&#039;'
    };
    /**
     * This function serializes arbitrary data to a string. In case of data that can't be easily converted to a string, this function will create a wrapper object and serialize the data using JSON.stringify. The outcoming string will always be escaped using Chartist.escapingMap.
     * If called with null or undefined the function will return immediately with null or undefined.
     *
     * @memberof Chartist.Core
     * @param {Number|String|Object} data
     * @return {String}
     */

    Chartist.serialize = function (data) {
      if (data === null || data === undefined) {
        return data;
      } else if (typeof data === 'number') {
        data = '' + data;
      } else if (typeof data === 'object') {
        data = JSON.stringify({
          data: data
        });
      }

      return Object.keys(Chartist.escapingMap).reduce(function (result, key) {
        return Chartist.replaceAll(result, key, Chartist.escapingMap[key]);
      }, data);
    };
    /**
     * This function de-serializes a string previously serialized with Chartist.serialize. The string will always be unescaped using Chartist.escapingMap before it's returned. Based on the input value the return type can be Number, String or Object. JSON.parse is used with try / catch to see if the unescaped string can be parsed into an Object and this Object will be returned on success.
     *
     * @memberof Chartist.Core
     * @param {String} data
     * @return {String|Number|Object}
     */


    Chartist.deserialize = function (data) {
      if (typeof data !== 'string') {
        return data;
      }

      data = Object.keys(Chartist.escapingMap).reduce(function (result, key) {
        return Chartist.replaceAll(result, Chartist.escapingMap[key], key);
      }, data);

      try {
        data = JSON.parse(data);
        data = data.data !== undefined ? data.data : data;
      } catch (e) {}

      return data;
    };
    /**
     * Create or reinitialize the SVG element for the chart
     *
     * @memberof Chartist.Core
     * @param {Node} container The containing DOM Node object that will be used to plant the SVG element
     * @param {String} width Set the width of the SVG element. Default is 100%
     * @param {String} height Set the height of the SVG element. Default is 100%
     * @param {String} className Specify a class to be added to the SVG element
     * @return {Object} The created/reinitialized SVG element
     */


    Chartist.createSvg = function (container, width, height, className) {
      var svg;
      width = width || '100%';
      height = height || '100%'; // Check if there is a previous SVG element in the container that contains the Chartist XML namespace and remove it
      // Since the DOM API does not support namespaces we need to manually search the returned list http://www.w3.org/TR/selectors-api/

      Array.prototype.slice.call(container.querySelectorAll('svg')).filter(function filterChartistSvgObjects(svg) {
        return svg.getAttributeNS(Chartist.namespaces.xmlns, 'ct');
      }).forEach(function removePreviousElement(svg) {
        container.removeChild(svg);
      }); // Create svg object with width and height or use 100% as default

      svg = new Chartist.Svg('svg').attr({
        width: width,
        height: height
      }).addClass(className);
      svg._node.style.width = width;
      svg._node.style.height = height; // Add the DOM node to our container

      container.appendChild(svg._node);
      return svg;
    };
    /**
     * Ensures that the data object passed as second argument to the charts is present and correctly initialized.
     *
     * @param  {Object} data The data object that is passed as second argument to the charts
     * @return {Object} The normalized data object
     */


    Chartist.normalizeData = function (data, reverse, multi) {
      var labelCount;
      var output = {
        raw: data,
        normalized: {}
      }; // Check if we should generate some labels based on existing series data

      output.normalized.series = Chartist.getDataArray({
        series: data.series || []
      }, reverse, multi); // If all elements of the normalized data array are arrays we're dealing with
      // multi series data and we need to find the largest series if they are un-even

      if (output.normalized.series.every(function (value) {
        return value instanceof Array;
      })) {
        // Getting the series with the the most elements
        labelCount = Math.max.apply(null, output.normalized.series.map(function (series) {
          return series.length;
        }));
      } else {
        // We're dealing with Pie data so we just take the normalized array length
        labelCount = output.normalized.series.length;
      }

      output.normalized.labels = (data.labels || []).slice(); // Padding the labels to labelCount with empty strings

      Array.prototype.push.apply(output.normalized.labels, Chartist.times(Math.max(0, labelCount - output.normalized.labels.length)).map(function () {
        return '';
      }));

      if (reverse) {
        Chartist.reverseData(output.normalized);
      }

      return output;
    };
    /**
     * This function safely checks if an objects has an owned property.
     *
     * @param {Object} object The object where to check for a property
     * @param {string} property The property name
     * @returns {boolean} Returns true if the object owns the specified property
     */


    Chartist.safeHasProperty = function (object, property) {
      return object !== null && typeof object === 'object' && object.hasOwnProperty(property);
    };
    /**
     * Checks if a value is considered a hole in the data series.
     *
     * @param {*} value
     * @returns {boolean} True if the value is considered a data hole
     */


    Chartist.isDataHoleValue = function (value) {
      return value === null || value === undefined || typeof value === 'number' && isNaN(value);
    };
    /**
     * Reverses the series, labels and series data arrays.
     *
     * @memberof Chartist.Core
     * @param data
     */


    Chartist.reverseData = function (data) {
      data.labels.reverse();
      data.series.reverse();

      for (var i = 0; i < data.series.length; i++) {
        if (typeof data.series[i] === 'object' && data.series[i].data !== undefined) {
          data.series[i].data.reverse();
        } else if (data.series[i] instanceof Array) {
          data.series[i].reverse();
        }
      }
    };
    /**
     * Convert data series into plain array
     *
     * @memberof Chartist.Core
     * @param {Object} data The series object that contains the data to be visualized in the chart
     * @param {Boolean} [reverse] If true the whole data is reversed by the getDataArray call. This will modify the data object passed as first parameter. The labels as well as the series order is reversed. The whole series data arrays are reversed too.
     * @param {Boolean} [multi] Create a multi dimensional array from a series data array where a value object with `x` and `y` values will be created.
     * @return {Array} A plain array that contains the data to be visualized in the chart
     */


    Chartist.getDataArray = function (data, reverse, multi) {
      // Recursively walks through nested arrays and convert string values to numbers and objects with value properties
      // to values. Check the tests in data core -> data normalization for a detailed specification of expected values
      function recursiveConvert(value) {
        if (Chartist.safeHasProperty(value, 'value')) {
          // We are dealing with value object notation so we need to recurse on value property
          return recursiveConvert(value.value);
        } else if (Chartist.safeHasProperty(value, 'data')) {
          // We are dealing with series object notation so we need to recurse on data property
          return recursiveConvert(value.data);
        } else if (value instanceof Array) {
          // Data is of type array so we need to recurse on the series
          return value.map(recursiveConvert);
        } else if (Chartist.isDataHoleValue(value)) {
          // We're dealing with a hole in the data and therefore need to return undefined
          // We're also returning undefined for multi value output
          return undefined;
        } else {
          // We need to prepare multi value output (x and y data)
          if (multi) {
            var multiValue = {}; // Single series value arrays are assumed to specify the Y-Axis value
            // For example: [1, 2] => [{x: undefined, y: 1}, {x: undefined, y: 2}]
            // If multi is a string then it's assumed that it specified which dimension should be filled as default

            if (typeof multi === 'string') {
              multiValue[multi] = Chartist.getNumberOrUndefined(value);
            } else {
              multiValue.y = Chartist.getNumberOrUndefined(value);
            }

            multiValue.x = value.hasOwnProperty('x') ? Chartist.getNumberOrUndefined(value.x) : multiValue.x;
            multiValue.y = value.hasOwnProperty('y') ? Chartist.getNumberOrUndefined(value.y) : multiValue.y;
            return multiValue;
          } else {
            // We can return simple data
            return Chartist.getNumberOrUndefined(value);
          }
        }
      }

      return data.series.map(recursiveConvert);
    };
    /**
     * Converts a number into a padding object.
     *
     * @memberof Chartist.Core
     * @param {Object|Number} padding
     * @param {Number} [fallback] This value is used to fill missing values if a incomplete padding object was passed
     * @returns {Object} Returns a padding object containing top, right, bottom, left properties filled with the padding number passed in as argument. If the argument is something else than a number (presumably already a correct padding object) then this argument is directly returned.
     */


    Chartist.normalizePadding = function (padding, fallback) {
      fallback = fallback || 0;
      return typeof padding === 'number' ? {
        top: padding,
        right: padding,
        bottom: padding,
        left: padding
      } : {
        top: typeof padding.top === 'number' ? padding.top : fallback,
        right: typeof padding.right === 'number' ? padding.right : fallback,
        bottom: typeof padding.bottom === 'number' ? padding.bottom : fallback,
        left: typeof padding.left === 'number' ? padding.left : fallback
      };
    };

    Chartist.getMetaData = function (series, index) {
      var value = series.data ? series.data[index] : series[index];
      return value ? value.meta : undefined;
    };
    /**
     * Calculate the order of magnitude for the chart scale
     *
     * @memberof Chartist.Core
     * @param {Number} value The value Range of the chart
     * @return {Number} The order of magnitude
     */


    Chartist.orderOfMagnitude = function (value) {
      return Math.floor(Math.log(Math.abs(value)) / Math.LN10);
    };
    /**
     * Project a data length into screen coordinates (pixels)
     *
     * @memberof Chartist.Core
     * @param {Object} axisLength The svg element for the chart
     * @param {Number} length Single data value from a series array
     * @param {Object} bounds All the values to set the bounds of the chart
     * @return {Number} The projected data length in pixels
     */


    Chartist.projectLength = function (axisLength, length, bounds) {
      return length / bounds.range * axisLength;
    };
    /**
     * Get the height of the area in the chart for the data series
     *
     * @memberof Chartist.Core
     * @param {Object} svg The svg element for the chart
     * @param {Object} options The Object that contains all the optional values for the chart
     * @return {Number} The height of the area in the chart for the data series
     */


    Chartist.getAvailableHeight = function (svg, options) {
      return Math.max((Chartist.quantity(options.height).value || svg.height()) - (options.chartPadding.top + options.chartPadding.bottom) - options.axisX.offset, 0);
    };
    /**
     * Get highest and lowest value of data array. This Array contains the data that will be visualized in the chart.
     *
     * @memberof Chartist.Core
     * @param {Array} data The array that contains the data to be visualized in the chart
     * @param {Object} options The Object that contains the chart options
     * @param {String} dimension Axis dimension 'x' or 'y' used to access the correct value and high / low configuration
     * @return {Object} An object that contains the highest and lowest value that will be visualized on the chart.
     */


    Chartist.getHighLow = function (data, options, dimension) {
      // TODO: Remove workaround for deprecated global high / low config. Axis high / low configuration is preferred
      options = Chartist.extend({}, options, dimension ? options['axis' + dimension.toUpperCase()] : {});
      var highLow = {
        high: options.high === undefined ? -Number.MAX_VALUE : +options.high,
        low: options.low === undefined ? Number.MAX_VALUE : +options.low
      };
      var findHigh = options.high === undefined;
      var findLow = options.low === undefined; // Function to recursively walk through arrays and find highest and lowest number

      function recursiveHighLow(data) {
        if (data === undefined) {
          return undefined;
        } else if (data instanceof Array) {
          for (var i = 0; i < data.length; i++) {
            recursiveHighLow(data[i]);
          }
        } else {
          var value = dimension ? +data[dimension] : +data;

          if (findHigh && value > highLow.high) {
            highLow.high = value;
          }

          if (findLow && value < highLow.low) {
            highLow.low = value;
          }
        }
      } // Start to find highest and lowest number recursively


      if (findHigh || findLow) {
        recursiveHighLow(data);
      } // Overrides of high / low based on reference value, it will make sure that the invisible reference value is
      // used to generate the chart. This is useful when the chart always needs to contain the position of the
      // invisible reference value in the view i.e. for bipolar scales.


      if (options.referenceValue || options.referenceValue === 0) {
        highLow.high = Math.max(options.referenceValue, highLow.high);
        highLow.low = Math.min(options.referenceValue, highLow.low);
      } // If high and low are the same because of misconfiguration or flat data (only the same value) we need
      // to set the high or low to 0 depending on the polarity


      if (highLow.high <= highLow.low) {
        // If both values are 0 we set high to 1
        if (highLow.low === 0) {
          highLow.high = 1;
        } else if (highLow.low < 0) {
          // If we have the same negative value for the bounds we set bounds.high to 0
          highLow.high = 0;
        } else if (highLow.high > 0) {
          // If we have the same positive value for the bounds we set bounds.low to 0
          highLow.low = 0;
        } else {
          // If data array was empty, values are Number.MAX_VALUE and -Number.MAX_VALUE. Set bounds to prevent errors
          highLow.high = 1;
          highLow.low = 0;
        }
      }

      return highLow;
    };
    /**
     * Checks if a value can be safely coerced to a number. This includes all values except null which result in finite numbers when coerced. This excludes NaN, since it's not finite.
     *
     * @memberof Chartist.Core
     * @param value
     * @returns {Boolean}
     */


    Chartist.isNumeric = function (value) {
      return value === null ? false : isFinite(value);
    };
    /**
     * Returns true on all falsey values except the numeric value 0.
     *
     * @memberof Chartist.Core
     * @param value
     * @returns {boolean}
     */


    Chartist.isFalseyButZero = function (value) {
      return !value && value !== 0;
    };
    /**
     * Returns a number if the passed parameter is a valid number or the function will return undefined. On all other values than a valid number, this function will return undefined.
     *
     * @memberof Chartist.Core
     * @param value
     * @returns {*}
     */


    Chartist.getNumberOrUndefined = function (value) {
      return Chartist.isNumeric(value) ? +value : undefined;
    };
    /**
     * Checks if provided value object is multi value (contains x or y properties)
     *
     * @memberof Chartist.Core
     * @param value
     */


    Chartist.isMultiValue = function (value) {
      return typeof value === 'object' && ('x' in value || 'y' in value);
    };
    /**
     * Gets a value from a dimension `value.x` or `value.y` while returning value directly if it's a valid numeric value. If the value is not numeric and it's falsey this function will return `defaultValue`.
     *
     * @memberof Chartist.Core
     * @param value
     * @param dimension
     * @param defaultValue
     * @returns {*}
     */


    Chartist.getMultiValue = function (value, dimension) {
      if (Chartist.isMultiValue(value)) {
        return Chartist.getNumberOrUndefined(value[dimension || 'y']);
      } else {
        return Chartist.getNumberOrUndefined(value);
      }
    };
    /**
     * Pollard Rho Algorithm to find smallest factor of an integer value. There are more efficient algorithms for factorization, but this one is quite efficient and not so complex.
     *
     * @memberof Chartist.Core
     * @param {Number} num An integer number where the smallest factor should be searched for
     * @returns {Number} The smallest integer factor of the parameter num.
     */


    Chartist.rho = function (num) {
      if (num === 1) {
        return num;
      }

      function gcd(p, q) {
        if (p % q === 0) {
          return q;
        } else {
          return gcd(q, p % q);
        }
      }

      function f(x) {
        return x * x + 1;
      }

      var x1 = 2,
          x2 = 2,
          divisor;

      if (num % 2 === 0) {
        return 2;
      }

      do {
        x1 = f(x1) % num;
        x2 = f(f(x2)) % num;
        divisor = gcd(Math.abs(x1 - x2), num);
      } while (divisor === 1);

      return divisor;
    };
    /**
     * Calculate and retrieve all the bounds for the chart and return them in one array
     *
     * @memberof Chartist.Core
     * @param {Number} axisLength The length of the Axis used for
     * @param {Object} highLow An object containing a high and low property indicating the value range of the chart.
     * @param {Number} scaleMinSpace The minimum projected length a step should result in
     * @param {Boolean} onlyInteger
     * @return {Object} All the values to set the bounds of the chart
     */


    Chartist.getBounds = function (axisLength, highLow, scaleMinSpace, onlyInteger) {
      var i,
          optimizationCounter = 0,
          newMin,
          newMax,
          bounds = {
        high: highLow.high,
        low: highLow.low
      };
      bounds.valueRange = bounds.high - bounds.low;
      bounds.oom = Chartist.orderOfMagnitude(bounds.valueRange);
      bounds.step = Math.pow(10, bounds.oom);
      bounds.min = Math.floor(bounds.low / bounds.step) * bounds.step;
      bounds.max = Math.ceil(bounds.high / bounds.step) * bounds.step;
      bounds.range = bounds.max - bounds.min;
      bounds.numberOfSteps = Math.round(bounds.range / bounds.step); // Optimize scale step by checking if subdivision is possible based on horizontalGridMinSpace
      // If we are already below the scaleMinSpace value we will scale up

      var length = Chartist.projectLength(axisLength, bounds.step, bounds);
      var scaleUp = length < scaleMinSpace;
      var smallestFactor = onlyInteger ? Chartist.rho(bounds.range) : 0; // First check if we should only use integer steps and if step 1 is still larger than scaleMinSpace so we can use 1

      if (onlyInteger && Chartist.projectLength(axisLength, 1, bounds) >= scaleMinSpace) {
        bounds.step = 1;
      } else if (onlyInteger && smallestFactor < bounds.step && Chartist.projectLength(axisLength, smallestFactor, bounds) >= scaleMinSpace) {
        // If step 1 was too small, we can try the smallest factor of range
        // If the smallest factor is smaller than the current bounds.step and the projected length of smallest factor
        // is larger than the scaleMinSpace we should go for it.
        bounds.step = smallestFactor;
      } else {
        // Trying to divide or multiply by 2 and find the best step value
        while (true) {
          if (scaleUp && Chartist.projectLength(axisLength, bounds.step, bounds) <= scaleMinSpace) {
            bounds.step *= 2;
          } else if (!scaleUp && Chartist.projectLength(axisLength, bounds.step / 2, bounds) >= scaleMinSpace) {
            bounds.step /= 2;

            if (onlyInteger && bounds.step % 1 !== 0) {
              bounds.step *= 2;
              break;
            }
          } else {
            break;
          }

          if (optimizationCounter++ > 1000) {
            throw new Error('Exceeded maximum number of iterations while optimizing scale step!');
          }
        }
      }

      var EPSILON = 2.221E-16;
      bounds.step = Math.max(bounds.step, EPSILON);

      function safeIncrement(value, increment) {
        // If increment is too small use *= (1+EPSILON) as a simple nextafter
        if (value === (value += increment)) {
          value *= 1 + (increment > 0 ? EPSILON : -EPSILON);
        }

        return value;
      } // Narrow min and max based on new step


      newMin = bounds.min;
      newMax = bounds.max;

      while (newMin + bounds.step <= bounds.low) {
        newMin = safeIncrement(newMin, bounds.step);
      }

      while (newMax - bounds.step >= bounds.high) {
        newMax = safeIncrement(newMax, -bounds.step);
      }

      bounds.min = newMin;
      bounds.max = newMax;
      bounds.range = bounds.max - bounds.min;
      var values = [];

      for (i = bounds.min; i <= bounds.max; i = safeIncrement(i, bounds.step)) {
        var value = Chartist.roundWithPrecision(i);

        if (value !== values[values.length - 1]) {
          values.push(value);
        }
      }

      bounds.values = values;
      return bounds;
    };
    /**
     * Calculate cartesian coordinates of polar coordinates
     *
     * @memberof Chartist.Core
     * @param {Number} centerX X-axis coordinates of center point of circle segment
     * @param {Number} centerY X-axis coordinates of center point of circle segment
     * @param {Number} radius Radius of circle segment
     * @param {Number} angleInDegrees Angle of circle segment in degrees
     * @return {{x:Number, y:Number}} Coordinates of point on circumference
     */


    Chartist.polarToCartesian = function (centerX, centerY, radius, angleInDegrees) {
      var angleInRadians = (angleInDegrees - 90) * Math.PI / 180.0;
      return {
        x: centerX + radius * Math.cos(angleInRadians),
        y: centerY + radius * Math.sin(angleInRadians)
      };
    };
    /**
     * Initialize chart drawing rectangle (area where chart is drawn) x1,y1 = bottom left / x2,y2 = top right
     *
     * @memberof Chartist.Core
     * @param {Object} svg The svg element for the chart
     * @param {Object} options The Object that contains all the optional values for the chart
     * @param {Number} [fallbackPadding] The fallback padding if partial padding objects are used
     * @return {Object} The chart rectangles coordinates inside the svg element plus the rectangles measurements
     */


    Chartist.createChartRect = function (svg, options, fallbackPadding) {
      var hasAxis = !!(options.axisX || options.axisY);
      var yAxisOffset = hasAxis ? options.axisY.offset : 0;
      var xAxisOffset = hasAxis ? options.axisX.offset : 0; // If width or height results in invalid value (including 0) we fallback to the unitless settings or even 0

      var width = svg.width() || Chartist.quantity(options.width).value || 0;
      var height = svg.height() || Chartist.quantity(options.height).value || 0;
      var normalizedPadding = Chartist.normalizePadding(options.chartPadding, fallbackPadding); // If settings were to small to cope with offset (legacy) and padding, we'll adjust

      width = Math.max(width, yAxisOffset + normalizedPadding.left + normalizedPadding.right);
      height = Math.max(height, xAxisOffset + normalizedPadding.top + normalizedPadding.bottom);
      var chartRect = {
        padding: normalizedPadding,
        width: function width() {
          return this.x2 - this.x1;
        },
        height: function height() {
          return this.y1 - this.y2;
        }
      };

      if (hasAxis) {
        if (options.axisX.position === 'start') {
          chartRect.y2 = normalizedPadding.top + xAxisOffset;
          chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);
        } else {
          chartRect.y2 = normalizedPadding.top;
          chartRect.y1 = Math.max(height - normalizedPadding.bottom - xAxisOffset, chartRect.y2 + 1);
        }

        if (options.axisY.position === 'start') {
          chartRect.x1 = normalizedPadding.left + yAxisOffset;
          chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);
        } else {
          chartRect.x1 = normalizedPadding.left;
          chartRect.x2 = Math.max(width - normalizedPadding.right - yAxisOffset, chartRect.x1 + 1);
        }
      } else {
        chartRect.x1 = normalizedPadding.left;
        chartRect.x2 = Math.max(width - normalizedPadding.right, chartRect.x1 + 1);
        chartRect.y2 = normalizedPadding.top;
        chartRect.y1 = Math.max(height - normalizedPadding.bottom, chartRect.y2 + 1);
      }

      return chartRect;
    };
    /**
     * Creates a grid line based on a projected value.
     *
     * @memberof Chartist.Core
     * @param position
     * @param index
     * @param axis
     * @param offset
     * @param length
     * @param group
     * @param classes
     * @param eventEmitter
     */


    Chartist.createGrid = function (position, index, axis, offset, length, group, classes, eventEmitter) {
      var positionalData = {};
      positionalData[axis.units.pos + '1'] = position;
      positionalData[axis.units.pos + '2'] = position;
      positionalData[axis.counterUnits.pos + '1'] = offset;
      positionalData[axis.counterUnits.pos + '2'] = offset + length;
      var gridElement = group.elem('line', positionalData, classes.join(' ')); // Event for grid draw

      eventEmitter.emit('draw', Chartist.extend({
        type: 'grid',
        axis: axis,
        index: index,
        group: group,
        element: gridElement
      }, positionalData));
    };
    /**
     * Creates a grid background rect and emits the draw event.
     *
     * @memberof Chartist.Core
     * @param gridGroup
     * @param chartRect
     * @param className
     * @param eventEmitter
     */


    Chartist.createGridBackground = function (gridGroup, chartRect, className, eventEmitter) {
      var gridBackground = gridGroup.elem('rect', {
        x: chartRect.x1,
        y: chartRect.y2,
        width: chartRect.width(),
        height: chartRect.height()
      }, className, true); // Event for grid background draw

      eventEmitter.emit('draw', {
        type: 'gridBackground',
        group: gridGroup,
        element: gridBackground
      });
    };
    /**
     * Creates a label based on a projected value and an axis.
     *
     * @memberof Chartist.Core
     * @param position
     * @param length
     * @param index
     * @param labels
     * @param axis
     * @param axisOffset
     * @param labelOffset
     * @param group
     * @param classes
     * @param useForeignObject
     * @param eventEmitter
     */


    Chartist.createLabel = function (position, length, index, labels, axis, axisOffset, labelOffset, group, classes, useForeignObject, eventEmitter) {
      var labelElement;
      var positionalData = {};
      positionalData[axis.units.pos] = position + labelOffset[axis.units.pos];
      positionalData[axis.counterUnits.pos] = labelOffset[axis.counterUnits.pos];
      positionalData[axis.units.len] = length;
      positionalData[axis.counterUnits.len] = Math.max(0, axisOffset - 10);

      if (useForeignObject) {
        // We need to set width and height explicitly to px as span will not expand with width and height being
        // 100% in all browsers
        var content = document.createElement('span');
        content.className = classes.join(' ');
        content.setAttribute('xmlns', Chartist.namespaces.xhtml);
        content.innerText = labels[index];
        content.style[axis.units.len] = Math.round(positionalData[axis.units.len]) + 'px';
        content.style[axis.counterUnits.len] = Math.round(positionalData[axis.counterUnits.len]) + 'px';
        labelElement = group.foreignObject(content, Chartist.extend({
          style: 'overflow: visible;'
        }, positionalData));
      } else {
        labelElement = group.elem('text', positionalData, classes.join(' ')).text(labels[index]);
      }

      eventEmitter.emit('draw', Chartist.extend({
        type: 'label',
        axis: axis,
        index: index,
        group: group,
        element: labelElement,
        text: labels[index]
      }, positionalData));
    };
    /**
     * Helper to read series specific options from options object. It automatically falls back to the global option if
     * there is no option in the series options.
     *
     * @param {Object} series Series object
     * @param {Object} options Chartist options object
     * @param {string} key The options key that should be used to obtain the options
     * @returns {*}
     */


    Chartist.getSeriesOption = function (series, options, key) {
      if (series.name && options.series && options.series[series.name]) {
        var seriesOptions = options.series[series.name];
        return seriesOptions.hasOwnProperty(key) ? seriesOptions[key] : options[key];
      } else {
        return options[key];
      }
    };
    /**
     * Provides options handling functionality with callback for options changes triggered by responsive options and media query matches
     *
     * @memberof Chartist.Core
     * @param {Object} options Options set by user
     * @param {Array} responsiveOptions Optional functions to add responsive behavior to chart
     * @param {Object} eventEmitter The event emitter that will be used to emit the options changed events
     * @return {Object} The consolidated options object from the defaults, base and matching responsive options
     */


    Chartist.optionsProvider = function (options, responsiveOptions, eventEmitter) {
      var baseOptions = Chartist.extend({}, options),
          currentOptions,
          mediaQueryListeners = [],
          i;

      function updateCurrentOptions(mediaEvent) {
        var previousOptions = currentOptions;
        currentOptions = Chartist.extend({}, baseOptions);

        if (responsiveOptions) {
          for (i = 0; i < responsiveOptions.length; i++) {
            var mql = window.matchMedia(responsiveOptions[i][0]);

            if (mql.matches) {
              currentOptions = Chartist.extend(currentOptions, responsiveOptions[i][1]);
            }
          }
        }

        if (eventEmitter && mediaEvent) {
          eventEmitter.emit('optionsChanged', {
            previousOptions: previousOptions,
            currentOptions: currentOptions
          });
        }
      }

      function removeMediaQueryListeners() {
        mediaQueryListeners.forEach(function (mql) {
          mql.removeListener(updateCurrentOptions);
        });
      }

      if (!window.matchMedia) {
        throw 'window.matchMedia not found! Make sure you\'re using a polyfill.';
      } else if (responsiveOptions) {
        for (i = 0; i < responsiveOptions.length; i++) {
          var mql = window.matchMedia(responsiveOptions[i][0]);
          mql.addListener(updateCurrentOptions);
          mediaQueryListeners.push(mql);
        }
      } // Execute initially without an event argument so we get the correct options


      updateCurrentOptions();
      return {
        removeMediaQueryListeners: removeMediaQueryListeners,
        getCurrentOptions: function getCurrentOptions() {
          return Chartist.extend({}, currentOptions);
        }
      };
    };
    /**
     * Splits a list of coordinates and associated values into segments. Each returned segment contains a pathCoordinates
     * valueData property describing the segment.
     *
     * With the default options, segments consist of contiguous sets of points that do not have an undefined value. Any
     * points with undefined values are discarded.
     *
     * **Options**
     * The following options are used to determine how segments are formed
     * ```javascript
     * var options = {
     *   // If fillHoles is true, undefined values are simply discarded without creating a new segment. Assuming other options are default, this returns single segment.
     *   fillHoles: false,
     *   // If increasingX is true, the coordinates in all segments have strictly increasing x-values.
     *   increasingX: false
     * };
     * ```
     *
     * @memberof Chartist.Core
     * @param {Array} pathCoordinates List of point coordinates to be split in the form [x1, y1, x2, y2 ... xn, yn]
     * @param {Array} values List of associated point values in the form [v1, v2 .. vn]
     * @param {Object} options Options set by user
     * @return {Array} List of segments, each containing a pathCoordinates and valueData property.
     */


    Chartist.splitIntoSegments = function (pathCoordinates, valueData, options) {
      var defaultOptions = {
        increasingX: false,
        fillHoles: false
      };
      options = Chartist.extend({}, defaultOptions, options);
      var segments = [];
      var hole = true;

      for (var i = 0; i < pathCoordinates.length; i += 2) {
        // If this value is a "hole" we set the hole flag
        if (Chartist.getMultiValue(valueData[i / 2].value) === undefined) {
          // if(valueData[i / 2].value === undefined) {
          if (!options.fillHoles) {
            hole = true;
          }
        } else {
          if (options.increasingX && i >= 2 && pathCoordinates[i] <= pathCoordinates[i - 2]) {
            // X is not increasing, so we need to make sure we start a new segment
            hole = true;
          } // If it's a valid value we need to check if we're coming out of a hole and create a new empty segment


          if (hole) {
            segments.push({
              pathCoordinates: [],
              valueData: []
            }); // As we have a valid value now, we are not in a "hole" anymore

            hole = false;
          } // Add to the segment pathCoordinates and valueData


          segments[segments.length - 1].pathCoordinates.push(pathCoordinates[i], pathCoordinates[i + 1]);
          segments[segments.length - 1].valueData.push(valueData[i / 2]);
        }
      }

      return segments;
    };
  })(this || global, Chartist);

  ;
  /**
  * Chartist path interpolation functions.
  *
  * @module Chartist.Interpolation
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    Chartist.Interpolation = {};
    /**
     * This interpolation function does not smooth the path and the result is only containing lines and no curves.
     *
     * @example
     * var chart = new Chartist.Line('.ct-chart', {
     *   labels: [1, 2, 3, 4, 5],
     *   series: [[1, 2, 8, 1, 7]]
     * }, {
     *   lineSmooth: Chartist.Interpolation.none({
     *     fillHoles: false
     *   })
     * });
     *
     *
     * @memberof Chartist.Interpolation
     * @return {Function}
     */

    Chartist.Interpolation.none = function (options) {
      var defaultOptions = {
        fillHoles: false
      };
      options = Chartist.extend({}, defaultOptions, options);
      return function none(pathCoordinates, valueData) {
        var path = new Chartist.Svg.Path();
        var hole = true;

        for (var i = 0; i < pathCoordinates.length; i += 2) {
          var currX = pathCoordinates[i];
          var currY = pathCoordinates[i + 1];
          var currData = valueData[i / 2];

          if (Chartist.getMultiValue(currData.value) !== undefined) {
            if (hole) {
              path.move(currX, currY, false, currData);
            } else {
              path.line(currX, currY, false, currData);
            }

            hole = false;
          } else if (!options.fillHoles) {
            hole = true;
          }
        }

        return path;
      };
    };
    /**
     * Simple smoothing creates horizontal handles that are positioned with a fraction of the length between two data points. You can use the divisor option to specify the amount of smoothing.
     *
     * Simple smoothing can be used instead of `Chartist.Smoothing.cardinal` if you'd like to get rid of the artifacts it produces sometimes. Simple smoothing produces less flowing lines but is accurate by hitting the points and it also doesn't swing below or above the given data point.
     *
     * All smoothing functions within Chartist are factory functions that accept an options parameter. The simple interpolation function accepts one configuration parameter `divisor`, between 1 and ∞, which controls the smoothing characteristics.
     *
     * @example
     * var chart = new Chartist.Line('.ct-chart', {
     *   labels: [1, 2, 3, 4, 5],
     *   series: [[1, 2, 8, 1, 7]]
     * }, {
     *   lineSmooth: Chartist.Interpolation.simple({
     *     divisor: 2,
     *     fillHoles: false
     *   })
     * });
     *
     *
     * @memberof Chartist.Interpolation
     * @param {Object} options The options of the simple interpolation factory function.
     * @return {Function}
     */


    Chartist.Interpolation.simple = function (options) {
      var defaultOptions = {
        divisor: 2,
        fillHoles: false
      };
      options = Chartist.extend({}, defaultOptions, options);
      var d = 1 / Math.max(1, options.divisor);
      return function simple(pathCoordinates, valueData) {
        var path = new Chartist.Svg.Path();
        var prevX, prevY, prevData;

        for (var i = 0; i < pathCoordinates.length; i += 2) {
          var currX = pathCoordinates[i];
          var currY = pathCoordinates[i + 1];
          var length = (currX - prevX) * d;
          var currData = valueData[i / 2];

          if (currData.value !== undefined) {
            if (prevData === undefined) {
              path.move(currX, currY, false, currData);
            } else {
              path.curve(prevX + length, prevY, currX - length, currY, currX, currY, false, currData);
            }

            prevX = currX;
            prevY = currY;
            prevData = currData;
          } else if (!options.fillHoles) {
            prevX = currX = prevData = undefined;
          }
        }

        return path;
      };
    };
    /**
     * Cardinal / Catmull-Rome spline interpolation is the default smoothing function in Chartist. It produces nice results where the splines will always meet the points. It produces some artifacts though when data values are increased or decreased rapidly. The line may not follow a very accurate path and if the line should be accurate this smoothing function does not produce the best results.
     *
     * Cardinal splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.
     *
     * All smoothing functions within Chartist are factory functions that accept an options parameter. The cardinal interpolation function accepts one configuration parameter `tension`, between 0 and 1, which controls the smoothing intensity.
     *
     * @example
     * var chart = new Chartist.Line('.ct-chart', {
     *   labels: [1, 2, 3, 4, 5],
     *   series: [[1, 2, 8, 1, 7]]
     * }, {
     *   lineSmooth: Chartist.Interpolation.cardinal({
     *     tension: 1,
     *     fillHoles: false
     *   })
     * });
     *
     * @memberof Chartist.Interpolation
     * @param {Object} options The options of the cardinal factory function.
     * @return {Function}
     */


    Chartist.Interpolation.cardinal = function (options) {
      var defaultOptions = {
        tension: 1,
        fillHoles: false
      };
      options = Chartist.extend({}, defaultOptions, options);
      var t = Math.min(1, Math.max(0, options.tension)),
          c = 1 - t;
      return function cardinal(pathCoordinates, valueData) {
        // First we try to split the coordinates into segments
        // This is necessary to treat "holes" in line charts
        var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {
          fillHoles: options.fillHoles
        });

        if (!segments.length) {
          // If there were no segments return 'Chartist.Interpolation.none'
          return Chartist.Interpolation.none()([]);
        } else if (segments.length > 1) {
          // If the split resulted in more that one segment we need to interpolate each segment individually and join them
          // afterwards together into a single path.
          var paths = []; // For each segment we will recurse the cardinal function

          segments.forEach(function (segment) {
            paths.push(cardinal(segment.pathCoordinates, segment.valueData));
          }); // Join the segment path data into a single path and return

          return Chartist.Svg.Path.join(paths);
        } else {
          // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first
          // segment
          pathCoordinates = segments[0].pathCoordinates;
          valueData = segments[0].valueData; // If less than two points we need to fallback to no smoothing

          if (pathCoordinates.length <= 4) {
            return Chartist.Interpolation.none()(pathCoordinates, valueData);
          }

          var path = new Chartist.Svg.Path().move(pathCoordinates[0], pathCoordinates[1], false, valueData[0]),
              z;

          for (var i = 0, iLen = pathCoordinates.length; iLen - 2 * !z > i; i += 2) {
            var p = [{
              x: +pathCoordinates[i - 2],
              y: +pathCoordinates[i - 1]
            }, {
              x: +pathCoordinates[i],
              y: +pathCoordinates[i + 1]
            }, {
              x: +pathCoordinates[i + 2],
              y: +pathCoordinates[i + 3]
            }, {
              x: +pathCoordinates[i + 4],
              y: +pathCoordinates[i + 5]
            }];

            if (z) {
              if (!i) {
                p[0] = {
                  x: +pathCoordinates[iLen - 2],
                  y: +pathCoordinates[iLen - 1]
                };
              } else if (iLen - 4 === i) {
                p[3] = {
                  x: +pathCoordinates[0],
                  y: +pathCoordinates[1]
                };
              } else if (iLen - 2 === i) {
                p[2] = {
                  x: +pathCoordinates[0],
                  y: +pathCoordinates[1]
                };
                p[3] = {
                  x: +pathCoordinates[2],
                  y: +pathCoordinates[3]
                };
              }
            } else {
              if (iLen - 4 === i) {
                p[3] = p[2];
              } else if (!i) {
                p[0] = {
                  x: +pathCoordinates[i],
                  y: +pathCoordinates[i + 1]
                };
              }
            }

            path.curve(t * (-p[0].x + 6 * p[1].x + p[2].x) / 6 + c * p[2].x, t * (-p[0].y + 6 * p[1].y + p[2].y) / 6 + c * p[2].y, t * (p[1].x + 6 * p[2].x - p[3].x) / 6 + c * p[2].x, t * (p[1].y + 6 * p[2].y - p[3].y) / 6 + c * p[2].y, p[2].x, p[2].y, false, valueData[(i + 2) / 2]);
          }

          return path;
        }
      };
    };
    /**
     * Monotone Cubic spline interpolation produces a smooth curve which preserves monotonicity. Unlike cardinal splines, the curve will not extend beyond the range of y-values of the original data points.
     *
     * Monotone Cubic splines can only be created if there are more than two data points. If this is not the case this smoothing will fallback to `Chartist.Smoothing.none`.
     *
     * The x-values of subsequent points must be increasing to fit a Monotone Cubic spline. If this condition is not met for a pair of adjacent points, then there will be a break in the curve between those data points.
     *
     * All smoothing functions within Chartist are factory functions that accept an options parameter.
     *
     * @example
     * var chart = new Chartist.Line('.ct-chart', {
     *   labels: [1, 2, 3, 4, 5],
     *   series: [[1, 2, 8, 1, 7]]
     * }, {
     *   lineSmooth: Chartist.Interpolation.monotoneCubic({
     *     fillHoles: false
     *   })
     * });
     *
     * @memberof Chartist.Interpolation
     * @param {Object} options The options of the monotoneCubic factory function.
     * @return {Function}
     */


    Chartist.Interpolation.monotoneCubic = function (options) {
      var defaultOptions = {
        fillHoles: false
      };
      options = Chartist.extend({}, defaultOptions, options);
      return function monotoneCubic(pathCoordinates, valueData) {
        // First we try to split the coordinates into segments
        // This is necessary to treat "holes" in line charts
        var segments = Chartist.splitIntoSegments(pathCoordinates, valueData, {
          fillHoles: options.fillHoles,
          increasingX: true
        });

        if (!segments.length) {
          // If there were no segments return 'Chartist.Interpolation.none'
          return Chartist.Interpolation.none()([]);
        } else if (segments.length > 1) {
          // If the split resulted in more that one segment we need to interpolate each segment individually and join them
          // afterwards together into a single path.
          var paths = []; // For each segment we will recurse the monotoneCubic fn function

          segments.forEach(function (segment) {
            paths.push(monotoneCubic(segment.pathCoordinates, segment.valueData));
          }); // Join the segment path data into a single path and return

          return Chartist.Svg.Path.join(paths);
        } else {
          // If there was only one segment we can proceed regularly by using pathCoordinates and valueData from the first
          // segment
          pathCoordinates = segments[0].pathCoordinates;
          valueData = segments[0].valueData; // If less than three points we need to fallback to no smoothing

          if (pathCoordinates.length <= 4) {
            return Chartist.Interpolation.none()(pathCoordinates, valueData);
          }

          var xs = [],
              ys = [],
              i,
              n = pathCoordinates.length / 2,
              ms = [],
              ds = [],
              dys = [],
              dxs = [],
              path; // Populate x and y coordinates into separate arrays, for readability

          for (i = 0; i < n; i++) {
            xs[i] = pathCoordinates[i * 2];
            ys[i] = pathCoordinates[i * 2 + 1];
          } // Calculate deltas and derivative


          for (i = 0; i < n - 1; i++) {
            dys[i] = ys[i + 1] - ys[i];
            dxs[i] = xs[i + 1] - xs[i];
            ds[i] = dys[i] / dxs[i];
          } // Determine desired slope (m) at each point using Fritsch-Carlson method
          // See: http://math.stackexchange.com/questions/45218/implementation-of-monotone-cubic-interpolation


          ms[0] = ds[0];
          ms[n - 1] = ds[n - 2];

          for (i = 1; i < n - 1; i++) {
            if (ds[i] === 0 || ds[i - 1] === 0 || ds[i - 1] > 0 !== ds[i] > 0) {
              ms[i] = 0;
            } else {
              ms[i] = 3 * (dxs[i - 1] + dxs[i]) / ((2 * dxs[i] + dxs[i - 1]) / ds[i - 1] + (dxs[i] + 2 * dxs[i - 1]) / ds[i]);

              if (!isFinite(ms[i])) {
                ms[i] = 0;
              }
            }
          } // Now build a path from the slopes


          path = new Chartist.Svg.Path().move(xs[0], ys[0], false, valueData[0]);

          for (i = 0; i < n - 1; i++) {
            path.curve( // First control point
            xs[i] + dxs[i] / 3, ys[i] + ms[i] * dxs[i] / 3, // Second control point
            xs[i + 1] - dxs[i] / 3, ys[i + 1] - ms[i + 1] * dxs[i] / 3, // End point
            xs[i + 1], ys[i + 1], false, valueData[i + 1]);
          }

          return path;
        }
      };
    };
    /**
     * Step interpolation will cause the line chart to move in steps rather than diagonal or smoothed lines. This interpolation will create additional points that will also be drawn when the `showPoint` option is enabled.
     *
     * All smoothing functions within Chartist are factory functions that accept an options parameter. The step interpolation function accepts one configuration parameter `postpone`, that can be `true` or `false`. The default value is `true` and will cause the step to occur where the value actually changes. If a different behaviour is needed where the step is shifted to the left and happens before the actual value, this option can be set to `false`.
     *
     * @example
     * var chart = new Chartist.Line('.ct-chart', {
     *   labels: [1, 2, 3, 4, 5],
     *   series: [[1, 2, 8, 1, 7]]
     * }, {
     *   lineSmooth: Chartist.Interpolation.step({
     *     postpone: true,
     *     fillHoles: false
     *   })
     * });
     *
     * @memberof Chartist.Interpolation
     * @param options
     * @returns {Function}
     */


    Chartist.Interpolation.step = function (options) {
      var defaultOptions = {
        postpone: true,
        fillHoles: false
      };
      options = Chartist.extend({}, defaultOptions, options);
      return function step(pathCoordinates, valueData) {
        var path = new Chartist.Svg.Path();
        var prevX, prevY, prevData;

        for (var i = 0; i < pathCoordinates.length; i += 2) {
          var currX = pathCoordinates[i];
          var currY = pathCoordinates[i + 1];
          var currData = valueData[i / 2]; // If the current point is also not a hole we can draw the step lines

          if (currData.value !== undefined) {
            if (prevData === undefined) {
              path.move(currX, currY, false, currData);
            } else {
              if (options.postpone) {
                // If postponed we should draw the step line with the value of the previous value
                path.line(currX, prevY, false, prevData);
              } else {
                // If not postponed we should draw the step line with the value of the current value
                path.line(prevX, currY, false, currData);
              } // Line to the actual point (this should only be a Y-Axis movement


              path.line(currX, currY, false, currData);
            }

            prevX = currX;
            prevY = currY;
            prevData = currData;
          } else if (!options.fillHoles) {
            prevX = prevY = prevData = undefined;
          }
        }

        return path;
      };
    };
  })(this || global, Chartist);

  ;
  /**
  * A very basic event module that helps to generate and catch events.
  *
  * @module Chartist.Event
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    Chartist.EventEmitter = function () {
      var handlers = [];
      /**
       * Add an event handler for a specific event
       *
       * @memberof Chartist.Event
       * @param {String} event The event name
       * @param {Function} handler A event handler function
       */

      function addEventHandler(event, handler) {
        handlers[event] = handlers[event] || [];
        handlers[event].push(handler);
      }
      /**
       * Remove an event handler of a specific event name or remove all event handlers for a specific event.
       *
       * @memberof Chartist.Event
       * @param {String} event The event name where a specific or all handlers should be removed
       * @param {Function} [handler] An optional event handler function. If specified only this specific handler will be removed and otherwise all handlers are removed.
       */


      function removeEventHandler(event, handler) {
        // Only do something if there are event handlers with this name existing
        if (handlers[event]) {
          // If handler is set we will look for a specific handler and only remove this
          if (handler) {
            handlers[event].splice(handlers[event].indexOf(handler), 1);

            if (handlers[event].length === 0) {
              delete handlers[event];
            }
          } else {
            // If no handler is specified we remove all handlers for this event
            delete handlers[event];
          }
        }
      }
      /**
       * Use this function to emit an event. All handlers that are listening for this event will be triggered with the data parameter.
       *
       * @memberof Chartist.Event
       * @param {String} event The event name that should be triggered
       * @param {*} data Arbitrary data that will be passed to the event handler callback functions
       */


      function emit(event, data) {
        // Only do something if there are event handlers with this name existing
        if (handlers[event]) {
          handlers[event].forEach(function (handler) {
            handler(data);
          });
        } // Emit event to star event handlers


        if (handlers['*']) {
          handlers['*'].forEach(function (starHandler) {
            starHandler(event, data);
          });
        }
      }

      return {
        addEventHandler: addEventHandler,
        removeEventHandler: removeEventHandler,
        emit: emit
      };
    };
  })(this || global, Chartist);

  ;
  /**
  * This module provides some basic prototype inheritance utilities.
  *
  * @module Chartist.Class
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    function listToArray(list) {
      var arr = [];

      if (list.length) {
        for (var i = 0; i < list.length; i++) {
          arr.push(list[i]);
        }
      }

      return arr;
    }
    /**
     * Method to extend from current prototype.
     *
     * @memberof Chartist.Class
     * @param {Object} properties The object that serves as definition for the prototype that gets created for the new class. This object should always contain a constructor property that is the desired constructor for the newly created class.
     * @param {Object} [superProtoOverride] By default extens will use the current class prototype or Chartist.class. With this parameter you can specify any super prototype that will be used.
     * @return {Function} Constructor function of the new class
     *
     * @example
     * var Fruit = Class.extend({
       * color: undefined,
       *   sugar: undefined,
       *
       *   constructor: function(color, sugar) {
       *     this.color = color;
       *     this.sugar = sugar;
       *   },
       *
       *   eat: function() {
       *     this.sugar = 0;
       *     return this;
       *   }
       * });
     *
     * var Banana = Fruit.extend({
       *   length: undefined,
       *
       *   constructor: function(length, sugar) {
       *     Banana.super.constructor.call(this, 'Yellow', sugar);
       *     this.length = length;
       *   }
       * });
     *
     * var banana = new Banana(20, 40);
     * console.log('banana instanceof Fruit', banana instanceof Fruit);
     * console.log('Fruit is prototype of banana', Fruit.prototype.isPrototypeOf(banana));
     * console.log('bananas prototype is Fruit', Object.getPrototypeOf(banana) === Fruit.prototype);
     * console.log(banana.sugar);
     * console.log(banana.eat().sugar);
     * console.log(banana.color);
     */


    function extend(properties, superProtoOverride) {
      var superProto = superProtoOverride || this.prototype || Chartist.Class;
      var proto = Object.create(superProto);
      Chartist.Class.cloneDefinitions(proto, properties);

      var constr = function constr() {
        var fn = proto.constructor || function () {},
            instance; // If this is linked to the Chartist namespace the constructor was not called with new
        // To provide a fallback we will instantiate here and return the instance


        instance = this === Chartist ? Object.create(proto) : this;
        fn.apply(instance, Array.prototype.slice.call(arguments, 0)); // If this constructor was not called with new we need to return the instance
        // This will not harm when the constructor has been called with new as the returned value is ignored

        return instance;
      };

      constr.prototype = proto;
      constr.super = superProto;
      constr.extend = this.extend;
      return constr;
    } // Variable argument list clones args > 0 into args[0] and retruns modified args[0]


    function cloneDefinitions() {
      var args = listToArray(arguments);
      var target = args[0];
      args.splice(1, args.length - 1).forEach(function (source) {
        Object.getOwnPropertyNames(source).forEach(function (propName) {
          // If this property already exist in target we delete it first
          delete target[propName]; // Define the property with the descriptor from source

          Object.defineProperty(target, propName, Object.getOwnPropertyDescriptor(source, propName));
        });
      });
      return target;
    }

    Chartist.Class = {
      extend: extend,
      cloneDefinitions: cloneDefinitions
    };
  })(this || global, Chartist);

  ;
  /**
  * Base for all chart types. The methods in Chartist.Base are inherited to all chart types.
  *
  * @module Chartist.Base
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window; // TODO: Currently we need to re-draw the chart on window resize. This is usually very bad and will affect performance.
    // This is done because we can't work with relative coordinates when drawing the chart because SVG Path does not
    // work with relative positions yet. We need to check if we can do a viewBox hack to switch to percentage.
    // See http://mozilla.6506.n7.nabble.com/Specyfing-paths-with-percentages-unit-td247474.html
    // Update: can be done using the above method tested here: http://codepen.io/gionkunz/pen/KDvLj
    // The problem is with the label offsets that can't be converted into percentage and affecting the chart container

    /**
     * Updates the chart which currently does a full reconstruction of the SVG DOM
     *
     * @param {Object} [data] Optional data you'd like to set for the chart before it will update. If not specified the update method will use the data that is already configured with the chart.
     * @param {Object} [options] Optional options you'd like to add to the previous options for the chart before it will update. If not specified the update method will use the options that have been already configured with the chart.
     * @param {Boolean} [override] If set to true, the passed options will be used to extend the options that have been configured already. Otherwise the chart default options will be used as the base
     * @memberof Chartist.Base
     */

    function update(data, options, override) {
      if (data) {
        this.data = data || {};
        this.data.labels = this.data.labels || [];
        this.data.series = this.data.series || []; // Event for data transformation that allows to manipulate the data before it gets rendered in the charts

        this.eventEmitter.emit('data', {
          type: 'update',
          data: this.data
        });
      }

      if (options) {
        this.options = Chartist.extend({}, override ? this.options : this.defaultOptions, options); // If chartist was not initialized yet, we just set the options and leave the rest to the initialization
        // Otherwise we re-create the optionsProvider at this point

        if (!this.initializeTimeoutId) {
          this.optionsProvider.removeMediaQueryListeners();
          this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter);
        }
      } // Only re-created the chart if it has been initialized yet


      if (!this.initializeTimeoutId) {
        this.createChart(this.optionsProvider.getCurrentOptions());
      } // Return a reference to the chart object to chain up calls


      return this;
    }
    /**
     * This method can be called on the API object of each chart and will un-register all event listeners that were added to other components. This currently includes a window.resize listener as well as media query listeners if any responsive options have been provided. Use this function if you need to destroy and recreate Chartist charts dynamically.
     *
     * @memberof Chartist.Base
     */


    function detach() {
      // Only detach if initialization already occurred on this chart. If this chart still hasn't initialized (therefore
      // the initializationTimeoutId is still a valid timeout reference, we will clear the timeout
      if (!this.initializeTimeoutId) {
        window.removeEventListener('resize', this.resizeListener);
        this.optionsProvider.removeMediaQueryListeners();
      } else {
        window.clearTimeout(this.initializeTimeoutId);
      }

      return this;
    }
    /**
     * Use this function to register event handlers. The handler callbacks are synchronous and will run in the main thread rather than the event loop.
     *
     * @memberof Chartist.Base
     * @param {String} event Name of the event. Check the examples for supported events.
     * @param {Function} handler The handler function that will be called when an event with the given name was emitted. This function will receive a data argument which contains event data. See the example for more details.
     */


    function on(event, handler) {
      this.eventEmitter.addEventHandler(event, handler);
      return this;
    }
    /**
     * Use this function to un-register event handlers. If the handler function parameter is omitted all handlers for the given event will be un-registered.
     *
     * @memberof Chartist.Base
     * @param {String} event Name of the event for which a handler should be removed
     * @param {Function} [handler] The handler function that that was previously used to register a new event handler. This handler will be removed from the event handler list. If this parameter is omitted then all event handlers for the given event are removed from the list.
     */


    function off(event, handler) {
      this.eventEmitter.removeEventHandler(event, handler);
      return this;
    }

    function initialize() {
      // Add window resize listener that re-creates the chart
      window.addEventListener('resize', this.resizeListener); // Obtain current options based on matching media queries (if responsive options are given)
      // This will also register a listener that is re-creating the chart based on media changes

      this.optionsProvider = Chartist.optionsProvider(this.options, this.responsiveOptions, this.eventEmitter); // Register options change listener that will trigger a chart update

      this.eventEmitter.addEventHandler('optionsChanged', function () {
        this.update();
      }.bind(this)); // Before the first chart creation we need to register us with all plugins that are configured
      // Initialize all relevant plugins with our chart object and the plugin options specified in the config

      if (this.options.plugins) {
        this.options.plugins.forEach(function (plugin) {
          if (plugin instanceof Array) {
            plugin[0](this, plugin[1]);
          } else {
            plugin(this);
          }
        }.bind(this));
      } // Event for data transformation that allows to manipulate the data before it gets rendered in the charts


      this.eventEmitter.emit('data', {
        type: 'initial',
        data: this.data
      }); // Create the first chart

      this.createChart(this.optionsProvider.getCurrentOptions()); // As chart is initialized from the event loop now we can reset our timeout reference
      // This is important if the chart gets initialized on the same element twice

      this.initializeTimeoutId = undefined;
    }
    /**
     * Constructor of chart base class.
     *
     * @param query
     * @param data
     * @param defaultOptions
     * @param options
     * @param responsiveOptions
     * @constructor
     */


    function Base(query, data, defaultOptions, options, responsiveOptions) {
      this.container = Chartist.querySelector(query);
      this.data = data || {};
      this.data.labels = this.data.labels || [];
      this.data.series = this.data.series || [];
      this.defaultOptions = defaultOptions;
      this.options = options;
      this.responsiveOptions = responsiveOptions;
      this.eventEmitter = Chartist.EventEmitter();
      this.supportsForeignObject = Chartist.Svg.isSupported('Extensibility');
      this.supportsAnimations = Chartist.Svg.isSupported('AnimationEventsAttribute');

      this.resizeListener = function resizeListener() {
        this.update();
      }.bind(this);

      if (this.container) {
        // If chartist was already initialized in this container we are detaching all event listeners first
        if (this.container.__chartist__) {
          this.container.__chartist__.detach();
        }

        this.container.__chartist__ = this;
      } // Using event loop for first draw to make it possible to register event listeners in the same call stack where
      // the chart was created.


      this.initializeTimeoutId = setTimeout(initialize.bind(this), 0);
    } // Creating the chart base class


    Chartist.Base = Chartist.Class.extend({
      constructor: Base,
      optionsProvider: undefined,
      container: undefined,
      svg: undefined,
      eventEmitter: undefined,
      createChart: function createChart() {
        throw new Error('Base chart type can\'t be instantiated!');
      },
      update: update,
      detach: detach,
      on: on,
      off: off,
      version: Chartist.version,
      supportsForeignObject: false
    });
  })(this || global, Chartist);

  ;
  /**
  * Chartist SVG module for simple SVG DOM abstraction
  *
  * @module Chartist.Svg
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var document = globalRoot.document;
    /**
     * Chartist.Svg creates a new SVG object wrapper with a starting element. You can use the wrapper to fluently create sub-elements and modify them.
     *
     * @memberof Chartist.Svg
     * @constructor
     * @param {String|Element} name The name of the SVG element to create or an SVG dom element which should be wrapped into Chartist.Svg
     * @param {Object} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.
     * @param {String} className This class or class list will be added to the SVG element
     * @param {Object} parent The parent SVG wrapper object where this newly created wrapper and it's element will be attached to as child
     * @param {Boolean} insertFirst If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element
     */

    function Svg(name, attributes, className, parent, insertFirst) {
      // If Svg is getting called with an SVG element we just return the wrapper
      if (name instanceof Element) {
        this._node = name;
      } else {
        this._node = document.createElementNS(Chartist.namespaces.svg, name); // If this is an SVG element created then custom namespace

        if (name === 'svg') {
          this.attr({
            'xmlns:ct': Chartist.namespaces.ct
          });
        }
      }

      if (attributes) {
        this.attr(attributes);
      }

      if (className) {
        this.addClass(className);
      }

      if (parent) {
        if (insertFirst && parent._node.firstChild) {
          parent._node.insertBefore(this._node, parent._node.firstChild);
        } else {
          parent._node.appendChild(this._node);
        }
      }
    }
    /**
     * Set attributes on the current SVG element of the wrapper you're currently working on.
     *
     * @memberof Chartist.Svg
     * @param {Object|String} attributes An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added. If this parameter is a String then the function is used as a getter and will return the attribute value.
     * @param {String} [ns] If specified, the attribute will be obtained using getAttributeNs. In order to write namepsaced attributes you can use the namespace:attribute notation within the attributes object.
     * @return {Object|String} The current wrapper object will be returned so it can be used for chaining or the attribute value if used as getter function.
     */


    function attr(attributes, ns) {
      if (typeof attributes === 'string') {
        if (ns) {
          return this._node.getAttributeNS(ns, attributes);
        } else {
          return this._node.getAttribute(attributes);
        }
      }

      Object.keys(attributes).forEach(function (key) {
        // If the attribute value is undefined we can skip this one
        if (attributes[key] === undefined) {
          return;
        }

        if (key.indexOf(':') !== -1) {
          var namespacedAttribute = key.split(':');

          this._node.setAttributeNS(Chartist.namespaces[namespacedAttribute[0]], key, attributes[key]);
        } else {
          this._node.setAttribute(key, attributes[key]);
        }
      }.bind(this));
      return this;
    }
    /**
     * Create a new SVG element whose wrapper object will be selected for further operations. This way you can also create nested groups easily.
     *
     * @memberof Chartist.Svg
     * @param {String} name The name of the SVG element that should be created as child element of the currently selected element wrapper
     * @param {Object} [attributes] An object with properties that will be added as attributes to the SVG element that is created. Attributes with undefined values will not be added.
     * @param {String} [className] This class or class list will be added to the SVG element
     * @param {Boolean} [insertFirst] If this param is set to true in conjunction with a parent element the newly created element will be added as first child element in the parent element
     * @return {Chartist.Svg} Returns a Chartist.Svg wrapper object that can be used to modify the containing SVG data
     */


    function elem(name, attributes, className, insertFirst) {
      return new Chartist.Svg(name, attributes, className, this, insertFirst);
    }
    /**
     * Returns the parent Chartist.SVG wrapper object
     *
     * @memberof Chartist.Svg
     * @return {Chartist.Svg} Returns a Chartist.Svg wrapper around the parent node of the current node. If the parent node is not existing or it's not an SVG node then this function will return null.
     */


    function parent() {
      return this._node.parentNode instanceof SVGElement ? new Chartist.Svg(this._node.parentNode) : null;
    }
    /**
     * This method returns a Chartist.Svg wrapper around the root SVG element of the current tree.
     *
     * @memberof Chartist.Svg
     * @return {Chartist.Svg} The root SVG element wrapped in a Chartist.Svg element
     */


    function root() {
      var node = this._node;

      while (node.nodeName !== 'svg') {
        node = node.parentNode;
      }

      return new Chartist.Svg(node);
    }
    /**
     * Find the first child SVG element of the current element that matches a CSS selector. The returned object is a Chartist.Svg wrapper.
     *
     * @memberof Chartist.Svg
     * @param {String} selector A CSS selector that is used to query for child SVG elements
     * @return {Chartist.Svg} The SVG wrapper for the element found or null if no element was found
     */


    function querySelector(selector) {
      var foundNode = this._node.querySelector(selector);

      return foundNode ? new Chartist.Svg(foundNode) : null;
    }
    /**
     * Find the all child SVG elements of the current element that match a CSS selector. The returned object is a Chartist.Svg.List wrapper.
     *
     * @memberof Chartist.Svg
     * @param {String} selector A CSS selector that is used to query for child SVG elements
     * @return {Chartist.Svg.List} The SVG wrapper list for the element found or null if no element was found
     */


    function querySelectorAll(selector) {
      var foundNodes = this._node.querySelectorAll(selector);

      return foundNodes.length ? new Chartist.Svg.List(foundNodes) : null;
    }
    /**
     * Returns the underlying SVG node for the current element.
     *
     * @memberof Chartist.Svg
     * @returns {Node}
     */


    function getNode() {
      return this._node;
    }
    /**
     * This method creates a foreignObject (see https://developer.mozilla.org/en-US/docs/Web/SVG/Element/foreignObject) that allows to embed HTML content into a SVG graphic. With the help of foreignObjects you can enable the usage of regular HTML elements inside of SVG where they are subject for SVG positioning and transformation but the Browser will use the HTML rendering capabilities for the containing DOM.
     *
     * @memberof Chartist.Svg
     * @param {Node|String} content The DOM Node, or HTML string that will be converted to a DOM Node, that is then placed into and wrapped by the foreignObject
     * @param {String} [attributes] An object with properties that will be added as attributes to the foreignObject element that is created. Attributes with undefined values will not be added.
     * @param {String} [className] This class or class list will be added to the SVG element
     * @param {Boolean} [insertFirst] Specifies if the foreignObject should be inserted as first child
     * @return {Chartist.Svg} New wrapper object that wraps the foreignObject element
     */


    function foreignObject(content, attributes, className, insertFirst) {
      // If content is string then we convert it to DOM
      // TODO: Handle case where content is not a string nor a DOM Node
      if (typeof content === 'string') {
        var container = document.createElement('div');
        container.innerHTML = content;
        content = container.firstChild;
      } // Adding namespace to content element


      content.setAttribute('xmlns', Chartist.namespaces.xmlns); // Creating the foreignObject without required extension attribute (as described here
      // http://www.w3.org/TR/SVG/extend.html#ForeignObjectElement)

      var fnObj = this.elem('foreignObject', attributes, className, insertFirst); // Add content to foreignObjectElement

      fnObj._node.appendChild(content);

      return fnObj;
    }
    /**
     * This method adds a new text element to the current Chartist.Svg wrapper.
     *
     * @memberof Chartist.Svg
     * @param {String} t The text that should be added to the text element that is created
     * @return {Chartist.Svg} The same wrapper object that was used to add the newly created element
     */


    function text(t) {
      this._node.appendChild(document.createTextNode(t));

      return this;
    }
    /**
     * This method will clear all child nodes of the current wrapper object.
     *
     * @memberof Chartist.Svg
     * @return {Chartist.Svg} The same wrapper object that got emptied
     */


    function empty() {
      while (this._node.firstChild) {
        this._node.removeChild(this._node.firstChild);
      }

      return this;
    }
    /**
     * This method will cause the current wrapper to remove itself from its parent wrapper. Use this method if you'd like to get rid of an element in a given DOM structure.
     *
     * @memberof Chartist.Svg
     * @return {Chartist.Svg} The parent wrapper object of the element that got removed
     */


    function remove() {
      this._node.parentNode.removeChild(this._node);

      return this.parent();
    }
    /**
     * This method will replace the element with a new element that can be created outside of the current DOM.
     *
     * @memberof Chartist.Svg
     * @param {Chartist.Svg} newElement The new Chartist.Svg object that will be used to replace the current wrapper object
     * @return {Chartist.Svg} The wrapper of the new element
     */


    function replace(newElement) {
      this._node.parentNode.replaceChild(newElement._node, this._node);

      return newElement;
    }
    /**
     * This method will append an element to the current element as a child.
     *
     * @memberof Chartist.Svg
     * @param {Chartist.Svg} element The Chartist.Svg element that should be added as a child
     * @param {Boolean} [insertFirst] Specifies if the element should be inserted as first child
     * @return {Chartist.Svg} The wrapper of the appended object
     */


    function append(element, insertFirst) {
      if (insertFirst && this._node.firstChild) {
        this._node.insertBefore(element._node, this._node.firstChild);
      } else {
        this._node.appendChild(element._node);
      }

      return this;
    }
    /**
     * Returns an array of class names that are attached to the current wrapper element. This method can not be chained further.
     *
     * @memberof Chartist.Svg
     * @return {Array} A list of classes or an empty array if there are no classes on the current element
     */


    function classes() {
      return this._node.getAttribute('class') ? this._node.getAttribute('class').trim().split(/\s+/) : [];
    }
    /**
     * Adds one or a space separated list of classes to the current element and ensures the classes are only existing once.
     *
     * @memberof Chartist.Svg
     * @param {String} names A white space separated list of class names
     * @return {Chartist.Svg} The wrapper of the current element
     */


    function addClass(names) {
      this._node.setAttribute('class', this.classes(this._node).concat(names.trim().split(/\s+/)).filter(function (elem, pos, self) {
        return self.indexOf(elem) === pos;
      }).join(' '));

      return this;
    }
    /**
     * Removes one or a space separated list of classes from the current element.
     *
     * @memberof Chartist.Svg
     * @param {String} names A white space separated list of class names
     * @return {Chartist.Svg} The wrapper of the current element
     */


    function removeClass(names) {
      var removedClasses = names.trim().split(/\s+/);

      this._node.setAttribute('class', this.classes(this._node).filter(function (name) {
        return removedClasses.indexOf(name) === -1;
      }).join(' '));

      return this;
    }
    /**
     * Removes all classes from the current element.
     *
     * @memberof Chartist.Svg
     * @return {Chartist.Svg} The wrapper of the current element
     */


    function removeAllClasses() {
      this._node.setAttribute('class', '');

      return this;
    }
    /**
     * Get element height using `getBoundingClientRect`
     *
     * @memberof Chartist.Svg
     * @return {Number} The elements height in pixels
     */


    function height() {
      return this._node.getBoundingClientRect().height;
    }
    /**
     * Get element width using `getBoundingClientRect`
     *
     * @memberof Chartist.Core
     * @return {Number} The elements width in pixels
     */


    function width() {
      return this._node.getBoundingClientRect().width;
    }
    /**
     * The animate function lets you animate the current element with SMIL animations. You can add animations for multiple attributes at the same time by using an animation definition object. This object should contain SMIL animation attributes. Please refer to http://www.w3.org/TR/SVG/animate.html for a detailed specification about the available animation attributes. Additionally an easing property can be passed in the animation definition object. This can be a string with a name of an easing function in `Chartist.Svg.Easing` or an array with four numbers specifying a cubic Bézier curve.
     * **An animations object could look like this:**
     * ```javascript
     * element.animate({
     *   opacity: {
     *     dur: 1000,
     *     from: 0,
     *     to: 1
     *   },
     *   x1: {
     *     dur: '1000ms',
     *     from: 100,
     *     to: 200,
     *     easing: 'easeOutQuart'
     *   },
     *   y1: {
     *     dur: '2s',
     *     from: 0,
     *     to: 100
     *   }
     * });
     * ```
     * **Automatic unit conversion**
     * For the `dur` and the `begin` animate attribute you can also omit a unit by passing a number. The number will automatically be converted to milli seconds.
     * **Guided mode**
     * The default behavior of SMIL animations with offset using the `begin` attribute is that the attribute will keep it's original value until the animation starts. Mostly this behavior is not desired as you'd like to have your element attributes already initialized with the animation `from` value even before the animation starts. Also if you don't specify `fill="freeze"` on an animate element or if you delete the animation after it's done (which is done in guided mode) the attribute will switch back to the initial value. This behavior is also not desired when performing simple one-time animations. For one-time animations you'd want to trigger animations immediately instead of relative to the document begin time. That's why in guided mode Chartist.Svg will also use the `begin` property to schedule a timeout and manually start the animation after the timeout. If you're using multiple SMIL definition objects for an attribute (in an array), guided mode will be disabled for this attribute, even if you explicitly enabled it.
     * If guided mode is enabled the following behavior is added:
     * - Before the animation starts (even when delayed with `begin`) the animated attribute will be set already to the `from` value of the animation
     * - `begin` is explicitly set to `indefinite` so it can be started manually without relying on document begin time (creation)
     * - The animate element will be forced to use `fill="freeze"`
     * - The animation will be triggered with `beginElement()` in a timeout where `begin` of the definition object is interpreted in milli seconds. If no `begin` was specified the timeout is triggered immediately.
     * - After the animation the element attribute value will be set to the `to` value of the animation
     * - The animate element is deleted from the DOM
     *
     * @memberof Chartist.Svg
     * @param {Object} animations An animations object where the property keys are the attributes you'd like to animate. The properties should be objects again that contain the SMIL animation attributes (usually begin, dur, from, and to). The property begin and dur is auto converted (see Automatic unit conversion). You can also schedule multiple animations for the same attribute by passing an Array of SMIL definition objects. Attributes that contain an array of SMIL definition objects will not be executed in guided mode.
     * @param {Boolean} guided Specify if guided mode should be activated for this animation (see Guided mode). If not otherwise specified, guided mode will be activated.
     * @param {Object} eventEmitter If specified, this event emitter will be notified when an animation starts or ends.
     * @return {Chartist.Svg} The current element where the animation was added
     */


    function animate(animations, guided, eventEmitter) {
      if (guided === undefined) {
        guided = true;
      }

      Object.keys(animations).forEach(function createAnimateForAttributes(attribute) {
        function createAnimate(animationDefinition, guided) {
          var attributeProperties = {},
              animate,
              timeout,
              easing; // Check if an easing is specified in the definition object and delete it from the object as it will not
          // be part of the animate element attributes.

          if (animationDefinition.easing) {
            // If already an easing Bézier curve array we take it or we lookup a easing array in the Easing object
            easing = animationDefinition.easing instanceof Array ? animationDefinition.easing : Chartist.Svg.Easing[animationDefinition.easing];
            delete animationDefinition.easing;
          } // If numeric dur or begin was provided we assume milli seconds


          animationDefinition.begin = Chartist.ensureUnit(animationDefinition.begin, 'ms');
          animationDefinition.dur = Chartist.ensureUnit(animationDefinition.dur, 'ms');

          if (easing) {
            animationDefinition.calcMode = 'spline';
            animationDefinition.keySplines = easing.join(' ');
            animationDefinition.keyTimes = '0;1';
          } // Adding "fill: freeze" if we are in guided mode and set initial attribute values


          if (guided) {
            animationDefinition.fill = 'freeze'; // Animated property on our element should already be set to the animation from value in guided mode

            attributeProperties[attribute] = animationDefinition.from;
            this.attr(attributeProperties); // In guided mode we also set begin to indefinite so we can trigger the start manually and put the begin
            // which needs to be in ms aside

            timeout = Chartist.quantity(animationDefinition.begin || 0).value;
            animationDefinition.begin = 'indefinite';
          }

          animate = this.elem('animate', Chartist.extend({
            attributeName: attribute
          }, animationDefinition));

          if (guided) {
            // If guided we take the value that was put aside in timeout and trigger the animation manually with a timeout
            setTimeout(function () {
              // If beginElement fails we set the animated attribute to the end position and remove the animate element
              // This happens if the SMIL ElementTimeControl interface is not supported or any other problems occured in
              // the browser. (Currently FF 34 does not support animate elements in foreignObjects)
              try {
                animate._node.beginElement();
              } catch (err) {
                // Set animated attribute to current animated value
                attributeProperties[attribute] = animationDefinition.to;
                this.attr(attributeProperties); // Remove the animate element as it's no longer required

                animate.remove();
              }
            }.bind(this), timeout);
          }

          if (eventEmitter) {
            animate._node.addEventListener('beginEvent', function handleBeginEvent() {
              eventEmitter.emit('animationBegin', {
                element: this,
                animate: animate._node,
                params: animationDefinition
              });
            }.bind(this));
          }

          animate._node.addEventListener('endEvent', function handleEndEvent() {
            if (eventEmitter) {
              eventEmitter.emit('animationEnd', {
                element: this,
                animate: animate._node,
                params: animationDefinition
              });
            }

            if (guided) {
              // Set animated attribute to current animated value
              attributeProperties[attribute] = animationDefinition.to;
              this.attr(attributeProperties); // Remove the animate element as it's no longer required

              animate.remove();
            }
          }.bind(this));
        } // If current attribute is an array of definition objects we create an animate for each and disable guided mode


        if (animations[attribute] instanceof Array) {
          animations[attribute].forEach(function (animationDefinition) {
            createAnimate.bind(this)(animationDefinition, false);
          }.bind(this));
        } else {
          createAnimate.bind(this)(animations[attribute], guided);
        }
      }.bind(this));
      return this;
    }

    Chartist.Svg = Chartist.Class.extend({
      constructor: Svg,
      attr: attr,
      elem: elem,
      parent: parent,
      root: root,
      querySelector: querySelector,
      querySelectorAll: querySelectorAll,
      getNode: getNode,
      foreignObject: foreignObject,
      text: text,
      empty: empty,
      remove: remove,
      replace: replace,
      append: append,
      classes: classes,
      addClass: addClass,
      removeClass: removeClass,
      removeAllClasses: removeAllClasses,
      height: height,
      width: width,
      animate: animate
    });
    /**
     * This method checks for support of a given SVG feature like Extensibility, SVG-animation or the like. Check http://www.w3.org/TR/SVG11/feature for a detailed list.
     *
     * @memberof Chartist.Svg
     * @param {String} feature The SVG 1.1 feature that should be checked for support.
     * @return {Boolean} True of false if the feature is supported or not
     */

    Chartist.Svg.isSupported = function (feature) {
      return document.implementation.hasFeature('http://www.w3.org/TR/SVG11/feature#' + feature, '1.1');
    };
    /**
     * This Object contains some standard easing cubic bezier curves. Then can be used with their name in the `Chartist.Svg.animate`. You can also extend the list and use your own name in the `animate` function. Click the show code button to see the available bezier functions.
     *
     * @memberof Chartist.Svg
     */


    var easingCubicBeziers = {
      easeInSine: [0.47, 0, 0.745, 0.715],
      easeOutSine: [0.39, 0.575, 0.565, 1],
      easeInOutSine: [0.445, 0.05, 0.55, 0.95],
      easeInQuad: [0.55, 0.085, 0.68, 0.53],
      easeOutQuad: [0.25, 0.46, 0.45, 0.94],
      easeInOutQuad: [0.455, 0.03, 0.515, 0.955],
      easeInCubic: [0.55, 0.055, 0.675, 0.19],
      easeOutCubic: [0.215, 0.61, 0.355, 1],
      easeInOutCubic: [0.645, 0.045, 0.355, 1],
      easeInQuart: [0.895, 0.03, 0.685, 0.22],
      easeOutQuart: [0.165, 0.84, 0.44, 1],
      easeInOutQuart: [0.77, 0, 0.175, 1],
      easeInQuint: [0.755, 0.05, 0.855, 0.06],
      easeOutQuint: [0.23, 1, 0.32, 1],
      easeInOutQuint: [0.86, 0, 0.07, 1],
      easeInExpo: [0.95, 0.05, 0.795, 0.035],
      easeOutExpo: [0.19, 1, 0.22, 1],
      easeInOutExpo: [1, 0, 0, 1],
      easeInCirc: [0.6, 0.04, 0.98, 0.335],
      easeOutCirc: [0.075, 0.82, 0.165, 1],
      easeInOutCirc: [0.785, 0.135, 0.15, 0.86],
      easeInBack: [0.6, -0.28, 0.735, 0.045],
      easeOutBack: [0.175, 0.885, 0.32, 1.275],
      easeInOutBack: [0.68, -0.55, 0.265, 1.55]
    };
    Chartist.Svg.Easing = easingCubicBeziers;
    /**
     * This helper class is to wrap multiple `Chartist.Svg` elements into a list where you can call the `Chartist.Svg` functions on all elements in the list with one call. This is helpful when you'd like to perform calls with `Chartist.Svg` on multiple elements.
     * An instance of this class is also returned by `Chartist.Svg.querySelectorAll`.
     *
     * @memberof Chartist.Svg
     * @param {Array<Node>|NodeList} nodeList An Array of SVG DOM nodes or a SVG DOM NodeList (as returned by document.querySelectorAll)
     * @constructor
     */

    function SvgList(nodeList) {
      var list = this;
      this.svgElements = [];

      for (var i = 0; i < nodeList.length; i++) {
        this.svgElements.push(new Chartist.Svg(nodeList[i]));
      } // Add delegation methods for Chartist.Svg


      Object.keys(Chartist.Svg.prototype).filter(function (prototypeProperty) {
        return ['constructor', 'parent', 'querySelector', 'querySelectorAll', 'replace', 'append', 'classes', 'height', 'width'].indexOf(prototypeProperty) === -1;
      }).forEach(function (prototypeProperty) {
        list[prototypeProperty] = function () {
          var args = Array.prototype.slice.call(arguments, 0);
          list.svgElements.forEach(function (element) {
            Chartist.Svg.prototype[prototypeProperty].apply(element, args);
          });
          return list;
        };
      });
    }

    Chartist.Svg.List = Chartist.Class.extend({
      constructor: SvgList
    });
  })(this || global, Chartist);

  ;
  /**
  * Chartist SVG path module for SVG path description creation and modification.
  *
  * @module Chartist.Svg.Path
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';
    /**
     * Contains the descriptors of supported element types in a SVG path. Currently only move, line and curve are supported.
     *
     * @memberof Chartist.Svg.Path
     * @type {Object}
     */

    var elementDescriptions = {
      m: ['x', 'y'],
      l: ['x', 'y'],
      c: ['x1', 'y1', 'x2', 'y2', 'x', 'y'],
      a: ['rx', 'ry', 'xAr', 'lAf', 'sf', 'x', 'y']
    };
    /**
     * Default options for newly created SVG path objects.
     *
     * @memberof Chartist.Svg.Path
     * @type {Object}
     */

    var defaultOptions = {
      // The accuracy in digit count after the decimal point. This will be used to round numbers in the SVG path. If this option is set to false then no rounding will be performed.
      accuracy: 3
    };

    function element(command, params, pathElements, pos, relative, data) {
      var pathElement = Chartist.extend({
        command: relative ? command.toLowerCase() : command.toUpperCase()
      }, params, data ? {
        data: data
      } : {});
      pathElements.splice(pos, 0, pathElement);
    }

    function forEachParam(pathElements, cb) {
      pathElements.forEach(function (pathElement, pathElementIndex) {
        elementDescriptions[pathElement.command.toLowerCase()].forEach(function (paramName, paramIndex) {
          cb(pathElement, paramName, pathElementIndex, paramIndex, pathElements);
        });
      });
    }
    /**
     * Used to construct a new path object.
     *
     * @memberof Chartist.Svg.Path
     * @param {Boolean} close If set to true then this path will be closed when stringified (with a Z at the end)
     * @param {Object} options Options object that overrides the default objects. See default options for more details.
     * @constructor
     */


    function SvgPath(close, options) {
      this.pathElements = [];
      this.pos = 0;
      this.close = close;
      this.options = Chartist.extend({}, defaultOptions, options);
    }
    /**
     * Gets or sets the current position (cursor) inside of the path. You can move around the cursor freely but limited to 0 or the count of existing elements. All modifications with element functions will insert new elements at the position of this cursor.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} [pos] If a number is passed then the cursor is set to this position in the path element array.
     * @return {Chartist.Svg.Path|Number} If the position parameter was passed then the return value will be the path object for easy call chaining. If no position parameter was passed then the current position is returned.
     */


    function position(pos) {
      if (pos !== undefined) {
        this.pos = Math.max(0, Math.min(this.pathElements.length, pos));
        return this;
      } else {
        return this.pos;
      }
    }
    /**
     * Removes elements from the path starting at the current position.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} count Number of path elements that should be removed from the current position.
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function remove(count) {
      this.pathElements.splice(this.pos, count);
      return this;
    }
    /**
     * Use this function to add a new move SVG path element.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} x The x coordinate for the move element.
     * @param {Number} y The y coordinate for the move element.
     * @param {Boolean} [relative] If set to true the move element will be created with relative coordinates (lowercase letter)
     * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function move(x, y, relative, data) {
      element('M', {
        x: +x,
        y: +y
      }, this.pathElements, this.pos++, relative, data);
      return this;
    }
    /**
     * Use this function to add a new line SVG path element.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} x The x coordinate for the line element.
     * @param {Number} y The y coordinate for the line element.
     * @param {Boolean} [relative] If set to true the line element will be created with relative coordinates (lowercase letter)
     * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function line(x, y, relative, data) {
      element('L', {
        x: +x,
        y: +y
      }, this.pathElements, this.pos++, relative, data);
      return this;
    }
    /**
     * Use this function to add a new curve SVG path element.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} x1 The x coordinate for the first control point of the bezier curve.
     * @param {Number} y1 The y coordinate for the first control point of the bezier curve.
     * @param {Number} x2 The x coordinate for the second control point of the bezier curve.
     * @param {Number} y2 The y coordinate for the second control point of the bezier curve.
     * @param {Number} x The x coordinate for the target point of the curve element.
     * @param {Number} y The y coordinate for the target point of the curve element.
     * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)
     * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function curve(x1, y1, x2, y2, x, y, relative, data) {
      element('C', {
        x1: +x1,
        y1: +y1,
        x2: +x2,
        y2: +y2,
        x: +x,
        y: +y
      }, this.pathElements, this.pos++, relative, data);
      return this;
    }
    /**
     * Use this function to add a new non-bezier curve SVG path element.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} rx The radius to be used for the x-axis of the arc.
     * @param {Number} ry The radius to be used for the y-axis of the arc.
     * @param {Number} xAr Defines the orientation of the arc
     * @param {Number} lAf Large arc flag
     * @param {Number} sf Sweep flag
     * @param {Number} x The x coordinate for the target point of the curve element.
     * @param {Number} y The y coordinate for the target point of the curve element.
     * @param {Boolean} [relative] If set to true the curve element will be created with relative coordinates (lowercase letter)
     * @param {*} [data] Any data that should be stored with the element object that will be accessible in pathElement
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function arc(rx, ry, xAr, lAf, sf, x, y, relative, data) {
      element('A', {
        rx: +rx,
        ry: +ry,
        xAr: +xAr,
        lAf: +lAf,
        sf: +sf,
        x: +x,
        y: +y
      }, this.pathElements, this.pos++, relative, data);
      return this;
    }
    /**
     * Parses an SVG path seen in the d attribute of path elements, and inserts the parsed elements into the existing path object at the current cursor position. Any closing path indicators (Z at the end of the path) will be ignored by the parser as this is provided by the close option in the options of the path object.
     *
     * @memberof Chartist.Svg.Path
     * @param {String} path Any SVG path that contains move (m), line (l) or curve (c) components.
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function parse(path) {
      // Parsing the SVG path string into an array of arrays [['M', '10', '10'], ['L', '100', '100']]
      var chunks = path.replace(/([A-Za-z])([0-9])/g, '$1 $2').replace(/([0-9])([A-Za-z])/g, '$1 $2').split(/[\s,]+/).reduce(function (result, element) {
        if (element.match(/[A-Za-z]/)) {
          result.push([]);
        }

        result[result.length - 1].push(element);
        return result;
      }, []); // If this is a closed path we remove the Z at the end because this is determined by the close option

      if (chunks[chunks.length - 1][0].toUpperCase() === 'Z') {
        chunks.pop();
      } // Using svgPathElementDescriptions to map raw path arrays into objects that contain the command and the parameters
      // For example {command: 'M', x: '10', y: '10'}


      var elements = chunks.map(function (chunk) {
        var command = chunk.shift(),
            description = elementDescriptions[command.toLowerCase()];
        return Chartist.extend({
          command: command
        }, description.reduce(function (result, paramName, index) {
          result[paramName] = +chunk[index];
          return result;
        }, {}));
      }); // Preparing a splice call with the elements array as var arg params and insert the parsed elements at the current position

      var spliceArgs = [this.pos, 0];
      Array.prototype.push.apply(spliceArgs, elements);
      Array.prototype.splice.apply(this.pathElements, spliceArgs); // Increase the internal position by the element count

      this.pos += elements.length;
      return this;
    }
    /**
     * This function renders to current SVG path object into a final SVG string that can be used in the d attribute of SVG path elements. It uses the accuracy option to round big decimals. If the close parameter was set in the constructor of this path object then a path closing Z will be appended to the output string.
     *
     * @memberof Chartist.Svg.Path
     * @return {String}
     */


    function stringify() {
      var accuracyMultiplier = Math.pow(10, this.options.accuracy);
      return this.pathElements.reduce(function (path, pathElement) {
        var params = elementDescriptions[pathElement.command.toLowerCase()].map(function (paramName) {
          return this.options.accuracy ? Math.round(pathElement[paramName] * accuracyMultiplier) / accuracyMultiplier : pathElement[paramName];
        }.bind(this));
        return path + pathElement.command + params.join(',');
      }.bind(this), '') + (this.close ? 'Z' : '');
    }
    /**
     * Scales all elements in the current SVG path object. There is an individual parameter for each coordinate. Scaling will also be done for control points of curves, affecting the given coordinate.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} x The number which will be used to scale the x, x1 and x2 of all path elements.
     * @param {Number} y The number which will be used to scale the y, y1 and y2 of all path elements.
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function scale(x, y) {
      forEachParam(this.pathElements, function (pathElement, paramName) {
        pathElement[paramName] *= paramName[0] === 'x' ? x : y;
      });
      return this;
    }
    /**
     * Translates all elements in the current SVG path object. The translation is relative and there is an individual parameter for each coordinate. Translation will also be done for control points of curves, affecting the given coordinate.
     *
     * @memberof Chartist.Svg.Path
     * @param {Number} x The number which will be used to translate the x, x1 and x2 of all path elements.
     * @param {Number} y The number which will be used to translate the y, y1 and y2 of all path elements.
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function translate(x, y) {
      forEachParam(this.pathElements, function (pathElement, paramName) {
        pathElement[paramName] += paramName[0] === 'x' ? x : y;
      });
      return this;
    }
    /**
     * This function will run over all existing path elements and then loop over their attributes. The callback function will be called for every path element attribute that exists in the current path.
     * The method signature of the callback function looks like this:
     * ```javascript
     * function(pathElement, paramName, pathElementIndex, paramIndex, pathElements)
     * ```
     * If something else than undefined is returned by the callback function, this value will be used to replace the old value. This allows you to build custom transformations of path objects that can't be achieved using the basic transformation functions scale and translate.
     *
     * @memberof Chartist.Svg.Path
     * @param {Function} transformFnc The callback function for the transformation. Check the signature in the function description.
     * @return {Chartist.Svg.Path} The current path object for easy call chaining.
     */


    function transform(transformFnc) {
      forEachParam(this.pathElements, function (pathElement, paramName, pathElementIndex, paramIndex, pathElements) {
        var transformed = transformFnc(pathElement, paramName, pathElementIndex, paramIndex, pathElements);

        if (transformed || transformed === 0) {
          pathElement[paramName] = transformed;
        }
      });
      return this;
    }
    /**
     * This function clones a whole path object with all its properties. This is a deep clone and path element objects will also be cloned.
     *
     * @memberof Chartist.Svg.Path
     * @param {Boolean} [close] Optional option to set the new cloned path to closed. If not specified or false, the original path close option will be used.
     * @return {Chartist.Svg.Path}
     */


    function clone(close) {
      var c = new Chartist.Svg.Path(close || this.close);
      c.pos = this.pos;
      c.pathElements = this.pathElements.slice().map(function cloneElements(pathElement) {
        return Chartist.extend({}, pathElement);
      });
      c.options = Chartist.extend({}, this.options);
      return c;
    }
    /**
     * Split a Svg.Path object by a specific command in the path chain. The path chain will be split and an array of newly created paths objects will be returned. This is useful if you'd like to split an SVG path by it's move commands, for example, in order to isolate chunks of drawings.
     *
     * @memberof Chartist.Svg.Path
     * @param {String} command The command you'd like to use to split the path
     * @return {Array<Chartist.Svg.Path>}
     */


    function splitByCommand(command) {
      var split = [new Chartist.Svg.Path()];
      this.pathElements.forEach(function (pathElement) {
        if (pathElement.command === command.toUpperCase() && split[split.length - 1].pathElements.length !== 0) {
          split.push(new Chartist.Svg.Path());
        }

        split[split.length - 1].pathElements.push(pathElement);
      });
      return split;
    }
    /**
     * This static function on `Chartist.Svg.Path` is joining multiple paths together into one paths.
     *
     * @memberof Chartist.Svg.Path
     * @param {Array<Chartist.Svg.Path>} paths A list of paths to be joined together. The order is important.
     * @param {boolean} close If the newly created path should be a closed path
     * @param {Object} options Path options for the newly created path.
     * @return {Chartist.Svg.Path}
     */


    function join(paths, close, options) {
      var joinedPath = new Chartist.Svg.Path(close, options);

      for (var i = 0; i < paths.length; i++) {
        var path = paths[i];

        for (var j = 0; j < path.pathElements.length; j++) {
          joinedPath.pathElements.push(path.pathElements[j]);
        }
      }

      return joinedPath;
    }

    Chartist.Svg.Path = Chartist.Class.extend({
      constructor: SvgPath,
      position: position,
      remove: remove,
      move: move,
      line: line,
      curve: curve,
      arc: arc,
      scale: scale,
      translate: translate,
      transform: transform,
      parse: parse,
      stringify: stringify,
      clone: clone,
      splitByCommand: splitByCommand
    });
    Chartist.Svg.Path.elementDescriptions = elementDescriptions;
    Chartist.Svg.Path.join = join;
  })(this || global, Chartist);

  ;
  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;
    var axisUnits = {
      x: {
        pos: 'x',
        len: 'width',
        dir: 'horizontal',
        rectStart: 'x1',
        rectEnd: 'x2',
        rectOffset: 'y2'
      },
      y: {
        pos: 'y',
        len: 'height',
        dir: 'vertical',
        rectStart: 'y2',
        rectEnd: 'y1',
        rectOffset: 'x1'
      }
    };

    function Axis(units, chartRect, ticks, options) {
      this.units = units;
      this.counterUnits = units === axisUnits.x ? axisUnits.y : axisUnits.x;
      this.chartRect = chartRect;
      this.axisLength = chartRect[units.rectEnd] - chartRect[units.rectStart];
      this.gridOffset = chartRect[units.rectOffset];
      this.ticks = ticks;
      this.options = options;
    }

    function createGridAndLabels(gridGroup, labelGroup, useForeignObject, chartOptions, eventEmitter) {
      var axisOptions = chartOptions['axis' + this.units.pos.toUpperCase()];
      var projectedValues = this.ticks.map(this.projectValue.bind(this));
      var labelValues = this.ticks.map(axisOptions.labelInterpolationFnc);
      projectedValues.forEach(function (projectedValue, index) {
        var labelOffset = {
          x: 0,
          y: 0
        }; // TODO: Find better solution for solving this problem
        // Calculate how much space we have available for the label

        var labelLength;

        if (projectedValues[index + 1]) {
          // If we still have one label ahead, we can calculate the distance to the next tick / label
          labelLength = projectedValues[index + 1] - projectedValue;
        } else {
          // If we don't have a label ahead and we have only two labels in total, we just take the remaining distance to
          // on the whole axis length. We limit that to a minimum of 30 pixel, so that labels close to the border will
          // still be visible inside of the chart padding.
          labelLength = Math.max(this.axisLength - projectedValue, 30);
        } // Skip grid lines and labels where interpolated label values are falsey (execpt for 0)


        if (Chartist.isFalseyButZero(labelValues[index]) && labelValues[index] !== '') {
          return;
        } // Transform to global coordinates using the chartRect
        // We also need to set the label offset for the createLabel function


        if (this.units.pos === 'x') {
          projectedValue = this.chartRect.x1 + projectedValue;
          labelOffset.x = chartOptions.axisX.labelOffset.x; // If the labels should be positioned in start position (top side for vertical axis) we need to set a
          // different offset as for positioned with end (bottom)

          if (chartOptions.axisX.position === 'start') {
            labelOffset.y = this.chartRect.padding.top + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);
          } else {
            labelOffset.y = this.chartRect.y1 + chartOptions.axisX.labelOffset.y + (useForeignObject ? 5 : 20);
          }
        } else {
          projectedValue = this.chartRect.y1 - projectedValue;
          labelOffset.y = chartOptions.axisY.labelOffset.y - (useForeignObject ? labelLength : 0); // If the labels should be positioned in start position (left side for horizontal axis) we need to set a
          // different offset as for positioned with end (right side)

          if (chartOptions.axisY.position === 'start') {
            labelOffset.x = useForeignObject ? this.chartRect.padding.left + chartOptions.axisY.labelOffset.x : this.chartRect.x1 - 10;
          } else {
            labelOffset.x = this.chartRect.x2 + chartOptions.axisY.labelOffset.x + 10;
          }
        }

        if (axisOptions.showGrid) {
          Chartist.createGrid(projectedValue, index, this, this.gridOffset, this.chartRect[this.counterUnits.len](), gridGroup, [chartOptions.classNames.grid, chartOptions.classNames[this.units.dir]], eventEmitter);
        }

        if (axisOptions.showLabel) {
          Chartist.createLabel(projectedValue, labelLength, index, labelValues, this, axisOptions.offset, labelOffset, labelGroup, [chartOptions.classNames.label, chartOptions.classNames[this.units.dir], axisOptions.position === 'start' ? chartOptions.classNames[axisOptions.position] : chartOptions.classNames['end']], useForeignObject, eventEmitter);
        }
      }.bind(this));
    }

    Chartist.Axis = Chartist.Class.extend({
      constructor: Axis,
      createGridAndLabels: createGridAndLabels,
      projectValue: function projectValue(value, index, data) {
        throw new Error('Base axis can\'t be instantiated!');
      }
    });
    Chartist.Axis.units = axisUnits;
  })(this || global, Chartist);

  ;
  /**
  * The auto scale axis uses standard linear scale projection of values along an axis. It uses order of magnitude to find a scale automatically and evaluates the available space in order to find the perfect amount of ticks for your chart.
  * **Options**
  * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.
  * ```javascript
  * var options = {
  *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored
  *   high: 100,
  *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored
  *   low: 0,
  *   // This option will be used when finding the right scale division settings. The amount of ticks on the scale will be determined so that as many ticks as possible will be displayed, while not violating this minimum required space (in pixel).
  *   scaleMinSpace: 20,
  *   // Can be set to true or false. If set to true, the scale will be generated with whole numbers only.
  *   onlyInteger: true,
  *   // The reference value can be used to make sure that this value will always be on the chart. This is especially useful on bipolar charts where the bipolar center always needs to be part of the chart.
  *   referenceValue: 5
  * };
  * ```
  *
  * @module Chartist.AutoScaleAxis
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;

    function AutoScaleAxis(axisUnit, data, chartRect, options) {
      // Usually we calculate highLow based on the data but this can be overriden by a highLow object in the options
      var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);
      this.bounds = Chartist.getBounds(chartRect[axisUnit.rectEnd] - chartRect[axisUnit.rectStart], highLow, options.scaleMinSpace || 20, options.onlyInteger);
      this.range = {
        min: this.bounds.min,
        max: this.bounds.max
      };
      Chartist.AutoScaleAxis.super.constructor.call(this, axisUnit, chartRect, this.bounds.values, options);
    }

    function projectValue(value) {
      return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.bounds.min) / this.bounds.range;
    }

    Chartist.AutoScaleAxis = Chartist.Axis.extend({
      constructor: AutoScaleAxis,
      projectValue: projectValue
    });
  })(this || global, Chartist);

  ;
  /**
  * The fixed scale axis uses standard linear projection of values along an axis. It makes use of a divisor option to divide the range provided from the minimum and maximum value or the options high and low that will override the computed minimum and maximum.
  * **Options**
  * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.
  * ```javascript
  * var options = {
  *   // If high is specified then the axis will display values explicitly up to this value and the computed maximum from the data is ignored
  *   high: 100,
  *   // If low is specified then the axis will display values explicitly down to this value and the computed minimum from the data is ignored
  *   low: 0,
  *   // If specified then the value range determined from minimum to maximum (or low and high) will be divided by this number and ticks will be generated at those division points. The default divisor is 1.
  *   divisor: 4,
  *   // If ticks is explicitly set, then the axis will not compute the ticks with the divisor, but directly use the data in ticks to determine at what points on the axis a tick need to be generated.
  *   ticks: [1, 10, 20, 30]
  * };
  * ```
  *
  * @module Chartist.FixedScaleAxis
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;

    function FixedScaleAxis(axisUnit, data, chartRect, options) {
      var highLow = options.highLow || Chartist.getHighLow(data, options, axisUnit.pos);
      this.divisor = options.divisor || 1;
      this.ticks = options.ticks || Chartist.times(this.divisor).map(function (value, index) {
        return highLow.low + (highLow.high - highLow.low) / this.divisor * index;
      }.bind(this));
      this.ticks.sort(function (a, b) {
        return a - b;
      });
      this.range = {
        min: highLow.low,
        max: highLow.high
      };
      Chartist.FixedScaleAxis.super.constructor.call(this, axisUnit, chartRect, this.ticks, options);
      this.stepLength = this.axisLength / this.divisor;
    }

    function projectValue(value) {
      return this.axisLength * (+Chartist.getMultiValue(value, this.units.pos) - this.range.min) / (this.range.max - this.range.min);
    }

    Chartist.FixedScaleAxis = Chartist.Axis.extend({
      constructor: FixedScaleAxis,
      projectValue: projectValue
    });
  })(this || global, Chartist);

  ;
  /**
  * The step axis for step based charts like bar chart or step based line charts. It uses a fixed amount of ticks that will be equally distributed across the whole axis length. The projection is done using the index of the data value rather than the value itself and therefore it's only useful for distribution purpose.
  * **Options**
  * The following options are used by this axis in addition to the default axis options outlined in the axis configuration of the chart default settings.
  * ```javascript
  * var options = {
  *   // Ticks to be used to distribute across the axis length. As this axis type relies on the index of the value rather than the value, arbitrary data that can be converted to a string can be used as ticks.
  *   ticks: ['One', 'Two', 'Three'],
  *   // If set to true the full width will be used to distribute the values where the last value will be at the maximum of the axis length. If false the spaces between the ticks will be evenly distributed instead.
  *   stretch: true
  * };
  * ```
  *
  * @module Chartist.StepAxis
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;

    function StepAxis(axisUnit, data, chartRect, options) {
      Chartist.StepAxis.super.constructor.call(this, axisUnit, chartRect, options.ticks, options);
      var calc = Math.max(1, options.ticks.length - (options.stretch ? 1 : 0));
      this.stepLength = this.axisLength / calc;
    }

    function projectValue(value, index) {
      return this.stepLength * index;
    }

    Chartist.StepAxis = Chartist.Axis.extend({
      constructor: StepAxis,
      projectValue: projectValue
    });
  })(this || global, Chartist);

  ;
  /**
  * The Chartist line chart can be used to draw Line or Scatter charts. If used in the browser you can access the global `Chartist` namespace where you find the `Line` function as a main entry point.
  *
  * For examples on how to use the line chart please check the examples of the `Chartist.Line` method.
  *
  * @module Chartist.Line
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;
    /**
     * Default options in line charts. Expand the code view to see a detailed list of options with comments.
     *
     * @memberof Chartist.Line
     */

    var defaultOptions = {
      // Options for X-Axis
      axisX: {
        // The offset of the labels to the chart area
        offset: 30,
        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
        position: 'end',
        // Allows you to correct label positioning on this axis by positive or negative x and y offset.
        labelOffset: {
          x: 0,
          y: 0
        },
        // If labels should be shown or not
        showLabel: true,
        // If the axis grid should be drawn or not
        showGrid: true,
        // Interpolation function that allows you to intercept the value from the axis label
        labelInterpolationFnc: Chartist.noop,
        // Set the axis type to be used to project values on this axis. If not defined, Chartist.StepAxis will be used for the X-Axis, where the ticks option will be set to the labels in the data and the stretch option will be set to the global fullWidth option. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.
        type: undefined
      },
      // Options for Y-Axis
      axisY: {
        // The offset of the labels to the chart area
        offset: 40,
        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
        position: 'start',
        // Allows you to correct label positioning on this axis by positive or negative x and y offset.
        labelOffset: {
          x: 0,
          y: 0
        },
        // If labels should be shown or not
        showLabel: true,
        // If the axis grid should be drawn or not
        showGrid: true,
        // Interpolation function that allows you to intercept the value from the axis label
        labelInterpolationFnc: Chartist.noop,
        // Set the axis type to be used to project values on this axis. If not defined, Chartist.AutoScaleAxis will be used for the Y-Axis, where the high and low options will be set to the global high and low options. This type can be changed to any axis constructor available (e.g. Chartist.FixedScaleAxis), where all axis options should be present here.
        type: undefined,
        // This value specifies the minimum height in pixel of the scale steps
        scaleMinSpace: 20,
        // Use only integer values (whole numbers) for the scale steps
        onlyInteger: false
      },
      // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')
      width: undefined,
      // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')
      height: undefined,
      // If the line should be drawn or not
      showLine: true,
      // If dots should be drawn or not
      showPoint: true,
      // If the line chart should draw an area
      showArea: false,
      // The base for the area chart that will be used to close the area shape (is normally 0)
      areaBase: 0,
      // Specify if the lines should be smoothed. This value can be true or false where true will result in smoothing using the default smoothing interpolation function Chartist.Interpolation.cardinal and false results in Chartist.Interpolation.none. You can also choose other smoothing / interpolation functions available in the Chartist.Interpolation module, or write your own interpolation function. Check the examples for a brief description.
      lineSmooth: true,
      // If the line chart should add a background fill to the .ct-grids group.
      showGridBackground: false,
      // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value
      low: undefined,
      // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value
      high: undefined,
      // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}
      chartPadding: {
        top: 15,
        right: 15,
        bottom: 5,
        left: 10
      },
      // When set to true, the last grid line on the x-axis is not drawn and the chart elements will expand to the full available width of the chart. For the last label to be drawn correctly you might need to add chart padding or offset the last label with a draw event handler.
      fullWidth: false,
      // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.
      reverseData: false,
      // Override the class names that get used to generate the SVG structure of the chart
      classNames: {
        chart: 'ct-chart-line',
        label: 'ct-label',
        labelGroup: 'ct-labels',
        series: 'ct-series',
        line: 'ct-line',
        point: 'ct-point',
        area: 'ct-area',
        grid: 'ct-grid',
        gridGroup: 'ct-grids',
        gridBackground: 'ct-grid-background',
        vertical: 'ct-vertical',
        horizontal: 'ct-horizontal',
        start: 'ct-start',
        end: 'ct-end'
      }
    };
    /**
     * Creates a new chart
     *
     */

    function createChart(options) {
      var data = Chartist.normalizeData(this.data, options.reverseData, true); // Create new svg object

      this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart); // Create groups for labels, grid and series

      var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);
      var seriesGroup = this.svg.elem('g');
      var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);
      var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);
      var axisX, axisY;

      if (options.axisX.type === undefined) {
        axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {
          ticks: data.normalized.labels,
          stretch: options.fullWidth
        }));
      } else {
        axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);
      }

      if (options.axisY.type === undefined) {
        axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {
          high: Chartist.isNumeric(options.high) ? options.high : options.axisY.high,
          low: Chartist.isNumeric(options.low) ? options.low : options.axisY.low
        }));
      } else {
        axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);
      }

      axisX.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);
      axisY.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);

      if (options.showGridBackground) {
        Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);
      } // Draw the series


      data.raw.series.forEach(function (series, seriesIndex) {
        var seriesElement = seriesGroup.elem('g'); // Write attributes to series group element. If series name or meta is undefined the attributes will not be written

        seriesElement.attr({
          'ct:series-name': series.name,
          'ct:meta': Chartist.serialize(series.meta)
        }); // Use series class from series data or if not set generate one

        seriesElement.addClass([options.classNames.series, series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex)].join(' '));
        var pathCoordinates = [],
            pathData = [];
        data.normalized.series[seriesIndex].forEach(function (value, valueIndex) {
          var p = {
            x: chartRect.x1 + axisX.projectValue(value, valueIndex, data.normalized.series[seriesIndex]),
            y: chartRect.y1 - axisY.projectValue(value, valueIndex, data.normalized.series[seriesIndex])
          };
          pathCoordinates.push(p.x, p.y);
          pathData.push({
            value: value,
            valueIndex: valueIndex,
            meta: Chartist.getMetaData(series, valueIndex)
          });
        }.bind(this));
        var seriesOptions = {
          lineSmooth: Chartist.getSeriesOption(series, options, 'lineSmooth'),
          showPoint: Chartist.getSeriesOption(series, options, 'showPoint'),
          showLine: Chartist.getSeriesOption(series, options, 'showLine'),
          showArea: Chartist.getSeriesOption(series, options, 'showArea'),
          areaBase: Chartist.getSeriesOption(series, options, 'areaBase')
        };
        var smoothing = typeof seriesOptions.lineSmooth === 'function' ? seriesOptions.lineSmooth : seriesOptions.lineSmooth ? Chartist.Interpolation.monotoneCubic() : Chartist.Interpolation.none(); // Interpolating path where pathData will be used to annotate each path element so we can trace back the original
        // index, value and meta data

        var path = smoothing(pathCoordinates, pathData); // If we should show points we need to create them now to avoid secondary loop
        // Points are drawn from the pathElements returned by the interpolation function
        // Small offset for Firefox to render squares correctly

        if (seriesOptions.showPoint) {
          path.pathElements.forEach(function (pathElement) {
            var point = seriesElement.elem('line', {
              x1: pathElement.x,
              y1: pathElement.y,
              x2: pathElement.x + 0.01,
              y2: pathElement.y
            }, options.classNames.point).attr({
              'ct:value': [pathElement.data.value.x, pathElement.data.value.y].filter(Chartist.isNumeric).join(','),
              'ct:meta': Chartist.serialize(pathElement.data.meta)
            });
            this.eventEmitter.emit('draw', {
              type: 'point',
              value: pathElement.data.value,
              index: pathElement.data.valueIndex,
              meta: pathElement.data.meta,
              series: series,
              seriesIndex: seriesIndex,
              axisX: axisX,
              axisY: axisY,
              group: seriesElement,
              element: point,
              x: pathElement.x,
              y: pathElement.y
            });
          }.bind(this));
        }

        if (seriesOptions.showLine) {
          var line = seriesElement.elem('path', {
            d: path.stringify()
          }, options.classNames.line, true);
          this.eventEmitter.emit('draw', {
            type: 'line',
            values: data.normalized.series[seriesIndex],
            path: path.clone(),
            chartRect: chartRect,
            index: seriesIndex,
            series: series,
            seriesIndex: seriesIndex,
            seriesMeta: series.meta,
            axisX: axisX,
            axisY: axisY,
            group: seriesElement,
            element: line
          });
        } // Area currently only works with axes that support a range!


        if (seriesOptions.showArea && axisY.range) {
          // If areaBase is outside the chart area (< min or > max) we need to set it respectively so that
          // the area is not drawn outside the chart area.
          var areaBase = Math.max(Math.min(seriesOptions.areaBase, axisY.range.max), axisY.range.min); // We project the areaBase value into screen coordinates

          var areaBaseProjected = chartRect.y1 - axisY.projectValue(areaBase); // In order to form the area we'll first split the path by move commands so we can chunk it up into segments

          path.splitByCommand('M').filter(function onlySolidSegments(pathSegment) {
            // We filter only "solid" segments that contain more than one point. Otherwise there's no need for an area
            return pathSegment.pathElements.length > 1;
          }).map(function convertToArea(solidPathSegments) {
            // Receiving the filtered solid path segments we can now convert those segments into fill areas
            var firstElement = solidPathSegments.pathElements[0];
            var lastElement = solidPathSegments.pathElements[solidPathSegments.pathElements.length - 1]; // Cloning the solid path segment with closing option and removing the first move command from the clone
            // We then insert a new move that should start at the area base and draw a straight line up or down
            // at the end of the path we add an additional straight line to the projected area base value
            // As the closing option is set our path will be automatically closed

            return solidPathSegments.clone(true).position(0).remove(1).move(firstElement.x, areaBaseProjected).line(firstElement.x, firstElement.y).position(solidPathSegments.pathElements.length + 1).line(lastElement.x, areaBaseProjected);
          }).forEach(function createArea(areaPath) {
            // For each of our newly created area paths, we'll now create path elements by stringifying our path objects
            // and adding the created DOM elements to the correct series group
            var area = seriesElement.elem('path', {
              d: areaPath.stringify()
            }, options.classNames.area, true); // Emit an event for each area that was drawn

            this.eventEmitter.emit('draw', {
              type: 'area',
              values: data.normalized.series[seriesIndex],
              path: areaPath.clone(),
              series: series,
              seriesIndex: seriesIndex,
              axisX: axisX,
              axisY: axisY,
              chartRect: chartRect,
              index: seriesIndex,
              group: seriesElement,
              element: area
            });
          }.bind(this));
        }
      }.bind(this));
      this.eventEmitter.emit('created', {
        bounds: axisY.bounds,
        chartRect: chartRect,
        axisX: axisX,
        axisY: axisY,
        svg: this.svg,
        options: options
      });
    }
    /**
     * This method creates a new line chart.
     *
     * @memberof Chartist.Line
     * @param {String|Node} query A selector query string or directly a DOM element
     * @param {Object} data The data object that needs to consist of a labels and a series array
     * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.
     * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]
     * @return {Object} An object which exposes the API for the created chart
     *
     * @example
     * // Create a simple line chart
     * var data = {
     *   // A labels array that can contain any sort of values
     *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
     *   // Our series array that contains series objects or in this case series data arrays
     *   series: [
     *     [5, 2, 4, 2, 0]
     *   ]
     * };
     *
     * // As options we currently only set a static size of 300x200 px
     * var options = {
     *   width: '300px',
     *   height: '200px'
     * };
     *
     * // In the global name space Chartist we call the Line function to initialize a line chart. As a first parameter we pass in a selector where we would like to get our chart created. Second parameter is the actual data object and as a third parameter we pass in our options
     * new Chartist.Line('.ct-chart', data, options);
     *
     * @example
     * // Use specific interpolation function with configuration from the Chartist.Interpolation module
     *
     * var chart = new Chartist.Line('.ct-chart', {
     *   labels: [1, 2, 3, 4, 5],
     *   series: [
     *     [1, 1, 8, 1, 7]
     *   ]
     * }, {
     *   lineSmooth: Chartist.Interpolation.cardinal({
     *     tension: 0.2
     *   })
     * });
     *
     * @example
     * // Create a line chart with responsive options
     *
     * var data = {
     *   // A labels array that can contain any sort of values
     *   labels: ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'],
     *   // Our series array that contains series objects or in this case series data arrays
     *   series: [
     *     [5, 2, 4, 2, 0]
     *   ]
     * };
     *
     * // In addition to the regular options we specify responsive option overrides that will override the default configutation based on the matching media queries.
     * var responsiveOptions = [
     *   ['screen and (min-width: 641px) and (max-width: 1024px)', {
     *     showPoint: false,
     *     axisX: {
     *       labelInterpolationFnc: function(value) {
     *         // Will return Mon, Tue, Wed etc. on medium screens
     *         return value.slice(0, 3);
     *       }
     *     }
     *   }],
     *   ['screen and (max-width: 640px)', {
     *     showLine: false,
     *     axisX: {
     *       labelInterpolationFnc: function(value) {
     *         // Will return M, T, W etc. on small screens
     *         return value[0];
     *       }
     *     }
     *   }]
     * ];
     *
     * new Chartist.Line('.ct-chart', data, null, responsiveOptions);
     *
     */


    function Line(query, data, options, responsiveOptions) {
      Chartist.Line.super.constructor.call(this, query, data, defaultOptions, Chartist.extend({}, defaultOptions, options), responsiveOptions);
    } // Creating line chart type in Chartist namespace


    Chartist.Line = Chartist.Base.extend({
      constructor: Line,
      createChart: createChart
    });
  })(this || global, Chartist);

  ;
  /**
  * The bar chart module of Chartist that can be used to draw unipolar or bipolar bar and grouped bar charts.
  *
  * @module Chartist.Bar
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;
    /**
     * Default options in bar charts. Expand the code view to see a detailed list of options with comments.
     *
     * @memberof Chartist.Bar
     */

    var defaultOptions = {
      // Options for X-Axis
      axisX: {
        // The offset of the chart drawing area to the border of the container
        offset: 30,
        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
        position: 'end',
        // Allows you to correct label positioning on this axis by positive or negative x and y offset.
        labelOffset: {
          x: 0,
          y: 0
        },
        // If labels should be shown or not
        showLabel: true,
        // If the axis grid should be drawn or not
        showGrid: true,
        // Interpolation function that allows you to intercept the value from the axis label
        labelInterpolationFnc: Chartist.noop,
        // This value specifies the minimum width in pixel of the scale steps
        scaleMinSpace: 30,
        // Use only integer values (whole numbers) for the scale steps
        onlyInteger: false
      },
      // Options for Y-Axis
      axisY: {
        // The offset of the chart drawing area to the border of the container
        offset: 40,
        // Position where labels are placed. Can be set to `start` or `end` where `start` is equivalent to left or top on vertical axis and `end` is equivalent to right or bottom on horizontal axis.
        position: 'start',
        // Allows you to correct label positioning on this axis by positive or negative x and y offset.
        labelOffset: {
          x: 0,
          y: 0
        },
        // If labels should be shown or not
        showLabel: true,
        // If the axis grid should be drawn or not
        showGrid: true,
        // Interpolation function that allows you to intercept the value from the axis label
        labelInterpolationFnc: Chartist.noop,
        // This value specifies the minimum height in pixel of the scale steps
        scaleMinSpace: 20,
        // Use only integer values (whole numbers) for the scale steps
        onlyInteger: false
      },
      // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')
      width: undefined,
      // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')
      height: undefined,
      // Overriding the natural high of the chart allows you to zoom in or limit the charts highest displayed value
      high: undefined,
      // Overriding the natural low of the chart allows you to zoom in or limit the charts lowest displayed value
      low: undefined,
      // Unless low/high are explicitly set, bar chart will be centered at zero by default. Set referenceValue to null to auto scale.
      referenceValue: 0,
      // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}
      chartPadding: {
        top: 15,
        right: 15,
        bottom: 5,
        left: 10
      },
      // Specify the distance in pixel of bars in a group
      seriesBarDistance: 15,
      // If set to true this property will cause the series bars to be stacked. Check the `stackMode` option for further stacking options.
      stackBars: false,
      // If set to 'overlap' this property will force the stacked bars to draw from the zero line.
      // If set to 'accumulate' this property will form a total for each series point. This will also influence the y-axis and the overall bounds of the chart. In stacked mode the seriesBarDistance property will have no effect.
      stackMode: 'accumulate',
      // Inverts the axes of the bar chart in order to draw a horizontal bar chart. Be aware that you also need to invert your axis settings as the Y Axis will now display the labels and the X Axis the values.
      horizontalBars: false,
      // If set to true then each bar will represent a series and the data array is expected to be a one dimensional array of data values rather than a series array of series. This is useful if the bar chart should represent a profile rather than some data over time.
      distributeSeries: false,
      // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.
      reverseData: false,
      // If the bar chart should add a background fill to the .ct-grids group.
      showGridBackground: false,
      // Override the class names that get used to generate the SVG structure of the chart
      classNames: {
        chart: 'ct-chart-bar',
        horizontalBars: 'ct-horizontal-bars',
        label: 'ct-label',
        labelGroup: 'ct-labels',
        series: 'ct-series',
        bar: 'ct-bar',
        grid: 'ct-grid',
        gridGroup: 'ct-grids',
        gridBackground: 'ct-grid-background',
        vertical: 'ct-vertical',
        horizontal: 'ct-horizontal',
        start: 'ct-start',
        end: 'ct-end'
      }
    };
    /**
     * Creates a new chart
     *
     */

    function createChart(options) {
      var data;
      var highLow;

      if (options.distributeSeries) {
        data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');
        data.normalized.series = data.normalized.series.map(function (value) {
          return [value];
        });
      } else {
        data = Chartist.normalizeData(this.data, options.reverseData, options.horizontalBars ? 'x' : 'y');
      } // Create new svg element


      this.svg = Chartist.createSvg(this.container, options.width, options.height, options.classNames.chart + (options.horizontalBars ? ' ' + options.classNames.horizontalBars : '')); // Drawing groups in correct order

      var gridGroup = this.svg.elem('g').addClass(options.classNames.gridGroup);
      var seriesGroup = this.svg.elem('g');
      var labelGroup = this.svg.elem('g').addClass(options.classNames.labelGroup);

      if (options.stackBars && data.normalized.series.length !== 0) {
        // If stacked bars we need to calculate the high low from stacked values from each series
        var serialSums = Chartist.serialMap(data.normalized.series, function serialSums() {
          return Array.prototype.slice.call(arguments).map(function (value) {
            return value;
          }).reduce(function (prev, curr) {
            return {
              x: prev.x + (curr && curr.x) || 0,
              y: prev.y + (curr && curr.y) || 0
            };
          }, {
            x: 0,
            y: 0
          });
        });
        highLow = Chartist.getHighLow([serialSums], options, options.horizontalBars ? 'x' : 'y');
      } else {
        highLow = Chartist.getHighLow(data.normalized.series, options, options.horizontalBars ? 'x' : 'y');
      } // Overrides of high / low from settings


      highLow.high = +options.high || (options.high === 0 ? 0 : highLow.high);
      highLow.low = +options.low || (options.low === 0 ? 0 : highLow.low);
      var chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding);
      var valueAxis, labelAxisTicks, labelAxis, axisX, axisY; // We need to set step count based on some options combinations

      if (options.distributeSeries && options.stackBars) {
        // If distributed series are enabled and bars need to be stacked, we'll only have one bar and therefore should
        // use only the first label for the step axis
        labelAxisTicks = data.normalized.labels.slice(0, 1);
      } else {
        // If distributed series are enabled but stacked bars aren't, we should use the series labels
        // If we are drawing a regular bar chart with two dimensional series data, we just use the labels array
        // as the bars are normalized
        labelAxisTicks = data.normalized.labels;
      } // Set labelAxis and valueAxis based on the horizontalBars setting. This setting will flip the axes if necessary.


      if (options.horizontalBars) {
        if (options.axisX.type === undefined) {
          valueAxis = axisX = new Chartist.AutoScaleAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {
            highLow: highLow,
            referenceValue: 0
          }));
        } else {
          valueAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, Chartist.extend({}, options.axisX, {
            highLow: highLow,
            referenceValue: 0
          }));
        }

        if (options.axisY.type === undefined) {
          labelAxis = axisY = new Chartist.StepAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, {
            ticks: labelAxisTicks
          });
        } else {
          labelAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, options.axisY);
        }
      } else {
        if (options.axisX.type === undefined) {
          labelAxis = axisX = new Chartist.StepAxis(Chartist.Axis.units.x, data.normalized.series, chartRect, {
            ticks: labelAxisTicks
          });
        } else {
          labelAxis = axisX = options.axisX.type.call(Chartist, Chartist.Axis.units.x, data.normalized.series, chartRect, options.axisX);
        }

        if (options.axisY.type === undefined) {
          valueAxis = axisY = new Chartist.AutoScaleAxis(Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {
            highLow: highLow,
            referenceValue: 0
          }));
        } else {
          valueAxis = axisY = options.axisY.type.call(Chartist, Chartist.Axis.units.y, data.normalized.series, chartRect, Chartist.extend({}, options.axisY, {
            highLow: highLow,
            referenceValue: 0
          }));
        }
      } // Projected 0 point


      var zeroPoint = options.horizontalBars ? chartRect.x1 + valueAxis.projectValue(0) : chartRect.y1 - valueAxis.projectValue(0); // Used to track the screen coordinates of stacked bars

      var stackedBarValues = [];
      labelAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);
      valueAxis.createGridAndLabels(gridGroup, labelGroup, this.supportsForeignObject, options, this.eventEmitter);

      if (options.showGridBackground) {
        Chartist.createGridBackground(gridGroup, chartRect, options.classNames.gridBackground, this.eventEmitter);
      } // Draw the series


      data.raw.series.forEach(function (series, seriesIndex) {
        // Calculating bi-polar value of index for seriesOffset. For i = 0..4 biPol will be -1.5, -0.5, 0.5, 1.5 etc.
        var biPol = seriesIndex - (data.raw.series.length - 1) / 2; // Half of the period width between vertical grid lines used to position bars

        var periodHalfLength; // Current series SVG element

        var seriesElement; // We need to set periodHalfLength based on some options combinations

        if (options.distributeSeries && !options.stackBars) {
          // If distributed series are enabled but stacked bars aren't, we need to use the length of the normaizedData array
          // which is the series count and divide by 2
          periodHalfLength = labelAxis.axisLength / data.normalized.series.length / 2;
        } else if (options.distributeSeries && options.stackBars) {
          // If distributed series and stacked bars are enabled we'll only get one bar so we should just divide the axis
          // length by 2
          periodHalfLength = labelAxis.axisLength / 2;
        } else {
          // On regular bar charts we should just use the series length
          periodHalfLength = labelAxis.axisLength / data.normalized.series[seriesIndex].length / 2;
        } // Adding the series group to the series element


        seriesElement = seriesGroup.elem('g'); // Write attributes to series group element. If series name or meta is undefined the attributes will not be written

        seriesElement.attr({
          'ct:series-name': series.name,
          'ct:meta': Chartist.serialize(series.meta)
        }); // Use series class from series data or if not set generate one

        seriesElement.addClass([options.classNames.series, series.className || options.classNames.series + '-' + Chartist.alphaNumerate(seriesIndex)].join(' '));
        data.normalized.series[seriesIndex].forEach(function (value, valueIndex) {
          var projected, bar, previousStack, labelAxisValueIndex; // We need to set labelAxisValueIndex based on some options combinations

          if (options.distributeSeries && !options.stackBars) {
            // If distributed series are enabled but stacked bars aren't, we can use the seriesIndex for later projection
            // on the step axis for label positioning
            labelAxisValueIndex = seriesIndex;
          } else if (options.distributeSeries && options.stackBars) {
            // If distributed series and stacked bars are enabled, we will only get one bar and therefore always use
            // 0 for projection on the label step axis
            labelAxisValueIndex = 0;
          } else {
            // On regular bar charts we just use the value index to project on the label step axis
            labelAxisValueIndex = valueIndex;
          } // We need to transform coordinates differently based on the chart layout


          if (options.horizontalBars) {
            projected = {
              x: chartRect.x1 + valueAxis.projectValue(value && value.x ? value.x : 0, valueIndex, data.normalized.series[seriesIndex]),
              y: chartRect.y1 - labelAxis.projectValue(value && value.y ? value.y : 0, labelAxisValueIndex, data.normalized.series[seriesIndex])
            };
          } else {
            projected = {
              x: chartRect.x1 + labelAxis.projectValue(value && value.x ? value.x : 0, labelAxisValueIndex, data.normalized.series[seriesIndex]),
              y: chartRect.y1 - valueAxis.projectValue(value && value.y ? value.y : 0, valueIndex, data.normalized.series[seriesIndex])
            };
          } // If the label axis is a step based axis we will offset the bar into the middle of between two steps using
          // the periodHalfLength value. Also we do arrange the different series so that they align up to each other using
          // the seriesBarDistance. If we don't have a step axis, the bar positions can be chosen freely so we should not
          // add any automated positioning.


          if (labelAxis instanceof Chartist.StepAxis) {
            // Offset to center bar between grid lines, but only if the step axis is not stretched
            if (!labelAxis.options.stretch) {
              projected[labelAxis.units.pos] += periodHalfLength * (options.horizontalBars ? -1 : 1);
            } // Using bi-polar offset for multiple series if no stacked bars or series distribution is used


            projected[labelAxis.units.pos] += options.stackBars || options.distributeSeries ? 0 : biPol * options.seriesBarDistance * (options.horizontalBars ? -1 : 1);
          } // Enter value in stacked bar values used to remember previous screen value for stacking up bars


          previousStack = stackedBarValues[valueIndex] || zeroPoint;
          stackedBarValues[valueIndex] = previousStack - (zeroPoint - projected[labelAxis.counterUnits.pos]); // Skip if value is undefined

          if (value === undefined) {
            return;
          }

          var positions = {};
          positions[labelAxis.units.pos + '1'] = projected[labelAxis.units.pos];
          positions[labelAxis.units.pos + '2'] = projected[labelAxis.units.pos];

          if (options.stackBars && (options.stackMode === 'accumulate' || !options.stackMode)) {
            // Stack mode: accumulate (default)
            // If bars are stacked we use the stackedBarValues reference and otherwise base all bars off the zero line
            // We want backwards compatibility, so the expected fallback without the 'stackMode' option
            // to be the original behaviour (accumulate)
            positions[labelAxis.counterUnits.pos + '1'] = previousStack;
            positions[labelAxis.counterUnits.pos + '2'] = stackedBarValues[valueIndex];
          } else {
            // Draw from the zero line normally
            // This is also the same code for Stack mode: overlap
            positions[labelAxis.counterUnits.pos + '1'] = zeroPoint;
            positions[labelAxis.counterUnits.pos + '2'] = projected[labelAxis.counterUnits.pos];
          } // Limit x and y so that they are within the chart rect


          positions.x1 = Math.min(Math.max(positions.x1, chartRect.x1), chartRect.x2);
          positions.x2 = Math.min(Math.max(positions.x2, chartRect.x1), chartRect.x2);
          positions.y1 = Math.min(Math.max(positions.y1, chartRect.y2), chartRect.y1);
          positions.y2 = Math.min(Math.max(positions.y2, chartRect.y2), chartRect.y1);
          var metaData = Chartist.getMetaData(series, valueIndex); // Create bar element

          bar = seriesElement.elem('line', positions, options.classNames.bar).attr({
            'ct:value': [value.x, value.y].filter(Chartist.isNumeric).join(','),
            'ct:meta': Chartist.serialize(metaData)
          });
          this.eventEmitter.emit('draw', Chartist.extend({
            type: 'bar',
            value: value,
            index: valueIndex,
            meta: metaData,
            series: series,
            seriesIndex: seriesIndex,
            axisX: axisX,
            axisY: axisY,
            chartRect: chartRect,
            group: seriesElement,
            element: bar
          }, positions));
        }.bind(this));
      }.bind(this));
      this.eventEmitter.emit('created', {
        bounds: valueAxis.bounds,
        chartRect: chartRect,
        axisX: axisX,
        axisY: axisY,
        svg: this.svg,
        options: options
      });
    }
    /**
     * This method creates a new bar chart and returns API object that you can use for later changes.
     *
     * @memberof Chartist.Bar
     * @param {String|Node} query A selector query string or directly a DOM element
     * @param {Object} data The data object that needs to consist of a labels and a series array
     * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.
     * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]
     * @return {Object} An object which exposes the API for the created chart
     *
     * @example
     * // Create a simple bar chart
     * var data = {
     *   labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
     *   series: [
     *     [5, 2, 4, 2, 0]
     *   ]
     * };
     *
     * // In the global name space Chartist we call the Bar function to initialize a bar chart. As a first parameter we pass in a selector where we would like to get our chart created and as a second parameter we pass our data object.
     * new Chartist.Bar('.ct-chart', data);
     *
     * @example
     * // This example creates a bipolar grouped bar chart where the boundaries are limitted to -10 and 10
     * new Chartist.Bar('.ct-chart', {
     *   labels: [1, 2, 3, 4, 5, 6, 7],
     *   series: [
     *     [1, 3, 2, -5, -3, 1, -6],
     *     [-5, -2, -4, -1, 2, -3, 1]
     *   ]
     * }, {
     *   seriesBarDistance: 12,
     *   low: -10,
     *   high: 10
     * });
     *
     */


    function Bar(query, data, options, responsiveOptions) {
      Chartist.Bar.super.constructor.call(this, query, data, defaultOptions, Chartist.extend({}, defaultOptions, options), responsiveOptions);
    } // Creating bar chart type in Chartist namespace


    Chartist.Bar = Chartist.Base.extend({
      constructor: Bar,
      createChart: createChart
    });
  })(this || global, Chartist);

  ;
  /**
  * The pie chart module of Chartist that can be used to draw pie, donut or gauge charts
  *
  * @module Chartist.Pie
  */

  /* global Chartist */

  (function (globalRoot, Chartist) {
    'use strict';

    var window = globalRoot.window;
    var document = globalRoot.document;
    /**
     * Default options in line charts. Expand the code view to see a detailed list of options with comments.
     *
     * @memberof Chartist.Pie
     */

    var defaultOptions = {
      // Specify a fixed width for the chart as a string (i.e. '100px' or '50%')
      width: undefined,
      // Specify a fixed height for the chart as a string (i.e. '100px' or '50%')
      height: undefined,
      // Padding of the chart drawing area to the container element and labels as a number or padding object {top: 5, right: 5, bottom: 5, left: 5}
      chartPadding: 5,
      // Override the class names that are used to generate the SVG structure of the chart
      classNames: {
        chartPie: 'ct-chart-pie',
        chartDonut: 'ct-chart-donut',
        series: 'ct-series',
        slicePie: 'ct-slice-pie',
        sliceDonut: 'ct-slice-donut',
        sliceDonutSolid: 'ct-slice-donut-solid',
        label: 'ct-label'
      },
      // The start angle of the pie chart in degrees where 0 points north. A higher value offsets the start angle clockwise.
      startAngle: 0,
      // An optional total you can specify. By specifying a total value, the sum of the values in the series must be this total in order to draw a full pie. You can use this parameter to draw only parts of a pie or gauge charts.
      total: undefined,
      // If specified the donut CSS classes will be used and strokes will be drawn instead of pie slices.
      donut: false,
      // If specified the donut segments will be drawn as shapes instead of strokes.
      donutSolid: false,
      // Specify the donut stroke width, currently done in javascript for convenience. May move to CSS styles in the future.
      // This option can be set as number or string to specify a relative width (i.e. 100 or '30%').
      donutWidth: 60,
      // If a label should be shown or not
      showLabel: true,
      // Label position offset from the standard position which is half distance of the radius. This value can be either positive or negative. Positive values will position the label away from the center.
      labelOffset: 0,
      // This option can be set to 'inside', 'outside' or 'center'. Positioned with 'inside' the labels will be placed on half the distance of the radius to the border of the Pie by respecting the 'labelOffset'. The 'outside' option will place the labels at the border of the pie and 'center' will place the labels in the absolute center point of the chart. The 'center' option only makes sense in conjunction with the 'labelOffset' option.
      labelPosition: 'inside',
      // An interpolation function for the label value
      labelInterpolationFnc: Chartist.noop,
      // Label direction can be 'neutral', 'explode' or 'implode'. The labels anchor will be positioned based on those settings as well as the fact if the labels are on the right or left side of the center of the chart. Usually explode is useful when labels are positioned far away from the center.
      labelDirection: 'neutral',
      // If true the whole data is reversed including labels, the series order as well as the whole series data arrays.
      reverseData: false,
      // If true empty values will be ignored to avoid drawing unncessary slices and labels
      ignoreEmptyValues: false
    };
    /**
     * Determines SVG anchor position based on direction and center parameter
     *
     * @param center
     * @param label
     * @param direction
     * @return {string}
     */

    function determineAnchorPosition(center, label, direction) {
      var toTheRight = label.x > center.x;

      if (toTheRight && direction === 'explode' || !toTheRight && direction === 'implode') {
        return 'start';
      } else if (toTheRight && direction === 'implode' || !toTheRight && direction === 'explode') {
        return 'end';
      } else {
        return 'middle';
      }
    }
    /**
     * Creates the pie chart
     *
     * @param options
     */


    function createChart(options) {
      var data = Chartist.normalizeData(this.data);
      var seriesGroups = [],
          labelsGroup,
          chartRect,
          radius,
          labelRadius,
          totalDataSum,
          startAngle = options.startAngle; // Create SVG.js draw

      this.svg = Chartist.createSvg(this.container, options.width, options.height, options.donut ? options.classNames.chartDonut : options.classNames.chartPie); // Calculate charting rect

      chartRect = Chartist.createChartRect(this.svg, options, defaultOptions.padding); // Get biggest circle radius possible within chartRect

      radius = Math.min(chartRect.width() / 2, chartRect.height() / 2); // Calculate total of all series to get reference value or use total reference from optional options

      totalDataSum = options.total || data.normalized.series.reduce(function (previousValue, currentValue) {
        return previousValue + currentValue;
      }, 0);
      var donutWidth = Chartist.quantity(options.donutWidth);

      if (donutWidth.unit === '%') {
        donutWidth.value *= radius / 100;
      } // If this is a donut chart we need to adjust our radius to enable strokes to be drawn inside
      // Unfortunately this is not possible with the current SVG Spec
      // See this proposal for more details: http://lists.w3.org/Archives/Public/www-svg/2003Oct/0000.html


      radius -= options.donut && !options.donutSolid ? donutWidth.value / 2 : 0; // If labelPosition is set to `outside` or a donut chart is drawn then the label position is at the radius,
      // if regular pie chart it's half of the radius

      if (options.labelPosition === 'outside' || options.donut && !options.donutSolid) {
        labelRadius = radius;
      } else if (options.labelPosition === 'center') {
        // If labelPosition is center we start with 0 and will later wait for the labelOffset
        labelRadius = 0;
      } else if (options.donutSolid) {
        labelRadius = radius - donutWidth.value / 2;
      } else {
        // Default option is 'inside' where we use half the radius so the label will be placed in the center of the pie
        // slice
        labelRadius = radius / 2;
      } // Add the offset to the labelRadius where a negative offset means closed to the center of the chart


      labelRadius += options.labelOffset; // Calculate end angle based on total sum and current data value and offset with padding

      var center = {
        x: chartRect.x1 + chartRect.width() / 2,
        y: chartRect.y2 + chartRect.height() / 2
      }; // Check if there is only one non-zero value in the series array.

      var hasSingleValInSeries = data.raw.series.filter(function (val) {
        return val.hasOwnProperty('value') ? val.value !== 0 : val !== 0;
      }).length === 1; // Creating the series groups

      data.raw.series.forEach(function (series, index) {
        seriesGroups[index] = this.svg.elem('g', null, null);
      }.bind(this)); //if we need to show labels we create the label group now

      if (options.showLabel) {
        labelsGroup = this.svg.elem('g', null, null);
      } // Draw the series
      // initialize series groups


      data.raw.series.forEach(function (series, index) {
        // If current value is zero and we are ignoring empty values then skip to next value
        if (data.normalized.series[index] === 0 && options.ignoreEmptyValues) return; // If the series is an object and contains a name or meta data we add a custom attribute

        seriesGroups[index].attr({
          'ct:series-name': series.name
        }); // Use series class from series data or if not set generate one

        seriesGroups[index].addClass([options.classNames.series, series.className || options.classNames.series + '-' + Chartist.alphaNumerate(index)].join(' ')); // If the whole dataset is 0 endAngle should be zero. Can't divide by 0.

        var endAngle = totalDataSum > 0 ? startAngle + data.normalized.series[index] / totalDataSum * 360 : 0; // Use slight offset so there are no transparent hairline issues

        var overlappigStartAngle = Math.max(0, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2)); // If we need to draw the arc for all 360 degrees we need to add a hack where we close the circle
        // with Z and use 359.99 degrees

        if (endAngle - overlappigStartAngle >= 359.99) {
          endAngle = overlappigStartAngle + 359.99;
        }

        var start = Chartist.polarToCartesian(center.x, center.y, radius, overlappigStartAngle),
            end = Chartist.polarToCartesian(center.x, center.y, radius, endAngle);
        var innerStart, innerEnd, donutSolidRadius; // Create a new path element for the pie chart. If this isn't a donut chart we should close the path for a correct stroke

        var path = new Chartist.Svg.Path(!options.donut || options.donutSolid).move(end.x, end.y).arc(radius, radius, 0, endAngle - startAngle > 180, 0, start.x, start.y); // If regular pie chart (no donut) we add a line to the center of the circle for completing the pie

        if (!options.donut) {
          path.line(center.x, center.y);
        } else if (options.donutSolid) {
          donutSolidRadius = radius - donutWidth.value;
          innerStart = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, startAngle - (index === 0 || hasSingleValInSeries ? 0 : 0.2));
          innerEnd = Chartist.polarToCartesian(center.x, center.y, donutSolidRadius, endAngle);
          path.line(innerStart.x, innerStart.y);
          path.arc(donutSolidRadius, donutSolidRadius, 0, endAngle - startAngle > 180, 1, innerEnd.x, innerEnd.y);
        } // Create the SVG path
        // If this is a donut chart we add the donut class, otherwise just a regular slice


        var pathClassName = options.classNames.slicePie;

        if (options.donut) {
          pathClassName = options.classNames.sliceDonut;

          if (options.donutSolid) {
            pathClassName = options.classNames.sliceDonutSolid;
          }
        }

        var pathElement = seriesGroups[index].elem('path', {
          d: path.stringify()
        }, pathClassName); // Adding the pie series value to the path

        pathElement.attr({
          'ct:value': data.normalized.series[index],
          'ct:meta': Chartist.serialize(series.meta)
        }); // If this is a donut, we add the stroke-width as style attribute

        if (options.donut && !options.donutSolid) {
          pathElement._node.style.strokeWidth = donutWidth.value + 'px';
        } // Fire off draw event


        this.eventEmitter.emit('draw', {
          type: 'slice',
          value: data.normalized.series[index],
          totalDataSum: totalDataSum,
          index: index,
          meta: series.meta,
          series: series,
          group: seriesGroups[index],
          element: pathElement,
          path: path.clone(),
          center: center,
          radius: radius,
          startAngle: startAngle,
          endAngle: endAngle
        }); // If we need to show labels we need to add the label for this slice now

        if (options.showLabel) {
          var labelPosition;

          if (data.raw.series.length === 1) {
            // If we have only 1 series, we can position the label in the center of the pie
            labelPosition = {
              x: center.x,
              y: center.y
            };
          } else {
            // Position at the labelRadius distance from center and between start and end angle
            labelPosition = Chartist.polarToCartesian(center.x, center.y, labelRadius, startAngle + (endAngle - startAngle) / 2);
          }

          var rawValue;

          if (data.normalized.labels && !Chartist.isFalseyButZero(data.normalized.labels[index])) {
            rawValue = data.normalized.labels[index];
          } else {
            rawValue = data.normalized.series[index];
          }

          var interpolatedValue = options.labelInterpolationFnc(rawValue, index);

          if (interpolatedValue || interpolatedValue === 0) {
            var labelElement = labelsGroup.elem('text', {
              dx: labelPosition.x,
              dy: labelPosition.y,
              'text-anchor': determineAnchorPosition(center, labelPosition, options.labelDirection)
            }, options.classNames.label).text('' + interpolatedValue); // Fire off draw event

            this.eventEmitter.emit('draw', {
              type: 'label',
              index: index,
              group: labelsGroup,
              element: labelElement,
              text: '' + interpolatedValue,
              x: labelPosition.x,
              y: labelPosition.y
            });
          }
        } // Set next startAngle to current endAngle.
        // (except for last slice)


        startAngle = endAngle;
      }.bind(this));
      this.eventEmitter.emit('created', {
        chartRect: chartRect,
        svg: this.svg,
        options: options
      });
    }
    /**
     * This method creates a new pie chart and returns an object that can be used to redraw the chart.
     *
     * @memberof Chartist.Pie
     * @param {String|Node} query A selector query string or directly a DOM element
     * @param {Object} data The data object in the pie chart needs to have a series property with a one dimensional data array. The values will be normalized against each other and don't necessarily need to be in percentage. The series property can also be an array of value objects that contain a value property and a className property to override the CSS class name for the series group.
     * @param {Object} [options] The options object with options that override the default options. Check the examples for a detailed list.
     * @param {Array} [responsiveOptions] Specify an array of responsive option arrays which are a media query and options object pair => [[mediaQueryString, optionsObject],[more...]]
     * @return {Object} An object with a version and an update method to manually redraw the chart
     *
     * @example
     * // Simple pie chart example with four series
     * new Chartist.Pie('.ct-chart', {
     *   series: [10, 2, 4, 3]
     * });
     *
     * @example
     * // Drawing a donut chart
     * new Chartist.Pie('.ct-chart', {
     *   series: [10, 2, 4, 3]
     * }, {
     *   donut: true
     * });
     *
     * @example
     * // Using donut, startAngle and total to draw a gauge chart
     * new Chartist.Pie('.ct-chart', {
     *   series: [20, 10, 30, 40]
     * }, {
     *   donut: true,
     *   donutWidth: 20,
     *   startAngle: 270,
     *   total: 200
     * });
     *
     * @example
     * // Drawing a pie chart with padding and labels that are outside the pie
     * new Chartist.Pie('.ct-chart', {
     *   series: [20, 10, 30, 40]
     * }, {
     *   chartPadding: 30,
     *   labelOffset: 50,
     *   labelDirection: 'explode'
     * });
     *
     * @example
     * // Overriding the class names for individual series as well as a name and meta data.
     * // The name will be written as ct:series-name attribute and the meta data will be serialized and written
     * // to a ct:meta attribute.
     * new Chartist.Pie('.ct-chart', {
     *   series: [{
     *     value: 20,
     *     name: 'Series 1',
     *     className: 'my-custom-class-one',
     *     meta: 'Meta One'
     *   }, {
     *     value: 10,
     *     name: 'Series 2',
     *     className: 'my-custom-class-two',
     *     meta: 'Meta Two'
     *   }, {
     *     value: 70,
     *     name: 'Series 3',
     *     className: 'my-custom-class-three',
     *     meta: 'Meta Three'
     *   }]
     * });
     */


    function Pie(query, data, options, responsiveOptions) {
      Chartist.Pie.super.constructor.call(this, query, data, defaultOptions, Chartist.extend({}, defaultOptions, options), responsiveOptions);
    } // Creating pie chart type in Chartist namespace


    Chartist.Pie = Chartist.Base.extend({
      constructor: Pie,
      createChart: createChart,
      determineAnchorPosition: determineAnchorPosition
    });
  })(this || global, Chartist);

  return Chartist;
});

/***/ }),

/***/ "upmi":
/*!***********************************************!*\
  !*** ./src/app/core/directives/must-match.ts ***!
  \***********************************************/
/*! exports provided: MustMatch */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MustMatch", function() { return MustMatch; });
// custom validator to check that two fields match
function MustMatch(controlName, matchingControlName) {
    return function (formGroup) {
        var control = formGroup.controls[controlName];
        var matchingControl = formGroup.controls[matchingControlName];
        if (matchingControl.errors && !matchingControl.errors.mustMatch) {
            // return if another validator has already found an error on the matchingControl
            return;
        }
        // set error on matchingControl if validation fails
        if (control.value !== matchingControl.value) {
            matchingControl.setErrors({ mustMatch: true });
        }
        else {
            matchingControl.setErrors(null);
        }
    };
}


/***/ }),

/***/ "utQ/":
/*!**************************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/HubConnectionBuilder.js ***!
  \**************************************************************************/
/*! exports provided: HubConnectionBuilder */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HubConnectionBuilder", function() { return HubConnectionBuilder; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/objectSpread2 */ "VTBJ");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _DefaultReconnectPolicy__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./DefaultReconnectPolicy */ "k+Ty");
/* harmony import */ var _HttpConnection__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./HttpConnection */ "2lgH");
/* harmony import */ var _HubConnection__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./HubConnection */ "mLhb");
/* harmony import */ var _ILogger__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ILogger */ "M+GD");
/* harmony import */ var _JsonHubProtocol__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./JsonHubProtocol */ "2zAs");
/* harmony import */ var _Loggers__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./Loggers */ "v3Fn");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./Utils */ "ftFU");



// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.







var LogLevelNameMapping = {
  trace: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Trace,
  debug: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Debug,
  info: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Information,
  information: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Information,
  warn: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Warning,
  warning: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Warning,
  error: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Error,
  critical: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].Critical,
  none: _ILogger__WEBPACK_IMPORTED_MODULE_6__["LogLevel"].None
};

function parseLogLevel(name) {
  // Case-insensitive matching via lower-casing
  // Yes, I know case-folding is a complicated problem in Unicode, but we only support
  // the ASCII strings defined in LogLevelNameMapping anyway, so it's fine -anurse.
  var mapping = LogLevelNameMapping[name.toLowerCase()];

  if (typeof mapping !== "undefined") {
    return mapping;
  } else {
    throw new Error("Unknown log level: ".concat(name));
  }
}
/** A builder for configuring {@link @microsoft/signalr.HubConnection} instances. */


var HubConnectionBuilder = /*#__PURE__*/function () {
  function HubConnectionBuilder() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, HubConnectionBuilder);
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(HubConnectionBuilder, [{
    key: "configureLogging",
    value: function configureLogging(logging) {
      _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isRequired(logging, "logging");

      if (isLogger(logging)) {
        this.logger = logging;
      } else if (typeof logging === "string") {
        var logLevel = parseLogLevel(logging);
        this.logger = new _Utils__WEBPACK_IMPORTED_MODULE_9__["ConsoleLogger"](logLevel);
      } else {
        this.logger = new _Utils__WEBPACK_IMPORTED_MODULE_9__["ConsoleLogger"](logging);
      }

      return this;
    }
  }, {
    key: "withUrl",
    value: function withUrl(url, transportTypeOrOptions) {
      _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isRequired(url, "url");
      _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isNotEmpty(url, "url");
      this.url = url; // Flow-typing knows where it's at. Since HttpTransportType is a number and IHttpConnectionOptions is guaranteed
      // to be an object, we know (as does TypeScript) this comparison is all we need to figure out which overload was called.

      if (typeof transportTypeOrOptions === "object") {
        this.httpConnectionOptions = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.httpConnectionOptions), transportTypeOrOptions);
      } else {
        this.httpConnectionOptions = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__["default"])({}, this.httpConnectionOptions), {}, {
          transport: transportTypeOrOptions
        });
      }

      return this;
    }
    /** Configures the {@link @microsoft/signalr.HubConnection} to use the specified Hub Protocol.
     *
     * @param {IHubProtocol} protocol The {@link @microsoft/signalr.IHubProtocol} implementation to use.
     */

  }, {
    key: "withHubProtocol",
    value: function withHubProtocol(protocol) {
      _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isRequired(protocol, "protocol");
      this.protocol = protocol;
      return this;
    }
  }, {
    key: "withAutomaticReconnect",
    value: function withAutomaticReconnect(retryDelaysOrReconnectPolicy) {
      if (this.reconnectPolicy) {
        throw new Error("A reconnectPolicy has already been set.");
      }

      if (!retryDelaysOrReconnectPolicy) {
        this.reconnectPolicy = new _DefaultReconnectPolicy__WEBPACK_IMPORTED_MODULE_3__["DefaultReconnectPolicy"]();
      } else if (Array.isArray(retryDelaysOrReconnectPolicy)) {
        this.reconnectPolicy = new _DefaultReconnectPolicy__WEBPACK_IMPORTED_MODULE_3__["DefaultReconnectPolicy"](retryDelaysOrReconnectPolicy);
      } else {
        this.reconnectPolicy = retryDelaysOrReconnectPolicy;
      }

      return this;
    }
    /** Configures {@link @microsoft/signalr.HubConnection.serverTimeoutInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.
     *
     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.
     */

  }, {
    key: "withServerTimeout",
    value: function withServerTimeout(milliseconds) {
      _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isRequired(milliseconds, "milliseconds");
      this._serverTimeoutInMilliseconds = milliseconds;
      return this;
    }
    /** Configures {@link @microsoft/signalr.HubConnection.keepAliveIntervalInMilliseconds} for the {@link @microsoft/signalr.HubConnection}.
     *
     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.
     */

  }, {
    key: "withKeepAliveInterval",
    value: function withKeepAliveInterval(milliseconds) {
      _Utils__WEBPACK_IMPORTED_MODULE_9__["Arg"].isRequired(milliseconds, "milliseconds");
      this._keepAliveIntervalInMilliseconds = milliseconds;
      return this;
    }
    /** Enables and configures options for the Stateful Reconnect feature.
     *
     * @returns The {@link @microsoft/signalr.HubConnectionBuilder} instance, for chaining.
     */

  }, {
    key: "withStatefulReconnect",
    value: function withStatefulReconnect(options) {
      if (this.httpConnectionOptions === undefined) {
        this.httpConnectionOptions = {};
      }

      this.httpConnectionOptions._useStatefulReconnect = true;
      this._statefulReconnectBufferSize = options === null || options === void 0 ? void 0 : options.bufferSize;
      return this;
    }
    /** Creates a {@link @microsoft/signalr.HubConnection} from the configuration options specified in this builder.
     *
     * @returns {HubConnection} The configured {@link @microsoft/signalr.HubConnection}.
     */

  }, {
    key: "build",
    value: function build() {
      // If httpConnectionOptions has a logger, use it. Otherwise, override it with the one
      // provided to configureLogger
      var httpConnectionOptions = this.httpConnectionOptions || {}; // If it's 'null', the user **explicitly** asked for null, don't mess with it.

      if (httpConnectionOptions.logger === undefined) {
        // If our logger is undefined or null, that's OK, the HttpConnection constructor will handle it.
        httpConnectionOptions.logger = this.logger;
      } // Now create the connection


      if (!this.url) {
        throw new Error("The 'HubConnectionBuilder.withUrl' method must be called before building the connection.");
      }

      var connection = new _HttpConnection__WEBPACK_IMPORTED_MODULE_4__["HttpConnection"](this.url, httpConnectionOptions);
      return _HubConnection__WEBPACK_IMPORTED_MODULE_5__["HubConnection"].create(connection, this.logger || _Loggers__WEBPACK_IMPORTED_MODULE_8__["NullLogger"].instance, this.protocol || new _JsonHubProtocol__WEBPACK_IMPORTED_MODULE_7__["JsonHubProtocol"](), this.reconnectPolicy, this._serverTimeoutInMilliseconds, this._keepAliveIntervalInMilliseconds, this._statefulReconnectBufferSize);
    }
  }]);

  return HubConnectionBuilder;
}();

function isLogger(logger) {
  return logger.log !== undefined;
}

/***/ }),

/***/ "v3Fn":
/*!*************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/Loggers.js ***!
  \*************************************************************/
/*! exports provided: NullLogger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NullLogger", function() { return NullLogger; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");


// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

/** A logger that does nothing when log messages are sent to it. */
var NullLogger = /*#__PURE__*/function () {
  function NullLogger() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__["default"])(this, NullLogger);
  }
  /** @inheritDoc */
  // eslint-disable-next-line


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__["default"])(NullLogger, [{
    key: "log",
    value: function log(_logLevel, _message) {}
  }]);

  return NullLogger;
}();
/** The singleton instance of the {@link @microsoft/signalr.NullLogger}. */

NullLogger.instance = new NullLogger();

/***/ }),

/***/ "vCDI":
/*!***********************************************************************!*\
  !*** ./src/app/core/components/admin/visit/services/visit.service.ts ***!
  \***********************************************************************/
/*! exports provided: VisitService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "VisitService", function() { return VisitService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};



var VisitService = /** @class */ (function () {
    function VisitService(httpClient) {
        this.httpClient = httpClient;
    }
    VisitService.prototype.getVisitList = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/getall');
    };
    VisitService.prototype.getVisitListByPaging = function (page, pageSize) {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/getVisitsByPagingQuery?page=' + page + '&pageSize=' + pageSize);
    };
    VisitService.prototype.getVisitMergeMultiVisitList = function (date) {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/GetVisitsWithMultiVisits' + '?date=' + date);
    };
    VisitService.prototype.getVisitById = function (id) {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/getbyid?id=' + id);
    };
    VisitService.prototype.getPersonnelVisitList = function () {
        return this.httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/getpersonnelvisitlist');
    };
    VisitService.prototype.addVisit = function (visit) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/', visit, { responseType: 'text' });
    };
    VisitService.prototype.pedestrianEntrance = function (visit) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/pedestrianEntrance', visit, { responseType: 'text' });
    };
    VisitService.prototype.vehicleEntrance = function (visit) {
        return this.httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/vehicleEntrance', visit, { responseType: 'text' });
    };
    VisitService.prototype.updateVisit = function (visit) {
        return this.httpClient.put(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/', visit, { responseType: 'text' });
    };
    VisitService.prototype.deleteVisit = function (id) {
        return this.httpClient.request('delete', environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + '/Visits/', { body: { id: id } });
    };
    VisitService.prototype.rejectVisit = function (id, reasonForRejection) {
        var apiUrl = environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/Visits/rejectvisit";
        var body = { id: id, reasonForRejection: reasonForRejection };
        return this.httpClient.put(apiUrl, body, { responseType: 'text' });
    };
    VisitService.prototype.confirmVisit = function (id) {
        return this.httpClient.put(environments_environment__WEBPACK_IMPORTED_MODULE_2__["environment"].getApiUrl + "/VisitConfirms/confirmVisit?visitId=" + id, {}, { responseType: 'text' });
    };
    VisitService.ctorParameters = function () { return [
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    VisitService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [_angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], VisitService);
    return VisitService;
}());



/***/ }),

/***/ "wNif":
/*!************************************************************************!*\
  !*** ./src/app/core/components/admin/user/Services/signalr.service.ts ***!
  \************************************************************************/
/*! exports provided: SignalRService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SignalRService", function() { return SignalRService; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _microsoft_signalr__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @microsoft/signalr */ "6HpG");
/* harmony import */ var app_core_services_local_storage_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/core/services/local-storage.service */ "3G0t");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var SignalRService = /** @class */ (function () {
    function SignalRService(storageService) {
        this.storageService = storageService;
        this.isConnected = false;
    }
    SignalRService.prototype.startConnection = function () {
        var _this = this;
        if (this.isConnected) {
            return;
        }
        var token = this.storageService.getToken();
        if (!token) {
            return;
        }
        // API URL'den SignalR hub URL'sini oluştur
        var hubUrl = environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].getApiUrl.replace('/api/v1', '/d_o10_sig_r');
        this.hubConnection = new _microsoft_signalr__WEBPACK_IMPORTED_MODULE_1__["HubConnectionBuilder"]()
            .withUrl(hubUrl, {
            transport: _microsoft_signalr__WEBPACK_IMPORTED_MODULE_1__["HttpTransportType"].WebSockets,
            accessTokenFactory: function () { return token; },
            skipNegotiation: true
        })
            .configureLogging(environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].production ? _microsoft_signalr__WEBPACK_IMPORTED_MODULE_1__["LogLevel"].Error : _microsoft_signalr__WEBPACK_IMPORTED_MODULE_1__["LogLevel"].Debug)
            .withAutomaticReconnect([0, 2000, 5000, 10000])
            .build();
        this.hubConnection
            .start()
            .then(function () {
            _this.isConnected = true;
            // Bağlantı başarılı olduğunda mevcut connection ID'yi logla
        })
            .catch(function (err) {
            _this.isConnected = false;
            // Hata detaylarını logla
            if (err.statusCode) {
            }
            if (err.message) {
            }
        });
        // Bağlantı durumu değişikliklerini dinle
        this.hubConnection.onclose(function (error) {
            _this.isConnected = false;
        });
        this.hubConnection.onreconnecting(function (error) {
            console.warn('SignalR Reconnecting:', error);
            _this.isConnected = false;
        });
        this.hubConnection.onreconnected(function (connectionId) {
            _this.isConnected = true;
        });
    };
    SignalRService.prototype.addVisitAddedListener = function (callback) {
        if (!this.hubConnection) {
            console.error('Hub connection is not initialized');
            return;
        }
        try {
            this.hubConnection.on("VisitAdded", function (visit) {
                callback(visit);
            });
        }
        catch (error) {
            console.error('Error adding VisitAdded listener:', error);
        }
    };
    SignalRService.prototype.stopConnection = function () {
        var _this = this;
        if (this.hubConnection) {
            this.hubConnection.stop()
                .then(function () {
                _this.isConnected = false;
            })
                .catch(function (err) {
                console.error('Error while stopping SignalR:', err);
            });
        }
    };
    SignalRService.ctorParameters = function () { return [
        { type: app_core_services_local_storage_service__WEBPACK_IMPORTED_MODULE_2__["LocalStorageService"] }
    ]; };
    SignalRService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [app_core_services_local_storage_service__WEBPACK_IMPORTED_MODULE_2__["LocalStorageService"]])
    ], SignalRService);
    return SignalRService;
}());



/***/ }),

/***/ "wZkO":
/*!**********************************************************************!*\
  !*** ./node_modules/@angular/material/__ivy_ngcc__/fesm2015/tabs.js ***!
  \**********************************************************************/
/*! exports provided: MAT_TABS_CONFIG, MAT_TAB_GROUP, MatInkBar, MatTab, MatTabBody, MatTabBodyPortal, MatTabChangeEvent, MatTabContent, MatTabGroup, MatTabHeader, MatTabLabel, MatTabLabelWrapper, MatTabLink, MatTabNav, MatTabsModule, _MAT_INK_BAR_POSITIONER, _MatTabBodyBase, _MatTabGroupBase, _MatTabHeaderBase, _MatTabLinkBase, _MatTabNavBase, matTabsAnimations, ɵangular_material_src_material_tabs_tabs_a, ɵangular_material_src_material_tabs_tabs_b, ɵangular_material_src_material_tabs_tabs_c, ɵangular_material_src_material_tabs_tabs_d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_TABS_CONFIG", function() { return MAT_TABS_CONFIG; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MAT_TAB_GROUP", function() { return MAT_TAB_GROUP; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatInkBar", function() { return MatInkBar; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTab", function() { return MatTab; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabBody", function() { return MatTabBody; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabBodyPortal", function() { return MatTabBodyPortal; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabChangeEvent", function() { return MatTabChangeEvent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabContent", function() { return MatTabContent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabGroup", function() { return MatTabGroup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabHeader", function() { return MatTabHeader; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabLabel", function() { return MatTabLabel; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabLabelWrapper", function() { return MatTabLabelWrapper; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabLink", function() { return MatTabLink; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabNav", function() { return MatTabNav; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MatTabsModule", function() { return MatTabsModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MAT_INK_BAR_POSITIONER", function() { return _MAT_INK_BAR_POSITIONER; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatTabBodyBase", function() { return _MatTabBodyBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatTabGroupBase", function() { return _MatTabGroupBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatTabHeaderBase", function() { return _MatTabHeaderBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatTabLinkBase", function() { return _MatTabLinkBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "_MatTabNavBase", function() { return _MatTabNavBase; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "matTabsAnimations", function() { return matTabsAnimations; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_tabs_tabs_a", function() { return _MAT_INK_BAR_POSITIONER_FACTORY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_tabs_tabs_b", function() { return MAT_TAB_LABEL; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_tabs_tabs_c", function() { return MAT_TAB_CONTENT; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵangular_material_src_material_tabs_tabs_d", function() { return MatPaginatedTabHeader; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/assertThisInitialized */ "JX7q");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/toConsumableArray */ "KQm4");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/get */ "ReuC");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/getPrototypeOf */ "foSv");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/inherits */ "Ji7U");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createSuper */ "LK+K");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/cdk/a11y */ "u47x");
/* harmony import */ var _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/cdk/observers */ "GU7r");
/* harmony import */ var _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/cdk/portal */ "+rOU");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/common */ "ofXK");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var _angular_material_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/material/core */ "FKr1");
/* harmony import */ var _angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/platform-browser/animations */ "R1ws");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! rxjs */ "qCKp");
/* harmony import */ var _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @angular/cdk/bidi */ "cH1L");
/* harmony import */ var _angular_animations__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/animations */ "R0Ic");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! rxjs/operators */ "kU1M");
/* harmony import */ var _angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! @angular/cdk/coercion */ "8LU1");
/* harmony import */ var _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! @angular/cdk/scrolling */ "vxfF");
/* harmony import */ var _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! @angular/cdk/platform */ "nLfN");
/* harmony import */ var _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! @angular/cdk/keycodes */ "FtGj");























/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token for the MatInkBar's Positioner. */











function MatTab_ng_template_0_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojection"](0);
  }
}

var _c0 = ["*"];

function MatTabBody_ng_template_2_Template(rf, ctx) {}

var _c1 = function _c1(a0) {
  return {
    animationDuration: a0
  };
};

var _c2 = function _c2(a0, a1) {
  return {
    value: a0,
    params: a1
  };
};

var _c3 = ["tabBodyWrapper"];
var _c4 = ["tabHeader"];

function MatTabGroup_div_2_ng_template_2_ng_template_0_Template(rf, ctx) {}

function MatTabGroup_div_2_ng_template_2_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](0, MatTabGroup_div_2_ng_template_2_ng_template_0_Template, 0, 0, "ng-template", 9);
  }

  if (rf & 2) {
    var tab_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("cdkPortalOutlet", tab_r4.templateLabel);
  }
}

function MatTabGroup_div_2_ng_template_3_Template(rf, ctx) {
  if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](0);
  }

  if (rf & 2) {
    var tab_r4 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](tab_r4.textLabel);
  }
}

function MatTabGroup_div_2_Template(rf, ctx) {
  if (rf & 1) {
    var _r12 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatTabGroup_div_2_Template_div_click_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r12);
      var tab_r4 = ctx.$implicit;
      var i_r5 = ctx.index;
      var ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();

      var _r0 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵreference"](1);

      return ctx_r11._handleClick(tab_r4, _r0, i_r5);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, MatTabGroup_div_2_ng_template_2_Template, 1, 1, "ng-template", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](3, MatTabGroup_div_2_ng_template_3_Template, 1, 1, "ng-template", 8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var tab_r4 = ctx.$implicit;
    var i_r5 = ctx.index;
    var ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-label-active", ctx_r1.selectedIndex == i_r5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("id", ctx_r1._getTabLabelId(i_r5))("disabled", tab_r4.disabled)("matRippleDisabled", tab_r4.disabled || ctx_r1.disableRipple);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("tabIndex", ctx_r1._getTabIndex(tab_r4, i_r5))("aria-posinset", i_r5 + 1)("aria-setsize", ctx_r1._tabs.length)("aria-controls", ctx_r1._getTabContentId(i_r5))("aria-selected", ctx_r1.selectedIndex == i_r5)("aria-label", tab_r4.ariaLabel || null)("aria-labelledby", !tab_r4.ariaLabel && tab_r4.ariaLabelledby ? tab_r4.ariaLabelledby : null);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", tab_r4.templateLabel);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !tab_r4.templateLabel);
  }
}

function MatTabGroup_mat_tab_body_5_Template(rf, ctx) {
  if (rf & 1) {
    var _r16 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();

    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "mat-tab-body", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("_onCentered", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentered_0_listener() {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r16);
      var ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r15._removeTabBodyWrapperHeight();
    })("_onCentering", function MatTabGroup_mat_tab_body_5_Template_mat_tab_body__onCentering_0_listener($event) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r16);
      var ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
      return ctx_r17._setTabBodyWrapperHeight($event);
    });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
  }

  if (rf & 2) {
    var tab_r13 = ctx.$implicit;
    var i_r14 = ctx.index;
    var ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-body-active", ctx_r3.selectedIndex == i_r14);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("id", ctx_r3._getTabContentId(i_r14))("content", tab_r13.content)("position", tab_r13.position)("origin", tab_r13.origin)("animationDuration", ctx_r3.animationDuration);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-labelledby", ctx_r3._getTabLabelId(i_r14));
  }
}

var _c5 = ["tabListContainer"];
var _c6 = ["tabList"];
var _c7 = ["nextPaginator"];
var _c8 = ["previousPaginator"];
var _c9 = ["mat-tab-nav-bar", ""];

var _MAT_INK_BAR_POSITIONER = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('MatInkBarPositioner', {
  providedIn: 'root',
  factory: _MAT_INK_BAR_POSITIONER_FACTORY
});
/**
 * The default positioner function for the MatInkBar.
 * @docs-private
 */


function _MAT_INK_BAR_POSITIONER_FACTORY() {
  var method = function method(element) {
    return {
      left: element ? (element.offsetLeft || 0) + 'px' : '0',
      width: element ? (element.offsetWidth || 0) + 'px' : '0'
    };
  };

  return method;
}
/**
 * The ink-bar is used to display and animate the line underneath the current active tab label.
 * @docs-private
 */


var MatInkBar = /*#__PURE__*/function () {
  function MatInkBar(_elementRef, _ngZone, _inkBarPositioner, _animationMode) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatInkBar);

    this._elementRef = _elementRef;
    this._ngZone = _ngZone;
    this._inkBarPositioner = _inkBarPositioner;
    this._animationMode = _animationMode;
  }
  /**
   * Calculates the styles from the provided element in order to align the ink-bar to that element.
   * Shows the ink bar if previously set as hidden.
   * @param element
   */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatInkBar, [{
    key: "alignToElement",
    value: function alignToElement(element) {
      var _this = this;

      this.show();

      if (typeof requestAnimationFrame !== 'undefined') {
        this._ngZone.runOutsideAngular(function () {
          requestAnimationFrame(function () {
            return _this._setStyles(element);
          });
        });
      } else {
        this._setStyles(element);
      }
    }
    /** Shows the ink bar. */

  }, {
    key: "show",
    value: function show() {
      this._elementRef.nativeElement.style.visibility = 'visible';
    }
    /** Hides the ink bar. */

  }, {
    key: "hide",
    value: function hide() {
      this._elementRef.nativeElement.style.visibility = 'hidden';
    }
    /**
     * Sets the proper styles to the ink bar element.
     * @param element
     */

  }, {
    key: "_setStyles",
    value: function _setStyles(element) {
      var positions = this._inkBarPositioner(element);

      var inkBar = this._elementRef.nativeElement;
      inkBar.style.left = positions.left;
      inkBar.style.width = positions.width;
    }
  }]);

  return MatInkBar;
}();

MatInkBar.ɵfac = function MatInkBar_Factory(t) {
  return new (t || MatInkBar)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_MAT_INK_BAR_POSITIONER), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

MatInkBar.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatInkBar,
  selectors: [["mat-ink-bar"]],
  hostAttrs: [1, "mat-ink-bar"],
  hostVars: 2,
  hostBindings: function MatInkBar_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
    }
  }
});

MatInkBar.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_MAT_INK_BAR_POSITIONER]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatInkBar, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: 'mat-ink-bar',
      host: {
        'class': 'mat-ink-bar',
        '[class._mat-animation-noopable]': "_animationMode === 'NoopAnimations'"
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_MAT_INK_BAR_POSITIONER]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Injection token that can be used to reference instances of `MatTabContent`. It serves as
 * alternative token to the actual `MatTabContent` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */


var MAT_TAB_CONTENT = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('MatTabContent');
/** Decorates the `ng-template` tags and reads out the template from it. */

var MatTabContent = function MatTabContent(template) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabContent);

  this.template = template;
};

MatTabContent.ɵfac = function MatTabContent_Factory(t) {
  return new (t || MatTabContent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"]));
};

MatTabContent.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatTabContent,
  selectors: [["", "matTabContent", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([{
    provide: MAT_TAB_CONTENT,
    useExisting: MatTabContent
  }])]
});

MatTabContent.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabContent, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: '[matTabContent]',
      providers: [{
        provide: MAT_TAB_CONTENT,
        useExisting: MatTabContent
      }]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Injection token that can be used to reference instances of `MatTabLabel`. It serves as
 * alternative token to the actual `MatTabLabel` class which could cause unnecessary
 * retention of the class and its directive metadata.
 */


var MAT_TAB_LABEL = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('MatTabLabel');
/** Used to flag tab labels for use with the portal directive */

var MatTabLabel = /*#__PURE__*/function (_CdkPortal) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabLabel, _CdkPortal);

  var _super = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabLabel);

  function MatTabLabel() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabLabel);

    return _super.apply(this, arguments);
  }

  return MatTabLabel;
}(_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["CdkPortal"]);

MatTabLabel.ɵfac = function MatTabLabel_Factory(t) {
  return ɵMatTabLabel_BaseFactory(t || MatTabLabel);
};

MatTabLabel.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatTabLabel,
  selectors: [["", "mat-tab-label", ""], ["", "matTabLabel", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([{
    provide: MAT_TAB_LABEL,
    useExisting: MatTabLabel
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});
var ɵMatTabLabel_BaseFactory = /*@__PURE__*/_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetInheritedFactory"](MatTabLabel);

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabLabel, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: '[mat-tab-label], [matTabLabel]',
      providers: [{
        provide: MAT_TAB_LABEL,
        useExisting: MatTabLabel
      }]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Boilerplate for applying mixins to MatTab.

/** @docs-private */


var MatTabBase = function MatTabBase() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabBase);
};

var _MatTabMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["mixinDisabled"])(MatTabBase);
/**
 * Used to provide a tab group to a tab without causing a circular dependency.
 * @docs-private
 */


var MAT_TAB_GROUP = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('MAT_TAB_GROUP');

var MatTab = /*#__PURE__*/function (_MatTabMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTab, _MatTabMixinBase2);

  var _super2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTab);

  function MatTab(_viewContainerRef,
  /**
   * @deprecated `_closestTabGroup` parameter to become required.
   * @breaking-change 10.0.0
   */
  _closestTabGroup) {
    var _this2;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTab);

    _this2 = _super2.call(this);
    _this2._viewContainerRef = _viewContainerRef;
    _this2._closestTabGroup = _closestTabGroup;
    /** Plain text label for the tab, used when there is no template label. */

    _this2.textLabel = '';
    /** Portal that will be the hosted content of the tab */

    _this2._contentPortal = null;
    /** Emits whenever the internal state of the tab changes. */

    _this2._stateChanges = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /**
     * The relatively indexed position where 0 represents the center, negative is left, and positive
     * represents the right.
     */

    _this2.position = null;
    /**
     * The initial relatively index origin of the tab if it was created and selected after there
     * was already a selected tab. Provides context of what position the tab should originate from.
     */

    _this2.origin = null;
    /**
     * Whether the tab is currently active.
     */

    _this2.isActive = false;
    return _this2;
  }
  /** Content for the tab label given by `<ng-template mat-tab-label>`. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatTab, [{
    key: "templateLabel",
    get: function get() {
      return this._templateLabel;
    },
    set: function set(value) {
      this._setTemplateLabelInput(value);
    }
    /** @docs-private */

  }, {
    key: "content",
    get: function get() {
      return this._contentPortal;
    }
  }, {
    key: "ngOnChanges",
    value: function ngOnChanges(changes) {
      if (changes.hasOwnProperty('textLabel') || changes.hasOwnProperty('disabled')) {
        this._stateChanges.next();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._stateChanges.complete();
    }
  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      this._contentPortal = new _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["TemplatePortal"](this._explicitContent || this._implicitContent, this._viewContainerRef);
    }
    /**
     * This has been extracted to a util because of TS 4 and VE.
     * View Engine doesn't support property rename inheritance.
     * TS 4.0 doesn't allow properties to override accessors or vice-versa.
     * @docs-private
     */

  }, {
    key: "_setTemplateLabelInput",
    value: function _setTemplateLabelInput(value) {
      // Only update the templateLabel via query if there is actually
      // a MatTabLabel found. This works around an issue where a user may have
      // manually set `templateLabel` during creation mode, which would then get clobbered
      // by `undefined` when this query resolves.
      if (value) {
        this._templateLabel = value;
      }
    }
  }]);

  return MatTab;
}(_MatTabMixinBase);

MatTab.ɵfac = function MatTab_Factory(t) {
  return new (t || MatTab)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_TAB_GROUP, 8));
};

MatTab.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatTab,
  selectors: [["mat-tab"]],
  contentQueries: function MatTab_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MAT_TAB_LABEL, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MAT_TAB_CONTENT, 3, _angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"]);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.templateLabel = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._explicitContent = _t.first);
    }
  },
  viewQuery: function MatTab_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"], 3);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._implicitContent = _t.first);
    }
  },
  inputs: {
    disabled: "disabled",
    textLabel: ["label", "textLabel"],
    ariaLabel: ["aria-label", "ariaLabel"],
    ariaLabelledby: ["aria-labelledby", "ariaLabelledby"]
  },
  exportAs: ["matTab"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"], _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵNgOnChangesFeature"]],
  ngContentSelectors: _c0,
  decls: 1,
  vars: 0,
  template: function MatTab_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](0, MatTab_ng_template_0_Template, 1, 0, "ng-template");
    }
  },
  encapsulation: 2
});

MatTab.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_TAB_GROUP]
    }]
  }];
};

MatTab.propDecorators = {
  templateLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
    args: [MAT_TAB_LABEL]
  }],
  _explicitContent: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
    args: [MAT_TAB_CONTENT, {
      read: _angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"],
      static: true
    }]
  }],
  _implicitContent: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"], {
      static: true
    }]
  }],
  textLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
    args: ['label']
  }],
  ariaLabel: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
    args: ['aria-label']
  }],
  ariaLabelledby: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
    args: ['aria-labelledby']
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTab, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-tab',
      template: "<!-- Create a template for the content of the <mat-tab> so that we can grab a reference to this\n    TemplateRef and use it in a Portal to render the tab content in the appropriate place in the\n    tab-group. -->\n<ng-template><ng-content></ng-content></ng-template>\n",
      inputs: ['disabled'],
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].Default,
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      exportAs: 'matTab'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_TAB_GROUP]
      }]
    }];
  }, {
    textLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
      args: ['label']
    }],
    templateLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
      args: [MAT_TAB_LABEL]
    }],
    _explicitContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChild"],
      args: [MAT_TAB_CONTENT, {
        read: _angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"],
        static: true
      }]
    }],
    _implicitContent: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["TemplateRef"], {
        static: true
      }]
    }],
    ariaLabel: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
      args: ['aria-label']
    }],
    ariaLabelledby: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
      args: ['aria-labelledby']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Animations used by the Material tabs.
 * @docs-private
 */


var matTabsAnimations = {
  /** Animation translates a tab along the X axis. */
  translateTab: Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["trigger"])('translateTab', [// Note: transitions to `none` instead of 0, because some browsers might blur the content.
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["state"])('center, void, left-origin-center, right-origin-center', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    transform: 'none'
  })), // If the tab is either on the left or right, we additionally add a `min-height` of 1px
  // in order to ensure that the element has a height before its state changes. This is
  // necessary because Chrome does seem to skip the transition in RTL mode if the element does
  // not have a static height and is not rendered. See related issue: #9465
  Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["state"])('left', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    transform: 'translate3d(-100%, 0, 0)',
    minHeight: '1px'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["state"])('right', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    transform: 'translate3d(100%, 0, 0)',
    minHeight: '1px'
  })), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["transition"])('* => left, * => right, left => center, right => center', Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["animate"])('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["transition"])('void => left-origin-center', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    transform: 'translate3d(-100%, 0, 0)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["animate"])('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')]), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["transition"])('void => right-origin-center', [Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["style"])({
    transform: 'translate3d(100%, 0, 0)'
  }), Object(_angular_animations__WEBPACK_IMPORTED_MODULE_17__["animate"])('{{animationDuration}} cubic-bezier(0.35, 0, 0.25, 1)')])])
};
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * The portal host directive for the contents of the tab.
 * @docs-private
 */

var MatTabBodyPortal = /*#__PURE__*/function (_CdkPortalOutlet) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabBodyPortal, _CdkPortalOutlet);

  var _super3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabBodyPortal);

  function MatTabBodyPortal(componentFactoryResolver, viewContainerRef, _host,
  /**
   * @deprecated `_document` parameter to be made required.
   * @breaking-change 9.0.0
   */
  _document) {
    var _this3;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabBodyPortal);

    _this3 = _super3.call(this, componentFactoryResolver, viewContainerRef, _document);
    _this3._host = _host;
    /** Subscription to events for when the tab body begins centering. */

    _this3._centeringSub = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    /** Subscription to events for when the tab body finishes leaving from center position. */

    _this3._leavingSub = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    return _this3;
  }
  /** Set initial visibility or set up subscription for changing visibility. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatTabBodyPortal, [{
    key: "ngOnInit",
    value: function ngOnInit() {
      var _this4 = this;

      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatTabBodyPortal.prototype), "ngOnInit", this).call(this);

      this._centeringSub = this._host._beforeCentering.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["startWith"])(this._host._isCenterPosition(this._host._position))).subscribe(function (isCentering) {
        if (isCentering && !_this4.hasAttached()) {
          _this4.attach(_this4._host._content);
        }
      });
      this._leavingSub = this._host._afterLeavingCenter.subscribe(function () {
        _this4.detach();
      });
    }
    /** Clean up centering subscription. */

  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatTabBodyPortal.prototype), "ngOnDestroy", this).call(this);

      this._centeringSub.unsubscribe();

      this._leavingSub.unsubscribe();
    }
  }]);

  return MatTabBodyPortal;
}(_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["CdkPortalOutlet"]);

MatTabBodyPortal.ɵfac = function MatTabBodyPortal_Factory(t) {
  return new (t || MatTabBodyPortal)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ComponentFactoryResolver"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
    return MatTabBody;
  })), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]));
};

MatTabBodyPortal.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatTabBodyPortal,
  selectors: [["", "matTabBodyHost", ""]],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

MatTabBodyPortal.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ComponentFactoryResolver"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]
  }, {
    type: MatTabBody,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
        return MatTabBody;
      })]
    }]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabBodyPortal, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: '[matTabBodyHost]'
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ComponentFactoryResolver"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewContainerRef"]
    }, {
      type: MatTabBody,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
          return MatTabBody;
        })]
      }]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["DOCUMENT"]]
      }]
    }];
  }, null);
})();
/**
 * Base class with all of the `MatTabBody` functionality.
 * @docs-private
 */


var _MatTabBodyBase = /*#__PURE__*/function () {
  function _MatTabBodyBase(_elementRef, _dir, changeDetectorRef) {
    var _this5 = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _MatTabBodyBase);

    this._elementRef = _elementRef;
    this._dir = _dir;
    /** Subscription to the directionality change observable. */

    this._dirChangeSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    /** Emits when an animation on the tab is complete. */

    this._translateTabComplete = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /** Event emitted when the tab begins to animate towards the center as the active tab. */

    this._onCentering = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Event emitted before the centering of the tab begins. */

    this._beforeCentering = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Event emitted before the centering of the tab begins. */

    this._afterLeavingCenter = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Event emitted when the tab completes its animation towards the center. */

    this._onCentered = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"](true); // Note that the default value will always be overwritten by `MatTabBody`, but we need one
    // anyway to prevent the animations module from throwing an error if the body is used on its own.

    /** Duration for the tab's animation. */

    this.animationDuration = '500ms';

    if (_dir) {
      this._dirChangeSubscription = _dir.change.subscribe(function (dir) {
        _this5._computePositionAnimationState(dir);

        changeDetectorRef.markForCheck();
      });
    } // Ensure that we get unique animation events, because the `.done` callback can get
    // invoked twice in some browsers. See https://github.com/angular/angular/issues/24084.


    this._translateTabComplete.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["distinctUntilChanged"])(function (x, y) {
      return x.fromState === y.fromState && x.toState === y.toState;
    })).subscribe(function (event) {
      // If the transition to the center is complete, emit an event.
      if (_this5._isCenterPosition(event.toState) && _this5._isCenterPosition(_this5._position)) {
        _this5._onCentered.emit();
      }

      if (_this5._isCenterPosition(event.fromState) && !_this5._isCenterPosition(_this5._position)) {
        _this5._afterLeavingCenter.emit();
      }
    });
  }
  /** The shifted index position of the tab body, where zero represents the active center tab. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(_MatTabBodyBase, [{
    key: "position",
    set: function set(position) {
      this._positionIndex = position;

      this._computePositionAnimationState();
    }
    /**
     * After initialized, check if the content is centered and has an origin. If so, set the
     * special position states that transition the tab from the left or right before centering.
     */

  }, {
    key: "ngOnInit",
    value: function ngOnInit() {
      if (this._position == 'center' && this.origin != null) {
        this._position = this._computePositionFromOrigin(this.origin);
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._dirChangeSubscription.unsubscribe();

      this._translateTabComplete.complete();
    }
  }, {
    key: "_onTranslateTabStarted",
    value: function _onTranslateTabStarted(event) {
      var isCentering = this._isCenterPosition(event.toState);

      this._beforeCentering.emit(isCentering);

      if (isCentering) {
        this._onCentering.emit(this._elementRef.nativeElement.clientHeight);
      }
    }
    /** The text direction of the containing app. */

  }, {
    key: "_getLayoutDirection",
    value: function _getLayoutDirection() {
      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';
    }
    /** Whether the provided position state is considered center, regardless of origin. */

  }, {
    key: "_isCenterPosition",
    value: function _isCenterPosition(position) {
      return position == 'center' || position == 'left-origin-center' || position == 'right-origin-center';
    }
    /** Computes the position state that will be used for the tab-body animation trigger. */

  }, {
    key: "_computePositionAnimationState",
    value: function _computePositionAnimationState() {
      var dir = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._getLayoutDirection();

      if (this._positionIndex < 0) {
        this._position = dir == 'ltr' ? 'left' : 'right';
      } else if (this._positionIndex > 0) {
        this._position = dir == 'ltr' ? 'right' : 'left';
      } else {
        this._position = 'center';
      }
    }
    /**
     * Computes the position state based on the specified origin position. This is used if the
     * tab is becoming visible immediately after creation.
     */

  }, {
    key: "_computePositionFromOrigin",
    value: function _computePositionFromOrigin(origin) {
      var dir = this._getLayoutDirection();

      if (dir == 'ltr' && origin <= 0 || dir == 'rtl' && origin > 0) {
        return 'left-origin-center';
      }

      return 'right-origin-center';
    }
  }]);

  return _MatTabBodyBase;
}();

_MatTabBodyBase.ɵfac = function _MatTabBodyBase_Factory(t) {
  return new (t || _MatTabBodyBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]));
};

_MatTabBodyBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: _MatTabBodyBase,
  inputs: {
    animationDuration: "animationDuration",
    position: "position",
    _content: ["content", "_content"],
    origin: "origin"
  },
  outputs: {
    _onCentering: "_onCentering",
    _beforeCentering: "_beforeCentering",
    _afterLeavingCenter: "_afterLeavingCenter",
    _onCentered: "_onCentered"
  }
});

_MatTabBodyBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }];
};

_MatTabBodyBase.propDecorators = {
  _onCentering: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _beforeCentering: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _afterLeavingCenter: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _onCentered: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  _content: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
    args: ['content']
  }],
  origin: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  animationDuration: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  position: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](_MatTabBodyBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }];
  }, {
    _onCentering: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    _beforeCentering: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    _afterLeavingCenter: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    _onCentered: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    animationDuration: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    position: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    _content: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"],
      args: ['content']
    }],
    origin: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * Wrapper for the contents of a tab.
 * @docs-private
 */


var MatTabBody = /*#__PURE__*/function (_MatTabBodyBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabBody, _MatTabBodyBase2);

  var _super4 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabBody);

  function MatTabBody(elementRef, dir, changeDetectorRef) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabBody);

    return _super4.call(this, elementRef, dir, changeDetectorRef);
  }

  return MatTabBody;
}(_MatTabBodyBase);

MatTabBody.ɵfac = function MatTabBody_Factory(t) {
  return new (t || MatTabBody)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]));
};

MatTabBody.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatTabBody,
  selectors: [["mat-tab-body"]],
  viewQuery: function MatTabBody_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalHostDirective"], 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._portalHost = _t.first);
    }
  },
  hostAttrs: [1, "mat-tab-body"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]],
  decls: 3,
  vars: 6,
  consts: [[1, "mat-tab-body-content"], ["content", ""], ["matTabBodyHost", ""]],
  template: function MatTabBody_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("@translateTab.start", function MatTabBody_Template_div_animation_translateTab_start_0_listener($event) {
        return ctx._onTranslateTabStarted($event);
      })("@translateTab.done", function MatTabBody_Template_div_animation_translateTab_done_0_listener($event) {
        return ctx._translateTabComplete.next($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, MatTabBody_ng_template_2_Template, 0, 0, "ng-template", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("@translateTab", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](3, _c2, ctx._position, _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction1"](1, _c1, ctx.animationDuration)));
    }
  },
  directives: [MatTabBodyPortal],
  styles: [".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\n"],
  encapsulation: 2,
  data: {
    animation: [matTabsAnimations.translateTab]
  }
});

MatTabBody.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }];
};

MatTabBody.propDecorators = {
  _portalHost: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalHostDirective"]]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabBody, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-tab-body',
      template: "<div class=\"mat-tab-body-content\" #content\n     [@translateTab]=\"{\n        value: _position,\n        params: {animationDuration: animationDuration}\n     }\"\n     (@translateTab.start)=\"_onTranslateTabStarted($event)\"\n     (@translateTab.done)=\"_translateTabComplete.next($event)\">\n  <ng-template matTabBodyHost></ng-template>\n</div>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].Default,
      animations: [matTabsAnimations.translateTab],
      host: {
        'class': 'mat-tab-body'
      },
      styles: [".mat-tab-body-content{height:100%;overflow:auto}.mat-tab-group-dynamic-height .mat-tab-body-content{overflow:hidden}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }];
  }, {
    _portalHost: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [_angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalHostDirective"]]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Injection token that can be used to provide the default options the tabs module. */


var MAT_TABS_CONFIG = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["InjectionToken"]('MAT_TABS_CONFIG');
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Used to generate unique ID's for each tab component */

var nextId = 0;
/** A simple change event emitted on focus or selection changes. */

var MatTabChangeEvent = function MatTabChangeEvent() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabChangeEvent);
}; // Boilerplate for applying mixins to MatTabGroup.

/** @docs-private */


var MatTabGroupMixinBase = function MatTabGroupMixinBase(_elementRef) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabGroupMixinBase);

  this._elementRef = _elementRef;
};

var _MatTabGroupMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["mixinColor"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["mixinDisableRipple"])(MatTabGroupMixinBase), 'primary');
/**
 * Base class with all of the `MatTabGroupBase` functionality.
 * @docs-private
 */


var _MatTabGroupBase = /*#__PURE__*/function (_MatTabGroupMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(_MatTabGroupBase, _MatTabGroupMixinBase2);

  var _super5 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(_MatTabGroupBase);

  function _MatTabGroupBase(elementRef, _changeDetectorRef, defaultConfig, _animationMode) {
    var _this6;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _MatTabGroupBase);

    _this6 = _super5.call(this, elementRef);
    _this6._changeDetectorRef = _changeDetectorRef;
    _this6._animationMode = _animationMode;
    /** All of the tabs that belong to the group. */

    _this6._tabs = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["QueryList"]();
    /** The tab index that should be selected after the content has been checked. */

    _this6._indexToSelect = 0;
    /** Snapshot of the height of the tab body wrapper before another tab is activated. */

    _this6._tabBodyWrapperHeight = 0;
    /** Subscription to tabs being added/removed. */

    _this6._tabsSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    /** Subscription to changes in the tab labels. */

    _this6._tabLabelSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["Subscription"].EMPTY;
    _this6._dynamicHeight = false;
    _this6._selectedIndex = null;
    /** Position of the tab header. */

    _this6.headerPosition = 'above';
    /** Output to enable support for two-way binding on `[(selectedIndex)]` */

    _this6.selectedIndexChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Event emitted when focus has changed within a tab group. */

    _this6.focusChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Event emitted when the body animation has completed */

    _this6.animationDone = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Event emitted when the tab selection has changed. */

    _this6.selectedTabChange = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"](true);
    _this6._groupId = nextId++;
    _this6.animationDuration = defaultConfig && defaultConfig.animationDuration ? defaultConfig.animationDuration : '500ms';
    _this6.disablePagination = defaultConfig && defaultConfig.disablePagination != null ? defaultConfig.disablePagination : false;
    return _this6;
  }
  /** Whether the tab group should grow to the size of the active tab. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(_MatTabGroupBase, [{
    key: "dynamicHeight",
    get: function get() {
      return this._dynamicHeight;
    },
    set: function set(value) {
      this._dynamicHeight = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_19__["coerceBooleanProperty"])(value);
    }
    /** The index of the active tab. */

  }, {
    key: "selectedIndex",
    get: function get() {
      return this._selectedIndex;
    },
    set: function set(value) {
      this._indexToSelect = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_19__["coerceNumberProperty"])(value, null);
    }
    /** Duration for the tab animation. Will be normalized to milliseconds if no units are set. */

  }, {
    key: "animationDuration",
    get: function get() {
      return this._animationDuration;
    },
    set: function set(value) {
      this._animationDuration = /^\d+$/.test(value) ? value + 'ms' : value;
    }
    /** Background color of the tab group. */

  }, {
    key: "backgroundColor",
    get: function get() {
      return this._backgroundColor;
    },
    set: function set(value) {
      var nativeElement = this._elementRef.nativeElement;
      nativeElement.classList.remove("mat-background-".concat(this.backgroundColor));

      if (value) {
        nativeElement.classList.add("mat-background-".concat(value));
      }

      this._backgroundColor = value;
    }
    /**
     * After the content is checked, this component knows what tabs have been defined
     * and what the selected index should be. This is where we can know exactly what position
     * each tab should be in according to the new selected index, and additionally we know how
     * a new selected tab should transition in (from the left or right).
     */

  }, {
    key: "ngAfterContentChecked",
    value: function ngAfterContentChecked() {
      var _this7 = this;

      // Don't clamp the `indexToSelect` immediately in the setter because it can happen that
      // the amount of tabs changes before the actual change detection runs.
      var indexToSelect = this._indexToSelect = this._clampTabIndex(this._indexToSelect); // If there is a change in selected index, emit a change event. Should not trigger if
      // the selected index has not yet been initialized.


      if (this._selectedIndex != indexToSelect) {
        var isFirstRun = this._selectedIndex == null;

        if (!isFirstRun) {
          this.selectedTabChange.emit(this._createChangeEvent(indexToSelect));
        } // Changing these values after change detection has run
        // since the checked content may contain references to them.


        Promise.resolve().then(function () {
          _this7._tabs.forEach(function (tab, index) {
            return tab.isActive = index === indexToSelect;
          });

          if (!isFirstRun) {
            _this7.selectedIndexChange.emit(indexToSelect);
          }
        });
      } // Setup the position for each tab and optionally setup an origin on the next selected tab.


      this._tabs.forEach(function (tab, index) {
        tab.position = index - indexToSelect; // If there is already a selected tab, then set up an origin for the next selected tab
        // if it doesn't have one already.

        if (_this7._selectedIndex != null && tab.position == 0 && !tab.origin) {
          tab.origin = indexToSelect - _this7._selectedIndex;
        }
      });

      if (this._selectedIndex !== indexToSelect) {
        this._selectedIndex = indexToSelect;

        this._changeDetectorRef.markForCheck();
      }
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this8 = this;

      this._subscribeToAllTabChanges();

      this._subscribeToTabLabels(); // Subscribe to changes in the amount of tabs, in order to be
      // able to re-render the content as new tabs are added or removed.


      this._tabsSubscription = this._tabs.changes.subscribe(function () {
        var indexToSelect = _this8._clampTabIndex(_this8._indexToSelect); // Maintain the previously-selected tab if a new tab is added or removed and there is no
        // explicit change that selects a different tab.


        if (indexToSelect === _this8._selectedIndex) {
          var tabs = _this8._tabs.toArray();

          for (var i = 0; i < tabs.length; i++) {
            if (tabs[i].isActive) {
              // Assign both to the `_indexToSelect` and `_selectedIndex` so we don't fire a changed
              // event, otherwise the consumer may end up in an infinite loop in some edge cases like
              // adding a tab within the `selectedIndexChange` event.
              _this8._indexToSelect = _this8._selectedIndex = i;
              break;
            }
          }
        }

        _this8._changeDetectorRef.markForCheck();
      });
    }
    /** Listens to changes in all of the tabs. */

  }, {
    key: "_subscribeToAllTabChanges",
    value: function _subscribeToAllTabChanges() {
      var _this9 = this;

      // Since we use a query with `descendants: true` to pick up the tabs, we may end up catching
      // some that are inside of nested tab groups. We filter them out manually by checking that
      // the closest group to the tab is the current one.
      this._allTabs.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["startWith"])(this._allTabs)).subscribe(function (tabs) {
        _this9._tabs.reset(tabs.filter(function (tab) {
          // @breaking-change 10.0.0 Remove null check for `_closestTabGroup`
          // once it becomes a required parameter in MatTab.
          return !tab._closestTabGroup || tab._closestTabGroup === _this9;
        }));

        _this9._tabs.notifyOnChanges();
      });
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._tabs.destroy();

      this._tabsSubscription.unsubscribe();

      this._tabLabelSubscription.unsubscribe();
    }
    /** Re-aligns the ink bar to the selected tab element. */

  }, {
    key: "realignInkBar",
    value: function realignInkBar() {
      if (this._tabHeader) {
        this._tabHeader._alignInkBarToSelectedTab();
      }
    }
  }, {
    key: "_focusChanged",
    value: function _focusChanged(index) {
      this.focusChange.emit(this._createChangeEvent(index));
    }
  }, {
    key: "_createChangeEvent",
    value: function _createChangeEvent(index) {
      var event = new MatTabChangeEvent();
      event.index = index;

      if (this._tabs && this._tabs.length) {
        event.tab = this._tabs.toArray()[index];
      }

      return event;
    }
    /**
     * Subscribes to changes in the tab labels. This is needed, because the @Input for the label is
     * on the MatTab component, whereas the data binding is inside the MatTabGroup. In order for the
     * binding to be updated, we need to subscribe to changes in it and trigger change detection
     * manually.
     */

  }, {
    key: "_subscribeToTabLabels",
    value: function _subscribeToTabLabels() {
      var _this10 = this;

      if (this._tabLabelSubscription) {
        this._tabLabelSubscription.unsubscribe();
      }

      this._tabLabelSubscription = rxjs__WEBPACK_IMPORTED_MODULE_15__["merge"].apply(void 0, Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_1__["default"])(this._tabs.map(function (tab) {
        return tab._stateChanges;
      }))).subscribe(function () {
        return _this10._changeDetectorRef.markForCheck();
      });
    }
    /** Clamps the given index to the bounds of 0 and the tabs length. */

  }, {
    key: "_clampTabIndex",
    value: function _clampTabIndex(index) {
      // Note the `|| 0`, which ensures that values like NaN can't get through
      // and which would otherwise throw the component into an infinite loop
      // (since Math.max(NaN, 0) === NaN).
      return Math.min(this._tabs.length - 1, Math.max(index || 0, 0));
    }
    /** Returns a unique id for each tab label element */

  }, {
    key: "_getTabLabelId",
    value: function _getTabLabelId(i) {
      return "mat-tab-label-".concat(this._groupId, "-").concat(i);
    }
    /** Returns a unique id for each tab content element */

  }, {
    key: "_getTabContentId",
    value: function _getTabContentId(i) {
      return "mat-tab-content-".concat(this._groupId, "-").concat(i);
    }
    /**
     * Sets the height of the body wrapper to the height of the activating tab if dynamic
     * height property is true.
     */

  }, {
    key: "_setTabBodyWrapperHeight",
    value: function _setTabBodyWrapperHeight(tabHeight) {
      if (!this._dynamicHeight || !this._tabBodyWrapperHeight) {
        return;
      }

      var wrapper = this._tabBodyWrapper.nativeElement;
      wrapper.style.height = this._tabBodyWrapperHeight + 'px'; // This conditional forces the browser to paint the height so that
      // the animation to the new height can have an origin.

      if (this._tabBodyWrapper.nativeElement.offsetHeight) {
        wrapper.style.height = tabHeight + 'px';
      }
    }
    /** Removes the height of the tab body wrapper. */

  }, {
    key: "_removeTabBodyWrapperHeight",
    value: function _removeTabBodyWrapperHeight() {
      var wrapper = this._tabBodyWrapper.nativeElement;
      this._tabBodyWrapperHeight = wrapper.clientHeight;
      wrapper.style.height = '';
      this.animationDone.emit();
    }
    /** Handle click events, setting new selected index if appropriate. */

  }, {
    key: "_handleClick",
    value: function _handleClick(tab, tabHeader, index) {
      if (!tab.disabled) {
        this.selectedIndex = tabHeader.focusIndex = index;
      }
    }
    /** Retrieves the tabindex for the tab. */

  }, {
    key: "_getTabIndex",
    value: function _getTabIndex(tab, idx) {
      if (tab.disabled) {
        return null;
      }

      return this.selectedIndex === idx ? 0 : -1;
    }
  }]);

  return _MatTabGroupBase;
}(_MatTabGroupMixinBase);

_MatTabGroupBase.ɵfac = function _MatTabGroupBase_Factory(t) {
  return new (t || _MatTabGroupBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_TABS_CONFIG, 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

_MatTabGroupBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: _MatTabGroupBase,
  inputs: {
    headerPosition: "headerPosition",
    animationDuration: "animationDuration",
    disablePagination: "disablePagination",
    dynamicHeight: "dynamicHeight",
    selectedIndex: "selectedIndex",
    backgroundColor: "backgroundColor"
  },
  outputs: {
    selectedIndexChange: "selectedIndexChange",
    focusChange: "focusChange",
    animationDone: "animationDone",
    selectedTabChange: "selectedTabChange"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

_MatTabGroupBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_TABS_CONFIG]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

_MatTabGroupBase.propDecorators = {
  dynamicHeight: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selectedIndex: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  headerPosition: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  animationDuration: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  disablePagination: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  backgroundColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  selectedIndexChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  focusChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  animationDone: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }],
  selectedTabChange: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](_MatTabGroupBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_TABS_CONFIG]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    headerPosition: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selectedIndexChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    focusChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    animationDone: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    selectedTabChange: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Output"]
    }],
    animationDuration: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    disablePagination: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    dynamicHeight: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    selectedIndex: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    backgroundColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * Material design tab-group component. Supports basic tab pairs (label + content) and includes
 * animated ink-bar, keyboard navigation, and screen reader.
 * See: https://material.io/design/components/tabs.html
 */


var MatTabGroup = /*#__PURE__*/function (_MatTabGroupBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabGroup, _MatTabGroupBase2);

  var _super6 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabGroup);

  function MatTabGroup(elementRef, changeDetectorRef, defaultConfig, animationMode) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabGroup);

    return _super6.call(this, elementRef, changeDetectorRef, defaultConfig, animationMode);
  }

  return MatTabGroup;
}(_MatTabGroupBase);

MatTabGroup.ɵfac = function MatTabGroup_Factory(t) {
  return new (t || MatTabGroup)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MAT_TABS_CONFIG, 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

MatTabGroup.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatTabGroup,
  selectors: [["mat-tab-group"]],
  contentQueries: function MatTabGroup_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MatTab, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._allTabs = _t);
    }
  },
  viewQuery: function MatTabGroup_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c3, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c4, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._tabBodyWrapper = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._tabHeader = _t.first);
    }
  },
  hostAttrs: [1, "mat-tab-group"],
  hostVars: 4,
  hostBindings: function MatTabGroup_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-group-dynamic-height", ctx.dynamicHeight)("mat-tab-group-inverted-header", ctx.headerPosition === "below");
    }
  },
  inputs: {
    color: "color",
    disableRipple: "disableRipple"
  },
  exportAs: ["matTabGroup"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵProvidersFeature"]([{
    provide: MAT_TAB_GROUP,
    useExisting: MatTabGroup
  }]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]],
  decls: 6,
  vars: 7,
  consts: [[3, "selectedIndex", "disableRipple", "disablePagination", "indexFocused", "selectFocusedIndex"], ["tabHeader", ""], ["class", "mat-tab-label mat-focus-indicator", "role", "tab", "matTabLabelWrapper", "", "mat-ripple", "", "cdkMonitorElementFocus", "", 3, "id", "mat-tab-label-active", "disabled", "matRippleDisabled", "click", 4, "ngFor", "ngForOf"], [1, "mat-tab-body-wrapper"], ["tabBodyWrapper", ""], ["role", "tabpanel", 3, "id", "mat-tab-body-active", "content", "position", "origin", "animationDuration", "_onCentered", "_onCentering", 4, "ngFor", "ngForOf"], ["role", "tab", "matTabLabelWrapper", "", "mat-ripple", "", "cdkMonitorElementFocus", "", 1, "mat-tab-label", "mat-focus-indicator", 3, "id", "disabled", "matRippleDisabled", "click"], [1, "mat-tab-label-content"], [3, "ngIf"], [3, "cdkPortalOutlet"], ["role", "tabpanel", 3, "id", "content", "position", "origin", "animationDuration", "_onCentered", "_onCentering"]],
  template: function MatTabGroup_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "mat-tab-header", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("indexFocused", function MatTabGroup_Template_mat_tab_header_indexFocused_0_listener($event) {
        return ctx._focusChanged($event);
      })("selectFocusedIndex", function MatTabGroup_Template_mat_tab_header_selectFocusedIndex_0_listener($event) {
        return ctx.selectedIndex = $event;
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, MatTabGroup_div_2_Template, 4, 14, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "div", 3, 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](5, MatTabGroup_mat_tab_body_5_Template, 1, 8, "mat-tab-body", 5);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("selectedIndex", ctx.selectedIndex || 0)("disableRipple", ctx.disableRipple)("disablePagination", ctx.disablePagination);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx._tabs);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx._tabs);
    }
  },
  directives: function directives() {
    return [MatTabHeader, _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgForOf"], MatTabLabelWrapper, _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatRipple"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["CdkMonitorFocus"], _angular_common__WEBPACK_IMPORTED_MODULE_11__["NgIf"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["CdkPortalOutlet"], MatTabBody];
  },
  styles: [".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\n"],
  encapsulation: 2
});

MatTabGroup.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [MAT_TABS_CONFIG]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatTabGroup.propDecorators = {
  _allTabs: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChildren"],
    args: [MatTab, {
      descendants: true
    }]
  }],
  _tabBodyWrapper: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['tabBodyWrapper']
  }],
  _tabHeader: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['tabHeader']
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabGroup, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-tab-group',
      exportAs: 'matTabGroup',
      template: "<mat-tab-header #tabHeader\n               [selectedIndex]=\"selectedIndex || 0\"\n               [disableRipple]=\"disableRipple\"\n               [disablePagination]=\"disablePagination\"\n               (indexFocused)=\"_focusChanged($event)\"\n               (selectFocusedIndex)=\"selectedIndex = $event\">\n  <div class=\"mat-tab-label mat-focus-indicator\" role=\"tab\" matTabLabelWrapper mat-ripple cdkMonitorElementFocus\n       *ngFor=\"let tab of _tabs; let i = index\"\n       [id]=\"_getTabLabelId(i)\"\n       [attr.tabIndex]=\"_getTabIndex(tab, i)\"\n       [attr.aria-posinset]=\"i + 1\"\n       [attr.aria-setsize]=\"_tabs.length\"\n       [attr.aria-controls]=\"_getTabContentId(i)\"\n       [attr.aria-selected]=\"selectedIndex == i\"\n       [attr.aria-label]=\"tab.ariaLabel || null\"\n       [attr.aria-labelledby]=\"(!tab.ariaLabel && tab.ariaLabelledby) ? tab.ariaLabelledby : null\"\n       [class.mat-tab-label-active]=\"selectedIndex == i\"\n       [disabled]=\"tab.disabled\"\n       [matRippleDisabled]=\"tab.disabled || disableRipple\"\n       (click)=\"_handleClick(tab, tabHeader, i)\">\n\n\n    <div class=\"mat-tab-label-content\">\n      <!-- If there is a label template, use it. -->\n      <ng-template [ngIf]=\"tab.templateLabel\">\n        <ng-template [cdkPortalOutlet]=\"tab.templateLabel\"></ng-template>\n      </ng-template>\n\n      <!-- If there is not a label template, fall back to the text label. -->\n      <ng-template [ngIf]=\"!tab.templateLabel\">{{tab.textLabel}}</ng-template>\n    </div>\n  </div>\n</mat-tab-header>\n\n<div\n  class=\"mat-tab-body-wrapper\"\n  [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\n  #tabBodyWrapper>\n  <mat-tab-body role=\"tabpanel\"\n               *ngFor=\"let tab of _tabs; let i = index\"\n               [id]=\"_getTabContentId(i)\"\n               [attr.aria-labelledby]=\"_getTabLabelId(i)\"\n               [class.mat-tab-body-active]=\"selectedIndex == i\"\n               [content]=\"tab.content!\"\n               [position]=\"tab.position!\"\n               [origin]=\"tab.origin\"\n               [animationDuration]=\"animationDuration\"\n               (_onCentered)=\"_removeTabBodyWrapperHeight()\"\n               (_onCentering)=\"_setTabBodyWrapperHeight($event)\">\n  </mat-tab-body>\n</div>\n",
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].Default,
      inputs: ['color', 'disableRipple'],
      providers: [{
        provide: MAT_TAB_GROUP,
        useExisting: MatTabGroup
      }],
      host: {
        'class': 'mat-tab-group',
        '[class.mat-tab-group-dynamic-height]': 'dynamicHeight',
        '[class.mat-tab-group-inverted-header]': 'headerPosition === "below"'
      },
      styles: [".mat-tab-group{display:flex;flex-direction:column}.mat-tab-group.mat-tab-group-inverted-header{flex-direction:column-reverse}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{padding:0 12px}}@media(max-width: 959px){.mat-tab-label{padding:0 12px}}.mat-tab-group[mat-stretch-tabs]>.mat-tab-header .mat-tab-label{flex-basis:0;flex-grow:1}.mat-tab-body-wrapper{position:relative;overflow:hidden;display:flex;transition:height 500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-tab-body-wrapper{transition:none;animation:none}.mat-tab-body{top:0;left:0;right:0;bottom:0;position:absolute;display:block;overflow:hidden;flex-basis:100%}.mat-tab-body.mat-tab-body-active{position:relative;overflow-x:hidden;overflow-y:auto;z-index:1;flex-grow:1}.mat-tab-group.mat-tab-group-dynamic-height .mat-tab-body.mat-tab-body-active{overflow-y:hidden}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [MAT_TABS_CONFIG]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    _allTabs: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChildren"],
      args: [MatTab, {
        descendants: true
      }]
    }],
    _tabBodyWrapper: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['tabBodyWrapper']
    }],
    _tabHeader: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['tabHeader']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */
// Boilerplate for applying mixins to MatTabLabelWrapper.

/** @docs-private */


var MatTabLabelWrapperBase = function MatTabLabelWrapperBase() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabLabelWrapperBase);
};

var _MatTabLabelWrapperMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["mixinDisabled"])(MatTabLabelWrapperBase);
/**
 * Used in the `mat-tab-group` view to display tab labels.
 * @docs-private
 */


var MatTabLabelWrapper = /*#__PURE__*/function (_MatTabLabelWrapperMi) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabLabelWrapper, _MatTabLabelWrapperMi);

  var _super7 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabLabelWrapper);

  function MatTabLabelWrapper(elementRef) {
    var _this11;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabLabelWrapper);

    _this11 = _super7.call(this);
    _this11.elementRef = elementRef;
    return _this11;
  }
  /** Sets focus on the wrapper element */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatTabLabelWrapper, [{
    key: "focus",
    value: function focus() {
      this.elementRef.nativeElement.focus();
    }
  }, {
    key: "getOffsetLeft",
    value: function getOffsetLeft() {
      return this.elementRef.nativeElement.offsetLeft;
    }
  }, {
    key: "getOffsetWidth",
    value: function getOffsetWidth() {
      return this.elementRef.nativeElement.offsetWidth;
    }
  }]);

  return MatTabLabelWrapper;
}(_MatTabLabelWrapperMixinBase);

MatTabLabelWrapper.ɵfac = function MatTabLabelWrapper_Factory(t) {
  return new (t || MatTabLabelWrapper)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]));
};

MatTabLabelWrapper.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatTabLabelWrapper,
  selectors: [["", "matTabLabelWrapper", ""]],
  hostVars: 3,
  hostBindings: function MatTabLabelWrapper_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-disabled", !!ctx.disabled);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-disabled", ctx.disabled);
    }
  },
  inputs: {
    disabled: "disabled"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

MatTabLabelWrapper.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabLabelWrapper, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: '[matTabLabelWrapper]',
      inputs: ['disabled'],
      host: {
        '[class.mat-tab-disabled]': 'disabled',
        '[attr.aria-disabled]': '!!disabled'
      }
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/** Config used to bind passive event listeners */


var passiveEventListenerOptions = Object(_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["normalizePassiveListenerOptions"])({
  passive: true
});
/**
 * The distance in pixels that will be overshot when scrolling a tab label into view. This helps
 * provide a small affordance to the label next to it.
 */

var EXAGGERATED_OVERSCROLL = 60;
/**
 * Amount of milliseconds to wait before starting to scroll the header automatically.
 * Set a little conservatively in order to handle fake events dispatched on touch devices.
 */

var HEADER_SCROLL_DELAY = 650;
/**
 * Interval in milliseconds at which to scroll the header
 * while the user is holding their pointer.
 */

var HEADER_SCROLL_INTERVAL = 100;
/**
 * Base class for a tab header that supported pagination.
 * @docs-private
 */

var MatPaginatedTabHeader = /*#__PURE__*/function () {
  function MatPaginatedTabHeader(_elementRef, _changeDetectorRef, _viewportRuler, _dir, _ngZone,
  /**
   * @deprecated @breaking-change 9.0.0 `_platform` and `_animationMode`
   * parameters to become required.
   */
  _platform, _animationMode) {
    var _this12 = this;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatPaginatedTabHeader);

    this._elementRef = _elementRef;
    this._changeDetectorRef = _changeDetectorRef;
    this._viewportRuler = _viewportRuler;
    this._dir = _dir;
    this._ngZone = _ngZone;
    this._platform = _platform;
    this._animationMode = _animationMode;
    /** The distance in pixels that the tab labels should be translated to the left. */

    this._scrollDistance = 0;
    /** Whether the header should scroll to the selected index after the view has been checked. */

    this._selectedIndexChanged = false;
    /** Emits when the component is destroyed. */

    this._destroyed = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /** Whether the controls for pagination should be displayed */

    this._showPaginationControls = false;
    /** Whether the tab list can be scrolled more towards the end of the tab label list. */

    this._disableScrollAfter = true;
    /** Whether the tab list can be scrolled more towards the beginning of the tab label list. */

    this._disableScrollBefore = true;
    /** Stream that will stop the automated scrolling. */

    this._stopScrolling = new rxjs__WEBPACK_IMPORTED_MODULE_15__["Subject"]();
    /**
     * Whether pagination should be disabled. This can be used to avoid unnecessary
     * layout recalculations if it's known that pagination won't be required.
     */

    this.disablePagination = false;
    this._selectedIndex = 0;
    /** Event emitted when the option is selected. */

    this.selectFocusedIndex = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"]();
    /** Event emitted when a label is focused. */

    this.indexFocused = new _angular_core__WEBPACK_IMPORTED_MODULE_12__["EventEmitter"](); // Bind the `mouseleave` event on the outside since it doesn't change anything in the view.

    _ngZone.runOutsideAngular(function () {
      Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["fromEvent"])(_elementRef.nativeElement, 'mouseleave').pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["takeUntil"])(_this12._destroyed)).subscribe(function () {
        _this12._stopInterval();
      });
    });
  }
  /** The index of the active tab. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatPaginatedTabHeader, [{
    key: "selectedIndex",
    get: function get() {
      return this._selectedIndex;
    },
    set: function set(value) {
      value = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_19__["coerceNumberProperty"])(value);

      if (this._selectedIndex != value) {
        this._selectedIndexChanged = true;
        this._selectedIndex = value;

        if (this._keyManager) {
          this._keyManager.updateActiveItem(value);
        }
      }
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      var _this13 = this;

      // We need to handle these events manually, because we want to bind passive event listeners.
      Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["fromEvent"])(this._previousPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["takeUntil"])(this._destroyed)).subscribe(function () {
        _this13._handlePaginatorPress('before');
      });
      Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["fromEvent"])(this._nextPaginator.nativeElement, 'touchstart', passiveEventListenerOptions).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["takeUntil"])(this._destroyed)).subscribe(function () {
        _this13._handlePaginatorPress('after');
      });
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this14 = this;

      var dirChange = this._dir ? this._dir.change : Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["of"])(null);

      var resize = this._viewportRuler.change(150);

      var realign = function realign() {
        _this14.updatePagination();

        _this14._alignInkBarToSelectedTab();
      };

      this._keyManager = new _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["FocusKeyManager"](this._items).withHorizontalOrientation(this._getLayoutDirection()).withHomeAndEnd().withWrap();

      this._keyManager.updateActiveItem(this._selectedIndex); // Defer the first call in order to allow for slower browsers to lay out the elements.
      // This helps in cases where the user lands directly on a page with paginated tabs.


      typeof requestAnimationFrame !== 'undefined' ? requestAnimationFrame(realign) : realign(); // On dir change or window resize, realign the ink bar and update the orientation of
      // the key manager if the direction has changed.

      Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["merge"])(dirChange, resize, this._items.changes).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["takeUntil"])(this._destroyed)).subscribe(function () {
        // We need to defer this to give the browser some time to recalculate the element dimensions.
        Promise.resolve().then(realign);

        _this14._keyManager.withHorizontalOrientation(_this14._getLayoutDirection());
      }); // If there is a change in the focus key manager we need to emit the `indexFocused`
      // event in order to provide a public event that notifies about focus changes. Also we realign
      // the tabs container by scrolling the new focused tab into the visible section.

      this._keyManager.change.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["takeUntil"])(this._destroyed)).subscribe(function (newFocusIndex) {
        _this14.indexFocused.emit(newFocusIndex);

        _this14._setTabFocus(newFocusIndex);
      });
    }
  }, {
    key: "ngAfterContentChecked",
    value: function ngAfterContentChecked() {
      // If the number of tab labels have changed, check if scrolling should be enabled
      if (this._tabLabelCount != this._items.length) {
        this.updatePagination();
        this._tabLabelCount = this._items.length;

        this._changeDetectorRef.markForCheck();
      } // If the selected index has changed, scroll to the label and check if the scrolling controls
      // should be disabled.


      if (this._selectedIndexChanged) {
        this._scrollToLabel(this._selectedIndex);

        this._checkScrollingControls();

        this._alignInkBarToSelectedTab();

        this._selectedIndexChanged = false;

        this._changeDetectorRef.markForCheck();
      } // If the scroll distance has been changed (tab selected, focused, scroll controls activated),
      // then translate the header to reflect this.


      if (this._scrollDistanceChanged) {
        this._updateTabScrollPosition();

        this._scrollDistanceChanged = false;

        this._changeDetectorRef.markForCheck();
      }
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._destroyed.next();

      this._destroyed.complete();

      this._stopScrolling.complete();
    }
    /** Handles keyboard events on the header. */

  }, {
    key: "_handleKeydown",
    value: function _handleKeydown(event) {
      // We don't handle any key bindings with a modifier key.
      if (Object(_angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_22__["hasModifierKey"])(event)) {
        return;
      }

      switch (event.keyCode) {
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_22__["ENTER"]:
        case _angular_cdk_keycodes__WEBPACK_IMPORTED_MODULE_22__["SPACE"]:
          if (this.focusIndex !== this.selectedIndex) {
            this.selectFocusedIndex.emit(this.focusIndex);

            this._itemSelected(event);
          }

          break;

        default:
          this._keyManager.onKeydown(event);

      }
    }
    /**
     * Callback for when the MutationObserver detects that the content has changed.
     */

  }, {
    key: "_onContentChanges",
    value: function _onContentChanges() {
      var _this15 = this;

      var textContent = this._elementRef.nativeElement.textContent; // We need to diff the text content of the header, because the MutationObserver callback
      // will fire even if the text content didn't change which is inefficient and is prone
      // to infinite loops if a poorly constructed expression is passed in (see #14249).

      if (textContent !== this._currentTextContent) {
        this._currentTextContent = textContent || ''; // The content observer runs outside the `NgZone` by default, which
        // means that we need to bring the callback back in ourselves.

        this._ngZone.run(function () {
          _this15.updatePagination();

          _this15._alignInkBarToSelectedTab();

          _this15._changeDetectorRef.markForCheck();
        });
      }
    }
    /**
     * Updates the view whether pagination should be enabled or not.
     *
     * WARNING: Calling this method can be very costly in terms of performance. It should be called
     * as infrequently as possible from outside of the Tabs component as it causes a reflow of the
     * page.
     */

  }, {
    key: "updatePagination",
    value: function updatePagination() {
      this._checkPaginationEnabled();

      this._checkScrollingControls();

      this._updateTabScrollPosition();
    }
    /** Tracks which element has focus; used for keyboard navigation */

  }, {
    key: "focusIndex",
    get: function get() {
      return this._keyManager ? this._keyManager.activeItemIndex : 0;
    }
    /** When the focus index is set, we must manually send focus to the correct label */
    ,
    set: function set(value) {
      if (!this._isValidIndex(value) || this.focusIndex === value || !this._keyManager) {
        return;
      }

      this._keyManager.setActiveItem(value);
    }
    /**
     * Determines if an index is valid.  If the tabs are not ready yet, we assume that the user is
     * providing a valid index and return true.
     */

  }, {
    key: "_isValidIndex",
    value: function _isValidIndex(index) {
      if (!this._items) {
        return true;
      }

      var tab = this._items ? this._items.toArray()[index] : null;
      return !!tab && !tab.disabled;
    }
    /**
     * Sets focus on the HTML element for the label wrapper and scrolls it into the view if
     * scrolling is enabled.
     */

  }, {
    key: "_setTabFocus",
    value: function _setTabFocus(tabIndex) {
      if (this._showPaginationControls) {
        this._scrollToLabel(tabIndex);
      }

      if (this._items && this._items.length) {
        this._items.toArray()[tabIndex].focus(); // Do not let the browser manage scrolling to focus the element, this will be handled
        // by using translation. In LTR, the scroll left should be 0. In RTL, the scroll width
        // should be the full width minus the offset width.


        var containerEl = this._tabListContainer.nativeElement;

        var dir = this._getLayoutDirection();

        if (dir == 'ltr') {
          containerEl.scrollLeft = 0;
        } else {
          containerEl.scrollLeft = containerEl.scrollWidth - containerEl.offsetWidth;
        }
      }
    }
    /** The layout direction of the containing app. */

  }, {
    key: "_getLayoutDirection",
    value: function _getLayoutDirection() {
      return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';
    }
    /** Performs the CSS transformation on the tab list that will cause the list to scroll. */

  }, {
    key: "_updateTabScrollPosition",
    value: function _updateTabScrollPosition() {
      if (this.disablePagination) {
        return;
      }

      var scrollDistance = this.scrollDistance;
      var platform = this._platform;
      var translateX = this._getLayoutDirection() === 'ltr' ? -scrollDistance : scrollDistance; // Don't use `translate3d` here because we don't want to create a new layer. A new layer
      // seems to cause flickering and overflow in Internet Explorer. For example, the ink bar
      // and ripples will exceed the boundaries of the visible tab bar.
      // See: https://github.com/angular/components/issues/10276
      // We round the `transform` here, because transforms with sub-pixel precision cause some
      // browsers to blur the content of the element.

      this._tabList.nativeElement.style.transform = "translateX(".concat(Math.round(translateX), "px)"); // Setting the `transform` on IE will change the scroll offset of the parent, causing the
      // position to be thrown off in some cases. We have to reset it ourselves to ensure that
      // it doesn't get thrown off. Note that we scope it only to IE and Edge, because messing
      // with the scroll position throws off Chrome 71+ in RTL mode (see #14689).
      // @breaking-change 9.0.0 Remove null check for `platform` after it can no longer be undefined.

      if (platform && (platform.TRIDENT || platform.EDGE)) {
        this._tabListContainer.nativeElement.scrollLeft = 0;
      }
    }
    /** Sets the distance in pixels that the tab header should be transformed in the X-axis. */

  }, {
    key: "scrollDistance",
    get: function get() {
      return this._scrollDistance;
    },
    set: function set(value) {
      this._scrollTo(value);
    }
    /**
     * Moves the tab list in the 'before' or 'after' direction (towards the beginning of the list or
     * the end of the list, respectively). The distance to scroll is computed to be a third of the
     * length of the tab list view window.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     */

  }, {
    key: "_scrollHeader",
    value: function _scrollHeader(direction) {
      var viewLength = this._tabListContainer.nativeElement.offsetWidth; // Move the scroll distance one-third the length of the tab list's viewport.

      var scrollAmount = (direction == 'before' ? -1 : 1) * viewLength / 3;
      return this._scrollTo(this._scrollDistance + scrollAmount);
    }
    /** Handles click events on the pagination arrows. */

  }, {
    key: "_handlePaginatorClick",
    value: function _handlePaginatorClick(direction) {
      this._stopInterval();

      this._scrollHeader(direction);
    }
    /**
     * Moves the tab list such that the desired tab label (marked by index) is moved into view.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     */

  }, {
    key: "_scrollToLabel",
    value: function _scrollToLabel(labelIndex) {
      if (this.disablePagination) {
        return;
      }

      var selectedLabel = this._items ? this._items.toArray()[labelIndex] : null;

      if (!selectedLabel) {
        return;
      } // The view length is the visible width of the tab labels.


      var viewLength = this._tabListContainer.nativeElement.offsetWidth;
      var _selectedLabel$elemen = selectedLabel.elementRef.nativeElement,
          offsetLeft = _selectedLabel$elemen.offsetLeft,
          offsetWidth = _selectedLabel$elemen.offsetWidth;
      var labelBeforePos, labelAfterPos;

      if (this._getLayoutDirection() == 'ltr') {
        labelBeforePos = offsetLeft;
        labelAfterPos = labelBeforePos + offsetWidth;
      } else {
        labelAfterPos = this._tabList.nativeElement.offsetWidth - offsetLeft;
        labelBeforePos = labelAfterPos - offsetWidth;
      }

      var beforeVisiblePos = this.scrollDistance;
      var afterVisiblePos = this.scrollDistance + viewLength;

      if (labelBeforePos < beforeVisiblePos) {
        // Scroll header to move label to the before direction
        this.scrollDistance -= beforeVisiblePos - labelBeforePos + EXAGGERATED_OVERSCROLL;
      } else if (labelAfterPos > afterVisiblePos) {
        // Scroll header to move label to the after direction
        this.scrollDistance += labelAfterPos - afterVisiblePos + EXAGGERATED_OVERSCROLL;
      }
    }
    /**
     * Evaluate whether the pagination controls should be displayed. If the scroll width of the
     * tab list is wider than the size of the header container, then the pagination controls should
     * be shown.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     */

  }, {
    key: "_checkPaginationEnabled",
    value: function _checkPaginationEnabled() {
      if (this.disablePagination) {
        this._showPaginationControls = false;
      } else {
        var isEnabled = this._tabList.nativeElement.scrollWidth > this._elementRef.nativeElement.offsetWidth;

        if (!isEnabled) {
          this.scrollDistance = 0;
        }

        if (isEnabled !== this._showPaginationControls) {
          this._changeDetectorRef.markForCheck();
        }

        this._showPaginationControls = isEnabled;
      }
    }
    /**
     * Evaluate whether the before and after controls should be enabled or disabled.
     * If the header is at the beginning of the list (scroll distance is equal to 0) then disable the
     * before button. If the header is at the end of the list (scroll distance is equal to the
     * maximum distance we can scroll), then disable the after button.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     */

  }, {
    key: "_checkScrollingControls",
    value: function _checkScrollingControls() {
      if (this.disablePagination) {
        this._disableScrollAfter = this._disableScrollBefore = true;
      } else {
        // Check if the pagination arrows should be activated.
        this._disableScrollBefore = this.scrollDistance == 0;
        this._disableScrollAfter = this.scrollDistance == this._getMaxScrollDistance();

        this._changeDetectorRef.markForCheck();
      }
    }
    /**
     * Determines what is the maximum length in pixels that can be set for the scroll distance. This
     * is equal to the difference in width between the tab list container and tab header container.
     *
     * This is an expensive call that forces a layout reflow to compute box and scroll metrics and
     * should be called sparingly.
     */

  }, {
    key: "_getMaxScrollDistance",
    value: function _getMaxScrollDistance() {
      var lengthOfTabList = this._tabList.nativeElement.scrollWidth;
      var viewLength = this._tabListContainer.nativeElement.offsetWidth;
      return lengthOfTabList - viewLength || 0;
    }
    /** Tells the ink-bar to align itself to the current label wrapper */

  }, {
    key: "_alignInkBarToSelectedTab",
    value: function _alignInkBarToSelectedTab() {
      var selectedItem = this._items && this._items.length ? this._items.toArray()[this.selectedIndex] : null;
      var selectedLabelWrapper = selectedItem ? selectedItem.elementRef.nativeElement : null;

      if (selectedLabelWrapper) {
        this._inkBar.alignToElement(selectedLabelWrapper);
      } else {
        this._inkBar.hide();
      }
    }
    /** Stops the currently-running paginator interval.  */

  }, {
    key: "_stopInterval",
    value: function _stopInterval() {
      this._stopScrolling.next();
    }
    /**
     * Handles the user pressing down on one of the paginators.
     * Starts scrolling the header after a certain amount of time.
     * @param direction In which direction the paginator should be scrolled.
     */

  }, {
    key: "_handlePaginatorPress",
    value: function _handlePaginatorPress(direction, mouseEvent) {
      var _this16 = this;

      // Don't start auto scrolling for right mouse button clicks. Note that we shouldn't have to
      // null check the `button`, but we do it so we don't break tests that use fake events.
      if (mouseEvent && mouseEvent.button != null && mouseEvent.button !== 0) {
        return;
      } // Avoid overlapping timers.


      this._stopInterval(); // Start a timer after the delay and keep firing based on the interval.


      Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["timer"])(HEADER_SCROLL_DELAY, HEADER_SCROLL_INTERVAL) // Keep the timer going until something tells it to stop or the component is destroyed.
      .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["takeUntil"])(Object(rxjs__WEBPACK_IMPORTED_MODULE_15__["merge"])(this._stopScrolling, this._destroyed))).subscribe(function () {
        var _this16$_scrollHeader = _this16._scrollHeader(direction),
            maxScrollDistance = _this16$_scrollHeader.maxScrollDistance,
            distance = _this16$_scrollHeader.distance; // Stop the timer if we've reached the start or the end.


        if (distance === 0 || distance >= maxScrollDistance) {
          _this16._stopInterval();
        }
      });
    }
    /**
     * Scrolls the header to a given position.
     * @param position Position to which to scroll.
     * @returns Information on the current scroll distance and the maximum.
     */

  }, {
    key: "_scrollTo",
    value: function _scrollTo(position) {
      if (this.disablePagination) {
        return {
          maxScrollDistance: 0,
          distance: 0
        };
      }

      var maxScrollDistance = this._getMaxScrollDistance();

      this._scrollDistance = Math.max(0, Math.min(maxScrollDistance, position)); // Mark that the scroll distance has changed so that after the view is checked, the CSS
      // transformation can move the header.

      this._scrollDistanceChanged = true;

      this._checkScrollingControls();

      return {
        maxScrollDistance: maxScrollDistance,
        distance: this._scrollDistance
      };
    }
  }]);

  return MatPaginatedTabHeader;
}();

MatPaginatedTabHeader.ɵfac = function MatPaginatedTabHeader_Factory(t) {
  return new (t || MatPaginatedTabHeader)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

MatPaginatedTabHeader.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatPaginatedTabHeader,
  inputs: {
    disablePagination: "disablePagination"
  }
});

MatPaginatedTabHeader.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatPaginatedTabHeader.propDecorators = {
  disablePagination: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatPaginatedTabHeader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    disablePagination: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Base class with all of the `MatTabHeader` functionality.
 * @docs-private
 */


var _MatTabHeaderBase = /*#__PURE__*/function (_MatPaginatedTabHeade) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(_MatTabHeaderBase, _MatPaginatedTabHeade);

  var _super8 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(_MatTabHeaderBase);

  function _MatTabHeaderBase(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, // @breaking-change 9.0.0 `_animationMode` parameter to be made required.
  animationMode) {
    var _this17;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _MatTabHeaderBase);

    _this17 = _super8.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);
    _this17._disableRipple = false;
    return _this17;
  }
  /** Whether the ripple effect is disabled or not. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(_MatTabHeaderBase, [{
    key: "disableRipple",
    get: function get() {
      return this._disableRipple;
    },
    set: function set(value) {
      this._disableRipple = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_19__["coerceBooleanProperty"])(value);
    }
  }, {
    key: "_itemSelected",
    value: function _itemSelected(event) {
      event.preventDefault();
    }
  }]);

  return _MatTabHeaderBase;
}(MatPaginatedTabHeader);

_MatTabHeaderBase.ɵfac = function _MatTabHeaderBase_Factory(t) {
  return new (t || _MatTabHeaderBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

_MatTabHeaderBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: _MatTabHeaderBase,
  inputs: {
    disableRipple: "disableRipple"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

_MatTabHeaderBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

_MatTabHeaderBase.propDecorators = {
  disableRipple: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](_MatTabHeaderBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    disableRipple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * The header of the tab group which displays a list of all the tabs in the tab group. Includes
 * an ink bar that follows the currently selected tab. When the tabs list's width exceeds the
 * width of the header container, then arrows will be displayed to allow the user to scroll
 * left and right across the header.
 * @docs-private
 */


var MatTabHeader = /*#__PURE__*/function (_MatTabHeaderBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabHeader, _MatTabHeaderBase2);

  var _super9 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabHeader);

  function MatTabHeader(elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, // @breaking-change 9.0.0 `_animationMode` parameter to be made required.
  animationMode) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabHeader);

    return _super9.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);
  }

  return MatTabHeader;
}(_MatTabHeaderBase);

MatTabHeader.ɵfac = function MatTabHeader_Factory(t) {
  return new (t || MatTabHeader)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

MatTabHeader.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatTabHeader,
  selectors: [["mat-tab-header"]],
  contentQueries: function MatTabHeader_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MatTabLabelWrapper, 0);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._items = _t);
    }
  },
  viewQuery: function MatTabHeader_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatInkBar, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c5, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c6, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c7, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c8, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._inkBar = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._tabListContainer = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._tabList = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._nextPaginator = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._previousPaginator = _t.first);
    }
  },
  hostAttrs: [1, "mat-tab-header"],
  hostVars: 4,
  hostBindings: function MatTabHeader_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-header-pagination-controls-enabled", ctx._showPaginationControls)("mat-tab-header-rtl", ctx._getLayoutDirection() == "rtl");
    }
  },
  inputs: {
    selectedIndex: "selectedIndex"
  },
  outputs: {
    selectFocusedIndex: "selectFocusedIndex",
    indexFocused: "indexFocused"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]],
  ngContentSelectors: _c0,
  decls: 13,
  vars: 8,
  consts: [["aria-hidden", "true", "mat-ripple", "", 1, "mat-tab-header-pagination", "mat-tab-header-pagination-before", "mat-elevation-z4", 3, "matRippleDisabled", "click", "mousedown", "touchend"], ["previousPaginator", ""], [1, "mat-tab-header-pagination-chevron"], [1, "mat-tab-label-container", 3, "keydown"], ["tabListContainer", ""], ["role", "tablist", 1, "mat-tab-list", 3, "cdkObserveContent"], ["tabList", ""], [1, "mat-tab-labels"], ["aria-hidden", "true", "mat-ripple", "", 1, "mat-tab-header-pagination", "mat-tab-header-pagination-after", "mat-elevation-z4", 3, "matRippleDisabled", "mousedown", "click", "touchend"], ["nextPaginator", ""]],
  template: function MatTabHeader_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatTabHeader_Template_div_click_0_listener() {
        return ctx._handlePaginatorClick("before");
      })("mousedown", function MatTabHeader_Template_div_mousedown_0_listener($event) {
        return ctx._handlePaginatorPress("before", $event);
      })("touchend", function MatTabHeader_Template_div_touchend_0_listener() {
        return ctx._stopInterval();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](2, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "div", 3, 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("keydown", function MatTabHeader_Template_div_keydown_3_listener($event) {
        return ctx._handleKeydown($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 5, 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("cdkObserveContent", function MatTabHeader_Template_div_cdkObserveContent_5_listener() {
        return ctx._onContentChanges();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojection"](8);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](9, "mat-ink-bar");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "div", 8, 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("mousedown", function MatTabHeader_Template_div_mousedown_10_listener($event) {
        return ctx._handlePaginatorPress("after", $event);
      })("click", function MatTabHeader_Template_div_click_10_listener() {
        return ctx._handlePaginatorClick("after");
      })("touchend", function MatTabHeader_Template_div_touchend_10_listener() {
        return ctx._stopInterval();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](12, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-header-pagination-disabled", ctx._disableScrollBefore);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("matRippleDisabled", ctx._disableScrollBefore || ctx.disableRipple);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-header-pagination-disabled", ctx._disableScrollAfter);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("matRippleDisabled", ctx._disableScrollAfter || ctx.disableRipple);
    }
  },
  directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatRipple"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_9__["CdkObserveContent"], MatInkBar],
  styles: [".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\"\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\n"],
  encapsulation: 2
});

MatTabHeader.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatTabHeader.propDecorators = {
  _items: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChildren"],
    args: [MatTabLabelWrapper, {
      descendants: false
    }]
  }],
  _inkBar: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatInkBar, {
      static: true
    }]
  }],
  _tabListContainer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['tabListContainer', {
      static: true
    }]
  }],
  _tabList: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['tabList', {
      static: true
    }]
  }],
  _nextPaginator: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['nextPaginator']
  }],
  _previousPaginator: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['previousPaginator']
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabHeader, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: 'mat-tab-header',
      template: "<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\"\n     #previousPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\"\n     (click)=\"_handlePaginatorClick('before')\"\n     (mousedown)=\"_handlePaginatorPress('before', $event)\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n\n<div class=\"mat-tab-label-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\">\n  <div\n    #tabList\n    class=\"mat-tab-list\"\n    [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\n    role=\"tablist\"\n    (cdkObserveContent)=\"_onContentChanges()\">\n    <div class=\"mat-tab-labels\">\n      <ng-content></ng-content>\n    </div>\n    <mat-ink-bar></mat-ink-bar>\n  </div>\n</div>\n\n<div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\"\n     #nextPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\"\n     (mousedown)=\"_handlePaginatorPress('after', $event)\"\n     (click)=\"_handlePaginatorClick('after')\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n",
      inputs: ['selectedIndex'],
      outputs: ['selectFocusedIndex', 'indexFocused'],
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].Default,
      host: {
        'class': 'mat-tab-header',
        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',
        '[class.mat-tab-header-rtl]': "_getLayoutDirection() == 'rtl'"
      },
      styles: [".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\"\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-labels{display:flex}[mat-align-tabs=center]>.mat-tab-header .mat-tab-labels{justify-content:center}[mat-align-tabs=end]>.mat-tab-header .mat-tab-labels{justify-content:flex-end}.mat-tab-label-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}._mat-animation-noopable.mat-tab-list{transition:none;animation:none}.mat-tab-label{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;position:relative}.mat-tab-label:focus{outline:none}.mat-tab-label:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-label:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-label.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-label.mat-tab-disabled{opacity:.5}.mat-tab-label .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-label{opacity:1}@media(max-width: 599px){.mat-tab-label{min-width:72px}}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    _items: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChildren"],
      args: [MatTabLabelWrapper, {
        descendants: false
      }]
    }],
    _inkBar: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatInkBar, {
        static: true
      }]
    }],
    _tabListContainer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['tabListContainer', {
        static: true
      }]
    }],
    _tabList: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['tabList', {
        static: true
      }]
    }],
    _nextPaginator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['nextPaginator']
    }],
    _previousPaginator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['previousPaginator']
    }]
  });
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Base class with all of the `MatTabNav` functionality.
 * @docs-private
 */


var _MatTabNavBase = /*#__PURE__*/function (_MatPaginatedTabHeade2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(_MatTabNavBase, _MatPaginatedTabHeade2);

  var _super10 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(_MatTabNavBase);

  function _MatTabNavBase(elementRef, dir, ngZone, changeDetectorRef, viewportRuler,
  /**
   * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.
   */
  platform, animationMode) {
    var _this18;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _MatTabNavBase);

    _this18 = _super10.call(this, elementRef, changeDetectorRef, viewportRuler, dir, ngZone, platform, animationMode);
    _this18._disableRipple = false;
    /** Theme color of the nav bar. */

    _this18.color = 'primary';
    return _this18;
  }
  /** Background color of the tab nav. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(_MatTabNavBase, [{
    key: "backgroundColor",
    get: function get() {
      return this._backgroundColor;
    },
    set: function set(value) {
      var classList = this._elementRef.nativeElement.classList;
      classList.remove("mat-background-".concat(this.backgroundColor));

      if (value) {
        classList.add("mat-background-".concat(value));
      }

      this._backgroundColor = value;
    }
    /** Whether the ripple effect is disabled or not. */

  }, {
    key: "disableRipple",
    get: function get() {
      return this._disableRipple;
    },
    set: function set(value) {
      this._disableRipple = Object(_angular_cdk_coercion__WEBPACK_IMPORTED_MODULE_19__["coerceBooleanProperty"])(value);
    }
  }, {
    key: "_itemSelected",
    value: function _itemSelected() {// noop
    }
  }, {
    key: "ngAfterContentInit",
    value: function ngAfterContentInit() {
      var _this19 = this;

      // We need this to run before the `changes` subscription in parent to ensure that the
      // selectedIndex is up-to-date by the time the super class starts looking for it.
      this._items.changes.pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["startWith"])(null), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_18__["takeUntil"])(this._destroyed)).subscribe(function () {
        _this19.updateActiveLink();
      });

      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(_MatTabNavBase.prototype), "ngAfterContentInit", this).call(this);
    }
    /**
     * Notifies the component that the active link has been changed.
     * @breaking-change 8.0.0 `element` parameter to be removed.
     */

  }, {
    key: "updateActiveLink",
    value: function updateActiveLink(_element) {
      if (!this._items) {
        return;
      }

      var items = this._items.toArray();

      for (var i = 0; i < items.length; i++) {
        if (items[i].active) {
          this.selectedIndex = i;

          this._changeDetectorRef.markForCheck();

          return;
        }
      } // The ink bar should hide itself if no items are active.


      this.selectedIndex = -1;

      this._inkBar.hide();
    }
  }]);

  return _MatTabNavBase;
}(MatPaginatedTabHeader);

_MatTabNavBase.ɵfac = function _MatTabNavBase_Factory(t) {
  return new (t || _MatTabNavBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

_MatTabNavBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: _MatTabNavBase,
  inputs: {
    color: "color",
    backgroundColor: "backgroundColor",
    disableRipple: "disableRipple"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

_MatTabNavBase.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

_MatTabNavBase.propDecorators = {
  backgroundColor: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  disableRipple: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }],
  color: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](_MatTabNavBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    color: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    backgroundColor: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }],
    disableRipple: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * Navigation component matching the styles of the tab group header.
 * Provides anchored navigation with animated ink bar.
 */


var MatTabNav = /*#__PURE__*/function (_MatTabNavBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabNav, _MatTabNavBase2);

  var _super11 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabNav);

  function MatTabNav(elementRef, dir, ngZone, changeDetectorRef, viewportRuler,
  /**
   * @deprecated @breaking-change 9.0.0 `platform` parameter to become required.
   */
  platform, animationMode) {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabNav);

    return _super11.call(this, elementRef, dir, ngZone, changeDetectorRef, viewportRuler, platform, animationMode);
  }

  return MatTabNav;
}(_MatTabNavBase);

MatTabNav.ɵfac = function MatTabNav_Factory(t) {
  return new (t || MatTabNav)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

MatTabNav.ɵcmp = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({
  type: MatTabNav,
  selectors: [["", "mat-tab-nav-bar", ""]],
  contentQueries: function MatTabNav_ContentQueries(rf, ctx, dirIndex) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵcontentQuery"](dirIndex, MatTabLink, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._items = _t);
    }
  },
  viewQuery: function MatTabNav_Query(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](MatInkBar, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c5, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c6, 3);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c7, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](_c8, 1);
    }

    if (rf & 2) {
      var _t;

      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._inkBar = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._tabListContainer = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._tabList = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._nextPaginator = _t.first);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx._previousPaginator = _t.first);
    }
  },
  hostAttrs: [1, "mat-tab-nav-bar", "mat-tab-header"],
  hostVars: 10,
  hostBindings: function MatTabNav_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-header-pagination-controls-enabled", ctx._showPaginationControls)("mat-tab-header-rtl", ctx._getLayoutDirection() == "rtl")("mat-primary", ctx.color !== "warn" && ctx.color !== "accent")("mat-accent", ctx.color === "accent")("mat-warn", ctx.color === "warn");
    }
  },
  inputs: {
    color: "color"
  },
  exportAs: ["matTabNavBar", "matTabNav"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]],
  attrs: _c9,
  ngContentSelectors: _c0,
  decls: 13,
  vars: 8,
  consts: [["aria-hidden", "true", "mat-ripple", "", 1, "mat-tab-header-pagination", "mat-tab-header-pagination-before", "mat-elevation-z4", 3, "matRippleDisabled", "click", "mousedown", "touchend"], ["previousPaginator", ""], [1, "mat-tab-header-pagination-chevron"], [1, "mat-tab-link-container", 3, "keydown"], ["tabListContainer", ""], [1, "mat-tab-list", 3, "cdkObserveContent"], ["tabList", ""], [1, "mat-tab-links"], ["aria-hidden", "true", "mat-ripple", "", 1, "mat-tab-header-pagination", "mat-tab-header-pagination-after", "mat-elevation-z4", 3, "matRippleDisabled", "mousedown", "click", "touchend"], ["nextPaginator", ""]],
  template: function MatTabNav_Template(rf, ctx) {
    if (rf & 1) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojectionDef"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 0, 1);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function MatTabNav_Template_div_click_0_listener() {
        return ctx._handlePaginatorClick("before");
      })("mousedown", function MatTabNav_Template_div_mousedown_0_listener($event) {
        return ctx._handlePaginatorPress("before", $event);
      })("touchend", function MatTabNav_Template_div_touchend_0_listener() {
        return ctx._stopInterval();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](2, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "div", 3, 4);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("keydown", function MatTabNav_Template_div_keydown_3_listener($event) {
        return ctx._handleKeydown($event);
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 5, 6);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("cdkObserveContent", function MatTabNav_Template_div_cdkObserveContent_5_listener() {
        return ctx._onContentChanges();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 7);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵprojection"](8);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](9, "mat-ink-bar");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "div", 8, 9);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("mousedown", function MatTabNav_Template_div_mousedown_10_listener($event) {
        return ctx._handlePaginatorPress("after", $event);
      })("click", function MatTabNav_Template_div_click_10_listener() {
        return ctx._handlePaginatorClick("after");
      })("touchend", function MatTabNav_Template_div_touchend_10_listener() {
        return ctx._stopInterval();
      });
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](12, "div", 2);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    }

    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-header-pagination-disabled", ctx._disableScrollBefore);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("matRippleDisabled", ctx._disableScrollBefore || ctx.disableRipple);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("_mat-animation-noopable", ctx._animationMode === "NoopAnimations");
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-header-pagination-disabled", ctx._disableScrollAfter);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("matRippleDisabled", ctx._disableScrollAfter || ctx.disableRipple);
    }
  },
  directives: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatRipple"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_9__["CdkObserveContent"], MatInkBar],
  styles: [".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\"\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\n"],
  encapsulation: 2
});

MatTabNav.ctorParameters = function () {
  return [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
  }, {
    type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

MatTabNav.propDecorators = {
  _items: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChildren"],
    args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
      return MatTabLink;
    }), {
      descendants: true
    }]
  }],
  _inkBar: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: [MatInkBar, {
      static: true
    }]
  }],
  _tabListContainer: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['tabListContainer', {
      static: true
    }]
  }],
  _tabList: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['tabList', {
      static: true
    }]
  }],
  _nextPaginator: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['nextPaginator']
  }],
  _previousPaginator: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
    args: ['previousPaginator']
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabNav, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Component"],
    args: [{
      selector: '[mat-tab-nav-bar]',
      exportAs: 'matTabNavBar, matTabNav',
      inputs: ['color'],
      template: "<div class=\"mat-tab-header-pagination mat-tab-header-pagination-before mat-elevation-z4\"\n     #previousPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollBefore || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollBefore\"\n     (click)=\"_handlePaginatorClick('before')\"\n     (mousedown)=\"_handlePaginatorPress('before', $event)\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n\n<div class=\"mat-tab-link-container\" #tabListContainer (keydown)=\"_handleKeydown($event)\">\n  <div\n    class=\"mat-tab-list\"\n    [class._mat-animation-noopable]=\"_animationMode === 'NoopAnimations'\"\n    #tabList\n    (cdkObserveContent)=\"_onContentChanges()\">\n    <div class=\"mat-tab-links\">\n      <ng-content></ng-content>\n    </div>\n    <mat-ink-bar></mat-ink-bar>\n  </div>\n</div>\n\n<div class=\"mat-tab-header-pagination mat-tab-header-pagination-after mat-elevation-z4\"\n     #nextPaginator\n     aria-hidden=\"true\"\n     mat-ripple [matRippleDisabled]=\"_disableScrollAfter || disableRipple\"\n     [class.mat-tab-header-pagination-disabled]=\"_disableScrollAfter\"\n     (mousedown)=\"_handlePaginatorPress('after', $event)\"\n     (click)=\"_handlePaginatorClick('after')\"\n     (touchend)=\"_stopInterval()\">\n  <div class=\"mat-tab-header-pagination-chevron\"></div>\n</div>\n",
      host: {
        'class': 'mat-tab-nav-bar mat-tab-header',
        '[class.mat-tab-header-pagination-controls-enabled]': '_showPaginationControls',
        '[class.mat-tab-header-rtl]': "_getLayoutDirection() == 'rtl'",
        '[class.mat-primary]': 'color !== "warn" && color !== "accent"',
        '[class.mat-accent]': 'color === "accent"',
        '[class.mat-warn]': 'color === "warn"'
      },
      encapsulation: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewEncapsulation"].None,
      // tslint:disable-next-line:validate-decorators
      changeDetection: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectionStrategy"].Default,
      styles: [".mat-tab-header{display:flex;overflow:hidden;position:relative;flex-shrink:0}.mat-tab-header-pagination{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;position:relative;display:none;justify-content:center;align-items:center;min-width:32px;cursor:pointer;z-index:2;-webkit-tap-highlight-color:transparent;touch-action:none}.mat-tab-header-pagination-controls-enabled .mat-tab-header-pagination{display:flex}.mat-tab-header-pagination-before,.mat-tab-header-rtl .mat-tab-header-pagination-after{padding-left:4px}.mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-rtl .mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(-135deg)}.mat-tab-header-rtl .mat-tab-header-pagination-before,.mat-tab-header-pagination-after{padding-right:4px}.mat-tab-header-rtl .mat-tab-header-pagination-before .mat-tab-header-pagination-chevron,.mat-tab-header-pagination-after .mat-tab-header-pagination-chevron{transform:rotate(45deg)}.mat-tab-header-pagination-chevron{border-style:solid;border-width:2px 2px 0 0;content:\"\";height:8px;width:8px}.mat-tab-header-pagination-disabled{box-shadow:none;cursor:default}.mat-tab-list{flex-grow:1;position:relative;transition:transform 500ms cubic-bezier(0.35, 0, 0.25, 1)}.mat-tab-links{display:flex}[mat-align-tabs=center]>.mat-tab-link-container .mat-tab-links{justify-content:center}[mat-align-tabs=end]>.mat-tab-link-container .mat-tab-links{justify-content:flex-end}.mat-ink-bar{position:absolute;bottom:0;height:2px;transition:500ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable.mat-ink-bar{transition:none;animation:none}.mat-tab-group-inverted-header .mat-ink-bar{bottom:auto;top:0}.cdk-high-contrast-active .mat-ink-bar{outline:solid 2px;height:0}.mat-tab-link-container{display:flex;flex-grow:1;overflow:hidden;z-index:1}.mat-tab-link{height:48px;padding:0 24px;cursor:pointer;box-sizing:border-box;opacity:.6;min-width:160px;text-align:center;display:inline-flex;justify-content:center;align-items:center;white-space:nowrap;vertical-align:top;text-decoration:none;position:relative;overflow:hidden;-webkit-tap-highlight-color:transparent}.mat-tab-link:focus{outline:none}.mat-tab-link:focus:not(.mat-tab-disabled){opacity:1}.cdk-high-contrast-active .mat-tab-link:focus{outline:dotted 2px;outline-offset:-2px}.mat-tab-link.mat-tab-disabled{cursor:default}.cdk-high-contrast-active .mat-tab-link.mat-tab-disabled{opacity:.5}.mat-tab-link .mat-tab-label-content{display:inline-flex;justify-content:center;align-items:center;white-space:nowrap}.cdk-high-contrast-active .mat-tab-link{opacity:1}[mat-stretch-tabs] .mat-tab-link{flex-basis:0;flex-grow:1}.mat-tab-link.mat-tab-disabled{pointer-events:none}@media(max-width: 599px){.mat-tab-link{min-width:72px}}\n"]
    }]
  }], function () {
    return [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_cdk_bidi__WEBPACK_IMPORTED_MODULE_16__["Directionality"],
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ChangeDetectorRef"]
    }, {
      type: _angular_cdk_scrolling__WEBPACK_IMPORTED_MODULE_20__["ViewportRuler"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    _items: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ContentChildren"],
      args: [Object(_angular_core__WEBPACK_IMPORTED_MODULE_12__["forwardRef"])(function () {
        return MatTabLink;
      }), {
        descendants: true
      }]
    }],
    _inkBar: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: [MatInkBar, {
        static: true
      }]
    }],
    _tabListContainer: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['tabListContainer', {
        static: true
      }]
    }],
    _tabList: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['tabList', {
        static: true
      }]
    }],
    _nextPaginator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['nextPaginator']
    }],
    _previousPaginator: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ViewChild"],
      args: ['previousPaginator']
    }]
  });
})(); // Boilerplate for applying mixins to MatTabLink.


var MatTabLinkMixinBase = function MatTabLinkMixinBase() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabLinkMixinBase);
};

var _MatTabLinkMixinBase = Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["mixinTabIndex"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["mixinDisableRipple"])(Object(_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["mixinDisabled"])(MatTabLinkMixinBase)));
/** Base class with all of the `MatTabLink` functionality. */


var _MatTabLinkBase = /*#__PURE__*/function (_MatTabLinkMixinBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(_MatTabLinkBase, _MatTabLinkMixinBase2);

  var _super12 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(_MatTabLinkBase);

  function _MatTabLinkBase(_tabNavBar, elementRef, globalRippleOptions, tabIndex, _focusMonitor, animationMode) {
    var _this20;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, _MatTabLinkBase);

    _this20 = _super12.call(this);
    _this20._tabNavBar = _tabNavBar;
    _this20.elementRef = elementRef;
    _this20._focusMonitor = _focusMonitor;
    /** Whether the tab link is active or not. */

    _this20._isActive = false;
    _this20.rippleConfig = globalRippleOptions || {};
    _this20.tabIndex = parseInt(tabIndex) || 0;

    if (animationMode === 'NoopAnimations') {
      _this20.rippleConfig.animation = {
        enterDuration: 0,
        exitDuration: 0
      };
    }

    return _this20;
  }
  /** Whether the link is active. */


  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(_MatTabLinkBase, [{
    key: "active",
    get: function get() {
      return this._isActive;
    },
    set: function set(value) {
      if (value !== this._isActive) {
        this._isActive = value;

        this._tabNavBar.updateActiveLink(this.elementRef);
      }
    }
    /**
     * Whether ripples are disabled on interaction.
     * @docs-private
     */

  }, {
    key: "rippleDisabled",
    get: function get() {
      return this.disabled || this.disableRipple || this._tabNavBar.disableRipple || !!this.rippleConfig.disabled;
    }
  }, {
    key: "focus",
    value: function focus() {
      this.elementRef.nativeElement.focus();
    }
  }, {
    key: "ngAfterViewInit",
    value: function ngAfterViewInit() {
      this._focusMonitor.monitor(this.elementRef);
    }
  }, {
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      this._focusMonitor.stopMonitoring(this.elementRef);
    }
  }]);

  return _MatTabLinkBase;
}(_MatTabLinkMixinBase);

_MatTabLinkBase.ɵfac = function _MatTabLinkBase_Factory(t) {
  return new (t || _MatTabLinkBase)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_MatTabNavBase), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_RIPPLE_GLOBAL_OPTIONS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinjectAttribute"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["FocusMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

_MatTabLinkBase.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: _MatTabLinkBase,
  inputs: {
    active: "active"
  },
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

_MatTabLinkBase.ctorParameters = function () {
  return [{
    type: _MatTabNavBase
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_RIPPLE_GLOBAL_OPTIONS"]]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Attribute"],
      args: ['tabindex']
    }]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["FocusMonitor"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

_MatTabLinkBase.propDecorators = {
  active: [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
  }]
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](_MatTabLinkBase, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"]
  }], function () {
    return [{
      type: _MatTabNavBase
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_RIPPLE_GLOBAL_OPTIONS"]]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Attribute"],
        args: ['tabindex']
      }]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["FocusMonitor"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, {
    active: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Input"]
    }]
  });
})();
/**
 * Link inside of a `mat-tab-nav-bar`.
 */


var MatTabLink = /*#__PURE__*/function (_MatTabLinkBase2) {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__["default"])(MatTabLink, _MatTabLinkBase2);

  var _super13 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createSuper__WEBPACK_IMPORTED_MODULE_5__["default"])(MatTabLink);

  function MatTabLink(tabNavBar, elementRef, ngZone, platform, globalRippleOptions, tabIndex, focusMonitor, animationMode) {
    var _this21;

    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabLink);

    _this21 = _super13.call(this, tabNavBar, elementRef, globalRippleOptions, tabIndex, focusMonitor, animationMode);
    _this21._tabLinkRipple = new _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["RippleRenderer"](Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__["default"])(_this21), ngZone, elementRef, platform);

    _this21._tabLinkRipple.setupTriggerEvents(elementRef.nativeElement);

    return _this21;
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_7__["default"])(MatTabLink, [{
    key: "ngOnDestroy",
    value: function ngOnDestroy() {
      Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__["default"])(MatTabLink.prototype), "ngOnDestroy", this).call(this);

      this._tabLinkRipple._removeTriggerEvents();
    }
  }]);

  return MatTabLink;
}(_MatTabLinkBase);

MatTabLink.ɵfac = function MatTabLink_Factory(t) {
  return new (t || MatTabLink)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](MatTabNav), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_RIPPLE_GLOBAL_OPTIONS"], 8), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵinjectAttribute"]('tabindex'), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["FocusMonitor"]), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"], 8));
};

MatTabLink.ɵdir = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineDirective"]({
  type: MatTabLink,
  selectors: [["", "mat-tab-link", ""], ["", "matTabLink", ""]],
  hostAttrs: [1, "mat-tab-link", "mat-focus-indicator"],
  hostVars: 7,
  hostBindings: function MatTabLink_HostBindings(rf, ctx) {
    if (rf & 2) {
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵattribute"]("aria-current", ctx.active ? "page" : null)("aria-disabled", ctx.disabled)("tabIndex", ctx.tabIndex);
      _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵclassProp"]("mat-tab-disabled", ctx.disabled)("mat-tab-label-active", ctx.active);
    }
  },
  inputs: {
    disabled: "disabled",
    disableRipple: "disableRipple",
    tabIndex: "tabIndex"
  },
  exportAs: ["matTabLink"],
  features: [_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵInheritDefinitionFeature"]]
});

MatTabLink.ctorParameters = function () {
  return [{
    type: MatTabNav
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
  }, {
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
  }, {
    type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
  }, {
    type: undefined,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_RIPPLE_GLOBAL_OPTIONS"]]
    }]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Attribute"],
      args: ['tabindex']
    }]
  }, {
    type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["FocusMonitor"]
  }, {
    type: String,
    decorators: [{
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
      args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
    }]
  }];
};

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabLink, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Directive"],
    args: [{
      selector: '[mat-tab-link], [matTabLink]',
      exportAs: 'matTabLink',
      inputs: ['disabled', 'disableRipple', 'tabIndex'],
      host: {
        'class': 'mat-tab-link mat-focus-indicator',
        '[attr.aria-current]': 'active ? "page" : null',
        '[attr.aria-disabled]': 'disabled',
        '[attr.tabIndex]': 'tabIndex',
        '[class.mat-tab-disabled]': 'disabled',
        '[class.mat-tab-label-active]': 'active'
      }
    }]
  }], function () {
    return [{
      type: MatTabNav
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["ElementRef"]
    }, {
      type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgZone"]
    }, {
      type: _angular_cdk_platform__WEBPACK_IMPORTED_MODULE_21__["Platform"]
    }, {
      type: undefined,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MAT_RIPPLE_GLOBAL_OPTIONS"]]
      }]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Attribute"],
        args: ['tabindex']
      }]
    }, {
      type: _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["FocusMonitor"]
    }, {
      type: String,
      decorators: [{
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Optional"]
      }, {
        type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["Inject"],
        args: [_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_14__["ANIMATION_MODULE_TYPE"]]
      }]
    }];
  }, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */


var MatTabsModule = function MatTabsModule() {
  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_6__["default"])(this, MatTabsModule);
};

MatTabsModule.ɵmod = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineNgModule"]({
  type: MatTabsModule
});
MatTabsModule.ɵinj = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineInjector"]({
  factory: function MatTabsModule_Factory(t) {
    return new (t || MatTabsModule)();
  },
  imports: [[_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatCommonModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatRippleModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_9__["ObserversModule"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["A11yModule"]], _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatCommonModule"]]
});

(function () {
  (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵsetNgModuleScope"](MatTabsModule, {
    declarations: function declarations() {
      return [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent];
    },
    imports: function imports() {
      return [_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatCommonModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatRippleModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_9__["ObserversModule"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["A11yModule"]];
    },
    exports: function exports() {
      return [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatCommonModule"], MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent];
    }
  });
})();

(function () {
  (typeof ngDevMode === "undefined" || ngDevMode) && _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵsetClassMetadata"](MatTabsModule, [{
    type: _angular_core__WEBPACK_IMPORTED_MODULE_12__["NgModule"],
    args: [{
      imports: [_angular_common__WEBPACK_IMPORTED_MODULE_11__["CommonModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatCommonModule"], _angular_cdk_portal__WEBPACK_IMPORTED_MODULE_10__["PortalModule"], _angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatRippleModule"], _angular_cdk_observers__WEBPACK_IMPORTED_MODULE_9__["ObserversModule"], _angular_cdk_a11y__WEBPACK_IMPORTED_MODULE_8__["A11yModule"]],
      // Don't export all components because some are only to be used internally.
      exports: [_angular_material_core__WEBPACK_IMPORTED_MODULE_13__["MatCommonModule"], MatTabGroup, MatTabLabel, MatTab, MatTabNav, MatTabLink, MatTabContent],
      declarations: [MatTabGroup, MatTabLabel, MatTab, MatInkBar, MatTabLabelWrapper, MatTabNav, MatTabLink, MatTabBody, MatTabBodyPortal, MatTabHeader, MatTabContent]
    }]
  }], null, null);
})();
/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.io/license
 */

/**
 * Generated bundle index. Do not edit.
 */




/***/ }),

/***/ "wfAX":
/*!*****************************************************************************!*\
  !*** ./src/app/core/components/admin/language/services/Language.service.ts ***!
  \*****************************************************************************/
/*! exports provided: LanguageService */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LanguageService", function() { return LanguageService; });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/common/http */ "tk/3");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "fXoL");
/* harmony import */ var app_core_services_http_entity_repository_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! app/core/services/http-entity-repository.service */ "qU61");
/* harmony import */ var environments_environment__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! environments/environment */ "AytR");
var __decorate = (undefined && undefined.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (undefined && undefined.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};




var LanguageService = /** @class */ (function () {
    function LanguageService(service, _httpClient) {
        this.service = service;
        this._httpClient = _httpClient;
    }
    LanguageService.prototype.getLanguageList = function () {
        return this._httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].getApiUrl + '/languages/');
    };
    LanguageService.prototype.getLanguage = function (id) {
        return this._httpClient.get(environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].getApiUrl + ("/languages/" + id));
    };
    LanguageService.prototype.addLanguage = function (language) {
        return this._httpClient.post(environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].getApiUrl + "/languages/", language, { responseType: 'text' });
    };
    LanguageService.prototype.updateLanguage = function (language) {
        return this._httpClient.put(environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].getApiUrl + "/languages/", language, { responseType: 'text' });
    };
    LanguageService.prototype.deleteLanguage = function (id) {
        return this._httpClient.delete(environments_environment__WEBPACK_IMPORTED_MODULE_3__["environment"].getApiUrl + ("/languages/" + id));
    };
    LanguageService.ctorParameters = function () { return [
        { type: app_core_services_http_entity_repository_service__WEBPACK_IMPORTED_MODULE_2__["HttpEntityRepositoryService"] },
        { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"] }
    ]; };
    LanguageService = __decorate([
        Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__["Injectable"])({
            providedIn: 'root'
        }),
        __metadata("design:paramtypes", [app_core_services_http_entity_repository_service__WEBPACK_IMPORTED_MODULE_2__["HttpEntityRepositoryService"],
            _angular_common_http__WEBPACK_IMPORTED_MODULE_0__["HttpClient"]])
    ], LanguageService);
    return LanguageService;
}());



/***/ }),

/***/ "z2YZ":
/*!*************************************************************!*\
  !*** ./node_modules/@microsoft/signalr/dist/esm/Subject.js ***!
  \*************************************************************/
/*! exports provided: Subject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Subject", function() { return Subject; });
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper */ "uFwe");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/classCallCheck */ "1OyB");
/* harmony import */ var C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./node_modules/@babel/runtime/helpers/esm/createClass */ "vuIU");
/* harmony import */ var _Utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Utils */ "ftFU");



// Licensed to the .NET Foundation under one or more agreements.
// The .NET Foundation licenses this file to you under the MIT license.

/** Stream implementation to stream items to the server. */

var Subject = /*#__PURE__*/function () {
  function Subject() {
    Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__["default"])(this, Subject);

    this.observers = [];
  }

  Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_2__["default"])(Subject, [{
    key: "next",
    value: function next(item) {
      var _iterator = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this.observers),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var observer = _step.value;
          observer.next(item);
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
    }
  }, {
    key: "error",
    value: function error(err) {
      var _iterator2 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this.observers),
          _step2;

      try {
        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
          var observer = _step2.value;

          if (observer.error) {
            observer.error(err);
          }
        }
      } catch (err) {
        _iterator2.e(err);
      } finally {
        _iterator2.f();
      }
    }
  }, {
    key: "complete",
    value: function complete() {
      var _iterator3 = Object(C_Users_kadir_Desktop_BANUPASS_UIPreparation_UI_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_0__["default"])(this.observers),
          _step3;

      try {
        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
          var observer = _step3.value;

          if (observer.complete) {
            observer.complete();
          }
        }
      } catch (err) {
        _iterator3.e(err);
      } finally {
        _iterator3.f();
      }
    }
  }, {
    key: "subscribe",
    value: function subscribe(observer) {
      this.observers.push(observer);
      return new _Utils__WEBPACK_IMPORTED_MODULE_3__["SubjectSubscription"](this, observer);
    }
  }]);

  return Subject;
}();

/***/ })

}]);
//# sourceMappingURL=core-modules-admin-layout-module.js.map